// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"../node_modules/regenerator-runtime/runtime.js":[function(require,module,exports) {
/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunctionPrototype[toStringTagSymbol] =
    GeneratorFunction.displayName = "GeneratorFunction";

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      prototype[method] = function(arg) {
        return this._invoke(method, arg);
      };
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      if (!(toStringTagSymbol in genFun)) {
        genFun[toStringTagSymbol] = "GeneratorFunction";
      }
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  Gp[toStringTagSymbol] = "Generator";

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
  typeof module === "object" ? module.exports : {}
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}

},{}],"../node_modules/@babel/runtime/regenerator/index.js":[function(require,module,exports) {
module.exports = require("regenerator-runtime");

},{"regenerator-runtime":"../node_modules/regenerator-runtime/runtime.js"}],"../node_modules/@babel/runtime/helpers/asyncToGenerator.js":[function(require,module,exports) {
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

module.exports = _asyncToGenerator;
},{}],"../node_modules/@babel/runtime/helpers/classCallCheck.js":[function(require,module,exports) {
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

module.exports = _classCallCheck;
},{}],"../node_modules/@babel/runtime/helpers/createClass.js":[function(require,module,exports) {
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

module.exports = _createClass;
},{}],"../node_modules/@babel/runtime/helpers/getPrototypeOf.js":[function(require,module,exports) {
function _getPrototypeOf(o) {
  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

module.exports = _getPrototypeOf;
},{}],"../node_modules/@babel/runtime/helpers/superPropBase.js":[function(require,module,exports) {
var getPrototypeOf = require("./getPrototypeOf");

function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = getPrototypeOf(object);
    if (object === null) break;
  }

  return object;
}

module.exports = _superPropBase;
},{"./getPrototypeOf":"../node_modules/@babel/runtime/helpers/getPrototypeOf.js"}],"../node_modules/@babel/runtime/helpers/get.js":[function(require,module,exports) {
var superPropBase = require("./superPropBase");

function _get(target, property, receiver) {
  if (typeof Reflect !== "undefined" && Reflect.get) {
    module.exports = _get = Reflect.get;
  } else {
    module.exports = _get = function _get(target, property, receiver) {
      var base = superPropBase(target, property);
      if (!base) return;
      var desc = Object.getOwnPropertyDescriptor(base, property);

      if (desc.get) {
        return desc.get.call(receiver);
      }

      return desc.value;
    };
  }

  return _get(target, property, receiver || target);
}

module.exports = _get;
},{"./superPropBase":"../node_modules/@babel/runtime/helpers/superPropBase.js"}],"../node_modules/@babel/runtime/helpers/setPrototypeOf.js":[function(require,module,exports) {
function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

module.exports = _setPrototypeOf;
},{}],"../node_modules/@babel/runtime/helpers/inherits.js":[function(require,module,exports) {
var setPrototypeOf = require("./setPrototypeOf");

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) setPrototypeOf(subClass, superClass);
}

module.exports = _inherits;
},{"./setPrototypeOf":"../node_modules/@babel/runtime/helpers/setPrototypeOf.js"}],"../node_modules/@babel/runtime/helpers/typeof.js":[function(require,module,exports) {
function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    module.exports = _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    module.exports = _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

module.exports = _typeof;
},{}],"../node_modules/@babel/runtime/helpers/assertThisInitialized.js":[function(require,module,exports) {
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

module.exports = _assertThisInitialized;
},{}],"../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js":[function(require,module,exports) {
var _typeof = require("../helpers/typeof");

var assertThisInitialized = require("./assertThisInitialized");

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
  }

  return assertThisInitialized(self);
}

module.exports = _possibleConstructorReturn;
},{"../helpers/typeof":"../node_modules/@babel/runtime/helpers/typeof.js","./assertThisInitialized":"../node_modules/@babel/runtime/helpers/assertThisInitialized.js"}],"../package.json":[function(require,module,exports) {
module.exports = {
  "name": "@eyevinn/html-player",
  "version": "0.6.1",
  "description": "Eyevinn HTML5 Player with support for HLS, MPEG-DASH and MSS",
  "main": "./pkg/eyevinn-html-player",
  "scripts": {
    "build-js": "parcel build index.js --no-source-maps --out-dir build --out-file eyevinn-html-player.js",
    "build-css": "parcel build styles/main.scss --no-source-maps --public-url ./ --out-dir build --out-file eyevinn-html-player.css",
    "build": "npm run build-js && npm run build-css",
    "build-npm-js": "parcel build main.js --no-source-maps --out-dir pkg --out-file eyevinn-html-player.js",
    "build-npm-css": "parcel build styles/main.scss --no-source-maps --public-url ./ --out-dir pkg --out-file style.css",
    "build-npm": "npm run build-npm-js && npm run build-npm-css",
    "start": "parcel ./demo/index.html",
    "test": "jest --passWithNoTests",
    "postversion": "git push && git push --tags"
  },
  "author": "Jonas Birmé <jonas.birme@eyevinn.se>",
  "contributors": ["Erik Hoffman <erik.hoffman@eyevinn.se>", "Benjamin Wallberg <benjamin.wallberg@eyevinn.se>"],
  "license": "Apache-2.0",
  "dependencies": {
    "caniuse-lite": "^1.0.30001180",
    "dashjs": "^3.2.0",
    "eme-encryption-scheme-polyfill": "^2.0.1",
    "es6": "0.0.7",
    "google-closure-library": "^20210106.0.0",
    "hls.js": "^0.14.17",
    "shaka-player": "^3.0.7",
    "typescript": "^3.1.3",
    "util": "^0.12.3",
    "webpack": "^5.18.0"
  },
  "devDependencies": {
    "@babel/cli": "^7.12.10",
    "@babel/core": "^7.12.10",
    "@babel/plugin-transform-runtime": "^7.12.10",
    "@babel/preset-env": "^7.12.11",
    "@types/jest": "^26.0.20",
    "babel-eslint": "^10.1.0",
    "babel-jest": "^26.6.3",
    "babel-loader": "^8.2.2",
    "dotenv-vars": "^2.1.0",
    "eslint": "^7.18.0",
    "eslint-config-prettier": "^7.2.0",
    "eslint-plugin-jest": "^24.1.3",
    "eslint-plugin-prettier": "^3.3.1",
    "jest": "^26.6.3",
    "parcel-bundler": "^1.12.4",
    "prettier": "^2.2.1",
    "sass": "^1.32.5",
    "webpack-cli": "^4.4.0"
  }
};
},{}],"../src/playerTechs/interface.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PlayerTechInterface = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

var VERSION = require("../../package.json").version;

var PlayerTechInterface =
/*#__PURE__*/
function () {
  function PlayerTechInterface(wrapperId, manifestUrl) {
    (0, _classCallCheck2.default)(this, PlayerTechInterface);
    this.manifestUrl_ = manifestUrl;
    this.videoElement_ = null;
    this.wrapperElement_ = this.init_(wrapperId);
    this.eventListeners_ = {
      playing: [],
      paused: [],
      muted: [],
      unmuted: [],
      canplay: []
    };
  }

  (0, _createClass2.default)(PlayerTechInterface, [{
    key: "on",
    value: function on(event, func) {
      this.eventListeners_[event].push(func);
    }
  }, {
    key: "attachControllerSkin",
    value: function attachControllerSkin(skin) {
      this.controllerSkin_ = skin;
    }
  }, {
    key: "play",
    value: function play(startMuted) {
      if (startMuted) {
        this.videoElement_.muted = false;
      } else {
        this.videoElement_.muted = false;
      }

      var evname = this.videoElement_.muted ? "muted" : "unmuted";

      var _iterator = _createForOfIteratorHelper(this.eventListeners_[evname]),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var f = _step.value;
          f();
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      var playPromise = this.videoElement_.play();

      if (playPromise !== undefined) {
        playPromise.catch(function () {// console.log("Auto-play was prevented, show big play button");
          // // this.controllerSkin_.showBigPlayButton();
        }).then(function () {});
      }
    }
  }, {
    key: "pause",
    value: function pause() {
      this.videoElement_.pause();
    }
  }, {
    key: "mute",
    value: function mute() {
      this.videoElement_.muted = true;
    }
  }, {
    key: "unmute",
    value: function unmute() {
      this.videoElement_.muted = false;
    }
  }, {
    key: "fullSrceen",
    value: function fullSrceen() {
      if (this.videoElement_.requestFullscreen) {
        this.videoElement_.requestFullscreen();
      } else if (this.videoElement_.mozRequestFullScreen) {
        this.videoElement_.mozRequestFullScreen();
      } else if (this.videoElement_.msRequestFullscreen) {
        this.videoElement_.msRequestFullscreen();
      } else if (this.videoElement_.oRequestFullscreen) {
        this.videoElement_.oRequestFullscreen();
      } else if (this.videoElement_.webkitRequestFullscreen) {
        this.videoElement_.webkitRequestFullScreen();
      }
    }
  }, {
    key: "load",
    value: function load() {
      return new Promise(function (resolve, reject) {
        reject("Missing implementation of load() in player tech.");
      });
    }
  }, {
    key: "init_",
    value: function init_(wrapperId) {
      var _this = this;

      this.videoElement_ = document.createElement("video");
      this.videoElement_.className = "eyevinn-player";
      this.videoElement_.setAttribute("playsinline", "playsinline");
      var wrapperElement = document.getElementById(wrapperId);
      wrapperElement.appendChild(this.videoElement_);
      wrapperElement.style.setProperty("position", "relative");
      this.videoElement_.addEventListener("playing", function () {
        var _iterator2 = _createForOfIteratorHelper(_this.eventListeners_["playing"]),
            _step2;

        try {
          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
            var f = _step2.value;
            f();
          }
        } catch (err) {
          _iterator2.e(err);
        } finally {
          _iterator2.f();
        }
      });
      this.videoElement_.addEventListener("pause", function () {
        var _iterator3 = _createForOfIteratorHelper(_this.eventListeners_["paused"]),
            _step3;

        try {
          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
            var f = _step3.value;
            f();
          }
        } catch (err) {
          _iterator3.e(err);
        } finally {
          _iterator3.f();
        }
      });
      this.videoElement_.addEventListener("canplay", function () {
        var _iterator4 = _createForOfIteratorHelper(_this.eventListeners_["canplay"]),
            _step4;

        try {
          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
            var f = _step4.value;
            f();
          }
        } catch (err) {
          _iterator4.e(err);
        } finally {
          _iterator4.f();
        }
      });
      this.videoElement_.addEventListener("volumechange", function () {
        var evname = _this.videoElement_.muted ? "muted" : "unmuted";

        var _iterator5 = _createForOfIteratorHelper(_this.eventListeners_[evname]),
            _step5;

        try {
          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
            var f = _step5.value;
            f();
          }
        } catch (err) {
          _iterator5.e(err);
        } finally {
          _iterator5.f();
        }
      });
      return wrapperElement;
    }
  }, {
    key: "destroy",
    value: function destroy() {
      console.log("Player destroyed");
      this.videoElement_.remove();
    }
  }, {
    key: "version",
    get: function get() {
      return VERSION;
    }
  }, {
    key: "wrapper",
    get: function get() {
      return this.wrapperElement_;
    }
  }, {
    key: "isPlaying",
    get: function get() {
      return !this.videoElement_.paused;
    }
  }, {
    key: "isMuted",
    get: function get() {
      return this.videoElement_.muted;
    }
  }, {
    key: "isLive",
    get: function get() {
      throw new Error("Missing implementation of isLive() property in player tech.");
    }
  }, {
    key: "duration",
    get: function get() {
      if (!this.isLive) {
        return this.videoElement_.duration;
      }

      return NaN;
    }
  }, {
    key: "volume",
    get: function get() {
      return this.videoElement_.volume;
    },
    set: function set(newvol) {
      this.videoElement_.volume = newvol;
    }
  }, {
    key: "position",
    get: function get() {
      if (!this.isLive) {
        return this.videoElement_.currentTime;
      }

      return NaN;
    },
    set: function set(newpos) {
      if (!this.isLive) {
        this.videoElement_.currentTime = newpos;
      }
    }
  }]);
  return PlayerTechInterface;
}();

exports.PlayerTechInterface = PlayerTechInterface;
},{"@babel/runtime/helpers/classCallCheck":"../node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"../node_modules/@babel/runtime/helpers/createClass.js","../../package.json":"../package.json"}],"../node_modules/hls.js/dist/hls.js":[function(require,module,exports) {
var define;
var global = arguments[3];
typeof window !== "undefined" &&
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Hls"] = factory();
	else
		root["Hls"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/hls.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/eventemitter3/index.js":
/*!*********************************************!*\
  !*** ./node_modules/eventemitter3/index.js ***!
  \*********************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var has = Object.prototype.hasOwnProperty
  , prefix = '~';

/**
 * Constructor to create a storage for our `EE` objects.
 * An `Events` instance is a plain object whose properties are event names.
 *
 * @constructor
 * @private
 */
function Events() {}

//
// We try to not inherit from `Object.prototype`. In some engines creating an
// instance in this way is faster than calling `Object.create(null)` directly.
// If `Object.create(null)` is not supported we prefix the event names with a
// character to make sure that the built-in object properties are not
// overridden or used as an attack vector.
//
if (Object.create) {
  Events.prototype = Object.create(null);

  //
  // This hack is needed because the `__proto__` property is still inherited in
  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.
  //
  if (!new Events().__proto__) prefix = false;
}

/**
 * Representation of a single event listener.
 *
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
 * @constructor
 * @private
 */
function EE(fn, context, once) {
  this.fn = fn;
  this.context = context;
  this.once = once || false;
}

/**
 * Add a listener for a given event.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} context The context to invoke the listener with.
 * @param {Boolean} once Specify if the listener is a one-time listener.
 * @returns {EventEmitter}
 * @private
 */
function addListener(emitter, event, fn, context, once) {
  if (typeof fn !== 'function') {
    throw new TypeError('The listener must be a function');
  }

  var listener = new EE(fn, context || emitter, once)
    , evt = prefix ? prefix + event : event;

  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;
  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);
  else emitter._events[evt] = [emitter._events[evt], listener];

  return emitter;
}

/**
 * Clear event by name.
 *
 * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.
 * @param {(String|Symbol)} evt The Event name.
 * @private
 */
function clearEvent(emitter, evt) {
  if (--emitter._eventsCount === 0) emitter._events = new Events();
  else delete emitter._events[evt];
}

/**
 * Minimal `EventEmitter` interface that is molded against the Node.js
 * `EventEmitter` interface.
 *
 * @constructor
 * @public
 */
function EventEmitter() {
  this._events = new Events();
  this._eventsCount = 0;
}

/**
 * Return an array listing the events for which the emitter has registered
 * listeners.
 *
 * @returns {Array}
 * @public
 */
EventEmitter.prototype.eventNames = function eventNames() {
  var names = []
    , events
    , name;

  if (this._eventsCount === 0) return names;

  for (name in (events = this._events)) {
    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
  }

  if (Object.getOwnPropertySymbols) {
    return names.concat(Object.getOwnPropertySymbols(events));
  }

  return names;
};

/**
 * Return the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Array} The registered listeners.
 * @public
 */
EventEmitter.prototype.listeners = function listeners(event) {
  var evt = prefix ? prefix + event : event
    , handlers = this._events[evt];

  if (!handlers) return [];
  if (handlers.fn) return [handlers.fn];

  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {
    ee[i] = handlers[i].fn;
  }

  return ee;
};

/**
 * Return the number of listeners listening to a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Number} The number of listeners.
 * @public
 */
EventEmitter.prototype.listenerCount = function listenerCount(event) {
  var evt = prefix ? prefix + event : event
    , listeners = this._events[evt];

  if (!listeners) return 0;
  if (listeners.fn) return 1;
  return listeners.length;
};

/**
 * Calls each of the listeners registered for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @returns {Boolean} `true` if the event had listeners, else `false`.
 * @public
 */
EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return false;

  var listeners = this._events[evt]
    , len = arguments.length
    , args
    , i;

  if (listeners.fn) {
    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);

    switch (len) {
      case 1: return listeners.fn.call(listeners.context), true;
      case 2: return listeners.fn.call(listeners.context, a1), true;
      case 3: return listeners.fn.call(listeners.context, a1, a2), true;
      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;
      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
    }

    for (i = 1, args = new Array(len -1); i < len; i++) {
      args[i - 1] = arguments[i];
    }

    listeners.fn.apply(listeners.context, args);
  } else {
    var length = listeners.length
      , j;

    for (i = 0; i < length; i++) {
      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);

      switch (len) {
        case 1: listeners[i].fn.call(listeners[i].context); break;
        case 2: listeners[i].fn.call(listeners[i].context, a1); break;
        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;
        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;
        default:
          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {
            args[j - 1] = arguments[j];
          }

          listeners[i].fn.apply(listeners[i].context, args);
      }
    }
  }

  return true;
};

/**
 * Add a listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.on = function on(event, fn, context) {
  return addListener(this, event, fn, context, false);
};

/**
 * Add a one-time listener for a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn The listener function.
 * @param {*} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.once = function once(event, fn, context) {
  return addListener(this, event, fn, context, true);
};

/**
 * Remove the listeners of a given event.
 *
 * @param {(String|Symbol)} event The event name.
 * @param {Function} fn Only remove the listeners that match this function.
 * @param {*} context Only remove the listeners that have this context.
 * @param {Boolean} once Only remove one-time listeners.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return this;
  if (!fn) {
    clearEvent(this, evt);
    return this;
  }

  var listeners = this._events[evt];

  if (listeners.fn) {
    if (
      listeners.fn === fn &&
      (!once || listeners.once) &&
      (!context || listeners.context === context)
    ) {
      clearEvent(this, evt);
    }
  } else {
    for (var i = 0, events = [], length = listeners.length; i < length; i++) {
      if (
        listeners[i].fn !== fn ||
        (once && !listeners[i].once) ||
        (context && listeners[i].context !== context)
      ) {
        events.push(listeners[i]);
      }
    }

    //
    // Reset the array, or remove it completely if we have no more listeners.
    //
    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;
    else clearEvent(this, evt);
  }

  return this;
};

/**
 * Remove all listeners, or those of the specified event.
 *
 * @param {(String|Symbol)} [event] The event name.
 * @returns {EventEmitter} `this`.
 * @public
 */
EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
  var evt;

  if (event) {
    evt = prefix ? prefix + event : event;
    if (this._events[evt]) clearEvent(this, evt);
  } else {
    this._events = new Events();
    this._eventsCount = 0;
  }

  return this;
};

//
// Alias methods names because people roll like that.
//
EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on;

//
// Expose the prefix.
//
EventEmitter.prefixed = prefix;

//
// Allow `EventEmitter` to be imported as module namespace.
//
EventEmitter.EventEmitter = EventEmitter;

//
// Expose the module.
//
if (true) {
  module.exports = EventEmitter;
}


/***/ }),

/***/ "./node_modules/url-toolkit/src/url-toolkit.js":
/*!*****************************************************!*\
  !*** ./node_modules/url-toolkit/src/url-toolkit.js ***!
  \*****************************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

// see https://tools.ietf.org/html/rfc1808

(function (root) {
  var URL_REGEX = /^((?:[a-zA-Z0-9+\-.]+:)?)(\/\/[^\/?#]*)?((?:[^\/?#]*\/)*[^;?#]*)?(;[^?#]*)?(\?[^#]*)?(#.*)?$/;
  var FIRST_SEGMENT_REGEX = /^([^\/?#]*)(.*)$/;
  var SLASH_DOT_REGEX = /(?:\/|^)\.(?=\/)/g;
  var SLASH_DOT_DOT_REGEX = /(?:\/|^)\.\.\/(?!\.\.\/)[^\/]*(?=\/)/g;

  var URLToolkit = {
    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //
    // E.g
    // With opts.alwaysNormalize = false (default, spec compliant)
    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g
    // With opts.alwaysNormalize = true (not spec compliant)
    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g
    buildAbsoluteURL: function (baseURL, relativeURL, opts) {
      opts = opts || {};
      // remove any remaining space and CRLF
      baseURL = baseURL.trim();
      relativeURL = relativeURL.trim();
      if (!relativeURL) {
        // 2a) If the embedded URL is entirely empty, it inherits the
        // entire base URL (i.e., is set equal to the base URL)
        // and we are done.
        if (!opts.alwaysNormalize) {
          return baseURL;
        }
        var basePartsForNormalise = URLToolkit.parseURL(baseURL);
        if (!basePartsForNormalise) {
          throw new Error('Error trying to parse base URL.');
        }
        basePartsForNormalise.path = URLToolkit.normalizePath(
          basePartsForNormalise.path
        );
        return URLToolkit.buildURLFromParts(basePartsForNormalise);
      }
      var relativeParts = URLToolkit.parseURL(relativeURL);
      if (!relativeParts) {
        throw new Error('Error trying to parse relative URL.');
      }
      if (relativeParts.scheme) {
        // 2b) If the embedded URL starts with a scheme name, it is
        // interpreted as an absolute URL and we are done.
        if (!opts.alwaysNormalize) {
          return relativeURL;
        }
        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);
        return URLToolkit.buildURLFromParts(relativeParts);
      }
      var baseParts = URLToolkit.parseURL(baseURL);
      if (!baseParts) {
        throw new Error('Error trying to parse base URL.');
      }
      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {
        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc
        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'
        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);
        baseParts.netLoc = pathParts[1];
        baseParts.path = pathParts[2];
      }
      if (baseParts.netLoc && !baseParts.path) {
        baseParts.path = '/';
      }
      var builtParts = {
        // 2c) Otherwise, the embedded URL inherits the scheme of
        // the base URL.
        scheme: baseParts.scheme,
        netLoc: relativeParts.netLoc,
        path: null,
        params: relativeParts.params,
        query: relativeParts.query,
        fragment: relativeParts.fragment,
      };
      if (!relativeParts.netLoc) {
        // 3) If the embedded URL's <net_loc> is non-empty, we skip to
        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>
        // (if any) of the base URL.
        builtParts.netLoc = baseParts.netLoc;
        // 4) If the embedded URL path is preceded by a slash "/", the
        // path is not relative and we skip to Step 7.
        if (relativeParts.path[0] !== '/') {
          if (!relativeParts.path) {
            // 5) If the embedded URL path is empty (and not preceded by a
            // slash), then the embedded URL inherits the base URL path
            builtParts.path = baseParts.path;
            // 5a) if the embedded URL's <params> is non-empty, we skip to
            // step 7; otherwise, it inherits the <params> of the base
            // URL (if any) and
            if (!relativeParts.params) {
              builtParts.params = baseParts.params;
              // 5b) if the embedded URL's <query> is non-empty, we skip to
              // step 7; otherwise, it inherits the <query> of the base
              // URL (if any) and we skip to step 7.
              if (!relativeParts.query) {
                builtParts.query = baseParts.query;
              }
            }
          } else {
            // 6) The last segment of the base URL's path (anything
            // following the rightmost slash "/", or the entire path if no
            // slash is present) is removed and the embedded URL's path is
            // appended in its place.
            var baseURLPath = baseParts.path;
            var newPath =
              baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) +
              relativeParts.path;
            builtParts.path = URLToolkit.normalizePath(newPath);
          }
        }
      }
      if (builtParts.path === null) {
        builtParts.path = opts.alwaysNormalize
          ? URLToolkit.normalizePath(relativeParts.path)
          : relativeParts.path;
      }
      return URLToolkit.buildURLFromParts(builtParts);
    },
    parseURL: function (url) {
      var parts = URL_REGEX.exec(url);
      if (!parts) {
        return null;
      }
      return {
        scheme: parts[1] || '',
        netLoc: parts[2] || '',
        path: parts[3] || '',
        params: parts[4] || '',
        query: parts[5] || '',
        fragment: parts[6] || '',
      };
    },
    normalizePath: function (path) {
      // The following operations are
      // then applied, in order, to the new path:
      // 6a) All occurrences of "./", where "." is a complete path
      // segment, are removed.
      // 6b) If the path ends with "." as a complete path segment,
      // that "." is removed.
      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');
      // 6c) All occurrences of "<segment>/../", where <segment> is a
      // complete path segment not equal to "..", are removed.
      // Removal of these path segments is performed iteratively,
      // removing the leftmost matching pattern on each iteration,
      // until no matching pattern remains.
      // 6d) If the path ends with "<segment>/..", where <segment> is a
      // complete path segment not equal to "..", that
      // "<segment>/.." is removed.
      while (
        path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length
      ) {}
      return path.split('').reverse().join('');
    },
    buildURLFromParts: function (parts) {
      return (
        parts.scheme +
        parts.netLoc +
        parts.path +
        parts.params +
        parts.query +
        parts.fragment
      );
    },
  };

  if (true)
    module.exports = URLToolkit;
  else {}
})(this);


/***/ }),

/***/ "./node_modules/webworkify-webpack/index.js":
/*!**************************************************!*\
  !*** ./node_modules/webworkify-webpack/index.js ***!
  \**************************************************/
/*! no static exports found */
/*! ModuleConcatenation bailout: Module is not an ECMAScript module */
/***/ (function(module, exports, __webpack_require__) {

function webpackBootstrapFunc (modules) {
/******/  // The module cache
/******/  var installedModules = {};

/******/  // The require function
/******/  function __webpack_require__(moduleId) {

/******/    // Check if module is in cache
/******/    if(installedModules[moduleId])
/******/      return installedModules[moduleId].exports;

/******/    // Create a new module (and put it into the cache)
/******/    var module = installedModules[moduleId] = {
/******/      i: moduleId,
/******/      l: false,
/******/      exports: {}
/******/    };

/******/    // Execute the module function
/******/    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/    // Flag the module as loaded
/******/    module.l = true;

/******/    // Return the exports of the module
/******/    return module.exports;
/******/  }

/******/  // expose the modules object (__webpack_modules__)
/******/  __webpack_require__.m = modules;

/******/  // expose the module cache
/******/  __webpack_require__.c = installedModules;

/******/  // identity function for calling harmony imports with the correct context
/******/  __webpack_require__.i = function(value) { return value; };

/******/  // define getter function for harmony exports
/******/  __webpack_require__.d = function(exports, name, getter) {
/******/    if(!__webpack_require__.o(exports, name)) {
/******/      Object.defineProperty(exports, name, {
/******/        configurable: false,
/******/        enumerable: true,
/******/        get: getter
/******/      });
/******/    }
/******/  };

/******/  // define __esModule on exports
/******/  __webpack_require__.r = function(exports) {
/******/    Object.defineProperty(exports, '__esModule', { value: true });
/******/  };

/******/  // getDefaultExport function for compatibility with non-harmony modules
/******/  __webpack_require__.n = function(module) {
/******/    var getter = module && module.__esModule ?
/******/      function getDefault() { return module['default']; } :
/******/      function getModuleExports() { return module; };
/******/    __webpack_require__.d(getter, 'a', getter);
/******/    return getter;
/******/  };

/******/  // Object.prototype.hasOwnProperty.call
/******/  __webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/  // __webpack_public_path__
/******/  __webpack_require__.p = "/";

/******/  // on error function for async loading
/******/  __webpack_require__.oe = function(err) { console.error(err); throw err; };

  var f = __webpack_require__(__webpack_require__.s = ENTRY_MODULE)
  return f.default || f // try to call default if defined to also support babel esmodule exports
}

var moduleNameReqExp = '[\\.|\\-|\\+|\\w|\/|@]+'
var dependencyRegExp = '\\(\\s*(\/\\*.*?\\*\/)?\\s*.*?(' + moduleNameReqExp + ').*?\\)' // additional chars when output.pathinfo is true

// http://stackoverflow.com/a/2593661/130442
function quoteRegExp (str) {
  return (str + '').replace(/[.?*+^$[\]\\(){}|-]/g, '\\$&')
}

function isNumeric(n) {
  return !isNaN(1 * n); // 1 * n converts integers, integers as string ("123"), 1e3 and "1e3" to integers and strings to NaN
}

function getModuleDependencies (sources, module, queueName) {
  var retval = {}
  retval[queueName] = []

  var fnString = module.toString()
  var wrapperSignature = fnString.match(/^function\s?\w*\(\w+,\s*\w+,\s*(\w+)\)/)
  if (!wrapperSignature) return retval
  var webpackRequireName = wrapperSignature[1]

  // main bundle deps
  var re = new RegExp('(\\\\n|\\W)' + quoteRegExp(webpackRequireName) + dependencyRegExp, 'g')
  var match
  while ((match = re.exec(fnString))) {
    if (match[3] === 'dll-reference') continue
    retval[queueName].push(match[3])
  }

  // dll deps
  re = new RegExp('\\(' + quoteRegExp(webpackRequireName) + '\\("(dll-reference\\s(' + moduleNameReqExp + '))"\\)\\)' + dependencyRegExp, 'g')
  while ((match = re.exec(fnString))) {
    if (!sources[match[2]]) {
      retval[queueName].push(match[1])
      sources[match[2]] = __webpack_require__(match[1]).m
    }
    retval[match[2]] = retval[match[2]] || []
    retval[match[2]].push(match[4])
  }

  // convert 1e3 back to 1000 - this can be important after uglify-js converted 1000 to 1e3
  var keys = Object.keys(retval);
  for (var i = 0; i < keys.length; i++) {
    for (var j = 0; j < retval[keys[i]].length; j++) {
      if (isNumeric(retval[keys[i]][j])) {
        retval[keys[i]][j] = 1 * retval[keys[i]][j];
      }
    }
  }

  return retval
}

function hasValuesInQueues (queues) {
  var keys = Object.keys(queues)
  return keys.reduce(function (hasValues, key) {
    return hasValues || queues[key].length > 0
  }, false)
}

function getRequiredModules (sources, moduleId) {
  var modulesQueue = {
    main: [moduleId]
  }
  var requiredModules = {
    main: []
  }
  var seenModules = {
    main: {}
  }

  while (hasValuesInQueues(modulesQueue)) {
    var queues = Object.keys(modulesQueue)
    for (var i = 0; i < queues.length; i++) {
      var queueName = queues[i]
      var queue = modulesQueue[queueName]
      var moduleToCheck = queue.pop()
      seenModules[queueName] = seenModules[queueName] || {}
      if (seenModules[queueName][moduleToCheck] || !sources[queueName][moduleToCheck]) continue
      seenModules[queueName][moduleToCheck] = true
      requiredModules[queueName] = requiredModules[queueName] || []
      requiredModules[queueName].push(moduleToCheck)
      var newModules = getModuleDependencies(sources, sources[queueName][moduleToCheck], queueName)
      var newModulesKeys = Object.keys(newModules)
      for (var j = 0; j < newModulesKeys.length; j++) {
        modulesQueue[newModulesKeys[j]] = modulesQueue[newModulesKeys[j]] || []
        modulesQueue[newModulesKeys[j]] = modulesQueue[newModulesKeys[j]].concat(newModules[newModulesKeys[j]])
      }
    }
  }

  return requiredModules
}

module.exports = function (moduleId, options) {
  options = options || {}
  var sources = {
    main: __webpack_require__.m
  }

  var requiredModules = options.all ? { main: Object.keys(sources.main) } : getRequiredModules(sources, moduleId)

  var src = ''

  Object.keys(requiredModules).filter(function (m) { return m !== 'main' }).forEach(function (module) {
    var entryModule = 0
    while (requiredModules[module][entryModule]) {
      entryModule++
    }
    requiredModules[module].push(entryModule)
    sources[module][entryModule] = '(function(module, exports, __webpack_require__) { module.exports = __webpack_require__; })'
    src = src + 'var ' + module + ' = (' + webpackBootstrapFunc.toString().replace('ENTRY_MODULE', JSON.stringify(entryModule)) + ')({' + requiredModules[module].map(function (id) { return '' + JSON.stringify(id) + ': ' + sources[module][id].toString() }).join(',') + '});\n'
  })

  src = src + 'new ((' + webpackBootstrapFunc.toString().replace('ENTRY_MODULE', JSON.stringify(moduleId)) + ')({' + requiredModules.main.map(function (id) { return '' + JSON.stringify(id) + ': ' + sources.main[id].toString() }).join(',') + '}))(self);'

  var blob = new window.Blob([src], { type: 'text/javascript' })
  if (options.bare) { return blob }

  var URL = window.URL || window.webkitURL || window.mozURL || window.msURL

  var workerUrl = URL.createObjectURL(blob)
  var worker = new window.Worker(workerUrl)
  worker.objectURL = workerUrl

  return worker
}


/***/ }),

/***/ "./src/crypt/decrypter.js":
/*!********************************************!*\
  !*** ./src/crypt/decrypter.js + 3 modules ***!
  \********************************************/
/*! exports provided: default */
/*! ModuleConcatenation bailout: Cannot concat with ./src/errors.ts because of ./src/hls.ts */
/*! ModuleConcatenation bailout: Cannot concat with ./src/events.js because of ./src/hls.ts */
/*! ModuleConcatenation bailout: Cannot concat with ./src/utils/get-self-scope.js because of ./src/hls.ts */
/*! ModuleConcatenation bailout: Cannot concat with ./src/utils/logger.js because of ./src/hls.ts */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// CONCATENATED MODULE: ./src/crypt/aes-crypto.js
var AESCrypto = /*#__PURE__*/function () {
  function AESCrypto(subtle, iv) {
    this.subtle = subtle;
    this.aesIV = iv;
  }

  var _proto = AESCrypto.prototype;

  _proto.decrypt = function decrypt(data, key) {
    return this.subtle.decrypt({
      name: 'AES-CBC',
      iv: this.aesIV
    }, key, data);
  };

  return AESCrypto;
}();


// CONCATENATED MODULE: ./src/crypt/fast-aes-key.js
var FastAESKey = /*#__PURE__*/function () {
  function FastAESKey(subtle, key) {
    this.subtle = subtle;
    this.key = key;
  }

  var _proto = FastAESKey.prototype;

  _proto.expandKey = function expandKey() {
    return this.subtle.importKey('raw', this.key, {
      name: 'AES-CBC'
    }, false, ['encrypt', 'decrypt']);
  };

  return FastAESKey;
}();

/* harmony default export */ var fast_aes_key = (FastAESKey);
// CONCATENATED MODULE: ./src/crypt/aes-decryptor.js
// PKCS7
function removePadding(buffer) {
  var outputBytes = buffer.byteLength;
  var paddingBytes = outputBytes && new DataView(buffer).getUint8(outputBytes - 1);

  if (paddingBytes) {
    return buffer.slice(0, outputBytes - paddingBytes);
  } else {
    return buffer;
  }
}

var AESDecryptor = /*#__PURE__*/function () {
  function AESDecryptor() {
    // Static after running initTable
    this.rcon = [0x0, 0x1, 0x2, 0x4, 0x8, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];
    this.subMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)];
    this.invSubMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)];
    this.sBox = new Uint32Array(256);
    this.invSBox = new Uint32Array(256); // Changes during runtime

    this.key = new Uint32Array(0);
    this.initTable();
  } // Using view.getUint32() also swaps the byte order.


  var _proto = AESDecryptor.prototype;

  _proto.uint8ArrayToUint32Array_ = function uint8ArrayToUint32Array_(arrayBuffer) {
    var view = new DataView(arrayBuffer);
    var newArray = new Uint32Array(4);

    for (var i = 0; i < 4; i++) {
      newArray[i] = view.getUint32(i * 4);
    }

    return newArray;
  };

  _proto.initTable = function initTable() {
    var sBox = this.sBox;
    var invSBox = this.invSBox;
    var subMix = this.subMix;
    var subMix0 = subMix[0];
    var subMix1 = subMix[1];
    var subMix2 = subMix[2];
    var subMix3 = subMix[3];
    var invSubMix = this.invSubMix;
    var invSubMix0 = invSubMix[0];
    var invSubMix1 = invSubMix[1];
    var invSubMix2 = invSubMix[2];
    var invSubMix3 = invSubMix[3];
    var d = new Uint32Array(256);
    var x = 0;
    var xi = 0;
    var i = 0;

    for (i = 0; i < 256; i++) {
      if (i < 128) {
        d[i] = i << 1;
      } else {
        d[i] = i << 1 ^ 0x11b;
      }
    }

    for (i = 0; i < 256; i++) {
      var sx = xi ^ xi << 1 ^ xi << 2 ^ xi << 3 ^ xi << 4;
      sx = sx >>> 8 ^ sx & 0xff ^ 0x63;
      sBox[x] = sx;
      invSBox[sx] = x; // Compute multiplication

      var x2 = d[x];
      var x4 = d[x2];
      var x8 = d[x4]; // Compute sub/invSub bytes, mix columns tables

      var t = d[sx] * 0x101 ^ sx * 0x1010100;
      subMix0[x] = t << 24 | t >>> 8;
      subMix1[x] = t << 16 | t >>> 16;
      subMix2[x] = t << 8 | t >>> 24;
      subMix3[x] = t; // Compute inv sub bytes, inv mix columns tables

      t = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;
      invSubMix0[sx] = t << 24 | t >>> 8;
      invSubMix1[sx] = t << 16 | t >>> 16;
      invSubMix2[sx] = t << 8 | t >>> 24;
      invSubMix3[sx] = t; // Compute next counter

      if (!x) {
        x = xi = 1;
      } else {
        x = x2 ^ d[d[d[x8 ^ x2]]];
        xi ^= d[d[xi]];
      }
    }
  };

  _proto.expandKey = function expandKey(keyBuffer) {
    // convert keyBuffer to Uint32Array
    var key = this.uint8ArrayToUint32Array_(keyBuffer);
    var sameKey = true;
    var offset = 0;

    while (offset < key.length && sameKey) {
      sameKey = key[offset] === this.key[offset];
      offset++;
    }

    if (sameKey) {
      return;
    }

    this.key = key;
    var keySize = this.keySize = key.length;

    if (keySize !== 4 && keySize !== 6 && keySize !== 8) {
      throw new Error('Invalid aes key size=' + keySize);
    }

    var ksRows = this.ksRows = (keySize + 6 + 1) * 4;
    var ksRow;
    var invKsRow;
    var keySchedule = this.keySchedule = new Uint32Array(ksRows);
    var invKeySchedule = this.invKeySchedule = new Uint32Array(ksRows);
    var sbox = this.sBox;
    var rcon = this.rcon;
    var invSubMix = this.invSubMix;
    var invSubMix0 = invSubMix[0];
    var invSubMix1 = invSubMix[1];
    var invSubMix2 = invSubMix[2];
    var invSubMix3 = invSubMix[3];
    var prev;
    var t;

    for (ksRow = 0; ksRow < ksRows; ksRow++) {
      if (ksRow < keySize) {
        prev = keySchedule[ksRow] = key[ksRow];
        continue;
      }

      t = prev;

      if (ksRow % keySize === 0) {
        // Rot word
        t = t << 8 | t >>> 24; // Sub word

        t = sbox[t >>> 24] << 24 | sbox[t >>> 16 & 0xff] << 16 | sbox[t >>> 8 & 0xff] << 8 | sbox[t & 0xff]; // Mix Rcon

        t ^= rcon[ksRow / keySize | 0] << 24;
      } else if (keySize > 6 && ksRow % keySize === 4) {
        // Sub word
        t = sbox[t >>> 24] << 24 | sbox[t >>> 16 & 0xff] << 16 | sbox[t >>> 8 & 0xff] << 8 | sbox[t & 0xff];
      }

      keySchedule[ksRow] = prev = (keySchedule[ksRow - keySize] ^ t) >>> 0;
    }

    for (invKsRow = 0; invKsRow < ksRows; invKsRow++) {
      ksRow = ksRows - invKsRow;

      if (invKsRow & 3) {
        t = keySchedule[ksRow];
      } else {
        t = keySchedule[ksRow - 4];
      }

      if (invKsRow < 4 || ksRow <= 4) {
        invKeySchedule[invKsRow] = t;
      } else {
        invKeySchedule[invKsRow] = invSubMix0[sbox[t >>> 24]] ^ invSubMix1[sbox[t >>> 16 & 0xff]] ^ invSubMix2[sbox[t >>> 8 & 0xff]] ^ invSubMix3[sbox[t & 0xff]];
      }

      invKeySchedule[invKsRow] = invKeySchedule[invKsRow] >>> 0;
    }
  } // Adding this as a method greatly improves performance.
  ;

  _proto.networkToHostOrderSwap = function networkToHostOrderSwap(word) {
    return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;
  };

  _proto.decrypt = function decrypt(inputArrayBuffer, offset, aesIV, removePKCS7Padding) {
    var nRounds = this.keySize + 6;
    var invKeySchedule = this.invKeySchedule;
    var invSBOX = this.invSBox;
    var invSubMix = this.invSubMix;
    var invSubMix0 = invSubMix[0];
    var invSubMix1 = invSubMix[1];
    var invSubMix2 = invSubMix[2];
    var invSubMix3 = invSubMix[3];
    var initVector = this.uint8ArrayToUint32Array_(aesIV);
    var initVector0 = initVector[0];
    var initVector1 = initVector[1];
    var initVector2 = initVector[2];
    var initVector3 = initVector[3];
    var inputInt32 = new Int32Array(inputArrayBuffer);
    var outputInt32 = new Int32Array(inputInt32.length);
    var t0, t1, t2, t3;
    var s0, s1, s2, s3;
    var inputWords0, inputWords1, inputWords2, inputWords3;
    var ksRow, i;
    var swapWord = this.networkToHostOrderSwap;

    while (offset < inputInt32.length) {
      inputWords0 = swapWord(inputInt32[offset]);
      inputWords1 = swapWord(inputInt32[offset + 1]);
      inputWords2 = swapWord(inputInt32[offset + 2]);
      inputWords3 = swapWord(inputInt32[offset + 3]);
      s0 = inputWords0 ^ invKeySchedule[0];
      s1 = inputWords3 ^ invKeySchedule[1];
      s2 = inputWords2 ^ invKeySchedule[2];
      s3 = inputWords1 ^ invKeySchedule[3];
      ksRow = 4; // Iterate through the rounds of decryption

      for (i = 1; i < nRounds; i++) {
        t0 = invSubMix0[s0 >>> 24] ^ invSubMix1[s1 >> 16 & 0xff] ^ invSubMix2[s2 >> 8 & 0xff] ^ invSubMix3[s3 & 0xff] ^ invKeySchedule[ksRow];
        t1 = invSubMix0[s1 >>> 24] ^ invSubMix1[s2 >> 16 & 0xff] ^ invSubMix2[s3 >> 8 & 0xff] ^ invSubMix3[s0 & 0xff] ^ invKeySchedule[ksRow + 1];
        t2 = invSubMix0[s2 >>> 24] ^ invSubMix1[s3 >> 16 & 0xff] ^ invSubMix2[s0 >> 8 & 0xff] ^ invSubMix3[s1 & 0xff] ^ invKeySchedule[ksRow + 2];
        t3 = invSubMix0[s3 >>> 24] ^ invSubMix1[s0 >> 16 & 0xff] ^ invSubMix2[s1 >> 8 & 0xff] ^ invSubMix3[s2 & 0xff] ^ invKeySchedule[ksRow + 3]; // Update state

        s0 = t0;
        s1 = t1;
        s2 = t2;
        s3 = t3;
        ksRow = ksRow + 4;
      } // Shift rows, sub bytes, add round key


      t0 = invSBOX[s0 >>> 24] << 24 ^ invSBOX[s1 >> 16 & 0xff] << 16 ^ invSBOX[s2 >> 8 & 0xff] << 8 ^ invSBOX[s3 & 0xff] ^ invKeySchedule[ksRow];
      t1 = invSBOX[s1 >>> 24] << 24 ^ invSBOX[s2 >> 16 & 0xff] << 16 ^ invSBOX[s3 >> 8 & 0xff] << 8 ^ invSBOX[s0 & 0xff] ^ invKeySchedule[ksRow + 1];
      t2 = invSBOX[s2 >>> 24] << 24 ^ invSBOX[s3 >> 16 & 0xff] << 16 ^ invSBOX[s0 >> 8 & 0xff] << 8 ^ invSBOX[s1 & 0xff] ^ invKeySchedule[ksRow + 2];
      t3 = invSBOX[s3 >>> 24] << 24 ^ invSBOX[s0 >> 16 & 0xff] << 16 ^ invSBOX[s1 >> 8 & 0xff] << 8 ^ invSBOX[s2 & 0xff] ^ invKeySchedule[ksRow + 3];
      ksRow = ksRow + 3; // Write

      outputInt32[offset] = swapWord(t0 ^ initVector0);
      outputInt32[offset + 1] = swapWord(t3 ^ initVector1);
      outputInt32[offset + 2] = swapWord(t2 ^ initVector2);
      outputInt32[offset + 3] = swapWord(t1 ^ initVector3); // reset initVector to last 4 unsigned int

      initVector0 = inputWords0;
      initVector1 = inputWords1;
      initVector2 = inputWords2;
      initVector3 = inputWords3;
      offset = offset + 4;
    }

    return removePKCS7Padding ? removePadding(outputInt32.buffer) : outputInt32.buffer;
  };

  _proto.destroy = function destroy() {
    this.key = undefined;
    this.keySize = undefined;
    this.ksRows = undefined;
    this.sBox = undefined;
    this.invSBox = undefined;
    this.subMix = undefined;
    this.invSubMix = undefined;
    this.keySchedule = undefined;
    this.invKeySchedule = undefined;
    this.rcon = undefined;
  };

  return AESDecryptor;
}();

/* harmony default export */ var aes_decryptor = (AESDecryptor);
// EXTERNAL MODULE: ./src/errors.ts
var errors = __webpack_require__("./src/errors.ts");

// EXTERNAL MODULE: ./src/utils/logger.js
var logger = __webpack_require__("./src/utils/logger.js");

// EXTERNAL MODULE: ./src/events.js
var events = __webpack_require__("./src/events.js");

// EXTERNAL MODULE: ./src/utils/get-self-scope.js
var get_self_scope = __webpack_require__("./src/utils/get-self-scope.js");

// CONCATENATED MODULE: ./src/crypt/decrypter.js






 // see https://stackoverflow.com/a/11237259/589493

var global = Object(get_self_scope["getSelfScope"])(); // safeguard for code that might run both on worker and main thread

var decrypter_Decrypter = /*#__PURE__*/function () {
  function Decrypter(observer, config, _temp) {
    var _ref = _temp === void 0 ? {} : _temp,
        _ref$removePKCS7Paddi = _ref.removePKCS7Padding,
        removePKCS7Padding = _ref$removePKCS7Paddi === void 0 ? true : _ref$removePKCS7Paddi;

    this.logEnabled = true;
    this.observer = observer;
    this.config = config;
    this.removePKCS7Padding = removePKCS7Padding; // built in decryptor expects PKCS7 padding

    if (removePKCS7Padding) {
      try {
        var browserCrypto = global.crypto;

        if (browserCrypto) {
          this.subtle = browserCrypto.subtle || browserCrypto.webkitSubtle;
        }
      } catch (e) {}
    }

    this.disableWebCrypto = !this.subtle;
  }

  var _proto = Decrypter.prototype;

  _proto.isSync = function isSync() {
    return this.disableWebCrypto && this.config.enableSoftwareAES;
  };

  _proto.decrypt = function decrypt(data, key, iv, callback) {
    var _this = this;

    if (this.disableWebCrypto && this.config.enableSoftwareAES) {
      if (this.logEnabled) {
        logger["logger"].log('JS AES decrypt');
        this.logEnabled = false;
      }

      var decryptor = this.decryptor;

      if (!decryptor) {
        this.decryptor = decryptor = new aes_decryptor();
      }

      decryptor.expandKey(key);
      callback(decryptor.decrypt(data, 0, iv, this.removePKCS7Padding));
    } else {
      if (this.logEnabled) {
        logger["logger"].log('WebCrypto AES decrypt');
        this.logEnabled = false;
      }

      var subtle = this.subtle;

      if (this.key !== key) {
        this.key = key;
        this.fastAesKey = new fast_aes_key(subtle, key);
      }

      this.fastAesKey.expandKey().then(function (aesKey) {
        // decrypt using web crypto
        var crypto = new AESCrypto(subtle, iv);
        crypto.decrypt(data, aesKey).catch(function (err) {
          _this.onWebCryptoError(err, data, key, iv, callback);
        }).then(function (result) {
          callback(result);
        });
      }).catch(function (err) {
        _this.onWebCryptoError(err, data, key, iv, callback);
      });
    }
  };

  _proto.onWebCryptoError = function onWebCryptoError(err, data, key, iv, callback) {
    if (this.config.enableSoftwareAES) {
      logger["logger"].log('WebCrypto Error, disable WebCrypto API');
      this.disableWebCrypto = true;
      this.logEnabled = true;
      this.decrypt(data, key, iv, callback);
    } else {
      logger["logger"].error("decrypting error : " + err.message);
      this.observer.trigger(events["default"].ERROR, {
        type: errors["ErrorTypes"].MEDIA_ERROR,
        details: errors["ErrorDetails"].FRAG_DECRYPT_ERROR,
        fatal: true,
        reason: err.message
      });
    }
  };

  _proto.destroy = function destroy() {
    var decryptor = this.decryptor;

    if (decryptor) {
      decryptor.destroy();
      this.decryptor = undefined;
    }
  };

  return Decrypter;
}();

/* harmony default export */ var decrypter = __webpack_exports__["default"] = (decrypter_Decrypter);

/***/ }),

/***/ "./src/demux/demuxer-inline.js":
/*!**************************************************!*\
  !*** ./src/demux/demuxer-inline.js + 12 modules ***!
  \**************************************************/
/*! exports provided: default */
/*! ModuleConcatenation bailout: Cannot concat with ./src/crypt/decrypter.js because of ./src/hls.ts */
/*! ModuleConcatenation bailout: Cannot concat with ./src/demux/id3.js because of ./src/hls.ts */
/*! ModuleConcatenation bailout: Cannot concat with ./src/demux/mp4demuxer.js because of ./src/hls.ts */
/*! ModuleConcatenation bailout: Cannot concat with ./src/errors.ts because of ./src/hls.ts */
/*! ModuleConcatenation bailout: Cannot concat with ./src/events.js because of ./src/hls.ts */
/*! ModuleConcatenation bailout: Cannot concat with ./src/polyfills/number.js because of ./src/hls.ts */
/*! ModuleConcatenation bailout: Cannot concat with ./src/utils/get-self-scope.js because of ./src/hls.ts */
/*! ModuleConcatenation bailout: Cannot concat with ./src/utils/logger.js because of ./src/hls.ts */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./src/events.js
var events = __webpack_require__("./src/events.js");

// EXTERNAL MODULE: ./src/errors.ts
var errors = __webpack_require__("./src/errors.ts");

// EXTERNAL MODULE: ./src/crypt/decrypter.js + 3 modules
var crypt_decrypter = __webpack_require__("./src/crypt/decrypter.js");

// EXTERNAL MODULE: ./src/polyfills/number.js
var number = __webpack_require__("./src/polyfills/number.js");

// EXTERNAL MODULE: ./src/utils/logger.js
var logger = __webpack_require__("./src/utils/logger.js");

// EXTERNAL MODULE: ./src/utils/get-self-scope.js
var get_self_scope = __webpack_require__("./src/utils/get-self-scope.js");

// CONCATENATED MODULE: ./src/demux/adts.js
/**
 * ADTS parser helper
 * @link https://wiki.multimedia.cx/index.php?title=ADTS
 */




function getAudioConfig(observer, data, offset, audioCodec) {
  var adtsObjectType,
      // :int
  adtsSampleingIndex,
      // :int
  adtsExtensionSampleingIndex,
      // :int
  adtsChanelConfig,
      // :int
  config,
      userAgent = navigator.userAgent.toLowerCase(),
      manifestCodec = audioCodec,
      adtsSampleingRates = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350]; // byte 2

  adtsObjectType = ((data[offset + 2] & 0xC0) >>> 6) + 1;
  adtsSampleingIndex = (data[offset + 2] & 0x3C) >>> 2;

  if (adtsSampleingIndex > adtsSampleingRates.length - 1) {
    observer.trigger(events["default"].ERROR, {
      type: errors["ErrorTypes"].MEDIA_ERROR,
      details: errors["ErrorDetails"].FRAG_PARSING_ERROR,
      fatal: true,
      reason: "invalid ADTS sampling index:" + adtsSampleingIndex
    });
    return;
  }

  adtsChanelConfig = (data[offset + 2] & 0x01) << 2; // byte 3

  adtsChanelConfig |= (data[offset + 3] & 0xC0) >>> 6;
  logger["logger"].log("manifest codec:" + audioCodec + ",ADTS data:type:" + adtsObjectType + ",sampleingIndex:" + adtsSampleingIndex + "[" + adtsSampleingRates[adtsSampleingIndex] + "Hz],channelConfig:" + adtsChanelConfig); // firefox: freq less than 24kHz = AAC SBR (HE-AAC)

  if (/firefox/i.test(userAgent)) {
    if (adtsSampleingIndex >= 6) {
      adtsObjectType = 5;
      config = new Array(4); // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies
      // there is a factor 2 between frame sample rate and output sample rate
      // multiply frequency by 2 (see table below, equivalent to substract 3)

      adtsExtensionSampleingIndex = adtsSampleingIndex - 3;
    } else {
      adtsObjectType = 2;
      config = new Array(2);
      adtsExtensionSampleingIndex = adtsSampleingIndex;
    } // Android : always use AAC

  } else if (userAgent.indexOf('android') !== -1) {
    adtsObjectType = 2;
    config = new Array(2);
    adtsExtensionSampleingIndex = adtsSampleingIndex;
  } else {
    /*  for other browsers (Chrome/Vivaldi/Opera ...)
        always force audio type to be HE-AAC SBR, as some browsers do not support audio codec switch properly (like Chrome ...)
    */
    adtsObjectType = 5;
    config = new Array(4); // if (manifest codec is HE-AAC or HE-AACv2) OR (manifest codec not specified AND frequency less than 24kHz)

    if (audioCodec && (audioCodec.indexOf('mp4a.40.29') !== -1 || audioCodec.indexOf('mp4a.40.5') !== -1) || !audioCodec && adtsSampleingIndex >= 6) {
      // HE-AAC uses SBR (Spectral Band Replication) , high frequencies are constructed from low frequencies
      // there is a factor 2 between frame sample rate and output sample rate
      // multiply frequency by 2 (see table below, equivalent to substract 3)
      adtsExtensionSampleingIndex = adtsSampleingIndex - 3;
    } else {
      // if (manifest codec is AAC) AND (frequency less than 24kHz AND nb channel is 1) OR (manifest codec not specified and mono audio)
      // Chrome fails to play back with low frequency AAC LC mono when initialized with HE-AAC.  This is not a problem with stereo.
      if (audioCodec && audioCodec.indexOf('mp4a.40.2') !== -1 && (adtsSampleingIndex >= 6 && adtsChanelConfig === 1 || /vivaldi/i.test(userAgent)) || !audioCodec && adtsChanelConfig === 1) {
        adtsObjectType = 2;
        config = new Array(2);
      }

      adtsExtensionSampleingIndex = adtsSampleingIndex;
    }
  }
  /* refer to http://wiki.multimedia.cx/index.php?title=MPEG-4_Audio#Audio_Specific_Config
      ISO 14496-3 (AAC).pdf - Table 1.13 — Syntax of AudioSpecificConfig()
    Audio Profile / Audio Object Type
    0: Null
    1: AAC Main
    2: AAC LC (Low Complexity)
    3: AAC SSR (Scalable Sample Rate)
    4: AAC LTP (Long Term Prediction)
    5: SBR (Spectral Band Replication)
    6: AAC Scalable
   sampling freq
    0: 96000 Hz
    1: 88200 Hz
    2: 64000 Hz
    3: 48000 Hz
    4: 44100 Hz
    5: 32000 Hz
    6: 24000 Hz
    7: 22050 Hz
    8: 16000 Hz
    9: 12000 Hz
    10: 11025 Hz
    11: 8000 Hz
    12: 7350 Hz
    13: Reserved
    14: Reserved
    15: frequency is written explictly
    Channel Configurations
    These are the channel configurations:
    0: Defined in AOT Specifc Config
    1: 1 channel: front-center
    2: 2 channels: front-left, front-right
  */
  // audioObjectType = profile => profile, the MPEG-4 Audio Object Type minus 1


  config[0] = adtsObjectType << 3; // samplingFrequencyIndex

  config[0] |= (adtsSampleingIndex & 0x0E) >> 1;
  config[1] |= (adtsSampleingIndex & 0x01) << 7; // channelConfiguration

  config[1] |= adtsChanelConfig << 3;

  if (adtsObjectType === 5) {
    // adtsExtensionSampleingIndex
    config[1] |= (adtsExtensionSampleingIndex & 0x0E) >> 1;
    config[2] = (adtsExtensionSampleingIndex & 0x01) << 7; // adtsObjectType (force to 2, chrome is checking that object type is less than 5 ???
    //    https://chromium.googlesource.com/chromium/src.git/+/master/media/formats/mp4/aac.cc

    config[2] |= 2 << 2;
    config[3] = 0;
  }

  return {
    config: config,
    samplerate: adtsSampleingRates[adtsSampleingIndex],
    channelCount: adtsChanelConfig,
    codec: 'mp4a.40.' + adtsObjectType,
    manifestCodec: manifestCodec
  };
}
function isHeaderPattern(data, offset) {
  return data[offset] === 0xff && (data[offset + 1] & 0xf6) === 0xf0;
}
function getHeaderLength(data, offset) {
  return data[offset + 1] & 0x01 ? 7 : 9;
}
function getFullFrameLength(data, offset) {
  return (data[offset + 3] & 0x03) << 11 | data[offset + 4] << 3 | (data[offset + 5] & 0xE0) >>> 5;
}
function isHeader(data, offset) {
  // Look for ADTS header | 1111 1111 | 1111 X00X | where X can be either 0 or 1
  // Layer bits (position 14 and 15) in header should be always 0 for ADTS
  // More info https://wiki.multimedia.cx/index.php?title=ADTS
  if (offset + 1 < data.length && isHeaderPattern(data, offset)) {
    return true;
  }

  return false;
}
function adts_probe(data, offset) {
  // same as isHeader but we also check that ADTS frame follows last ADTS frame
  // or end of data is reached
  if (isHeader(data, offset)) {
    // ADTS header Length
    var headerLength = getHeaderLength(data, offset);

    if (offset + headerLength >= data.length) {
      return false;
    } // ADTS frame Length


    var frameLength = getFullFrameLength(data, offset);

    if (frameLength <= headerLength) {
      return false;
    }

    var newOffset = offset + frameLength;

    if (newOffset === data.length || newOffset + 1 < data.length && isHeaderPattern(data, newOffset)) {
      return true;
    }
  }

  return false;
}
function initTrackConfig(track, observer, data, offset, audioCodec) {
  if (!track.samplerate) {
    var config = getAudioConfig(observer, data, offset, audioCodec);
    track.config = config.config;
    track.samplerate = config.samplerate;
    track.channelCount = config.channelCount;
    track.codec = config.codec;
    track.manifestCodec = config.manifestCodec;
    logger["logger"].log("parsed codec:" + track.codec + ",rate:" + config.samplerate + ",nb channel:" + config.channelCount);
  }
}
function getFrameDuration(samplerate) {
  return 1024 * 90000 / samplerate;
}
function parseFrameHeader(data, offset, pts, frameIndex, frameDuration) {
  var headerLength, frameLength, stamp;
  var length = data.length; // The protection skip bit tells us if we have 2 bytes of CRC data at the end of the ADTS header

  headerLength = getHeaderLength(data, offset); // retrieve frame size

  frameLength = getFullFrameLength(data, offset);
  frameLength -= headerLength;

  if (frameLength > 0 && offset + headerLength + frameLength <= length) {
    stamp = pts + frameIndex * frameDuration; // logger.log(`AAC frame, offset/length/total/pts:${offset+headerLength}/${frameLength}/${data.byteLength}/${(stamp/90).toFixed(0)}`);

    return {
      headerLength: headerLength,
      frameLength: frameLength,
      stamp: stamp
    };
  }

  return undefined;
}
function appendFrame(track, data, offset, pts, frameIndex) {
  var frameDuration = getFrameDuration(track.samplerate);
  var header = parseFrameHeader(data, offset, pts, frameIndex, frameDuration);

  if (header) {
    var stamp = header.stamp;
    var headerLength = header.headerLength;
    var frameLength = header.frameLength; // logger.log(`AAC frame, offset/length/total/pts:${offset+headerLength}/${frameLength}/${data.byteLength}/${(stamp/90).toFixed(0)}`);

    var aacSample = {
      unit: data.subarray(offset + headerLength, offset + headerLength + frameLength),
      pts: stamp,
      dts: stamp
    };
    track.samples.push(aacSample);
    return {
      sample: aacSample,
      length: frameLength + headerLength
    };
  }

  return undefined;
}
// EXTERNAL MODULE: ./src/demux/id3.js
var id3 = __webpack_require__("./src/demux/id3.js");

// CONCATENATED MODULE: ./src/demux/aacdemuxer.js


/**
 * AAC demuxer
 */




var aacdemuxer_AACDemuxer = /*#__PURE__*/function () {
  function AACDemuxer(observer, remuxer, config) {
    this.observer = observer;
    this.config = config;
    this.remuxer = remuxer;
  }

  var _proto = AACDemuxer.prototype;

  _proto.resetInitSegment = function resetInitSegment(initSegment, audioCodec, videoCodec, duration) {
    this._audioTrack = {
      container: 'audio/adts',
      type: 'audio',
      id: 0,
      sequenceNumber: 0,
      isAAC: true,
      samples: [],
      len: 0,
      manifestCodec: audioCodec,
      duration: duration,
      inputTimeScale: 90000
    };
  };

  _proto.resetTimeStamp = function resetTimeStamp() {};

  AACDemuxer.probe = function probe(data) {
    if (!data) {
      return false;
    } // Check for the ADTS sync word
    // Look for ADTS header | 1111 1111 | 1111 X00X | where X can be either 0 or 1
    // Layer bits (position 14 and 15) in header should be always 0 for ADTS
    // More info https://wiki.multimedia.cx/index.php?title=ADTS


    var id3Data = id3["default"].getID3Data(data, 0) || [];
    var offset = id3Data.length;

    for (var length = data.length; offset < length; offset++) {
      if (adts_probe(data, offset)) {
        logger["logger"].log('ADTS sync word found !');
        return true;
      }
    }

    return false;
  } // feed incoming data to the front of the parsing pipeline
  ;

  _proto.append = function append(data, timeOffset, contiguous, accurateTimeOffset) {
    var track = this._audioTrack;
    var id3Data = id3["default"].getID3Data(data, 0) || [];
    var timestamp = id3["default"].getTimeStamp(id3Data);
    var pts = Object(number["isFiniteNumber"])(timestamp) ? timestamp * 90 : timeOffset * 90000;
    var frameIndex = 0;
    var stamp = pts;
    var length = data.length;
    var offset = id3Data.length;
    var id3Samples = [{
      pts: stamp,
      dts: stamp,
      data: id3Data
    }];

    while (offset < length - 1) {
      if (isHeader(data, offset) && offset + 5 < length) {
        initTrackConfig(track, this.observer, data, offset, track.manifestCodec);
        var frame = appendFrame(track, data, offset, pts, frameIndex);

        if (frame) {
          offset += frame.length;
          stamp = frame.sample.pts;
          frameIndex++;
        } else {
          logger["logger"].log('Unable to parse AAC frame');
          break;
        }
      } else if (id3["default"].isHeader(data, offset)) {
        id3Data = id3["default"].getID3Data(data, offset);
        id3Samples.push({
          pts: stamp,
          dts: stamp,
          data: id3Data
        });
        offset += id3Data.length;
      } else {
        // nothing found, keep looking
        offset++;
      }
    }

    this.remuxer.remux(track, {
      samples: []
    }, {
      samples: id3Samples,
      inputTimeScale: 90000
    }, {
      samples: []
    }, timeOffset, contiguous, accurateTimeOffset);
  };

  _proto.destroy = function destroy() {};

  return AACDemuxer;
}();

/* harmony default export */ var aacdemuxer = (aacdemuxer_AACDemuxer);
// EXTERNAL MODULE: ./src/demux/mp4demuxer.js
var mp4demuxer = __webpack_require__("./src/demux/mp4demuxer.js");

// CONCATENATED MODULE: ./src/demux/mpegaudio.js
/**
 *  MPEG parser helper
 */
var MpegAudio = {
  BitratesMap: [32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160],
  SamplingRateMap: [44100, 48000, 32000, 22050, 24000, 16000, 11025, 12000, 8000],
  SamplesCoefficients: [// MPEG 2.5
  [0, // Reserved
  72, // Layer3
  144, // Layer2
  12 // Layer1
  ], // Reserved
  [0, // Reserved
  0, // Layer3
  0, // Layer2
  0 // Layer1
  ], // MPEG 2
  [0, // Reserved
  72, // Layer3
  144, // Layer2
  12 // Layer1
  ], // MPEG 1
  [0, // Reserved
  144, // Layer3
  144, // Layer2
  12 // Layer1
  ]],
  BytesInSlot: [0, // Reserved
  1, // Layer3
  1, // Layer2
  4 // Layer1
  ],
  appendFrame: function appendFrame(track, data, offset, pts, frameIndex) {
    // Using http://www.datavoyage.com/mpgscript/mpeghdr.htm as a reference
    if (offset + 24 > data.length) {
      return undefined;
    }

    var header = this.parseHeader(data, offset);

    if (header && offset + header.frameLength <= data.length) {
      var frameDuration = header.samplesPerFrame * 90000 / header.sampleRate;
      var stamp = pts + frameIndex * frameDuration;
      var sample = {
        unit: data.subarray(offset, offset + header.frameLength),
        pts: stamp,
        dts: stamp
      };
      track.config = [];
      track.channelCount = header.channelCount;
      track.samplerate = header.sampleRate;
      track.samples.push(sample);
      return {
        sample: sample,
        length: header.frameLength
      };
    }

    return undefined;
  },
  parseHeader: function parseHeader(data, offset) {
    var headerB = data[offset + 1] >> 3 & 3;
    var headerC = data[offset + 1] >> 1 & 3;
    var headerE = data[offset + 2] >> 4 & 15;
    var headerF = data[offset + 2] >> 2 & 3;
    var headerG = data[offset + 2] >> 1 & 1;

    if (headerB !== 1 && headerE !== 0 && headerE !== 15 && headerF !== 3) {
      var columnInBitrates = headerB === 3 ? 3 - headerC : headerC === 3 ? 3 : 4;
      var bitRate = MpegAudio.BitratesMap[columnInBitrates * 14 + headerE - 1] * 1000;
      var columnInSampleRates = headerB === 3 ? 0 : headerB === 2 ? 1 : 2;
      var sampleRate = MpegAudio.SamplingRateMap[columnInSampleRates * 3 + headerF];
      var channelCount = data[offset + 3] >> 6 === 3 ? 1 : 2; // If bits of channel mode are `11` then it is a single channel (Mono)

      var sampleCoefficient = MpegAudio.SamplesCoefficients[headerB][headerC];
      var bytesInSlot = MpegAudio.BytesInSlot[headerC];
      var samplesPerFrame = sampleCoefficient * 8 * bytesInSlot;
      var frameLength = parseInt(sampleCoefficient * bitRate / sampleRate + headerG, 10) * bytesInSlot;
      return {
        sampleRate: sampleRate,
        channelCount: channelCount,
        frameLength: frameLength,
        samplesPerFrame: samplesPerFrame
      };
    }

    return undefined;
  },
  isHeaderPattern: function isHeaderPattern(data, offset) {
    return data[offset] === 0xff && (data[offset + 1] & 0xe0) === 0xe0 && (data[offset + 1] & 0x06) !== 0x00;
  },
  isHeader: function isHeader(data, offset) {
    // Look for MPEG header | 1111 1111 | 111X XYZX | where X can be either 0 or 1 and Y or Z should be 1
    // Layer bits (position 14 and 15) in header should be always different from 0 (Layer I or Layer II or Layer III)
    // More info http://www.mp3-tech.org/programmer/frame_header.html
    if (offset + 1 < data.length && this.isHeaderPattern(data, offset)) {
      return true;
    }

    return false;
  },
  probe: function probe(data, offset) {
    // same as isHeader but we also check that MPEG frame follows last MPEG frame
    // or end of data is reached
    if (offset + 1 < data.length && this.isHeaderPattern(data, offset)) {
      // MPEG header Length
      var headerLength = 4; // MPEG frame Length

      var header = this.parseHeader(data, offset);
      var frameLength = headerLength;

      if (header && header.frameLength) {
        frameLength = header.frameLength;
      }

      var newOffset = offset + frameLength;

      if (newOffset === data.length || newOffset + 1 < data.length && this.isHeaderPattern(data, newOffset)) {
        return true;
      }
    }

    return false;
  }
};
/* harmony default export */ var mpegaudio = (MpegAudio);
// CONCATENATED MODULE: ./src/demux/exp-golomb.js
/**
 * Parser for exponential Golomb codes, a variable-bitwidth number encoding scheme used by h264.
*/


var exp_golomb_ExpGolomb = /*#__PURE__*/function () {
  function ExpGolomb(data) {
    this.data = data; // the number of bytes left to examine in this.data

    this.bytesAvailable = data.byteLength; // the current word being examined

    this.word = 0; // :uint
    // the number of bits left to examine in the current word

    this.bitsAvailable = 0; // :uint
  } // ():void


  var _proto = ExpGolomb.prototype;

  _proto.loadWord = function loadWord() {
    var data = this.data,
        bytesAvailable = this.bytesAvailable,
        position = data.byteLength - bytesAvailable,
        workingBytes = new Uint8Array(4),
        availableBytes = Math.min(4, bytesAvailable);

    if (availableBytes === 0) {
      throw new Error('no bytes available');
    }

    workingBytes.set(data.subarray(position, position + availableBytes));
    this.word = new DataView(workingBytes.buffer).getUint32(0); // track the amount of this.data that has been processed

    this.bitsAvailable = availableBytes * 8;
    this.bytesAvailable -= availableBytes;
  } // (count:int):void
  ;

  _proto.skipBits = function skipBits(count) {
    var skipBytes; // :int

    if (this.bitsAvailable > count) {
      this.word <<= count;
      this.bitsAvailable -= count;
    } else {
      count -= this.bitsAvailable;
      skipBytes = count >> 3;
      count -= skipBytes >> 3;
      this.bytesAvailable -= skipBytes;
      this.loadWord();
      this.word <<= count;
      this.bitsAvailable -= count;
    }
  } // (size:int):uint
  ;

  _proto.readBits = function readBits(size) {
    var bits = Math.min(this.bitsAvailable, size),
        // :uint
    valu = this.word >>> 32 - bits; // :uint

    if (size > 32) {
      logger["logger"].error('Cannot read more than 32 bits at a time');
    }

    this.bitsAvailable -= bits;

    if (this.bitsAvailable > 0) {
      this.word <<= bits;
    } else if (this.bytesAvailable > 0) {
      this.loadWord();
    }

    bits = size - bits;

    if (bits > 0 && this.bitsAvailable) {
      return valu << bits | this.readBits(bits);
    } else {
      return valu;
    }
  } // ():uint
  ;

  _proto.skipLZ = function skipLZ() {
    var leadingZeroCount; // :uint

    for (leadingZeroCount = 0; leadingZeroCount < this.bitsAvailable; ++leadingZeroCount) {
      if ((this.word & 0x80000000 >>> leadingZeroCount) !== 0) {
        // the first bit of working word is 1
        this.word <<= leadingZeroCount;
        this.bitsAvailable -= leadingZeroCount;
        return leadingZeroCount;
      }
    } // we exhausted word and still have not found a 1


    this.loadWord();
    return leadingZeroCount + this.skipLZ();
  } // ():void
  ;

  _proto.skipUEG = function skipUEG() {
    this.skipBits(1 + this.skipLZ());
  } // ():void
  ;

  _proto.skipEG = function skipEG() {
    this.skipBits(1 + this.skipLZ());
  } // ():uint
  ;

  _proto.readUEG = function readUEG() {
    var clz = this.skipLZ(); // :uint

    return this.readBits(clz + 1) - 1;
  } // ():int
  ;

  _proto.readEG = function readEG() {
    var valu = this.readUEG(); // :int

    if (0x01 & valu) {
      // the number is odd if the low order bit is set
      return 1 + valu >>> 1; // add 1 to make it even, and divide by 2
    } else {
      return -1 * (valu >>> 1); // divide by two then make it negative
    }
  } // Some convenience functions
  // :Boolean
  ;

  _proto.readBoolean = function readBoolean() {
    return this.readBits(1) === 1;
  } // ():int
  ;

  _proto.readUByte = function readUByte() {
    return this.readBits(8);
  } // ():int
  ;

  _proto.readUShort = function readUShort() {
    return this.readBits(16);
  } // ():int
  ;

  _proto.readUInt = function readUInt() {
    return this.readBits(32);
  }
  /**
   * Advance the ExpGolomb decoder past a scaling list. The scaling
   * list is optionally transmitted as part of a sequence parameter
   * set and is not relevant to transmuxing.
   * @param count {number} the number of entries in this scaling list
   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1
   */
  ;

  _proto.skipScalingList = function skipScalingList(count) {
    var lastScale = 8,
        nextScale = 8,
        j,
        deltaScale;

    for (j = 0; j < count; j++) {
      if (nextScale !== 0) {
        deltaScale = this.readEG();
        nextScale = (lastScale + deltaScale + 256) % 256;
      }

      lastScale = nextScale === 0 ? lastScale : nextScale;
    }
  }
  /**
   * Read a sequence parameter set and return some interesting video
   * properties. A sequence parameter set is the H264 metadata that
   * describes the properties of upcoming video frames.
   * @param data {Uint8Array} the bytes of a sequence parameter set
   * @return {object} an object with configuration parsed from the
   * sequence parameter set, including the dimensions of the
   * associated video frames.
   */
  ;

  _proto.readSPS = function readSPS() {
    var frameCropLeftOffset = 0,
        frameCropRightOffset = 0,
        frameCropTopOffset = 0,
        frameCropBottomOffset = 0,
        profileIdc,
        profileCompat,
        levelIdc,
        numRefFramesInPicOrderCntCycle,
        picWidthInMbsMinus1,
        picHeightInMapUnitsMinus1,
        frameMbsOnlyFlag,
        scalingListCount,
        i,
        readUByte = this.readUByte.bind(this),
        readBits = this.readBits.bind(this),
        readUEG = this.readUEG.bind(this),
        readBoolean = this.readBoolean.bind(this),
        skipBits = this.skipBits.bind(this),
        skipEG = this.skipEG.bind(this),
        skipUEG = this.skipUEG.bind(this),
        skipScalingList = this.skipScalingList.bind(this);
    readUByte();
    profileIdc = readUByte(); // profile_idc

    profileCompat = readBits(5); // constraint_set[0-4]_flag, u(5)

    skipBits(3); // reserved_zero_3bits u(3),

    levelIdc = readUByte(); // level_idc u(8)

    skipUEG(); // seq_parameter_set_id
    // some profiles have more optional data we don't need

    if (profileIdc === 100 || profileIdc === 110 || profileIdc === 122 || profileIdc === 244 || profileIdc === 44 || profileIdc === 83 || profileIdc === 86 || profileIdc === 118 || profileIdc === 128) {
      var chromaFormatIdc = readUEG();

      if (chromaFormatIdc === 3) {
        skipBits(1);
      } // separate_colour_plane_flag


      skipUEG(); // bit_depth_luma_minus8

      skipUEG(); // bit_depth_chroma_minus8

      skipBits(1); // qpprime_y_zero_transform_bypass_flag

      if (readBoolean()) {
        // seq_scaling_matrix_present_flag
        scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;

        for (i = 0; i < scalingListCount; i++) {
          if (readBoolean()) {
            // seq_scaling_list_present_flag[ i ]
            if (i < 6) {
              skipScalingList(16);
            } else {
              skipScalingList(64);
            }
          }
        }
      }
    }

    skipUEG(); // log2_max_frame_num_minus4

    var picOrderCntType = readUEG();

    if (picOrderCntType === 0) {
      readUEG(); // log2_max_pic_order_cnt_lsb_minus4
    } else if (picOrderCntType === 1) {
      skipBits(1); // delta_pic_order_always_zero_flag

      skipEG(); // offset_for_non_ref_pic

      skipEG(); // offset_for_top_to_bottom_field

      numRefFramesInPicOrderCntCycle = readUEG();

      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {
        skipEG();
      } // offset_for_ref_frame[ i ]

    }

    skipUEG(); // max_num_ref_frames

    skipBits(1); // gaps_in_frame_num_value_allowed_flag

    picWidthInMbsMinus1 = readUEG();
    picHeightInMapUnitsMinus1 = readUEG();
    frameMbsOnlyFlag = readBits(1);

    if (frameMbsOnlyFlag === 0) {
      skipBits(1);
    } // mb_adaptive_frame_field_flag


    skipBits(1); // direct_8x8_inference_flag

    if (readBoolean()) {
      // frame_cropping_flag
      frameCropLeftOffset = readUEG();
      frameCropRightOffset = readUEG();
      frameCropTopOffset = readUEG();
      frameCropBottomOffset = readUEG();
    }

    var pixelRatio = [1, 1];

    if (readBoolean()) {
      // vui_parameters_present_flag
      if (readBoolean()) {
        // aspect_ratio_info_present_flag
        var aspectRatioIdc = readUByte();

        switch (aspectRatioIdc) {
          case 1:
            pixelRatio = [1, 1];
            break;

          case 2:
            pixelRatio = [12, 11];
            break;

          case 3:
            pixelRatio = [10, 11];
            break;

          case 4:
            pixelRatio = [16, 11];
            break;

          case 5:
            pixelRatio = [40, 33];
            break;

          case 6:
            pixelRatio = [24, 11];
            break;

          case 7:
            pixelRatio = [20, 11];
            break;

          case 8:
            pixelRatio = [32, 11];
            break;

          case 9:
            pixelRatio = [80, 33];
            break;

          case 10:
            pixelRatio = [18, 11];
            break;

          case 11:
            pixelRatio = [15, 11];
            break;

          case 12:
            pixelRatio = [64, 33];
            break;

          case 13:
            pixelRatio = [160, 99];
            break;

          case 14:
            pixelRatio = [4, 3];
            break;

          case 15:
            pixelRatio = [3, 2];
            break;

          case 16:
            pixelRatio = [2, 1];
            break;

          case 255:
            {
              pixelRatio = [readUByte() << 8 | readUByte(), readUByte() << 8 | readUByte()];
              break;
            }
        }
      }
    }

    return {
      width: Math.ceil((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2),
      height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - (frameMbsOnlyFlag ? 2 : 4) * (frameCropTopOffset + frameCropBottomOffset),
      pixelRatio: pixelRatio
    };
  };

  _proto.readSliceType = function readSliceType() {
    // skip NALu type
    this.readUByte(); // discard first_mb_in_slice

    this.readUEG(); // return slice_type

    return this.readUEG();
  };

  return ExpGolomb;
}();

/* harmony default export */ var exp_golomb = (exp_golomb_ExpGolomb);
// CONCATENATED MODULE: ./src/demux/sample-aes.js
/**
 * SAMPLE-AES decrypter
*/


var sample_aes_SampleAesDecrypter = /*#__PURE__*/function () {
  function SampleAesDecrypter(observer, config, decryptdata, discardEPB) {
    this.decryptdata = decryptdata;
    this.discardEPB = discardEPB;
    this.decrypter = new crypt_decrypter["default"](observer, config, {
      removePKCS7Padding: false
    });
  }

  var _proto = SampleAesDecrypter.prototype;

  _proto.decryptBuffer = function decryptBuffer(encryptedData, callback) {
    this.decrypter.decrypt(encryptedData, this.decryptdata.key.buffer, this.decryptdata.iv.buffer, callback);
  } // AAC - encrypt all full 16 bytes blocks starting from offset 16
  ;

  _proto.decryptAacSample = function decryptAacSample(samples, sampleIndex, callback, sync) {
    var curUnit = samples[sampleIndex].unit;
    var encryptedData = curUnit.subarray(16, curUnit.length - curUnit.length % 16);
    var encryptedBuffer = encryptedData.buffer.slice(encryptedData.byteOffset, encryptedData.byteOffset + encryptedData.length);
    var localthis = this;
    this.decryptBuffer(encryptedBuffer, function (decryptedData) {
      decryptedData = new Uint8Array(decryptedData);
      curUnit.set(decryptedData, 16);

      if (!sync) {
        localthis.decryptAacSamples(samples, sampleIndex + 1, callback);
      }
    });
  };

  _proto.decryptAacSamples = function decryptAacSamples(samples, sampleIndex, callback) {
    for (;; sampleIndex++) {
      if (sampleIndex >= samples.length) {
        callback();
        return;
      }

      if (samples[sampleIndex].unit.length < 32) {
        continue;
      }

      var sync = this.decrypter.isSync();
      this.decryptAacSample(samples, sampleIndex, callback, sync);

      if (!sync) {
        return;
      }
    }
  } // AVC - encrypt one 16 bytes block out of ten, starting from offset 32
  ;

  _proto.getAvcEncryptedData = function getAvcEncryptedData(decodedData) {
    var encryptedDataLen = Math.floor((decodedData.length - 48) / 160) * 16 + 16;
    var encryptedData = new Int8Array(encryptedDataLen);
    var outputPos = 0;

    for (var inputPos = 32; inputPos <= decodedData.length - 16; inputPos += 160, outputPos += 16) {
      encryptedData.set(decodedData.subarray(inputPos, inputPos + 16), outputPos);
    }

    return encryptedData;
  };

  _proto.getAvcDecryptedUnit = function getAvcDecryptedUnit(decodedData, decryptedData) {
    decryptedData = new Uint8Array(decryptedData);
    var inputPos = 0;

    for (var outputPos = 32; outputPos <= decodedData.length - 16; outputPos += 160, inputPos += 16) {
      decodedData.set(decryptedData.subarray(inputPos, inputPos + 16), outputPos);
    }

    return decodedData;
  };

  _proto.decryptAvcSample = function decryptAvcSample(samples, sampleIndex, unitIndex, callback, curUnit, sync) {
    var decodedData = this.discardEPB(curUnit.data);
    var encryptedData = this.getAvcEncryptedData(decodedData);
    var localthis = this;
    this.decryptBuffer(encryptedData.buffer, function (decryptedData) {
      curUnit.data = localthis.getAvcDecryptedUnit(decodedData, decryptedData);

      if (!sync) {
        localthis.decryptAvcSamples(samples, sampleIndex, unitIndex + 1, callback);
      }
    });
  };

  _proto.decryptAvcSamples = function decryptAvcSamples(samples, sampleIndex, unitIndex, callback) {
    for (;; sampleIndex++, unitIndex = 0) {
      if (sampleIndex >= samples.length) {
        callback();
        return;
      }

      var curUnits = samples[sampleIndex].units;

      for (;; unitIndex++) {
        if (unitIndex >= curUnits.length) {
          break;
        }

        var curUnit = curUnits[unitIndex];

        if (curUnit.data.length <= 48 || curUnit.type !== 1 && curUnit.type !== 5) {
          continue;
        }

        var sync = this.decrypter.isSync();
        this.decryptAvcSample(samples, sampleIndex, unitIndex, callback, curUnit, sync);

        if (!sync) {
          return;
        }
      }
    }
  };

  return SampleAesDecrypter;
}();

/* harmony default export */ var sample_aes = (sample_aes_SampleAesDecrypter);
// CONCATENATED MODULE: ./src/demux/tsdemuxer.js
/**
 * highly optimized TS demuxer:
 * parse PAT, PMT
 * extract PES packet from audio and video PIDs
 * extract AVC/H264 NAL units and AAC/ADTS samples from PES packet
 * trigger the remuxer upon parsing completion
 * it also tries to workaround as best as it can audio codec switch (HE-AAC to AAC and vice versa), without having to restart the MediaSource.
 * it also controls the remuxing process :
 * upon discontinuity or level switch detection, it will also notifies the remuxer so that it can reset its state.
*/




 // import Hex from '../utils/hex';



 // We are using fixed track IDs for driving the MP4 remuxer
// instead of following the TS PIDs.
// There is no reason not to do this and some browsers/SourceBuffer-demuxers
// may not like if there are TrackID "switches"
// See https://github.com/video-dev/hls.js/issues/1331
// Here we are mapping our internal track types to constant MP4 track IDs
// With MSE currently one can only have one track of each, and we are muxing
// whatever video/audio rendition in them.

var RemuxerTrackIdConfig = {
  video: 1,
  audio: 2,
  id3: 3,
  text: 4
};

var tsdemuxer_TSDemuxer = /*#__PURE__*/function () {
  function TSDemuxer(observer, remuxer, config, typeSupported) {
    this.observer = observer;
    this.config = config;
    this.typeSupported = typeSupported;
    this.remuxer = remuxer;
    this.sampleAes = null;
    this.pmtUnknownTypes = {};
  }

  var _proto = TSDemuxer.prototype;

  _proto.setDecryptData = function setDecryptData(decryptdata) {
    if (decryptdata != null && decryptdata.key != null && decryptdata.method === 'SAMPLE-AES') {
      this.sampleAes = new sample_aes(this.observer, this.config, decryptdata, this.discardEPB);
    } else {
      this.sampleAes = null;
    }
  };

  TSDemuxer.probe = function probe(data) {
    var syncOffset = TSDemuxer._syncOffset(data);

    if (syncOffset < 0) {
      return false;
    } else {
      if (syncOffset) {
        logger["logger"].warn("MPEG2-TS detected but first sync word found @ offset " + syncOffset + ", junk ahead ?");
      }

      return true;
    }
  };

  TSDemuxer._syncOffset = function _syncOffset(data) {
    // scan 1000 first bytes
    var scanwindow = Math.min(1000, data.length - 3 * 188);
    var i = 0;

    while (i < scanwindow) {
      // a TS fragment should contain at least 3 TS packets, a PAT, a PMT, and one PID, each starting with 0x47
      if (data[i] === 0x47 && data[i + 188] === 0x47 && data[i + 2 * 188] === 0x47) {
        return i;
      } else {
        i++;
      }
    }

    return -1;
  }
  /**
   * Creates a track model internal to demuxer used to drive remuxing input
   *
   * @param {string} type 'audio' | 'video' | 'id3' | 'text'
   * @param {number} duration
   * @return {object} TSDemuxer's internal track model
   */
  ;

  TSDemuxer.createTrack = function createTrack(type, duration) {
    return {
      container: type === 'video' || type === 'audio' ? 'video/mp2t' : undefined,
      type: type,
      id: RemuxerTrackIdConfig[type],
      pid: -1,
      inputTimeScale: 90000,
      sequenceNumber: 0,
      samples: [],
      dropped: type === 'video' ? 0 : undefined,
      isAAC: type === 'audio' ? true : undefined,
      duration: type === 'audio' ? duration : undefined
    };
  }
  /**
   * Initializes a new init segment on the demuxer/remuxer interface. Needed for discontinuities/track-switches (or at stream start)
   * Resets all internal track instances of the demuxer.
   *
   * @override Implements generic demuxing/remuxing interface (see DemuxerInline)
   * @param {object} initSegment
   * @param {string} audioCodec
   * @param {string} videoCodec
   * @param {number} duration (in TS timescale = 90kHz)
   */
  ;

  _proto.resetInitSegment = function resetInitSegment(initSegment, audioCodec, videoCodec, duration) {
    this.pmtParsed = false;
    this._pmtId = -1;
    this.pmtUnknownTypes = {};
    this._avcTrack = TSDemuxer.createTrack('video', duration);
    this._audioTrack = TSDemuxer.createTrack('audio', duration);
    this._id3Track = TSDemuxer.createTrack('id3', duration);
    this._txtTrack = TSDemuxer.createTrack('text', duration); // flush any partial content

    this.aacOverFlow = null;
    this.aacLastPTS = null;
    this.avcSample = null;
    this.audioCodec = audioCodec;
    this.videoCodec = videoCodec;
    this._duration = duration;
  }
  /**
   *
   * @override
   */
  ;

  _proto.resetTimeStamp = function resetTimeStamp() {} // feed incoming data to the front of the parsing pipeline
  ;

  _proto.append = function append(data, timeOffset, contiguous, accurateTimeOffset) {
    var start,
        len = data.length,
        stt,
        pid,
        atf,
        offset,
        pes,
        unknownPIDs = false;
    this.pmtUnknownTypes = {};
    this.contiguous = contiguous;

    var pmtParsed = this.pmtParsed,
        avcTrack = this._avcTrack,
        audioTrack = this._audioTrack,
        id3Track = this._id3Track,
        avcId = avcTrack.pid,
        audioId = audioTrack.pid,
        id3Id = id3Track.pid,
        pmtId = this._pmtId,
        avcData = avcTrack.pesData,
        audioData = audioTrack.pesData,
        id3Data = id3Track.pesData,
        parsePAT = this._parsePAT,
        parsePMT = this._parsePMT.bind(this),
        parsePES = this._parsePES,
        parseAVCPES = this._parseAVCPES.bind(this),
        parseAACPES = this._parseAACPES.bind(this),
        parseMPEGPES = this._parseMPEGPES.bind(this),
        parseID3PES = this._parseID3PES.bind(this);

    var syncOffset = TSDemuxer._syncOffset(data); // don't parse last TS packet if incomplete


    len -= (len + syncOffset) % 188; // loop through TS packets

    for (start = syncOffset; start < len; start += 188) {
      if (data[start] === 0x47) {
        stt = !!(data[start + 1] & 0x40); // pid is a 13-bit field starting at the last bit of TS[1]

        pid = ((data[start + 1] & 0x1f) << 8) + data[start + 2];
        atf = (data[start + 3] & 0x30) >> 4; // if an adaption field is present, its length is specified by the fifth byte of the TS packet header.

        if (atf > 1) {
          offset = start + 5 + data[start + 4]; // continue if there is only adaptation field

          if (offset === start + 188) {
            continue;
          }
        } else {
          offset = start + 4;
        }

        switch (pid) {
          case avcId:
            if (stt) {
              if (avcData && (pes = parsePES(avcData))) {
                parseAVCPES(pes, false);
              }

              avcData = {
                data: [],
                size: 0
              };
            }

            if (avcData) {
              avcData.data.push(data.subarray(offset, start + 188));
              avcData.size += start + 188 - offset;
            }

            break;

          case audioId:
            if (stt) {
              if (audioData && (pes = parsePES(audioData))) {
                if (audioTrack.isAAC) {
                  parseAACPES(pes);
                } else {
                  parseMPEGPES(pes);
                }
              }

              audioData = {
                data: [],
                size: 0
              };
            }

            if (audioData) {
              audioData.data.push(data.subarray(offset, start + 188));
              audioData.size += start + 188 - offset;
            }

            break;

          case id3Id:
            if (stt) {
              if (id3Data && (pes = parsePES(id3Data))) {
                parseID3PES(pes);
              }

              id3Data = {
                data: [],
                size: 0
              };
            }

            if (id3Data) {
              id3Data.data.push(data.subarray(offset, start + 188));
              id3Data.size += start + 188 - offset;
            }

            break;

          case 0:
            if (stt) {
              offset += data[offset] + 1;
            }

            pmtId = this._pmtId = parsePAT(data, offset);
            break;

          case pmtId:
            if (stt) {
              offset += data[offset] + 1;
            }

            var parsedPIDs = parsePMT(data, offset, this.typeSupported.mpeg === true || this.typeSupported.mp3 === true, this.sampleAes != null); // only update track id if track PID found while parsing PMT
            // this is to avoid resetting the PID to -1 in case
            // track PID transiently disappears from the stream
            // this could happen in case of transient missing audio samples for example
            // NOTE this is only the PID of the track as found in TS,
            // but we are not using this for MP4 track IDs.

            avcId = parsedPIDs.avc;

            if (avcId > 0) {
              avcTrack.pid = avcId;
            }

            audioId = parsedPIDs.audio;

            if (audioId > 0) {
              audioTrack.pid = audioId;
              audioTrack.isAAC = parsedPIDs.isAAC;
            }

            id3Id = parsedPIDs.id3;

            if (id3Id > 0) {
              id3Track.pid = id3Id;
            }

            if (unknownPIDs && !pmtParsed) {
              logger["logger"].log('reparse from beginning');
              unknownPIDs = false; // we set it to -188, the += 188 in the for loop will reset start to 0

              start = syncOffset - 188;
            }

            pmtParsed = this.pmtParsed = true;
            break;

          case 17:
          case 0x1fff:
            break;

          default:
            unknownPIDs = true;
            break;
        }
      } else {
        this.observer.trigger(events["default"].ERROR, {
          type: errors["ErrorTypes"].MEDIA_ERROR,
          details: errors["ErrorDetails"].FRAG_PARSING_ERROR,
          fatal: false,
          reason: 'TS packet did not start with 0x47'
        });
      }
    } // try to parse last PES packets


    if (avcData && (pes = parsePES(avcData))) {
      parseAVCPES(pes, true);
      avcTrack.pesData = null;
    } else {
      // either avcData null or PES truncated, keep it for next frag parsing
      avcTrack.pesData = avcData;
    }

    if (audioData && (pes = parsePES(audioData))) {
      if (audioTrack.isAAC) {
        parseAACPES(pes);
      } else {
        parseMPEGPES(pes);
      }

      audioTrack.pesData = null;
    } else {
      if (audioData && audioData.size) {
        logger["logger"].log('last AAC PES packet truncated,might overlap between fragments');
      } // either audioData null or PES truncated, keep it for next frag parsing


      audioTrack.pesData = audioData;
    }

    if (id3Data && (pes = parsePES(id3Data))) {
      parseID3PES(pes);
      id3Track.pesData = null;
    } else {
      // either id3Data null or PES truncated, keep it for next frag parsing
      id3Track.pesData = id3Data;
    }

    if (this.sampleAes == null) {
      this.remuxer.remux(audioTrack, avcTrack, id3Track, this._txtTrack, timeOffset, contiguous, accurateTimeOffset);
    } else {
      this.decryptAndRemux(audioTrack, avcTrack, id3Track, this._txtTrack, timeOffset, contiguous, accurateTimeOffset);
    }
  };

  _proto.decryptAndRemux = function decryptAndRemux(audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset) {
    if (audioTrack.samples && audioTrack.isAAC) {
      var localthis = this;
      this.sampleAes.decryptAacSamples(audioTrack.samples, 0, function () {
        localthis.decryptAndRemuxAvc(audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset);
      });
    } else {
      this.decryptAndRemuxAvc(audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset);
    }
  };

  _proto.decryptAndRemuxAvc = function decryptAndRemuxAvc(audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset) {
    if (videoTrack.samples) {
      var localthis = this;
      this.sampleAes.decryptAvcSamples(videoTrack.samples, 0, 0, function () {
        localthis.remuxer.remux(audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset);
      });
    } else {
      this.remuxer.remux(audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset);
    }
  };

  _proto.destroy = function destroy() {
    this._initPTS = this._initDTS = undefined;
    this._duration = 0;
  };

  _proto._parsePAT = function _parsePAT(data, offset) {
    // skip the PSI header and parse the first PMT entry
    return (data[offset + 10] & 0x1F) << 8 | data[offset + 11]; // logger.log('PMT PID:'  + this._pmtId);
  };

  _proto._trackUnknownPmt = function _trackUnknownPmt(type, logLevel, message) {
    // Only log unknown and unsupported stream types once per append or stream (by resetting this.pmtUnknownTypes)
    // For more information on elementary stream types see:
    // https://en.wikipedia.org/wiki/Program-specific_information#Elementary_stream_types
    var result = this.pmtUnknownTypes[type] || 0;

    if (result === 0) {
      this.pmtUnknownTypes[type] = 0;
      logLevel.call(logger["logger"], message);
    }

    this.pmtUnknownTypes[type]++;
    return result;
  };

  _proto._parsePMT = function _parsePMT(data, offset, mpegSupported, isSampleAes) {
    var sectionLength,
        tableEnd,
        programInfoLength,
        pid,
        result = {
      audio: -1,
      avc: -1,
      id3: -1,
      isAAC: true
    };
    sectionLength = (data[offset + 1] & 0x0f) << 8 | data[offset + 2];
    tableEnd = offset + 3 + sectionLength - 4; // to determine where the table is, we have to figure out how
    // long the program info descriptors are

    programInfoLength = (data[offset + 10] & 0x0f) << 8 | data[offset + 11]; // advance the offset to the first entry in the mapping table

    offset += 12 + programInfoLength;

    while (offset < tableEnd) {
      pid = (data[offset + 1] & 0x1F) << 8 | data[offset + 2];

      switch (data[offset]) {
        case 0xcf:
          // SAMPLE-AES AAC
          if (!isSampleAes) {
            this._trackUnknownPmt(data[offset], logger["logger"].warn, 'ADTS AAC with AES-128-CBC frame encryption found in unencrypted stream');

            break;
          }

        /* falls through */
        // ISO/IEC 13818-7 ADTS AAC (MPEG-2 lower bit-rate audio)

        case 0x0f:
          // logger.log('AAC PID:'  + pid);
          if (result.audio === -1) {
            result.audio = pid;
          }

          break;
        // Packetized metadata (ID3)

        case 0x15:
          // logger.log('ID3 PID:'  + pid);
          if (result.id3 === -1) {
            result.id3 = pid;
          }

          break;

        case 0xdb:
          // SAMPLE-AES AVC
          if (!isSampleAes) {
            this._trackUnknownPmt(data[offset], logger["logger"].warn, 'H.264 with AES-128-CBC slice encryption found in unencrypted stream');

            break;
          }

        /* falls through */
        // ITU-T Rec. H.264 and ISO/IEC 14496-10 (lower bit-rate video)

        case 0x1b:
          // logger.log('AVC PID:'  + pid);
          if (result.avc === -1) {
            result.avc = pid;
          }

          break;
        // ISO/IEC 11172-3 (MPEG-1 audio)
        // or ISO/IEC 13818-3 (MPEG-2 halved sample rate audio)

        case 0x03:
        case 0x04:
          // logger.log('MPEG PID:'  + pid);
          if (!mpegSupported) {
            this._trackUnknownPmt(data[offset], logger["logger"].warn, 'MPEG audio found, not supported in this browser');
          } else if (result.audio === -1) {
            result.audio = pid;
            result.isAAC = false;
          }

          break;

        case 0x24:
          this._trackUnknownPmt(data[offset], logger["logger"].warn, 'Unsupported HEVC stream type found');

          break;

        default:
          this._trackUnknownPmt(data[offset], logger["logger"].log, 'Unknown stream type:' + data[offset]);

          break;
      } // move to the next table entry
      // skip past the elementary stream descriptors, if present


      offset += ((data[offset + 3] & 0x0F) << 8 | data[offset + 4]) + 5;
    }

    return result;
  };

  _proto._parsePES = function _parsePES(stream) {
    var i = 0,
        frag,
        pesFlags,
        pesPrefix,
        pesLen,
        pesHdrLen,
        pesData,
        pesPts,
        pesDts,
        payloadStartOffset,
        data = stream.data; // safety check

    if (!stream || stream.size === 0) {
      return null;
    } // we might need up to 19 bytes to read PES header
    // if first chunk of data is less than 19 bytes, let's merge it with following ones until we get 19 bytes
    // usually only one merge is needed (and this is rare ...)


    while (data[0].length < 19 && data.length > 1) {
      var newData = new Uint8Array(data[0].length + data[1].length);
      newData.set(data[0]);
      newData.set(data[1], data[0].length);
      data[0] = newData;
      data.splice(1, 1);
    } // retrieve PTS/DTS from first fragment


    frag = data[0];
    pesPrefix = (frag[0] << 16) + (frag[1] << 8) + frag[2];

    if (pesPrefix === 1) {
      pesLen = (frag[4] << 8) + frag[5]; // if PES parsed length is not zero and greater than total received length, stop parsing. PES might be truncated
      // minus 6 : PES header size

      if (pesLen && pesLen > stream.size - 6) {
        return null;
      }

      pesFlags = frag[7];

      if (pesFlags & 0xC0) {
        /* PES header described here : http://dvd.sourceforge.net/dvdinfo/pes-hdr.html
            as PTS / DTS is 33 bit we cannot use bitwise operator in JS,
            as Bitwise operators treat their operands as a sequence of 32 bits */
        pesPts = (frag[9] & 0x0E) * 536870912 + // 1 << 29
        (frag[10] & 0xFF) * 4194304 + // 1 << 22
        (frag[11] & 0xFE) * 16384 + // 1 << 14
        (frag[12] & 0xFF) * 128 + // 1 << 7
        (frag[13] & 0xFE) / 2;

        if (pesFlags & 0x40) {
          pesDts = (frag[14] & 0x0E) * 536870912 + // 1 << 29
          (frag[15] & 0xFF) * 4194304 + // 1 << 22
          (frag[16] & 0xFE) * 16384 + // 1 << 14
          (frag[17] & 0xFF) * 128 + // 1 << 7
          (frag[18] & 0xFE) / 2;

          if (pesPts - pesDts > 60 * 90000) {
            logger["logger"].warn(Math.round((pesPts - pesDts) / 90000) + "s delta between PTS and DTS, align them");
            pesPts = pesDts;
          }
        } else {
          pesDts = pesPts;
        }
      }

      pesHdrLen = frag[8]; // 9 bytes : 6 bytes for PES header + 3 bytes for PES extension

      payloadStartOffset = pesHdrLen + 9;

      if (stream.size <= payloadStartOffset) {
        return null;
      }

      stream.size -= payloadStartOffset; // reassemble PES packet

      pesData = new Uint8Array(stream.size);

      for (var j = 0, dataLen = data.length; j < dataLen; j++) {
        frag = data[j];
        var len = frag.byteLength;

        if (payloadStartOffset) {
          if (payloadStartOffset > len) {
            // trim full frag if PES header bigger than frag
            payloadStartOffset -= len;
            continue;
          } else {
            // trim partial frag if PES header smaller than frag
            frag = frag.subarray(payloadStartOffset);
            len -= payloadStartOffset;
            payloadStartOffset = 0;
          }
        }

        pesData.set(frag, i);
        i += len;
      }

      if (pesLen) {
        // payload size : remove PES header + PES extension
        pesLen -= pesHdrLen + 3;
      }

      return {
        data: pesData,
        pts: pesPts,
        dts: pesDts,
        len: pesLen
      };
    } else {
      return null;
    }
  };

  _proto.pushAccesUnit = function pushAccesUnit(avcSample, avcTrack) {
    if (avcSample.units.length && avcSample.frame) {
      var samples = avcTrack.samples;
      var nbSamples = samples.length; // if sample does not have PTS/DTS, patch with last sample PTS/DTS

      if (isNaN(avcSample.pts)) {
        if (nbSamples) {
          var lastSample = samples[nbSamples - 1];
          avcSample.pts = lastSample.pts;
          avcSample.dts = lastSample.dts;
        } else {
          // dropping samples, no timestamp found
          avcTrack.dropped++;
          return;
        }
      } // only push AVC sample if starting with a keyframe is not mandatory OR
      //    if keyframe already found in this fragment OR
      //       keyframe found in last fragment (track.sps) AND
      //          samples already appended (we already found a keyframe in this fragment) OR fragment is contiguous


      if (!this.config.forceKeyFrameOnDiscontinuity || avcSample.key === true || avcTrack.sps && (nbSamples || this.contiguous)) {
        avcSample.id = nbSamples;
        samples.push(avcSample);
      } else {
        // dropped samples, track it
        avcTrack.dropped++;
      }
    }

    if (avcSample.debug.length) {
      logger["logger"].log(avcSample.pts + '/' + avcSample.dts + ':' + avcSample.debug);
    }
  };

  _proto._parseAVCPES = function _parseAVCPES(pes, last) {
    var _this = this;

    // logger.log('parse new PES');
    var track = this._avcTrack,
        units = this._parseAVCNALu(pes.data),
        debug = false,
        expGolombDecoder,
        avcSample = this.avcSample,
        push,
        spsfound = false,
        i,
        pushAccesUnit = this.pushAccesUnit.bind(this),
        createAVCSample = function createAVCSample(key, pts, dts, debug) {
      return {
        key: key,
        pts: pts,
        dts: dts,
        units: [],
        debug: debug
      };
    }; // free pes.data to save up some memory


    pes.data = null; // if new NAL units found and last sample still there, let's push ...
    // this helps parsing streams with missing AUD (only do this if AUD never found)

    if (avcSample && units.length && !track.audFound) {
      pushAccesUnit(avcSample, track);
      avcSample = this.avcSample = createAVCSample(false, pes.pts, pes.dts, '');
    }

    units.forEach(function (unit) {
      switch (unit.type) {
        // NDR
        case 1:
          push = true;

          if (!avcSample) {
            avcSample = _this.avcSample = createAVCSample(true, pes.pts, pes.dts, '');
          }

          if (debug) {
            avcSample.debug += 'NDR ';
          }

          avcSample.frame = true;
          var data = unit.data; // only check slice type to detect KF in case SPS found in same packet (any keyframe is preceded by SPS ...)

          if (spsfound && data.length > 4) {
            // retrieve slice type by parsing beginning of NAL unit (follow H264 spec, slice_header definition) to detect keyframe embedded in NDR
            var sliceType = new exp_golomb(data).readSliceType(); // 2 : I slice, 4 : SI slice, 7 : I slice, 9: SI slice
            // SI slice : A slice that is coded using intra prediction only and using quantisation of the prediction samples.
            // An SI slice can be coded such that its decoded samples can be constructed identically to an SP slice.
            // I slice: A slice that is not an SI slice that is decoded using intra prediction only.
            // if (sliceType === 2 || sliceType === 7) {

            if (sliceType === 2 || sliceType === 4 || sliceType === 7 || sliceType === 9) {
              avcSample.key = true;
            }
          }

          break;
        // IDR

        case 5:
          push = true; // handle PES not starting with AUD

          if (!avcSample) {
            avcSample = _this.avcSample = createAVCSample(true, pes.pts, pes.dts, '');
          }

          if (debug) {
            avcSample.debug += 'IDR ';
          }

          avcSample.key = true;
          avcSample.frame = true;
          break;
        // SEI

        case 6:
          push = true;

          if (debug && avcSample) {
            avcSample.debug += 'SEI ';
          }

          expGolombDecoder = new exp_golomb(_this.discardEPB(unit.data)); // skip frameType

          expGolombDecoder.readUByte();
          var payloadType = 0;
          var payloadSize = 0;
          var endOfCaptions = false;
          var b = 0;

          while (!endOfCaptions && expGolombDecoder.bytesAvailable > 1) {
            payloadType = 0;

            do {
              b = expGolombDecoder.readUByte();
              payloadType += b;
            } while (b === 0xFF); // Parse payload size.


            payloadSize = 0;

            do {
              b = expGolombDecoder.readUByte();
              payloadSize += b;
            } while (b === 0xFF); // TODO: there can be more than one payload in an SEI packet...
            // TODO: need to read type and size in a while loop to get them all


            if (payloadType === 4 && expGolombDecoder.bytesAvailable !== 0) {
              endOfCaptions = true;
              var countryCode = expGolombDecoder.readUByte();

              if (countryCode === 181) {
                var providerCode = expGolombDecoder.readUShort();

                if (providerCode === 49) {
                  var userStructure = expGolombDecoder.readUInt();

                  if (userStructure === 0x47413934) {
                    var userDataType = expGolombDecoder.readUByte(); // Raw CEA-608 bytes wrapped in CEA-708 packet

                    if (userDataType === 3) {
                      var firstByte = expGolombDecoder.readUByte();
                      var secondByte = expGolombDecoder.readUByte();
                      var totalCCs = 31 & firstByte;
                      var byteArray = [firstByte, secondByte];

                      for (i = 0; i < totalCCs; i++) {
                        // 3 bytes per CC
                        byteArray.push(expGolombDecoder.readUByte());
                        byteArray.push(expGolombDecoder.readUByte());
                        byteArray.push(expGolombDecoder.readUByte());
                      }

                      _this._insertSampleInOrder(_this._txtTrack.samples, {
                        type: 3,
                        pts: pes.pts,
                        bytes: byteArray
                      });
                    }
                  }
                }
              }
            } else if (payloadType === 5 && expGolombDecoder.bytesAvailable !== 0) {
              endOfCaptions = true;

              if (payloadSize > 16) {
                var uuidStrArray = [];

                for (i = 0; i < 16; i++) {
                  uuidStrArray.push(expGolombDecoder.readUByte().toString(16));

                  if (i === 3 || i === 5 || i === 7 || i === 9) {
                    uuidStrArray.push('-');
                  }
                }

                var length = payloadSize - 16;
                var userDataPayloadBytes = new Uint8Array(length);

                for (i = 0; i < length; i++) {
                  userDataPayloadBytes[i] = expGolombDecoder.readUByte();
                }

                _this._insertSampleInOrder(_this._txtTrack.samples, {
                  pts: pes.pts,
                  payloadType: payloadType,
                  uuid: uuidStrArray.join(''),
                  userDataBytes: userDataPayloadBytes,
                  userData: Object(id3["utf8ArrayToStr"])(userDataPayloadBytes.buffer)
                });
              }
            } else if (payloadSize < expGolombDecoder.bytesAvailable) {
              for (i = 0; i < payloadSize; i++) {
                expGolombDecoder.readUByte();
              }
            }
          }

          break;
        // SPS

        case 7:
          push = true;
          spsfound = true;

          if (debug && avcSample) {
            avcSample.debug += 'SPS ';
          }

          if (!track.sps) {
            expGolombDecoder = new exp_golomb(unit.data);
            var config = expGolombDecoder.readSPS();
            track.width = config.width;
            track.height = config.height;
            track.pixelRatio = config.pixelRatio;
            track.sps = [unit.data];
            track.duration = _this._duration;
            var codecarray = unit.data.subarray(1, 4);
            var codecstring = 'avc1.';

            for (i = 0; i < 3; i++) {
              var h = codecarray[i].toString(16);

              if (h.length < 2) {
                h = '0' + h;
              }

              codecstring += h;
            }

            track.codec = codecstring;
          }

          break;
        // PPS

        case 8:
          push = true;

          if (debug && avcSample) {
            avcSample.debug += 'PPS ';
          }

          if (!track.pps) {
            track.pps = [unit.data];
          }

          break;
        // AUD

        case 9:
          push = false;
          track.audFound = true;

          if (avcSample) {
            pushAccesUnit(avcSample, track);
          }

          avcSample = _this.avcSample = createAVCSample(false, pes.pts, pes.dts, debug ? 'AUD ' : '');
          break;
        // Filler Data

        case 12:
          push = false;
          break;

        default:
          push = false;

          if (avcSample) {
            avcSample.debug += 'unknown NAL ' + unit.type + ' ';
          }

          break;
      }

      if (avcSample && push) {
        var _units = avcSample.units;

        _units.push(unit);
      }
    }); // if last PES packet, push samples

    if (last && avcSample) {
      pushAccesUnit(avcSample, track);
      this.avcSample = null;
    }
  };

  _proto._insertSampleInOrder = function _insertSampleInOrder(arr, data) {
    var len = arr.length;

    if (len > 0) {
      if (data.pts >= arr[len - 1].pts) {
        arr.push(data);
      } else {
        for (var pos = len - 1; pos >= 0; pos--) {
          if (data.pts < arr[pos].pts) {
            arr.splice(pos, 0, data);
            break;
          }
        }
      }
    } else {
      arr.push(data);
    }
  };

  _proto._getLastNalUnit = function _getLastNalUnit() {
    var avcSample = this.avcSample,
        lastUnit; // try to fallback to previous sample if current one is empty

    if (!avcSample || avcSample.units.length === 0) {
      var track = this._avcTrack,
          samples = track.samples;
      avcSample = samples[samples.length - 1];
    }

    if (avcSample) {
      var units = avcSample.units;
      lastUnit = units[units.length - 1];
    }

    return lastUnit;
  };

  _proto._parseAVCNALu = function _parseAVCNALu(array) {
    var i = 0,
        len = array.byteLength,
        value,
        overflow,
        track = this._avcTrack,
        state = track.naluState || 0,
        lastState = state;
    var units = [],
        unit,
        unitType,
        lastUnitStart = -1,
        lastUnitType; // logger.log('PES:' + Hex.hexDump(array));

    if (state === -1) {
      // special use case where we found 3 or 4-byte start codes exactly at the end of previous PES packet
      lastUnitStart = 0; // NALu type is value read from offset 0

      lastUnitType = array[0] & 0x1f;
      state = 0;
      i = 1;
    }

    while (i < len) {
      value = array[i++]; // optimization. state 0 and 1 are the predominant case. let's handle them outside of the switch/case

      if (!state) {
        state = value ? 0 : 1;
        continue;
      }

      if (state === 1) {
        state = value ? 0 : 2;
        continue;
      } // here we have state either equal to 2 or 3


      if (!value) {
        state = 3;
      } else if (value === 1) {
        if (lastUnitStart >= 0) {
          unit = {
            data: array.subarray(lastUnitStart, i - state - 1),
            type: lastUnitType
          }; // logger.log('pushing NALU, type/size:' + unit.type + '/' + unit.data.byteLength);

          units.push(unit);
        } else {
          // lastUnitStart is undefined => this is the first start code found in this PES packet
          // first check if start code delimiter is overlapping between 2 PES packets,
          // ie it started in last packet (lastState not zero)
          // and ended at the beginning of this PES packet (i <= 4 - lastState)
          var lastUnit = this._getLastNalUnit();

          if (lastUnit) {
            if (lastState && i <= 4 - lastState) {
              // start delimiter overlapping between PES packets
              // strip start delimiter bytes from the end of last NAL unit
              // check if lastUnit had a state different from zero
              if (lastUnit.state) {
                // strip last bytes
                lastUnit.data = lastUnit.data.subarray(0, lastUnit.data.byteLength - lastState);
              }
            } // If NAL units are not starting right at the beginning of the PES packet, push preceding data into previous NAL unit.


            overflow = i - state - 1;

            if (overflow > 0) {
              // logger.log('first NALU found with overflow:' + overflow);
              var tmp = new Uint8Array(lastUnit.data.byteLength + overflow);
              tmp.set(lastUnit.data, 0);
              tmp.set(array.subarray(0, overflow), lastUnit.data.byteLength);
              lastUnit.data = tmp;
            }
          }
        } // check if we can read unit type


        if (i < len) {
          unitType = array[i] & 0x1f; // logger.log('find NALU @ offset:' + i + ',type:' + unitType);

          lastUnitStart = i;
          lastUnitType = unitType;
          state = 0;
        } else {
          // not enough byte to read unit type. let's read it on next PES parsing
          state = -1;
        }
      } else {
        state = 0;
      }
    }

    if (lastUnitStart >= 0 && state >= 0) {
      unit = {
        data: array.subarray(lastUnitStart, len),
        type: lastUnitType,
        state: state
      };
      units.push(unit); // logger.log('pushing NALU, type/size/state:' + unit.type + '/' + unit.data.byteLength + '/' + state);
    } // no NALu found


    if (units.length === 0) {
      // append pes.data to previous NAL unit
      var _lastUnit = this._getLastNalUnit();

      if (_lastUnit) {
        var _tmp = new Uint8Array(_lastUnit.data.byteLength + array.byteLength);

        _tmp.set(_lastUnit.data, 0);

        _tmp.set(array, _lastUnit.data.byteLength);

        _lastUnit.data = _tmp;
      }
    }

    track.naluState = state;
    return units;
  }
  /**
   * remove Emulation Prevention bytes from a RBSP
   */
  ;

  _proto.discardEPB = function discardEPB(data) {
    var length = data.byteLength,
        EPBPositions = [],
        i = 1,
        newLength,
        newData; // Find all `Emulation Prevention Bytes`

    while (i < length - 2) {
      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {
        EPBPositions.push(i + 2);
        i += 2;
      } else {
        i++;
      }
    } // If no Emulation Prevention Bytes were found just return the original
    // array


    if (EPBPositions.length === 0) {
      return data;
    } // Create a new array to hold the NAL unit data


    newLength = length - EPBPositions.length;
    newData = new Uint8Array(newLength);
    var sourceIndex = 0;

    for (i = 0; i < newLength; sourceIndex++, i++) {
      if (sourceIndex === EPBPositions[0]) {
        // Skip this byte
        sourceIndex++; // Remove this position index

        EPBPositions.shift();
      }

      newData[i] = data[sourceIndex];
    }

    return newData;
  };

  _proto._parseAACPES = function _parseAACPES(pes) {
    var track = this._audioTrack,
        data = pes.data,
        pts = pes.pts,
        startOffset = 0,
        aacOverFlow = this.aacOverFlow,
        aacLastPTS = this.aacLastPTS,
        frameDuration,
        frameIndex,
        offset,
        stamp,
        len;

    if (aacOverFlow) {
      var tmp = new Uint8Array(aacOverFlow.byteLength + data.byteLength);
      tmp.set(aacOverFlow, 0);
      tmp.set(data, aacOverFlow.byteLength); // logger.log(`AAC: append overflowing ${aacOverFlow.byteLength} bytes to beginning of new PES`);

      data = tmp;
    } // look for ADTS header (0xFFFx)


    for (offset = startOffset, len = data.length; offset < len - 1; offset++) {
      if (isHeader(data, offset)) {
        break;
      }
    } // if ADTS header does not start straight from the beginning of the PES payload, raise an error


    if (offset) {
      var reason, fatal;

      if (offset < len - 1) {
        reason = "AAC PES did not start with ADTS header,offset:" + offset;
        fatal = false;
      } else {
        reason = 'no ADTS header found in AAC PES';
        fatal = true;
      }

      logger["logger"].warn("parsing error:" + reason);
      this.observer.trigger(events["default"].ERROR, {
        type: errors["ErrorTypes"].MEDIA_ERROR,
        details: errors["ErrorDetails"].FRAG_PARSING_ERROR,
        fatal: fatal,
        reason: reason
      });

      if (fatal) {
        return;
      }
    }

    initTrackConfig(track, this.observer, data, offset, this.audioCodec);
    frameIndex = 0;
    frameDuration = getFrameDuration(track.samplerate); // if last AAC frame is overflowing, we should ensure timestamps are contiguous:
    // first sample PTS should be equal to last sample PTS + frameDuration

    if (aacOverFlow && aacLastPTS) {
      var newPTS = aacLastPTS + frameDuration;

      if (Math.abs(newPTS - pts) > 1) {
        logger["logger"].log("AAC: align PTS for overlapping frames by " + Math.round((newPTS - pts) / 90));
        pts = newPTS;
      }
    } // scan for aac samples


    while (offset < len) {
      if (isHeader(data, offset)) {
        if (offset + 5 < len) {
          var frame = appendFrame(track, data, offset, pts, frameIndex);

          if (frame) {
            offset += frame.length;
            stamp = frame.sample.pts;
            frameIndex++;
            continue;
          }
        } // We are at an ADTS header, but do not have enough data for a frame
        // Remaining data will be added to aacOverFlow


        break;
      } else {
        // nothing found, keep looking
        offset++;
      }
    }

    if (offset < len) {
      aacOverFlow = data.subarray(offset, len); // logger.log(`AAC: overflow detected:${len-offset}`);
    } else {
      aacOverFlow = null;
    }

    this.aacOverFlow = aacOverFlow;
    this.aacLastPTS = stamp;
  };

  _proto._parseMPEGPES = function _parseMPEGPES(pes) {
    var data = pes.data;
    var length = data.length;
    var frameIndex = 0;
    var offset = 0;
    var pts = pes.pts;

    while (offset < length) {
      if (mpegaudio.isHeader(data, offset)) {
        var frame = mpegaudio.appendFrame(this._audioTrack, data, offset, pts, frameIndex);

        if (frame) {
          offset += frame.length;
          frameIndex++;
        } else {
          // logger.log('Unable to parse Mpeg audio frame');
          break;
        }
      } else {
        // nothing found, keep looking
        offset++;
      }
    }
  };

  _proto._parseID3PES = function _parseID3PES(pes) {
    this._id3Track.samples.push(pes);
  };

  return TSDemuxer;
}();

/* harmony default export */ var tsdemuxer = (tsdemuxer_TSDemuxer);
// CONCATENATED MODULE: ./src/demux/mp3demuxer.js
/**
 * MP3 demuxer
 */




var mp3demuxer_MP3Demuxer = /*#__PURE__*/function () {
  function MP3Demuxer(observer, remuxer, config) {
    this.observer = observer;
    this.config = config;
    this.remuxer = remuxer;
  }

  var _proto = MP3Demuxer.prototype;

  _proto.resetInitSegment = function resetInitSegment(initSegment, audioCodec, videoCodec, duration) {
    this._audioTrack = {
      container: 'audio/mpeg',
      type: 'audio',
      id: -1,
      sequenceNumber: 0,
      isAAC: false,
      samples: [],
      len: 0,
      manifestCodec: audioCodec,
      duration: duration,
      inputTimeScale: 90000
    };
  };

  _proto.resetTimeStamp = function resetTimeStamp() {};

  MP3Demuxer.probe = function probe(data) {
    // check if data contains ID3 timestamp and MPEG sync word
    var offset, length;
    var id3Data = id3["default"].getID3Data(data, 0);

    if (id3Data && id3["default"].getTimeStamp(id3Data) !== undefined) {
      // Look for MPEG header | 1111 1111 | 111X XYZX | where X can be either 0 or 1 and Y or Z should be 1
      // Layer bits (position 14 and 15) in header should be always different from 0 (Layer I or Layer II or Layer III)
      // More info http://www.mp3-tech.org/programmer/frame_header.html
      for (offset = id3Data.length, length = Math.min(data.length - 1, offset + 100); offset < length; offset++) {
        if (mpegaudio.probe(data, offset)) {
          logger["logger"].log('MPEG Audio sync word found !');
          return true;
        }
      }
    }

    return false;
  } // feed incoming data to the front of the parsing pipeline
  ;

  _proto.append = function append(data, timeOffset, contiguous, accurateTimeOffset) {
    var id3Data = id3["default"].getID3Data(data, 0) || [];
    var timestamp = id3["default"].getTimeStamp(id3Data);
    var pts = timestamp !== undefined ? 90 * timestamp : timeOffset * 90000;
    var offset = id3Data.length;
    var length = data.length;
    var frameIndex = 0,
        stamp = 0;
    var track = this._audioTrack;
    var id3Samples = [{
      pts: pts,
      dts: pts,
      data: id3Data
    }];

    while (offset < length) {
      if (mpegaudio.isHeader(data, offset)) {
        var frame = mpegaudio.appendFrame(track, data, offset, pts, frameIndex);

        if (frame) {
          offset += frame.length;
          stamp = frame.sample.pts;
          frameIndex++;
        } else {
          // logger.log('Unable to parse Mpeg audio frame');
          break;
        }
      } else if (id3["default"].isHeader(data, offset)) {
        id3Data = id3["default"].getID3Data(data, offset);
        id3Samples.push({
          pts: stamp,
          dts: stamp,
          data: id3Data
        });
        offset += id3Data.length;
      } else {
        // nothing found, keep looking
        offset++;
      }
    }

    this.remuxer.remux(track, {
      samples: []
    }, {
      samples: id3Samples,
      inputTimeScale: 90000
    }, {
      samples: []
    }, timeOffset, contiguous, accurateTimeOffset);
  };

  _proto.destroy = function destroy() {};

  return MP3Demuxer;
}();

/* harmony default export */ var mp3demuxer = (mp3demuxer_MP3Demuxer);
// CONCATENATED MODULE: ./src/remux/aac-helper.js
/**
 *  AAC helper
 */
var AAC = /*#__PURE__*/function () {
  function AAC() {}

  AAC.getSilentFrame = function getSilentFrame(codec, channelCount) {
    switch (codec) {
      case 'mp4a.40.2':
        if (channelCount === 1) {
          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80]);
        } else if (channelCount === 2) {
          return new Uint8Array([0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80]);
        } else if (channelCount === 3) {
          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x8e]);
        } else if (channelCount === 4) {
          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38]);
        } else if (channelCount === 5) {
          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38]);
        } else if (channelCount === 6) {
          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64, 0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2, 0x00, 0x20, 0x08, 0xe0]);
        }

        break;
      // handle HE-AAC below (mp4a.40.5 / mp4a.40.29)

      default:
        if (channelCount === 1) {
          // ffmpeg -y -f lavfi -i "aevalsrc=0:d=0.05" -c:a libfdk_aac -profile:a aac_he -b:a 4k output.aac && hexdump -v -e '16/1 "0x%x," "\n"' -v output.aac
          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);
        } else if (channelCount === 2) {
          // ffmpeg -y -f lavfi -i "aevalsrc=0|0:d=0.05" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 "0x%x," "\n"' -v output.aac
          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);
        } else if (channelCount === 3) {
          // ffmpeg -y -f lavfi -i "aevalsrc=0|0|0:d=0.05" -c:a libfdk_aac -profile:a aac_he_v2 -b:a 4k output.aac && hexdump -v -e '16/1 "0x%x," "\n"' -v output.aac
          return new Uint8Array([0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0, 0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5e]);
        }

        break;
    }

    return null;
  };

  return AAC;
}();

/* harmony default export */ var aac_helper = (AAC);
// CONCATENATED MODULE: ./src/remux/mp4-generator.js
/**
 * Generate MP4 Box
*/
var UINT32_MAX = Math.pow(2, 32) - 1;

var MP4 = /*#__PURE__*/function () {
  function MP4() {}

  MP4.init = function init() {
    MP4.types = {
      avc1: [],
      // codingname
      avcC: [],
      btrt: [],
      dinf: [],
      dref: [],
      esds: [],
      ftyp: [],
      hdlr: [],
      mdat: [],
      mdhd: [],
      mdia: [],
      mfhd: [],
      minf: [],
      moof: [],
      moov: [],
      mp4a: [],
      '.mp3': [],
      mvex: [],
      mvhd: [],
      pasp: [],
      sdtp: [],
      stbl: [],
      stco: [],
      stsc: [],
      stsd: [],
      stsz: [],
      stts: [],
      tfdt: [],
      tfhd: [],
      traf: [],
      trak: [],
      trun: [],
      trex: [],
      tkhd: [],
      vmhd: [],
      smhd: []
    };
    var i;

    for (i in MP4.types) {
      if (MP4.types.hasOwnProperty(i)) {
        MP4.types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];
      }
    }

    var videoHdlr = new Uint8Array([0x00, // version 0
    0x00, 0x00, 0x00, // flags
    0x00, 0x00, 0x00, 0x00, // pre_defined
    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'
    0x00, 0x00, 0x00, 0x00, // reserved
    0x00, 0x00, 0x00, 0x00, // reserved
    0x00, 0x00, 0x00, 0x00, // reserved
    0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'
    ]);
    var audioHdlr = new Uint8Array([0x00, // version 0
    0x00, 0x00, 0x00, // flags
    0x00, 0x00, 0x00, 0x00, // pre_defined
    0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'
    0x00, 0x00, 0x00, 0x00, // reserved
    0x00, 0x00, 0x00, 0x00, // reserved
    0x00, 0x00, 0x00, 0x00, // reserved
    0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'
    ]);
    MP4.HDLR_TYPES = {
      'video': videoHdlr,
      'audio': audioHdlr
    };
    var dref = new Uint8Array([0x00, // version 0
    0x00, 0x00, 0x00, // flags
    0x00, 0x00, 0x00, 0x01, // entry_count
    0x00, 0x00, 0x00, 0x0c, // entry_size
    0x75, 0x72, 0x6c, 0x20, // 'url' type
    0x00, // version 0
    0x00, 0x00, 0x01 // entry_flags
    ]);
    var stco = new Uint8Array([0x00, // version
    0x00, 0x00, 0x00, // flags
    0x00, 0x00, 0x00, 0x00 // entry_count
    ]);
    MP4.STTS = MP4.STSC = MP4.STCO = stco;
    MP4.STSZ = new Uint8Array([0x00, // version
    0x00, 0x00, 0x00, // flags
    0x00, 0x00, 0x00, 0x00, // sample_size
    0x00, 0x00, 0x00, 0x00 // sample_count
    ]);
    MP4.VMHD = new Uint8Array([0x00, // version
    0x00, 0x00, 0x01, // flags
    0x00, 0x00, // graphicsmode
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor
    ]);
    MP4.SMHD = new Uint8Array([0x00, // version
    0x00, 0x00, 0x00, // flags
    0x00, 0x00, // balance
    0x00, 0x00 // reserved
    ]);
    MP4.STSD = new Uint8Array([0x00, // version 0
    0x00, 0x00, 0x00, // flags
    0x00, 0x00, 0x00, 0x01]); // entry_count

    var majorBrand = new Uint8Array([105, 115, 111, 109]); // isom

    var avc1Brand = new Uint8Array([97, 118, 99, 49]); // avc1

    var minorVersion = new Uint8Array([0, 0, 0, 1]);
    MP4.FTYP = MP4.box(MP4.types.ftyp, majorBrand, minorVersion, majorBrand, avc1Brand);
    MP4.DINF = MP4.box(MP4.types.dinf, MP4.box(MP4.types.dref, dref));
  };

  MP4.box = function box(type) {
    var payload = Array.prototype.slice.call(arguments, 1),
        size = 8,
        i = payload.length,
        len = i,
        result; // calculate the total size we need to allocate

    while (i--) {
      size += payload[i].byteLength;
    }

    result = new Uint8Array(size);
    result[0] = size >> 24 & 0xff;
    result[1] = size >> 16 & 0xff;
    result[2] = size >> 8 & 0xff;
    result[3] = size & 0xff;
    result.set(type, 4); // copy the payload into the result

    for (i = 0, size = 8; i < len; i++) {
      // copy payload[i] array @ offset size
      result.set(payload[i], size);
      size += payload[i].byteLength;
    }

    return result;
  };

  MP4.hdlr = function hdlr(type) {
    return MP4.box(MP4.types.hdlr, MP4.HDLR_TYPES[type]);
  };

  MP4.mdat = function mdat(data) {
    return MP4.box(MP4.types.mdat, data);
  };

  MP4.mdhd = function mdhd(timescale, duration) {
    duration *= timescale;
    var upperWordDuration = Math.floor(duration / (UINT32_MAX + 1));
    var lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1));
    return MP4.box(MP4.types.mdhd, new Uint8Array([0x01, // version 1
    0x00, 0x00, 0x00, // flags
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // creation_time
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // modification_time
    timescale >> 24 & 0xFF, timescale >> 16 & 0xFF, timescale >> 8 & 0xFF, timescale & 0xFF, // timescale
    upperWordDuration >> 24, upperWordDuration >> 16 & 0xFF, upperWordDuration >> 8 & 0xFF, upperWordDuration & 0xFF, lowerWordDuration >> 24, lowerWordDuration >> 16 & 0xFF, lowerWordDuration >> 8 & 0xFF, lowerWordDuration & 0xFF, 0x55, 0xc4, // 'und' language (undetermined)
    0x00, 0x00]));
  };

  MP4.mdia = function mdia(track) {
    return MP4.box(MP4.types.mdia, MP4.mdhd(track.timescale, track.duration), MP4.hdlr(track.type), MP4.minf(track));
  };

  MP4.mfhd = function mfhd(sequenceNumber) {
    return MP4.box(MP4.types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags
    sequenceNumber >> 24, sequenceNumber >> 16 & 0xFF, sequenceNumber >> 8 & 0xFF, sequenceNumber & 0xFF // sequence_number
    ]));
  };

  MP4.minf = function minf(track) {
    if (track.type === 'audio') {
      return MP4.box(MP4.types.minf, MP4.box(MP4.types.smhd, MP4.SMHD), MP4.DINF, MP4.stbl(track));
    } else {
      return MP4.box(MP4.types.minf, MP4.box(MP4.types.vmhd, MP4.VMHD), MP4.DINF, MP4.stbl(track));
    }
  };

  MP4.moof = function moof(sn, baseMediaDecodeTime, track) {
    return MP4.box(MP4.types.moof, MP4.mfhd(sn), MP4.traf(track, baseMediaDecodeTime));
  }
  /**
  * @param tracks... (optional) {array} the tracks associated with this movie
  */
  ;

  MP4.moov = function moov(tracks) {
    var i = tracks.length,
        boxes = [];

    while (i--) {
      boxes[i] = MP4.trak(tracks[i]);
    }

    return MP4.box.apply(null, [MP4.types.moov, MP4.mvhd(tracks[0].timescale, tracks[0].duration)].concat(boxes).concat(MP4.mvex(tracks)));
  };

  MP4.mvex = function mvex(tracks) {
    var i = tracks.length,
        boxes = [];

    while (i--) {
      boxes[i] = MP4.trex(tracks[i]);
    }

    return MP4.box.apply(null, [MP4.types.mvex].concat(boxes));
  };

  MP4.mvhd = function mvhd(timescale, duration) {
    duration *= timescale;
    var upperWordDuration = Math.floor(duration / (UINT32_MAX + 1));
    var lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1));
    var bytes = new Uint8Array([0x01, // version 1
    0x00, 0x00, 0x00, // flags
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // creation_time
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // modification_time
    timescale >> 24 & 0xFF, timescale >> 16 & 0xFF, timescale >> 8 & 0xFF, timescale & 0xFF, // timescale
    upperWordDuration >> 24, upperWordDuration >> 16 & 0xFF, upperWordDuration >> 8 & 0xFF, upperWordDuration & 0xFF, lowerWordDuration >> 24, lowerWordDuration >> 16 & 0xFF, lowerWordDuration >> 8 & 0xFF, lowerWordDuration & 0xFF, 0x00, 0x01, 0x00, 0x00, // 1.0 rate
    0x01, 0x00, // 1.0 volume
    0x00, 0x00, // reserved
    0x00, 0x00, 0x00, 0x00, // reserved
    0x00, 0x00, 0x00, 0x00, // reserved
    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined
    0xff, 0xff, 0xff, 0xff // next_track_ID
    ]);
    return MP4.box(MP4.types.mvhd, bytes);
  };

  MP4.sdtp = function sdtp(track) {
    var samples = track.samples || [],
        bytes = new Uint8Array(4 + samples.length),
        flags,
        i; // leave the full box header (4 bytes) all zero
    // write the sample table

    for (i = 0; i < samples.length; i++) {
      flags = samples[i].flags;
      bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;
    }

    return MP4.box(MP4.types.sdtp, bytes);
  };

  MP4.stbl = function stbl(track) {
    return MP4.box(MP4.types.stbl, MP4.stsd(track), MP4.box(MP4.types.stts, MP4.STTS), MP4.box(MP4.types.stsc, MP4.STSC), MP4.box(MP4.types.stsz, MP4.STSZ), MP4.box(MP4.types.stco, MP4.STCO));
  };

  MP4.avc1 = function avc1(track) {
    var sps = [],
        pps = [],
        i,
        data,
        len; // assemble the SPSs

    for (i = 0; i < track.sps.length; i++) {
      data = track.sps[i];
      len = data.byteLength;
      sps.push(len >>> 8 & 0xFF);
      sps.push(len & 0xFF); // SPS

      sps = sps.concat(Array.prototype.slice.call(data));
    } // assemble the PPSs


    for (i = 0; i < track.pps.length; i++) {
      data = track.pps[i];
      len = data.byteLength;
      pps.push(len >>> 8 & 0xFF);
      pps.push(len & 0xFF);
      pps = pps.concat(Array.prototype.slice.call(data));
    }

    var avcc = MP4.box(MP4.types.avcC, new Uint8Array([0x01, // version
    sps[3], // profile
    sps[4], // profile compat
    sps[5], // level
    0xfc | 3, // lengthSizeMinusOne, hard-coded to 4 bytes
    0xE0 | track.sps.length // 3bit reserved (111) + numOfSequenceParameterSets
    ].concat(sps).concat([track.pps.length // numOfPictureParameterSets
    ]).concat(pps))),
        // "PPS"
    width = track.width,
        height = track.height,
        hSpacing = track.pixelRatio[0],
        vSpacing = track.pixelRatio[1];
    return MP4.box(MP4.types.avc1, new Uint8Array([0x00, 0x00, 0x00, // reserved
    0x00, 0x00, 0x00, // reserved
    0x00, 0x01, // data_reference_index
    0x00, 0x00, // pre_defined
    0x00, 0x00, // reserved
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined
    width >> 8 & 0xFF, width & 0xff, // width
    height >> 8 & 0xFF, height & 0xff, // height
    0x00, 0x48, 0x00, 0x00, // horizresolution
    0x00, 0x48, 0x00, 0x00, // vertresolution
    0x00, 0x00, 0x00, 0x00, // reserved
    0x00, 0x01, // frame_count
    0x12, 0x64, 0x61, 0x69, 0x6C, // dailymotion/hls.js
    0x79, 0x6D, 0x6F, 0x74, 0x69, 0x6F, 0x6E, 0x2F, 0x68, 0x6C, 0x73, 0x2E, 0x6A, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname
    0x00, 0x18, // depth = 24
    0x11, 0x11]), // pre_defined = -1
    avcc, MP4.box(MP4.types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB
    0x00, 0x2d, 0xc6, 0xc0, // maxBitrate
    0x00, 0x2d, 0xc6, 0xc0])), // avgBitrate
    MP4.box(MP4.types.pasp, new Uint8Array([hSpacing >> 24, // hSpacing
    hSpacing >> 16 & 0xFF, hSpacing >> 8 & 0xFF, hSpacing & 0xFF, vSpacing >> 24, // vSpacing
    vSpacing >> 16 & 0xFF, vSpacing >> 8 & 0xFF, vSpacing & 0xFF])));
  };

  MP4.esds = function esds(track) {
    var configlen = track.config.length;
    return new Uint8Array([0x00, // version 0
    0x00, 0x00, 0x00, // flags
    0x03, // descriptor_type
    0x17 + configlen, // length
    0x00, 0x01, // es_id
    0x00, // stream_priority
    0x04, // descriptor_type
    0x0f + configlen, // length
    0x40, // codec : mpeg4_audio
    0x15, // stream_type
    0x00, 0x00, 0x00, // buffer_size
    0x00, 0x00, 0x00, 0x00, // maxBitrate
    0x00, 0x00, 0x00, 0x00, // avgBitrate
    0x05 // descriptor_type
    ].concat([configlen]).concat(track.config).concat([0x06, 0x01, 0x02])); // GASpecificConfig)); // length + audio config descriptor
  };

  MP4.mp4a = function mp4a(track) {
    var samplerate = track.samplerate;
    return MP4.box(MP4.types.mp4a, new Uint8Array([0x00, 0x00, 0x00, // reserved
    0x00, 0x00, 0x00, // reserved
    0x00, 0x01, // data_reference_index
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved
    0x00, track.channelCount, // channelcount
    0x00, 0x10, // sampleSize:16bits
    0x00, 0x00, 0x00, 0x00, // reserved2
    samplerate >> 8 & 0xFF, samplerate & 0xff, //
    0x00, 0x00]), MP4.box(MP4.types.esds, MP4.esds(track)));
  };

  MP4.mp3 = function mp3(track) {
    var samplerate = track.samplerate;
    return MP4.box(MP4.types['.mp3'], new Uint8Array([0x00, 0x00, 0x00, // reserved
    0x00, 0x00, 0x00, // reserved
    0x00, 0x01, // data_reference_index
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved
    0x00, track.channelCount, // channelcount
    0x00, 0x10, // sampleSize:16bits
    0x00, 0x00, 0x00, 0x00, // reserved2
    samplerate >> 8 & 0xFF, samplerate & 0xff, //
    0x00, 0x00]));
  };

  MP4.stsd = function stsd(track) {
    if (track.type === 'audio') {
      if (!track.isAAC && track.codec === 'mp3') {
        return MP4.box(MP4.types.stsd, MP4.STSD, MP4.mp3(track));
      }

      return MP4.box(MP4.types.stsd, MP4.STSD, MP4.mp4a(track));
    } else {
      return MP4.box(MP4.types.stsd, MP4.STSD, MP4.avc1(track));
    }
  };

  MP4.tkhd = function tkhd(track) {
    var id = track.id,
        duration = track.duration * track.timescale,
        width = track.width,
        height = track.height,
        upperWordDuration = Math.floor(duration / (UINT32_MAX + 1)),
        lowerWordDuration = Math.floor(duration % (UINT32_MAX + 1));
    return MP4.box(MP4.types.tkhd, new Uint8Array([0x01, // version 1
    0x00, 0x00, 0x07, // flags
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, // creation_time
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, // modification_time
    id >> 24 & 0xFF, id >> 16 & 0xFF, id >> 8 & 0xFF, id & 0xFF, // track_ID
    0x00, 0x00, 0x00, 0x00, // reserved
    upperWordDuration >> 24, upperWordDuration >> 16 & 0xFF, upperWordDuration >> 8 & 0xFF, upperWordDuration & 0xFF, lowerWordDuration >> 24, lowerWordDuration >> 16 & 0xFF, lowerWordDuration >> 8 & 0xFF, lowerWordDuration & 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved
    0x00, 0x00, // layer
    0x00, 0x00, // alternate_group
    0x00, 0x00, // non-audio track volume
    0x00, 0x00, // reserved
    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix
    width >> 8 & 0xFF, width & 0xFF, 0x00, 0x00, // width
    height >> 8 & 0xFF, height & 0xFF, 0x00, 0x00 // height
    ]));
  };

  MP4.traf = function traf(track, baseMediaDecodeTime) {
    var sampleDependencyTable = MP4.sdtp(track),
        id = track.id,
        upperWordBaseMediaDecodeTime = Math.floor(baseMediaDecodeTime / (UINT32_MAX + 1)),
        lowerWordBaseMediaDecodeTime = Math.floor(baseMediaDecodeTime % (UINT32_MAX + 1));
    return MP4.box(MP4.types.traf, MP4.box(MP4.types.tfhd, new Uint8Array([0x00, // version 0
    0x00, 0x00, 0x00, // flags
    id >> 24, id >> 16 & 0XFF, id >> 8 & 0XFF, id & 0xFF // track_ID
    ])), MP4.box(MP4.types.tfdt, new Uint8Array([0x01, // version 1
    0x00, 0x00, 0x00, // flags
    upperWordBaseMediaDecodeTime >> 24, upperWordBaseMediaDecodeTime >> 16 & 0XFF, upperWordBaseMediaDecodeTime >> 8 & 0XFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >> 24, lowerWordBaseMediaDecodeTime >> 16 & 0XFF, lowerWordBaseMediaDecodeTime >> 8 & 0XFF, lowerWordBaseMediaDecodeTime & 0xFF])), MP4.trun(track, sampleDependencyTable.length + 16 + // tfhd
    20 + // tfdt
    8 + // traf header
    16 + // mfhd
    8 + // moof header
    8), // mdat header
    sampleDependencyTable);
  }
  /**
   * Generate a track box.
   * @param track {object} a track definition
   * @return {Uint8Array} the track box
   */
  ;

  MP4.trak = function trak(track) {
    track.duration = track.duration || 0xffffffff;
    return MP4.box(MP4.types.trak, MP4.tkhd(track), MP4.mdia(track));
  };

  MP4.trex = function trex(track) {
    var id = track.id;
    return MP4.box(MP4.types.trex, new Uint8Array([0x00, // version 0
    0x00, 0x00, 0x00, // flags
    id >> 24, id >> 16 & 0XFF, id >> 8 & 0XFF, id & 0xFF, // track_ID
    0x00, 0x00, 0x00, 0x01, // default_sample_description_index
    0x00, 0x00, 0x00, 0x00, // default_sample_duration
    0x00, 0x00, 0x00, 0x00, // default_sample_size
    0x00, 0x01, 0x00, 0x01 // default_sample_flags
    ]));
  };

  MP4.trun = function trun(track, offset) {
    var samples = track.samples || [],
        len = samples.length,
        arraylen = 12 + 16 * len,
        array = new Uint8Array(arraylen),
        i,
        sample,
        duration,
        size,
        flags,
        cts;
    offset += 8 + arraylen;
    array.set([0x00, // version 0
    0x00, 0x0f, 0x01, // flags
    len >>> 24 & 0xFF, len >>> 16 & 0xFF, len >>> 8 & 0xFF, len & 0xFF, // sample_count
    offset >>> 24 & 0xFF, offset >>> 16 & 0xFF, offset >>> 8 & 0xFF, offset & 0xFF // data_offset
    ], 0);

    for (i = 0; i < len; i++) {
      sample = samples[i];
      duration = sample.duration;
      size = sample.size;
      flags = sample.flags;
      cts = sample.cts;
      array.set([duration >>> 24 & 0xFF, duration >>> 16 & 0xFF, duration >>> 8 & 0xFF, duration & 0xFF, // sample_duration
      size >>> 24 & 0xFF, size >>> 16 & 0xFF, size >>> 8 & 0xFF, size & 0xFF, // sample_size
      flags.isLeading << 2 | flags.dependsOn, flags.isDependedOn << 6 | flags.hasRedundancy << 4 | flags.paddingValue << 1 | flags.isNonSync, flags.degradPrio & 0xF0 << 8, flags.degradPrio & 0x0F, // sample_flags
      cts >>> 24 & 0xFF, cts >>> 16 & 0xFF, cts >>> 8 & 0xFF, cts & 0xFF // sample_composition_time_offset
      ], 12 + 16 * i);
    }

    return MP4.box(MP4.types.trun, array);
  };

  MP4.initSegment = function initSegment(tracks) {
    if (!MP4.types) {
      MP4.init();
    }

    var movie = MP4.moov(tracks),
        result;
    result = new Uint8Array(MP4.FTYP.byteLength + movie.byteLength);
    result.set(MP4.FTYP);
    result.set(movie, MP4.FTYP.byteLength);
    return result;
  };

  return MP4;
}();

/* harmony default export */ var mp4_generator = (MP4);
// CONCATENATED MODULE: ./src/utils/timescale-conversion.ts
var MPEG_TS_CLOCK_FREQ_HZ = 90000;
function toTimescaleFromScale(value, destScale, srcScale, round) {
  if (srcScale === void 0) {
    srcScale = 1;
  }

  if (round === void 0) {
    round = false;
  }

  return toTimescaleFromBase(value, destScale, 1 / srcScale);
}
function toTimescaleFromBase(value, destScale, srcBase, round) {
  if (srcBase === void 0) {
    srcBase = 1;
  }

  if (round === void 0) {
    round = false;
  }

  var result = value * destScale * srcBase; // equivalent to `(value * scale) / (1 / base)`

  return round ? Math.round(result) : result;
}
function toMsFromMpegTsClock(value, round) {
  if (round === void 0) {
    round = false;
  }

  return toTimescaleFromBase(value, 1000, 1 / MPEG_TS_CLOCK_FREQ_HZ, round);
}
function toMpegTsClockFromTimescale(value, srcScale) {
  if (srcScale === void 0) {
    srcScale = 1;
  }

  return toTimescaleFromBase(value, MPEG_TS_CLOCK_FREQ_HZ, 1 / srcScale);
}
// CONCATENATED MODULE: ./src/remux/mp4-remuxer.js
/**
 * fMP4 remuxer
*/






var MAX_SILENT_FRAME_DURATION_90KHZ = toMpegTsClockFromTimescale(10);
var PTS_DTS_SHIFT_TOLERANCE_90KHZ = toMpegTsClockFromTimescale(0.2);
var chromeVersion = null;

var mp4_remuxer_MP4Remuxer = /*#__PURE__*/function () {
  function MP4Remuxer(observer, config, typeSupported, vendor) {
    this.observer = observer;
    this.config = config;
    this.typeSupported = typeSupported;
    this.ISGenerated = false;

    if (chromeVersion === null) {
      var result = navigator.userAgent.match(/Chrome\/(\d+)/i);
      chromeVersion = result ? parseInt(result[1]) : 0;
    }
  }

  var _proto = MP4Remuxer.prototype;

  _proto.destroy = function destroy() {};

  _proto.resetTimeStamp = function resetTimeStamp(defaultTimeStamp) {
    this._initPTS = this._initDTS = defaultTimeStamp;
  };

  _proto.resetInitSegment = function resetInitSegment() {
    this.ISGenerated = false;
  };

  _proto.getVideoStartPts = function getVideoStartPts(videoSamples) {
    var rolloverDetected = false;
    var startPTS = videoSamples.reduce(function (minPTS, sample) {
      var delta = sample.pts - minPTS;

      if (delta < -4294967296) {
        // 2^32, see PTSNormalize for reasoning, but we're hitting a rollover here, and we don't want that to impact the timeOffset calculation
        rolloverDetected = true;
        return PTSNormalize(minPTS, sample.pts);
      } else if (delta > 0) {
        return minPTS;
      } else {
        return sample.pts;
      }
    }, videoSamples[0].pts);

    if (rolloverDetected) {
      logger["logger"].debug('PTS rollover detected');
    }

    return startPTS;
  };

  _proto.remux = function remux(audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset) {
    // generate Init Segment if needed
    if (!this.ISGenerated) {
      this.generateIS(audioTrack, videoTrack, timeOffset);
    }

    if (this.ISGenerated) {
      var nbAudioSamples = audioTrack.samples.length;
      var nbVideoSamples = videoTrack.samples.length;
      var audioTimeOffset = timeOffset;
      var videoTimeOffset = timeOffset;

      if (nbAudioSamples && nbVideoSamples) {
        // timeOffset is expected to be the offset of the first timestamp of this fragment (first DTS)
        // if first audio DTS is not aligned with first video DTS then we need to take that into account
        // when providing timeOffset to remuxAudio / remuxVideo. if we don't do that, there might be a permanent / small
        // drift between audio and video streams
        var startPTS = this.getVideoStartPts(videoTrack.samples);
        var tsDelta = PTSNormalize(audioTrack.samples[0].pts, startPTS) - startPTS;
        var audiovideoTimestampDelta = tsDelta / videoTrack.inputTimeScale;
        audioTimeOffset += Math.max(0, audiovideoTimestampDelta);
        videoTimeOffset += Math.max(0, -audiovideoTimestampDelta);
      } // Purposefully remuxing audio before video, so that remuxVideo can use nextAudioPts, which is
      // calculated in remuxAudio.
      // logger.log('nb AAC samples:' + audioTrack.samples.length);


      if (nbAudioSamples) {
        // if initSegment was generated without video samples, regenerate it again
        if (!audioTrack.timescale) {
          logger["logger"].warn('regenerate InitSegment as audio detected');
          this.generateIS(audioTrack, videoTrack, timeOffset);
        }

        var audioData = this.remuxAudio(audioTrack, audioTimeOffset, contiguous, accurateTimeOffset); // logger.log('nb AVC samples:' + videoTrack.samples.length);

        if (nbVideoSamples) {
          var audioTrackLength;

          if (audioData) {
            audioTrackLength = audioData.endPTS - audioData.startPTS;
          } // if initSegment was generated without video samples, regenerate it again


          if (!videoTrack.timescale) {
            logger["logger"].warn('regenerate InitSegment as video detected');
            this.generateIS(audioTrack, videoTrack, timeOffset);
          }

          this.remuxVideo(videoTrack, videoTimeOffset, contiguous, audioTrackLength);
        }
      } else {
        // logger.log('nb AVC samples:' + videoTrack.samples.length);
        if (nbVideoSamples) {
          var videoData = this.remuxVideo(videoTrack, videoTimeOffset, contiguous, 0, accurateTimeOffset);

          if (videoData && audioTrack.codec) {
            this.remuxEmptyAudio(audioTrack, audioTimeOffset, contiguous, videoData);
          }
        }
      }
    } // logger.log('nb ID3 samples:' + audioTrack.samples.length);


    if (id3Track.samples.length) {
      this.remuxID3(id3Track, timeOffset);
    } // logger.log('nb ID3 samples:' + audioTrack.samples.length);


    if (textTrack.samples.length) {
      this.remuxText(textTrack, timeOffset);
    } // notify end of parsing


    this.observer.trigger(events["default"].FRAG_PARSED);
  };

  _proto.generateIS = function generateIS(audioTrack, videoTrack, timeOffset) {
    var observer = this.observer,
        audioSamples = audioTrack.samples,
        videoSamples = videoTrack.samples,
        typeSupported = this.typeSupported,
        container = 'audio/mp4',
        tracks = {},
        data = {
      tracks: tracks
    },
        computePTSDTS = this._initPTS === undefined,
        initPTS,
        initDTS;

    if (computePTSDTS) {
      initPTS = initDTS = Infinity;
    }

    if (audioTrack.config && audioSamples.length) {
      // let's use audio sampling rate as MP4 time scale.
      // rationale is that there is a integer nb of audio frames per audio sample (1024 for AAC)
      // using audio sampling rate here helps having an integer MP4 frame duration
      // this avoids potential rounding issue and AV sync issue
      audioTrack.timescale = audioTrack.samplerate;
      logger["logger"].log("audio sampling rate : " + audioTrack.samplerate);

      if (!audioTrack.isAAC) {
        if (typeSupported.mpeg) {
          // Chrome and Safari
          container = 'audio/mpeg';
          audioTrack.codec = '';
        } else if (typeSupported.mp3) {
          // Firefox
          audioTrack.codec = 'mp3';
        }
      }

      tracks.audio = {
        container: container,
        codec: audioTrack.codec,
        initSegment: !audioTrack.isAAC && typeSupported.mpeg ? new Uint8Array() : mp4_generator.initSegment([audioTrack]),
        metadata: {
          channelCount: audioTrack.channelCount
        }
      };

      if (computePTSDTS) {
        // remember first PTS of this demuxing context. for audio, PTS = DTS
        initPTS = initDTS = audioSamples[0].pts - Math.round(audioTrack.inputTimeScale * timeOffset);
      }
    }

    if (videoTrack.sps && videoTrack.pps && videoSamples.length) {
      // let's use input time scale as MP4 video timescale
      // we use input time scale straight away to avoid rounding issues on frame duration / cts computation
      var inputTimeScale = videoTrack.inputTimeScale;
      videoTrack.timescale = inputTimeScale;
      tracks.video = {
        container: 'video/mp4',
        codec: videoTrack.codec,
        initSegment: mp4_generator.initSegment([videoTrack]),
        metadata: {
          width: videoTrack.width,
          height: videoTrack.height
        }
      };

      if (computePTSDTS) {
        var startPTS = this.getVideoStartPts(videoSamples);
        var startOffset = Math.round(inputTimeScale * timeOffset);
        initDTS = Math.min(initDTS, PTSNormalize(videoSamples[0].dts, startPTS) - startOffset);
        initPTS = Math.min(initPTS, startPTS - startOffset);
        this.observer.trigger(events["default"].INIT_PTS_FOUND, {
          initPTS: initPTS
        });
      }
    } else if (computePTSDTS && tracks.audio) {
      // initPTS found for audio-only stream with main and alt audio
      this.observer.trigger(events["default"].INIT_PTS_FOUND, {
        initPTS: initPTS
      });
    }

    if (Object.keys(tracks).length) {
      observer.trigger(events["default"].FRAG_PARSING_INIT_SEGMENT, data);
      this.ISGenerated = true;

      if (computePTSDTS) {
        this._initPTS = initPTS;
        this._initDTS = initDTS;
      }
    } else {
      observer.trigger(events["default"].ERROR, {
        type: errors["ErrorTypes"].MEDIA_ERROR,
        details: errors["ErrorDetails"].FRAG_PARSING_ERROR,
        fatal: false,
        reason: 'no audio/video samples found'
      });
    }
  };

  _proto.remuxVideo = function remuxVideo(track, timeOffset, contiguous, audioTrackLength) {
    var timeScale = track.timescale;
    var inputSamples = track.samples;
    var outputSamples = [];
    var nbSamples = inputSamples.length;
    var initPTS = this._initPTS;
    var offset = 8;
    var mp4SampleDuration;
    var mdat;
    var moof;
    var firstDTS;
    var lastDTS;
    var minPTS = Number.POSITIVE_INFINITY;
    var maxPTS = Number.NEGATIVE_INFINITY;
    var ptsDtsShift = 0;
    var sortSamples = false; // if parsed fragment is contiguous with last one, let's use last DTS value as reference

    var nextAvcDts = this.nextAvcDts;

    if (nbSamples === 0) {
      return;
    }

    if (!contiguous) {
      var pts = timeOffset * timeScale;
      var cts = inputSamples[0].pts - PTSNormalize(inputSamples[0].dts, inputSamples[0].pts); // if not contiguous, let's use target timeOffset

      nextAvcDts = pts - cts;
    } // PTS is coded on 33bits, and can loop from -2^32 to 2^32
    // PTSNormalize will make PTS/DTS value monotonic, we use last known DTS value as reference value


    for (var i = 0; i < nbSamples; i++) {
      var sample = inputSamples[i];
      sample.pts = PTSNormalize(sample.pts - initPTS, nextAvcDts);
      sample.dts = PTSNormalize(sample.dts - initPTS, nextAvcDts);

      if (sample.dts > sample.pts) {
        ptsDtsShift = Math.max(Math.min(ptsDtsShift, sample.pts - sample.dts), -1 * PTS_DTS_SHIFT_TOLERANCE_90KHZ);
      }

      if (sample.dts < inputSamples[i > 0 ? i - 1 : i].dts) {
        sortSamples = true;
      }
    } // sort video samples by DTS then PTS then demux id order


    if (sortSamples) {
      inputSamples.sort(function (a, b) {
        var deltadts = a.dts - b.dts;
        var deltapts = a.pts - b.pts;
        return deltadts || deltapts || a.id - b.id;
      });
    } // Get first/last DTS


    firstDTS = inputSamples[0].dts;
    lastDTS = inputSamples[nbSamples - 1].dts; // on Safari let's signal the same sample duration for all samples
    // sample duration (as expected by trun MP4 boxes), should be the delta between sample DTS
    // set this constant duration as being the avg delta between consecutive DTS.

    var averageSampleDuration = Math.round((lastDTS - firstDTS) / (nbSamples - 1)); // handle broken streams with PTS < DTS, tolerance up 0.2 seconds

    if (ptsDtsShift < 0) {
      if (ptsDtsShift < averageSampleDuration * -2) {
        // Fix for "CNN special report, with CC" in test-streams (including Safari browser)
        // With large PTS < DTS errors such as this, we want to correct CTS while maintaining increasing DTS values
        logger["logger"].warn("PTS < DTS detected in video samples, offsetting DTS from PTS by " + toMsFromMpegTsClock(-averageSampleDuration, true) + " ms");
        var lastDts = ptsDtsShift;

        for (var _i = 0; _i < nbSamples; _i++) {
          inputSamples[_i].dts = lastDts = Math.max(lastDts, inputSamples[_i].pts - averageSampleDuration);
          inputSamples[_i].pts = Math.max(lastDts, inputSamples[_i].pts);
        }
      } else {
        // Fix for "Custom IV with bad PTS DTS" in test-streams
        // With smaller PTS < DTS errors we can simply move all DTS back. This increases CTS without causing buffer gaps or decode errors in Safari
        logger["logger"].warn("PTS < DTS detected in video samples, shifting DTS by " + toMsFromMpegTsClock(ptsDtsShift, true) + " ms to overcome this issue");

        for (var _i2 = 0; _i2 < nbSamples; _i2++) {
          inputSamples[_i2].dts = inputSamples[_i2].dts + ptsDtsShift;
        }
      }

      firstDTS = inputSamples[0].dts;
      lastDTS = inputSamples[nbSamples - 1].dts;
    } // if fragment are contiguous, detect hole/overlapping between fragments


    if (contiguous) {
      // check timestamp continuity across consecutive fragments (this is to remove inter-fragment gap/hole)
      var delta = firstDTS - nextAvcDts;
      var foundHole = delta > averageSampleDuration;
      var foundOverlap = delta < -1;

      if (foundHole || foundOverlap) {
        if (foundHole) {
          logger["logger"].warn("AVC: " + toMsFromMpegTsClock(delta, true) + " ms (" + delta + "dts) hole between fragments detected, filling it");
        } else {
          logger["logger"].warn("AVC: " + toMsFromMpegTsClock(-delta, true) + " ms (" + delta + "dts) overlapping between fragments detected");
        }

        firstDTS = nextAvcDts;
        var firstPTS = inputSamples[0].pts - delta;
        inputSamples[0].dts = firstDTS;
        inputSamples[0].pts = firstPTS;
        logger["logger"].log("Video: First PTS/DTS adjusted: " + toMsFromMpegTsClock(firstPTS, true) + "/" + toMsFromMpegTsClock(firstDTS, true) + ", delta: " + toMsFromMpegTsClock(delta, true) + " ms");
      }
    }

    if (chromeVersion && chromeVersion < 75) {
      firstDTS = Math.max(0, firstDTS);
    }

    var nbNalu = 0;
    var naluLen = 0;

    for (var _i3 = 0; _i3 < nbSamples; _i3++) {
      // compute total/avc sample length and nb of NAL units
      var _sample = inputSamples[_i3];
      var units = _sample.units;
      var nbUnits = units.length;
      var sampleLen = 0;

      for (var j = 0; j < nbUnits; j++) {
        sampleLen += units[j].data.length;
      }

      naluLen += sampleLen;
      nbNalu += nbUnits;
      _sample.length = sampleLen; // normalize PTS/DTS
      // ensure sample monotonic DTS

      _sample.dts = Math.max(_sample.dts, firstDTS); // ensure that computed value is greater or equal than sample DTS

      _sample.pts = Math.max(_sample.pts, _sample.dts, 0);
      minPTS = Math.min(_sample.pts, minPTS);
      maxPTS = Math.max(_sample.pts, maxPTS);
    }

    lastDTS = inputSamples[nbSamples - 1].dts;
    /* concatenate the video data and construct the mdat in place
      (need 8 more bytes to fill length and mpdat type) */

    var mdatSize = naluLen + 4 * nbNalu + 8;

    try {
      mdat = new Uint8Array(mdatSize);
    } catch (err) {
      this.observer.trigger(events["default"].ERROR, {
        type: errors["ErrorTypes"].MUX_ERROR,
        details: errors["ErrorDetails"].REMUX_ALLOC_ERROR,
        fatal: false,
        bytes: mdatSize,
        reason: "fail allocating video mdat " + mdatSize
      });
      return;
    }

    var view = new DataView(mdat.buffer);
    view.setUint32(0, mdatSize);
    mdat.set(mp4_generator.types.mdat, 4);

    for (var _i4 = 0; _i4 < nbSamples; _i4++) {
      var avcSample = inputSamples[_i4];
      var avcSampleUnits = avcSample.units;
      var mp4SampleLength = 0;
      var compositionTimeOffset = void 0; // convert NALU bitstream to MP4 format (prepend NALU with size field)

      for (var _j = 0, _nbUnits = avcSampleUnits.length; _j < _nbUnits; _j++) {
        var unit = avcSampleUnits[_j];
        var unitData = unit.data;
        var unitDataLen = unit.data.byteLength;
        view.setUint32(offset, unitDataLen);
        offset += 4;
        mdat.set(unitData, offset);
        offset += unitDataLen;
        mp4SampleLength += 4 + unitDataLen;
      } // expected sample duration is the Decoding Timestamp diff of consecutive samples


      if (_i4 < nbSamples - 1) {
        mp4SampleDuration = inputSamples[_i4 + 1].dts - avcSample.dts;
      } else {
        var config = this.config;
        var lastFrameDuration = avcSample.dts - inputSamples[_i4 > 0 ? _i4 - 1 : _i4].dts;

        if (config.stretchShortVideoTrack) {
          // In some cases, a segment's audio track duration may exceed the video track duration.
          // Since we've already remuxed audio, and we know how long the audio track is, we look to
          // see if the delta to the next segment is longer than maxBufferHole.
          // If so, playback would potentially get stuck, so we artificially inflate
          // the duration of the last frame to minimize any potential gap between segments.
          var maxBufferHole = config.maxBufferHole;
          var gapTolerance = Math.floor(maxBufferHole * timeScale);
          var deltaToFrameEnd = (audioTrackLength ? minPTS + audioTrackLength * timeScale : this.nextAudioPts) - avcSample.pts;

          if (deltaToFrameEnd > gapTolerance) {
            // We subtract lastFrameDuration from deltaToFrameEnd to try to prevent any video
            // frame overlap. maxBufferHole should be >> lastFrameDuration anyway.
            mp4SampleDuration = deltaToFrameEnd - lastFrameDuration;

            if (mp4SampleDuration < 0) {
              mp4SampleDuration = lastFrameDuration;
            }

            logger["logger"].log("It is approximately " + toMsFromMpegTsClock(deltaToFrameEnd, false) + " ms to the next segment; using duration " + toMsFromMpegTsClock(mp4SampleDuration, false) + " ms for the last video frame.");
          } else {
            mp4SampleDuration = lastFrameDuration;
          }
        } else {
          mp4SampleDuration = lastFrameDuration;
        }
      }

      compositionTimeOffset = Math.round(avcSample.pts - avcSample.dts); // console.log('PTS/DTS/initDTS/normPTS/normDTS/relative PTS : ${avcSample.pts}/${avcSample.dts}/${initDTS}/${ptsnorm}/${dtsnorm}/${(avcSample.pts/4294967296).toFixed(3)}');

      outputSamples.push({
        size: mp4SampleLength,
        // constant duration
        duration: mp4SampleDuration,
        cts: compositionTimeOffset,
        flags: {
          isLeading: 0,
          isDependedOn: 0,
          hasRedundancy: 0,
          degradPrio: 0,
          dependsOn: avcSample.key ? 2 : 1,
          isNonSync: avcSample.key ? 0 : 1
        }
      });
    } // next AVC sample DTS should be equal to last sample DTS + last sample duration (in PES timescale)


    this.nextAvcDts = lastDTS + mp4SampleDuration;
    var dropped = track.dropped;
    track.nbNalu = 0;
    track.dropped = 0;

    if (outputSamples.length && navigator.userAgent.toLowerCase().indexOf('chrome') > -1) {
      var flags = outputSamples[0].flags; // chrome workaround, mark first sample as being a Random Access Point to avoid sourcebuffer append issue
      // https://code.google.com/p/chromium/issues/detail?id=229412

      flags.dependsOn = 2;
      flags.isNonSync = 0;
    }

    track.samples = outputSamples;
    moof = mp4_generator.moof(track.sequenceNumber++, firstDTS, track);
    track.samples = [];
    var data = {
      data1: moof,
      data2: mdat,
      startPTS: minPTS / timeScale,
      endPTS: (maxPTS + mp4SampleDuration) / timeScale,
      startDTS: firstDTS / timeScale,
      endDTS: this.nextAvcDts / timeScale,
      type: 'video',
      hasAudio: false,
      hasVideo: true,
      nb: outputSamples.length,
      dropped: dropped
    };
    this.observer.trigger(events["default"].FRAG_PARSING_DATA, data);
    return data;
  };

  _proto.remuxAudio = function remuxAudio(track, timeOffset, contiguous, accurateTimeOffset) {
    var inputTimeScale = track.inputTimeScale;
    var mp4timeScale = track.timescale;
    var scaleFactor = inputTimeScale / mp4timeScale;
    var mp4SampleDuration = track.isAAC ? 1024 : 1152;
    var inputSampleDuration = mp4SampleDuration * scaleFactor;
    var initPTS = this._initPTS;
    var rawMPEG = !track.isAAC && this.typeSupported.mpeg;
    var mp4Sample;
    var fillFrame;
    var mdat;
    var moof;
    var firstPTS;
    var lastPTS;
    var offset = rawMPEG ? 0 : 8;
    var inputSamples = track.samples;
    var outputSamples = [];
    var nextAudioPts = this.nextAudioPts; // for audio samples, also consider consecutive fragments as being contiguous (even if a level switch occurs),
    // for sake of clarity:
    // consecutive fragments are frags with
    //  - less than 100ms gaps between new time offset (if accurate) and next expected PTS OR
    //  - less than 20 audio frames distance
    // contiguous fragments are consecutive fragments from same quality level (same level, new SN = old SN + 1)
    // this helps ensuring audio continuity
    // and this also avoids audio glitches/cut when switching quality, or reporting wrong duration on first audio frame

    contiguous |= inputSamples.length && nextAudioPts && (accurateTimeOffset && Math.abs(timeOffset - nextAudioPts / inputTimeScale) < 0.1 || Math.abs(inputSamples[0].pts - nextAudioPts - initPTS) < 20 * inputSampleDuration); // compute normalized PTS

    inputSamples.forEach(function (sample) {
      sample.pts = sample.dts = PTSNormalize(sample.pts - initPTS, timeOffset * inputTimeScale);
    }); // filter out sample with negative PTS that are not playable anyway
    // if we don't remove these negative samples, they will shift all audio samples forward.
    // leading to audio overlap between current / next fragment

    inputSamples = inputSamples.filter(function (sample) {
      return sample.pts >= 0;
    }); // in case all samples have negative PTS, and have been filtered out, return now

    if (inputSamples.length === 0) {
      return;
    }

    if (!contiguous) {
      if (!accurateTimeOffset) {
        // if frag are mot contiguous and if we cant trust time offset, let's use first sample PTS as next audio PTS
        nextAudioPts = inputSamples[0].pts;
      } else {
        // if timeOffset is accurate, let's use it as predicted next audio PTS
        nextAudioPts = Math.max(0, timeOffset * inputTimeScale);
      }
    } // If the audio track is missing samples, the frames seem to get "left-shifted" within the
    // resulting mp4 segment, causing sync issues and leaving gaps at the end of the audio segment.
    // In an effort to prevent this from happening, we inject frames here where there are gaps.
    // When possible, we inject a silent frame; when that's not possible, we duplicate the last
    // frame.


    if (track.isAAC) {
      var maxAudioFramesDrift = this.config.maxAudioFramesDrift;

      for (var i = 0, nextPts = nextAudioPts; i < inputSamples.length;) {
        // First, let's see how far off this frame is from where we expect it to be
        var sample = inputSamples[i];
        var pts = sample.pts;
        var delta = pts - nextPts; // If we're overlapping by more than a duration, drop this sample

        if (delta <= -maxAudioFramesDrift * inputSampleDuration) {
          if (contiguous || i > 0) {
            logger["logger"].warn("Dropping 1 audio frame @ " + toMsFromMpegTsClock(nextPts, true) / 1000 + "s due to " + toMsFromMpegTsClock(delta, true) + " ms overlap.");
            inputSamples.splice(i, 1); // Don't touch nextPtsNorm or i
          } else {
            // When changing qualities we can't trust that audio has been appended up to nextAudioPts
            // Warn about the overlap but do not drop samples as that can introduce buffer gaps
            logger["logger"].warn("Audio frame @ " + toMsFromMpegTsClock(pts, true) / 1000 + "s overlaps nextAudioPts by " + toMsFromMpegTsClock(delta, true) + " ms.");
            nextPts = pts + inputSampleDuration;
            i++;
          }
        } // eslint-disable-line brace-style
        // Insert missing frames if:
        // 1: We're more than maxAudioFramesDrift frame away
        // 2: Not more than MAX_SILENT_FRAME_DURATION away
        // 3: currentTime (aka nextPtsNorm) is not 0
        else if (delta >= maxAudioFramesDrift * inputSampleDuration && delta < MAX_SILENT_FRAME_DURATION_90KHZ && nextPts) {
            var missing = Math.round(delta / inputSampleDuration);
            logger["logger"].warn("Injecting " + missing + " audio frames @ " + toMsFromMpegTsClock(nextPts, true) / 1000 + "s due to " + toMsFromMpegTsClock(delta, true) + " ms gap.");

            for (var j = 0; j < missing; j++) {
              var newStamp = Math.max(nextPts, 0);
              fillFrame = aac_helper.getSilentFrame(track.manifestCodec || track.codec, track.channelCount);

              if (!fillFrame) {
                logger["logger"].log('Unable to get silent frame for given audio codec; duplicating last frame instead.');
                fillFrame = sample.unit.subarray();
              }

              inputSamples.splice(i, 0, {
                unit: fillFrame,
                pts: newStamp,
                dts: newStamp
              });
              nextPts += inputSampleDuration;
              i++;
            } // Adjust sample to next expected pts


            sample.pts = sample.dts = nextPts;
            nextPts += inputSampleDuration;
            i++;
          } else {
            // Otherwise, just adjust pts
            if (Math.abs(delta) > 0.1 * inputSampleDuration) {// logger.log(`Invalid frame delta ${Math.round(delta + inputSampleDuration)} at PTS ${Math.round(pts / 90)} (should be ${Math.round(inputSampleDuration)}).`);
            }

            sample.pts = sample.dts = nextPts;
            nextPts += inputSampleDuration;
            i++;
          }
      }
    } // compute mdat size, as we eventually filtered/added some samples


    var nbSamples = inputSamples.length;
    var mdatSize = 0;

    while (nbSamples--) {
      mdatSize += inputSamples[nbSamples].unit.byteLength;
    }

    for (var _j2 = 0, _nbSamples = inputSamples.length; _j2 < _nbSamples; _j2++) {
      var audioSample = inputSamples[_j2];
      var unit = audioSample.unit;
      var _pts = audioSample.pts; // logger.log(`Audio/PTS:${toMsFromMpegTsClock(pts, true)}`);
      // if not first sample

      if (lastPTS !== undefined && mp4Sample) {
        mp4Sample.duration = Math.round((_pts - lastPTS) / scaleFactor);
      } else {
        var _delta = _pts - nextAudioPts;

        var numMissingFrames = 0; // if fragment are contiguous, detect hole/overlapping between fragments
        // contiguous fragments are consecutive fragments from same quality level (same level, new SN = old SN + 1)

        if (contiguous && track.isAAC) {
          // log delta
          if (_delta) {
            if (_delta > 0 && _delta < MAX_SILENT_FRAME_DURATION_90KHZ) {
              // Q: why do we have to round here, shouldn't this always result in an integer if timestamps are correct,
              // and if not, shouldn't we actually Math.ceil() instead?
              numMissingFrames = Math.round((_pts - nextAudioPts) / inputSampleDuration);
              logger["logger"].log(toMsFromMpegTsClock(_delta, true) + " ms hole between AAC samples detected,filling it");

              if (numMissingFrames > 0) {
                fillFrame = aac_helper.getSilentFrame(track.manifestCodec || track.codec, track.channelCount);

                if (!fillFrame) {
                  fillFrame = unit.subarray();
                }

                mdatSize += numMissingFrames * fillFrame.length;
              } // if we have frame overlap, overlapping for more than half a frame duraion

            } else if (_delta < -12) {
              // drop overlapping audio frames... browser will deal with it
              logger["logger"].log("drop overlapping AAC sample, expected/parsed/delta: " + toMsFromMpegTsClock(nextAudioPts, true) + " ms / " + toMsFromMpegTsClock(_pts, true) + " ms / " + toMsFromMpegTsClock(-_delta, true) + " ms");
              mdatSize -= unit.byteLength;
              continue;
            } // set PTS/DTS to expected PTS/DTS


            _pts = nextAudioPts;
          }
        } // remember first PTS of our audioSamples


        firstPTS = _pts;

        if (mdatSize > 0) {
          mdatSize += offset;

          try {
            mdat = new Uint8Array(mdatSize);
          } catch (err) {
            this.observer.trigger(events["default"].ERROR, {
              type: errors["ErrorTypes"].MUX_ERROR,
              details: errors["ErrorDetails"].REMUX_ALLOC_ERROR,
              fatal: false,
              bytes: mdatSize,
              reason: "fail allocating audio mdat " + mdatSize
            });
            return;
          }

          if (!rawMPEG) {
            var view = new DataView(mdat.buffer);
            view.setUint32(0, mdatSize);
            mdat.set(mp4_generator.types.mdat, 4);
          }
        } else {
          // no audio samples
          return;
        }

        for (var _i5 = 0; _i5 < numMissingFrames; _i5++) {
          fillFrame = aac_helper.getSilentFrame(track.manifestCodec || track.codec, track.channelCount);

          if (!fillFrame) {
            logger["logger"].log('Unable to get silent frame for given audio codec; duplicating this frame instead.');
            fillFrame = unit.subarray();
          }

          mdat.set(fillFrame, offset);
          offset += fillFrame.byteLength;
          mp4Sample = {
            size: fillFrame.byteLength,
            cts: 0,
            duration: 1024,
            flags: {
              isLeading: 0,
              isDependedOn: 0,
              hasRedundancy: 0,
              degradPrio: 0,
              dependsOn: 1
            }
          };
          outputSamples.push(mp4Sample);
        }
      }

      mdat.set(unit, offset);
      var unitLen = unit.byteLength;
      offset += unitLen; // console.log('PTS/DTS/initDTS/normPTS/normDTS/relative PTS : ${audioSample.pts}/${audioSample.dts}/${initDTS}/${ptsnorm}/${dtsnorm}/${(audioSample.pts/4294967296).toFixed(3)}');

      mp4Sample = {
        size: unitLen,
        cts: 0,
        duration: 0,
        flags: {
          isLeading: 0,
          isDependedOn: 0,
          hasRedundancy: 0,
          degradPrio: 0,
          dependsOn: 1
        }
      };
      outputSamples.push(mp4Sample);
      lastPTS = _pts;
    }

    var lastSampleDuration = 0;
    nbSamples = outputSamples.length; // set last sample duration as being identical to previous sample

    if (nbSamples >= 2) {
      lastSampleDuration = outputSamples[nbSamples - 2].duration;
      mp4Sample.duration = lastSampleDuration;
    }

    if (nbSamples) {
      // next audio sample PTS should be equal to last sample PTS + duration
      this.nextAudioPts = nextAudioPts = lastPTS + scaleFactor * lastSampleDuration; // logger.log('Audio/PTS/PTSend:' + audioSample.pts.toFixed(0) + '/' + this.nextAacDts.toFixed(0));

      track.samples = outputSamples;

      if (rawMPEG) {
        moof = new Uint8Array();
      } else {
        moof = mp4_generator.moof(track.sequenceNumber++, firstPTS / scaleFactor, track);
      }

      track.samples = [];
      var start = firstPTS / inputTimeScale;
      var end = nextAudioPts / inputTimeScale;
      var audioData = {
        data1: moof,
        data2: mdat,
        startPTS: start,
        endPTS: end,
        startDTS: start,
        endDTS: end,
        type: 'audio',
        hasAudio: true,
        hasVideo: false,
        nb: nbSamples
      };
      this.observer.trigger(events["default"].FRAG_PARSING_DATA, audioData);
      return audioData;
    }

    return null;
  };

  _proto.remuxEmptyAudio = function remuxEmptyAudio(track, timeOffset, contiguous, videoData) {
    var inputTimeScale = track.inputTimeScale;
    var mp4timeScale = track.samplerate ? track.samplerate : inputTimeScale;
    var scaleFactor = inputTimeScale / mp4timeScale;
    var nextAudioPts = this.nextAudioPts; // sync with video's timestamp

    var startDTS = (nextAudioPts !== undefined ? nextAudioPts : videoData.startDTS * inputTimeScale) + this._initDTS;
    var endDTS = videoData.endDTS * inputTimeScale + this._initDTS; // one sample's duration value

    var sampleDuration = 1024;
    var frameDuration = scaleFactor * sampleDuration; // samples count of this segment's duration

    var nbSamples = Math.ceil((endDTS - startDTS) / frameDuration); // silent frame

    var silentFrame = aac_helper.getSilentFrame(track.manifestCodec || track.codec, track.channelCount);
    logger["logger"].warn('remux empty Audio'); // Can't remux if we can't generate a silent frame...

    if (!silentFrame) {
      logger["logger"].trace('Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec!');
      return;
    }

    var samples = [];

    for (var i = 0; i < nbSamples; i++) {
      var stamp = startDTS + i * frameDuration;
      samples.push({
        unit: silentFrame,
        pts: stamp,
        dts: stamp
      });
    }

    track.samples = samples;
    this.remuxAudio(track, timeOffset, contiguous);
  };

  _proto.remuxID3 = function remuxID3(track, timeOffset) {
    var length = track.samples.length;

    if (!length) {
      return;
    }

    var inputTimeScale = track.inputTimeScale;
    var initPTS = this._initPTS;
    var initDTS = this._initDTS; // consume samples

    for (var index = 0; index < length; index++) {
      var sample = track.samples[index]; // setting id3 pts, dts to relative time
      // using this._initPTS and this._initDTS to calculate relative time

      sample.pts = PTSNormalize(sample.pts - initPTS, timeOffset * inputTimeScale) / inputTimeScale;
      sample.dts = PTSNormalize(sample.dts - initDTS, timeOffset * inputTimeScale) / inputTimeScale;
    }

    this.observer.trigger(events["default"].FRAG_PARSING_METADATA, {
      samples: track.samples
    });
    track.samples = [];
  };

  _proto.remuxText = function remuxText(track, timeOffset) {
    var length = track.samples.length;
    var inputTimeScale = track.inputTimeScale;
    var initPTS = this._initPTS; // consume samples

    if (length) {
      for (var index = 0; index < length; index++) {
        var sample = track.samples[index]; // setting text pts, dts to relative time
        // using this._initPTS and this._initDTS to calculate relative time

        sample.pts = PTSNormalize(sample.pts - initPTS, timeOffset * inputTimeScale) / inputTimeScale;
      }

      track.samples.sort(function (a, b) {
        return a.pts - b.pts;
      });
      this.observer.trigger(events["default"].FRAG_PARSING_USERDATA, {
        samples: track.samples
      });
    }

    track.samples = [];
  };

  return MP4Remuxer;
}();

function PTSNormalize(value, reference) {
  var offset;

  if (reference === undefined) {
    return value;
  }

  if (reference < value) {
    // - 2^33
    offset = -8589934592;
  } else {
    // + 2^33
    offset = 8589934592;
  }
  /* PTS is 33bit (from 0 to 2^33 -1)
    if diff between value and reference is bigger than half of the amplitude (2^32) then it means that
    PTS looping occured. fill the gap */


  while (Math.abs(value - reference) > 4294967296) {
    value += offset;
  }

  return value;
}

/* harmony default export */ var mp4_remuxer = (mp4_remuxer_MP4Remuxer);
// CONCATENATED MODULE: ./src/remux/passthrough-remuxer.js
/**
 * passthrough remuxer
*/


var passthrough_remuxer_PassThroughRemuxer = /*#__PURE__*/function () {
  function PassThroughRemuxer(observer) {
    this.observer = observer;
  }

  var _proto = PassThroughRemuxer.prototype;

  _proto.destroy = function destroy() {};

  _proto.resetTimeStamp = function resetTimeStamp() {};

  _proto.resetInitSegment = function resetInitSegment() {};

  _proto.remux = function remux(audioTrack, videoTrack, id3Track, textTrack, timeOffset, contiguous, accurateTimeOffset, rawData) {
    var observer = this.observer;
    var streamType = '';

    if (audioTrack) {
      streamType += 'audio';
    }

    if (videoTrack) {
      streamType += 'video';
    }

    observer.trigger(events["default"].FRAG_PARSING_DATA, {
      data1: rawData,
      startPTS: timeOffset,
      startDTS: timeOffset,
      type: streamType,
      hasAudio: !!audioTrack,
      hasVideo: !!videoTrack,
      nb: 1,
      dropped: 0
    }); // notify end of parsing

    observer.trigger(events["default"].FRAG_PARSED);
  };

  return PassThroughRemuxer;
}();

/* harmony default export */ var passthrough_remuxer = (passthrough_remuxer_PassThroughRemuxer);
// CONCATENATED MODULE: ./src/demux/demuxer-inline.js
/**
 *
 * inline demuxer: probe fragments and instantiate
 * appropriate demuxer depending on content type (TSDemuxer, AACDemuxer, ...)
 *
 */










 // see https://stackoverflow.com/a/11237259/589493

var global = Object(get_self_scope["getSelfScope"])(); // safeguard for code that might run both on worker and main thread

var now; // performance.now() not available on WebWorker, at least on Safari Desktop

try {
  now = global.performance.now.bind(global.performance);
} catch (err) {
  logger["logger"].debug('Unable to use Performance API on this environment');
  now = global.Date.now;
}

var demuxer_inline_DemuxerInline = /*#__PURE__*/function () {
  function DemuxerInline(observer, typeSupported, config, vendor) {
    this.observer = observer;
    this.typeSupported = typeSupported;
    this.config = config;
    this.vendor = vendor;
  }

  var _proto = DemuxerInline.prototype;

  _proto.destroy = function destroy() {
    var demuxer = this.demuxer;

    if (demuxer) {
      demuxer.destroy();
    }
  };

  _proto.push = function push(data, decryptdata, initSegment, audioCodec, videoCodec, timeOffset, discontinuity, trackSwitch, contiguous, duration, accurateTimeOffset, defaultInitPTS) {
    var _this = this;

    if (data.byteLength > 0 && decryptdata != null && decryptdata.key != null && decryptdata.method === 'AES-128') {
      var decrypter = this.decrypter;

      if (decrypter == null) {
        decrypter = this.decrypter = new crypt_decrypter["default"](this.observer, this.config);
      }

      var startTime = now();
      decrypter.decrypt(data, decryptdata.key.buffer, decryptdata.iv.buffer, function (decryptedData) {
        var endTime = now();

        _this.observer.trigger(events["default"].FRAG_DECRYPTED, {
          stats: {
            tstart: startTime,
            tdecrypt: endTime
          }
        });

        _this.pushDecrypted(new Uint8Array(decryptedData), decryptdata, new Uint8Array(initSegment), audioCodec, videoCodec, timeOffset, discontinuity, trackSwitch, contiguous, duration, accurateTimeOffset, defaultInitPTS);
      });
    } else {
      this.pushDecrypted(new Uint8Array(data), decryptdata, new Uint8Array(initSegment), audioCodec, videoCodec, timeOffset, discontinuity, trackSwitch, contiguous, duration, accurateTimeOffset, defaultInitPTS);
    }
  };

  _proto.pushDecrypted = function pushDecrypted(data, decryptdata, initSegment, audioCodec, videoCodec, timeOffset, discontinuity, trackSwitch, contiguous, duration, accurateTimeOffset, defaultInitPTS) {
    var demuxer = this.demuxer;
    var remuxer = this.remuxer;

    if (!demuxer || // in case of continuity change, or track switch
    // we might switch from content type (AAC container to TS container, or TS to fmp4 for example)
    discontinuity || trackSwitch) {
      var observer = this.observer;
      var typeSupported = this.typeSupported;
      var config = this.config; // probing order is TS/MP4/AAC/MP3

      var muxConfig = [{
        demux: tsdemuxer,
        remux: mp4_remuxer
      }, {
        demux: mp4demuxer["default"],
        remux: passthrough_remuxer
      }, {
        demux: aacdemuxer,
        remux: mp4_remuxer
      }, {
        demux: mp3demuxer,
        remux: mp4_remuxer
      }]; // probe for content type

      var mux;

      for (var i = 0, len = muxConfig.length; i < len; i++) {
        mux = muxConfig[i];

        if (mux.demux.probe(data)) {
          break;
        }
      }

      if (!mux) {
        observer.trigger(events["default"].ERROR, {
          type: errors["ErrorTypes"].MEDIA_ERROR,
          details: errors["ErrorDetails"].FRAG_PARSING_ERROR,
          fatal: true,
          reason: 'no demux matching with content found'
        });
        return;
      } // so let's check that current remuxer and demuxer are still valid


      if (!remuxer || !(remuxer instanceof mux.remux)) {
        remuxer = new mux.remux(observer, config, typeSupported, this.vendor);
      }

      if (!demuxer || !(demuxer instanceof mux.demux)) {
        demuxer = new mux.demux(observer, remuxer, config, typeSupported);
        this.probe = mux.demux.probe;
      }

      this.demuxer = demuxer;
      this.remuxer = remuxer;
    }

    if (discontinuity || trackSwitch) {
      demuxer.resetInitSegment(initSegment, audioCodec, videoCodec, duration);
      remuxer.resetInitSegment();
    }

    if (discontinuity) {
      demuxer.resetTimeStamp(defaultInitPTS);
      remuxer.resetTimeStamp(defaultInitPTS);
    }

    if (typeof demuxer.setDecryptData === 'function') {
      demuxer.setDecryptData(decryptdata);
    }

    demuxer.append(data, timeOffset, contiguous, accurateTimeOffset);
  };

  return DemuxerInline;
}();

/* harmony default export */ var demuxer_inline = __webpack_exports__["default"] = (demuxer_inline_DemuxerInline);

/***/ }),

/***/ "./src/demux/demuxer-worker.js":
/*!*************************************!*\
  !*** ./src/demux/demuxer-worker.js ***!
  \*************************************/
/*! exports provided: default */
/*! ModuleConcatenation bailout: Module is referenced from these modules with unsupported syntax: ./src/demux/demuxer.js (referenced with require.resolve) */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _demux_demuxer_inline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../demux/demuxer-inline */ "./src/demux/demuxer-inline.js");
/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../events */ "./src/events.js");
/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/logger */ "./src/utils/logger.js");
/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! eventemitter3 */ "./node_modules/eventemitter3/index.js");
/* harmony import */ var eventemitter3__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(eventemitter3__WEBPACK_IMPORTED_MODULE_3__);
/* demuxer web worker.
 *  - listen to worker message, and trigger DemuxerInline upon reception of Fragments.
 *  - provides MP4 Boxes back to main thread using [transferable objects](https://developers.google.com/web/updates/2011/12/Transferable-Objects-Lightning-Fast) in order to minimize message passing overhead.
 */





var DemuxerWorker = function DemuxerWorker(self) {
  // observer setup
  var observer = new eventemitter3__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();

  observer.trigger = function trigger(event) {
    for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      data[_key - 1] = arguments[_key];
    }

    observer.emit.apply(observer, [event, event].concat(data));
  };

  observer.off = function off(event) {
    for (var _len2 = arguments.length, data = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      data[_key2 - 1] = arguments[_key2];
    }

    observer.removeListener.apply(observer, [event].concat(data));
  };

  var forwardMessage = function forwardMessage(ev, data) {
    self.postMessage({
      event: ev,
      data: data
    });
  };

  self.addEventListener('message', function (ev) {
    var data = ev.data; // console.log('demuxer cmd:' + data.cmd);

    switch (data.cmd) {
      case 'init':
        var config = JSON.parse(data.config);
        self.demuxer = new _demux_demuxer_inline__WEBPACK_IMPORTED_MODULE_0__["default"](observer, data.typeSupported, config, data.vendor);
        Object(_utils_logger__WEBPACK_IMPORTED_MODULE_2__["enableLogs"])(config.debug); // signal end of worker init

        forwardMessage('init', null);
        break;

      case 'demux':
        self.demuxer.push(data.data, data.decryptdata, data.initSegment, data.audioCodec, data.videoCodec, data.timeOffset, data.discontinuity, data.trackSwitch, data.contiguous, data.duration, data.accurateTimeOffset, data.defaultInitPTS);
        break;

      default:
        break;
    }
  }); // forward events to main thread

  observer.on(_events__WEBPACK_IMPORTED_MODULE_1__["default"].FRAG_DECRYPTED, forwardMessage);
  observer.on(_events__WEBPACK_IMPORTED_MODULE_1__["default"].FRAG_PARSING_INIT_SEGMENT, forwardMessage);
  observer.on(_events__WEBPACK_IMPORTED_MODULE_1__["default"].FRAG_PARSED, forwardMessage);
  observer.on(_events__WEBPACK_IMPORTED_MODULE_1__["default"].ERROR, forwardMessage);
  observer.on(_events__WEBPACK_IMPORTED_MODULE_1__["default"].FRAG_PARSING_METADATA, forwardMessage);
  observer.on(_events__WEBPACK_IMPORTED_MODULE_1__["default"].FRAG_PARSING_USERDATA, forwardMessage);
  observer.on(_events__WEBPACK_IMPORTED_MODULE_1__["default"].INIT_PTS_FOUND, forwardMessage); // special case for FRAG_PARSING_DATA: pass data1/data2 as transferable object (no copy)

  observer.on(_events__WEBPACK_IMPORTED_MODULE_1__["default"].FRAG_PARSING_DATA, function (ev, data) {
    var transferable = [];
    var message = {
      event: ev,
      data: data
    };

    if (data.data1) {
      message.data1 = data.data1.buffer;
      transferable.push(data.data1.buffer);
      delete data.data1;
    }

    if (data.data2) {
      message.data2 = data.data2.buffer;
      transferable.push(data.data2.buffer);
      delete data.data2;
    }

    self.postMessage(message, transferable);
  });
};

/* harmony default export */ __webpack_exports__["default"] = (DemuxerWorker);

/***/ }),

/***/ "./src/demux/id3.js":
/*!**************************!*\
  !*** ./src/demux/id3.js ***!
  \**************************/
/*! exports provided: default, utf8ArrayToStr */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "utf8ArrayToStr", function() { return utf8ArrayToStr; });
/* harmony import */ var _utils_get_self_scope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/get-self-scope */ "./src/utils/get-self-scope.js");

/**
 * ID3 parser
 */

var ID3 = /*#__PURE__*/function () {
  function ID3() {}

  /**
   * Returns true if an ID3 header can be found at offset in data
   * @param {Uint8Array} data - The data to search in
   * @param {number} offset - The offset at which to start searching
   * @return {boolean} - True if an ID3 header is found
   */
  ID3.isHeader = function isHeader(data, offset) {
    /*
    * http://id3.org/id3v2.3.0
    * [0]     = 'I'
    * [1]     = 'D'
    * [2]     = '3'
    * [3,4]   = {Version}
    * [5]     = {Flags}
    * [6-9]   = {ID3 Size}
    *
    * An ID3v2 tag can be detected with the following pattern:
    *  $49 44 33 yy yy xx zz zz zz zz
    * Where yy is less than $FF, xx is the 'flags' byte and zz is less than $80
    */
    if (offset + 10 <= data.length) {
      // look for 'ID3' identifier
      if (data[offset] === 0x49 && data[offset + 1] === 0x44 && data[offset + 2] === 0x33) {
        // check version is within range
        if (data[offset + 3] < 0xFF && data[offset + 4] < 0xFF) {
          // check size is within range
          if (data[offset + 6] < 0x80 && data[offset + 7] < 0x80 && data[offset + 8] < 0x80 && data[offset + 9] < 0x80) {
            return true;
          }
        }
      }
    }

    return false;
  }
  /**
   * Returns true if an ID3 footer can be found at offset in data
   * @param {Uint8Array} data - The data to search in
   * @param {number} offset - The offset at which to start searching
   * @return {boolean} - True if an ID3 footer is found
   */
  ;

  ID3.isFooter = function isFooter(data, offset) {
    /*
    * The footer is a copy of the header, but with a different identifier
    */
    if (offset + 10 <= data.length) {
      // look for '3DI' identifier
      if (data[offset] === 0x33 && data[offset + 1] === 0x44 && data[offset + 2] === 0x49) {
        // check version is within range
        if (data[offset + 3] < 0xFF && data[offset + 4] < 0xFF) {
          // check size is within range
          if (data[offset + 6] < 0x80 && data[offset + 7] < 0x80 && data[offset + 8] < 0x80 && data[offset + 9] < 0x80) {
            return true;
          }
        }
      }
    }

    return false;
  }
  /**
   * Returns any adjacent ID3 tags found in data starting at offset, as one block of data
   * @param {Uint8Array} data - The data to search in
   * @param {number} offset - The offset at which to start searching
   * @return {Uint8Array} - The block of data containing any ID3 tags found
   */
  ;

  ID3.getID3Data = function getID3Data(data, offset) {
    var front = offset;
    var length = 0;

    while (ID3.isHeader(data, offset)) {
      // ID3 header is 10 bytes
      length += 10;

      var size = ID3._readSize(data, offset + 6);

      length += size;

      if (ID3.isFooter(data, offset + 10)) {
        // ID3 footer is 10 bytes
        length += 10;
      }

      offset += length;
    }

    if (length > 0) {
      return data.subarray(front, front + length);
    }

    return undefined;
  };

  ID3._readSize = function _readSize(data, offset) {
    var size = 0;
    size = (data[offset] & 0x7f) << 21;
    size |= (data[offset + 1] & 0x7f) << 14;
    size |= (data[offset + 2] & 0x7f) << 7;
    size |= data[offset + 3] & 0x7f;
    return size;
  }
  /**
   * Searches for the Elementary Stream timestamp found in the ID3 data chunk
   * @param {Uint8Array} data - Block of data containing one or more ID3 tags
   * @return {number} - The timestamp
   */
  ;

  ID3.getTimeStamp = function getTimeStamp(data) {
    var frames = ID3.getID3Frames(data);

    for (var i = 0; i < frames.length; i++) {
      var frame = frames[i];

      if (ID3.isTimeStampFrame(frame)) {
        return ID3._readTimeStamp(frame);
      }
    }

    return undefined;
  }
  /**
   * Returns true if the ID3 frame is an Elementary Stream timestamp frame
   * @param {ID3 frame} frame
   */
  ;

  ID3.isTimeStampFrame = function isTimeStampFrame(frame) {
    return frame && frame.key === 'PRIV' && frame.info === 'com.apple.streaming.transportStreamTimestamp';
  };

  ID3._getFrameData = function _getFrameData(data) {
    /*
    Frame ID       $xx xx xx xx (four characters)
    Size           $xx xx xx xx
    Flags          $xx xx
    */
    var type = String.fromCharCode(data[0], data[1], data[2], data[3]);

    var size = ID3._readSize(data, 4); // skip frame id, size, and flags


    var offset = 10;
    return {
      type: type,
      size: size,
      data: data.subarray(offset, offset + size)
    };
  }
  /**
   * Returns an array of ID3 frames found in all the ID3 tags in the id3Data
   * @param {Uint8Array} id3Data - The ID3 data containing one or more ID3 tags
   * @return {ID3 frame[]} - Array of ID3 frame objects
   */
  ;

  ID3.getID3Frames = function getID3Frames(id3Data) {
    var offset = 0;
    var frames = [];

    while (ID3.isHeader(id3Data, offset)) {
      var size = ID3._readSize(id3Data, offset + 6); // skip past ID3 header


      offset += 10;
      var end = offset + size; // loop through frames in the ID3 tag

      while (offset + 8 < end) {
        var frameData = ID3._getFrameData(id3Data.subarray(offset));

        var frame = ID3._decodeFrame(frameData);

        if (frame) {
          frames.push(frame);
        } // skip frame header and frame data


        offset += frameData.size + 10;
      }

      if (ID3.isFooter(id3Data, offset)) {
        offset += 10;
      }
    }

    return frames;
  };

  ID3._decodeFrame = function _decodeFrame(frame) {
    if (frame.type === 'PRIV') {
      return ID3._decodePrivFrame(frame);
    } else if (frame.type[0] === 'W') {
      return ID3._decodeURLFrame(frame);
    }

    return ID3._decodeTextFrame(frame);
  };

  ID3._readTimeStamp = function _readTimeStamp(timeStampFrame) {
    if (timeStampFrame.data.byteLength === 8) {
      var data = new Uint8Array(timeStampFrame.data); // timestamp is 33 bit expressed as a big-endian eight-octet number,
      // with the upper 31 bits set to zero.

      var pts33Bit = data[3] & 0x1;
      var timestamp = (data[4] << 23) + (data[5] << 15) + (data[6] << 7) + data[7];
      timestamp /= 45;

      if (pts33Bit) {
        timestamp += 47721858.84;
      } // 2^32 / 90


      return Math.round(timestamp);
    }

    return undefined;
  };

  ID3._decodePrivFrame = function _decodePrivFrame(frame) {
    /*
    Format: <text string>\0<binary data>
    */
    if (frame.size < 2) {
      return undefined;
    }

    var owner = ID3._utf8ArrayToStr(frame.data, true);

    var privateData = new Uint8Array(frame.data.subarray(owner.length + 1));
    return {
      key: frame.type,
      info: owner,
      data: privateData.buffer
    };
  };

  ID3._decodeTextFrame = function _decodeTextFrame(frame) {
    if (frame.size < 2) {
      return undefined;
    }

    if (frame.type === 'TXXX') {
      /*
      Format:
      [0]   = {Text Encoding}
      [1-?] = {Description}\0{Value}
      */
      var index = 1;

      var description = ID3._utf8ArrayToStr(frame.data.subarray(index), true);

      index += description.length + 1;

      var value = ID3._utf8ArrayToStr(frame.data.subarray(index));

      return {
        key: frame.type,
        info: description,
        data: value
      };
    } else {
      /*
      Format:
      [0]   = {Text Encoding}
      [1-?] = {Value}
      */
      var text = ID3._utf8ArrayToStr(frame.data.subarray(1));

      return {
        key: frame.type,
        data: text
      };
    }
  };

  ID3._decodeURLFrame = function _decodeURLFrame(frame) {
    if (frame.type === 'WXXX') {
      /*
      Format:
      [0]   = {Text Encoding}
      [1-?] = {Description}\0{URL}
      */
      if (frame.size < 2) {
        return undefined;
      }

      var index = 1;

      var description = ID3._utf8ArrayToStr(frame.data.subarray(index), true);

      index += description.length + 1;

      var value = ID3._utf8ArrayToStr(frame.data.subarray(index));

      return {
        key: frame.type,
        info: description,
        data: value
      };
    } else {
      /*
      Format:
      [0-?] = {URL}
      */
      var url = ID3._utf8ArrayToStr(frame.data);

      return {
        key: frame.type,
        data: url
      };
    }
  } // http://stackoverflow.com/questions/8936984/uint8array-to-string-in-javascript/22373197
  // http://www.onicos.com/staff/iz/amuse/javascript/expert/utf.txt

  /* utf.js - UTF-8 <=> UTF-16 convertion
   *
   * Copyright (C) 1999 Masanao Izumo <iz@onicos.co.jp>
   * Version: 1.0
   * LastModified: Dec 25 1999
   * This library is free.  You can redistribute it and/or modify it.
   */
  ;

  ID3._utf8ArrayToStr = function _utf8ArrayToStr(array, exitOnNull) {
    if (exitOnNull === void 0) {
      exitOnNull = false;
    }

    var decoder = getTextDecoder();

    if (decoder) {
      var decoded = decoder.decode(array);

      if (exitOnNull) {
        // grab up to the first null
        var idx = decoded.indexOf('\0');
        return idx !== -1 ? decoded.substring(0, idx) : decoded;
      } // remove any null characters


      return decoded.replace(/\0/g, '');
    }

    var len = array.length;
    var c;
    var char2;
    var char3;
    var out = '';
    var i = 0;

    while (i < len) {
      c = array[i++];

      if (c === 0x00 && exitOnNull) {
        return out;
      } else if (c === 0x00 || c === 0x03) {
        // If the character is 3 (END_OF_TEXT) or 0 (NULL) then skip it
        continue;
      }

      switch (c >> 4) {
        case 0:
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
        case 7:
          // 0xxxxxxx
          out += String.fromCharCode(c);
          break;

        case 12:
        case 13:
          // 110x xxxx   10xx xxxx
          char2 = array[i++];
          out += String.fromCharCode((c & 0x1F) << 6 | char2 & 0x3F);
          break;

        case 14:
          // 1110 xxxx  10xx xxxx  10xx xxxx
          char2 = array[i++];
          char3 = array[i++];
          out += String.fromCharCode((c & 0x0F) << 12 | (char2 & 0x3F) << 6 | (char3 & 0x3F) << 0);
          break;

        default:
      }
    }

    return out;
  };

  return ID3;
}();

var decoder;

function getTextDecoder() {
  var global = Object(_utils_get_self_scope__WEBPACK_IMPORTED_MODULE_0__["getSelfScope"])(); // safeguard for code that might run both on worker and main thread

  if (!decoder && typeof global.TextDecoder !== 'undefined') {
    decoder = new global.TextDecoder('utf-8');
  }

  return decoder;
}

var utf8ArrayToStr = ID3._utf8ArrayToStr;
/* harmony default export */ __webpack_exports__["default"] = (ID3);


/***/ }),

/***/ "./src/demux/mp4demuxer.js":
/*!*********************************!*\
  !*** ./src/demux/mp4demuxer.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/logger */ "./src/utils/logger.js");
/* harmony import */ var _events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../events */ "./src/events.js");
/**
 * MP4 demuxer
 */


var UINT32_MAX = Math.pow(2, 32) - 1;

var MP4Demuxer = /*#__PURE__*/function () {
  function MP4Demuxer(observer, remuxer) {
    this.observer = observer;
    this.remuxer = remuxer;
  }

  var _proto = MP4Demuxer.prototype;

  _proto.resetTimeStamp = function resetTimeStamp(initPTS) {
    this.initPTS = initPTS;
  };

  _proto.resetInitSegment = function resetInitSegment(initSegment, audioCodec, videoCodec, duration) {
    // jshint unused:false
    if (initSegment && initSegment.byteLength) {
      var initData = this.initData = MP4Demuxer.parseInitSegment(initSegment); // default audio codec if nothing specified
      // TODO : extract that from initsegment

      if (audioCodec == null) {
        audioCodec = 'mp4a.40.5';
      }

      if (videoCodec == null) {
        videoCodec = 'avc1.42e01e';
      }

      var tracks = {};

      if (initData.audio && initData.video) {
        tracks.audiovideo = {
          container: 'video/mp4',
          codec: audioCodec + ',' + videoCodec,
          initSegment: duration ? initSegment : null
        };
      } else {
        if (initData.audio) {
          tracks.audio = {
            container: 'audio/mp4',
            codec: audioCodec,
            initSegment: duration ? initSegment : null
          };
        }

        if (initData.video) {
          tracks.video = {
            container: 'video/mp4',
            codec: videoCodec,
            initSegment: duration ? initSegment : null
          };
        }
      }

      this.observer.trigger(_events__WEBPACK_IMPORTED_MODULE_1__["default"].FRAG_PARSING_INIT_SEGMENT, {
        tracks: tracks
      });
    } else {
      if (audioCodec) {
        this.audioCodec = audioCodec;
      }

      if (videoCodec) {
        this.videoCodec = videoCodec;
      }
    }
  };

  MP4Demuxer.probe = function probe(data) {
    // ensure we find a moof box in the first 16 kB
    return MP4Demuxer.findBox({
      data: data,
      start: 0,
      end: Math.min(data.length, 16384)
    }, ['moof']).length > 0;
  };

  MP4Demuxer.bin2str = function bin2str(buffer) {
    return String.fromCharCode.apply(null, buffer);
  };

  MP4Demuxer.readUint16 = function readUint16(buffer, offset) {
    if (buffer.data) {
      offset += buffer.start;
      buffer = buffer.data;
    }

    var val = buffer[offset] << 8 | buffer[offset + 1];
    return val < 0 ? 65536 + val : val;
  };

  MP4Demuxer.readUint32 = function readUint32(buffer, offset) {
    if (buffer.data) {
      offset += buffer.start;
      buffer = buffer.data;
    }

    var val = buffer[offset] << 24 | buffer[offset + 1] << 16 | buffer[offset + 2] << 8 | buffer[offset + 3];
    return val < 0 ? 4294967296 + val : val;
  };

  MP4Demuxer.writeUint32 = function writeUint32(buffer, offset, value) {
    if (buffer.data) {
      offset += buffer.start;
      buffer = buffer.data;
    }

    buffer[offset] = value >> 24;
    buffer[offset + 1] = value >> 16 & 0xff;
    buffer[offset + 2] = value >> 8 & 0xff;
    buffer[offset + 3] = value & 0xff;
  } // Find the data for a box specified by its path
  ;

  MP4Demuxer.findBox = function findBox(data, path) {
    var results = [],
        i,
        size,
        type,
        end,
        subresults,
        start,
        endbox;

    if (data.data) {
      start = data.start;
      end = data.end;
      data = data.data;
    } else {
      start = 0;
      end = data.byteLength;
    }

    if (!path.length) {
      // short-circuit the search for empty paths
      return null;
    }

    for (i = start; i < end;) {
      size = MP4Demuxer.readUint32(data, i);
      type = MP4Demuxer.bin2str(data.subarray(i + 4, i + 8));
      endbox = size > 1 ? i + size : end;

      if (type === path[0]) {
        if (path.length === 1) {
          // this is the end of the path and we've found the box we were
          // looking for
          results.push({
            data: data,
            start: i + 8,
            end: endbox
          });
        } else {
          // recursively search for the next box along the path
          subresults = MP4Demuxer.findBox({
            data: data,
            start: i + 8,
            end: endbox
          }, path.slice(1));

          if (subresults.length) {
            results = results.concat(subresults);
          }
        }
      }

      i = endbox;
    } // we've finished searching all of data


    return results;
  };

  MP4Demuxer.parseSegmentIndex = function parseSegmentIndex(initSegment) {
    var moov = MP4Demuxer.findBox(initSegment, ['moov'])[0];
    var moovEndOffset = moov ? moov.end : null; // we need this in case we need to chop of garbage of the end of current data

    var index = 0;
    var sidx = MP4Demuxer.findBox(initSegment, ['sidx']);
    var references;

    if (!sidx || !sidx[0]) {
      return null;
    }

    references = [];
    sidx = sidx[0];
    var version = sidx.data[0]; // set initial offset, we skip the reference ID (not needed)

    index = version === 0 ? 8 : 16;
    var timescale = MP4Demuxer.readUint32(sidx, index);
    index += 4; // TODO: parse earliestPresentationTime and firstOffset
    // usually zero in our case

    var earliestPresentationTime = 0;
    var firstOffset = 0;

    if (version === 0) {
      index += 8;
    } else {
      index += 16;
    } // skip reserved


    index += 2;
    var startByte = sidx.end + firstOffset;
    var referencesCount = MP4Demuxer.readUint16(sidx, index);
    index += 2;

    for (var i = 0; i < referencesCount; i++) {
      var referenceIndex = index;
      var referenceInfo = MP4Demuxer.readUint32(sidx, referenceIndex);
      referenceIndex += 4;
      var referenceSize = referenceInfo & 0x7FFFFFFF;
      var referenceType = (referenceInfo & 0x80000000) >>> 31;

      if (referenceType === 1) {
        console.warn('SIDX has hierarchical references (not supported)');
        return;
      }

      var subsegmentDuration = MP4Demuxer.readUint32(sidx, referenceIndex);
      referenceIndex += 4;
      references.push({
        referenceSize: referenceSize,
        subsegmentDuration: subsegmentDuration,
        // unscaled
        info: {
          duration: subsegmentDuration / timescale,
          start: startByte,
          end: startByte + referenceSize - 1
        }
      });
      startByte += referenceSize; // Skipping 1 bit for |startsWithSap|, 3 bits for |sapType|, and 28 bits
      // for |sapDelta|.

      referenceIndex += 4; // skip to next ref

      index = referenceIndex;
    }

    return {
      earliestPresentationTime: earliestPresentationTime,
      timescale: timescale,
      version: version,
      referencesCount: referencesCount,
      references: references,
      moovEndOffset: moovEndOffset
    };
  }
  /**
   * Parses an MP4 initialization segment and extracts stream type and
   * timescale values for any declared tracks. Timescale values indicate the
   * number of clock ticks per second to assume for time-based values
   * elsewhere in the MP4.
   *
   * To determine the start time of an MP4, you need two pieces of
   * information: the timescale unit and the earliest base media decode
   * time. Multiple timescales can be specified within an MP4 but the
   * base media decode time is always expressed in the timescale from
   * the media header box for the track:
   * ```
   * moov > trak > mdia > mdhd.timescale
   * moov > trak > mdia > hdlr
   * ```
   * @param init {Uint8Array} the bytes of the init segment
   * @return {object} a hash of track type to timescale values or null if
   * the init segment is malformed.
   */
  ;

  MP4Demuxer.parseInitSegment = function parseInitSegment(initSegment) {
    var result = [];
    var traks = MP4Demuxer.findBox(initSegment, ['moov', 'trak']);
    traks.forEach(function (trak) {
      var tkhd = MP4Demuxer.findBox(trak, ['tkhd'])[0];

      if (tkhd) {
        var version = tkhd.data[tkhd.start];
        var index = version === 0 ? 12 : 20;
        var trackId = MP4Demuxer.readUint32(tkhd, index);
        var mdhd = MP4Demuxer.findBox(trak, ['mdia', 'mdhd'])[0];

        if (mdhd) {
          version = mdhd.data[mdhd.start];
          index = version === 0 ? 12 : 20;
          var timescale = MP4Demuxer.readUint32(mdhd, index);
          var hdlr = MP4Demuxer.findBox(trak, ['mdia', 'hdlr'])[0];

          if (hdlr) {
            var hdlrType = MP4Demuxer.bin2str(hdlr.data.subarray(hdlr.start + 8, hdlr.start + 12));
            var type = {
              'soun': 'audio',
              'vide': 'video'
            }[hdlrType];

            if (type) {
              // extract codec info. TODO : parse codec details to be able to build MIME type
              var codecBox = MP4Demuxer.findBox(trak, ['mdia', 'minf', 'stbl', 'stsd']);

              if (codecBox.length) {
                codecBox = codecBox[0];
                var codecType = MP4Demuxer.bin2str(codecBox.data.subarray(codecBox.start + 12, codecBox.start + 16));
                _utils_logger__WEBPACK_IMPORTED_MODULE_0__["logger"].log("MP4Demuxer:" + type + ":" + codecType + " found");
              }

              result[trackId] = {
                timescale: timescale,
                type: type
              };
              result[type] = {
                timescale: timescale,
                id: trackId
              };
            }
          }
        }
      }
    });
    return result;
  }
  /**
  * Determine the base media decode start time, in seconds, for an MP4
  * fragment. If multiple fragments are specified, the earliest time is
  * returned.
  *
  * The base media decode time can be parsed from track fragment
  * metadata:
  * ```
  * moof > traf > tfdt.baseMediaDecodeTime
  * ```
  * It requires the timescale value from the mdhd to interpret.
  *
  * @param timescale {object} a hash of track ids to timescale values.
  * @return {number} the earliest base media decode start time for the
  * fragment, in seconds
  */
  ;

  MP4Demuxer.getStartDTS = function getStartDTS(initData, fragment) {
    var trafs, baseTimes, result; // we need info from two childrend of each track fragment box

    trafs = MP4Demuxer.findBox(fragment, ['moof', 'traf']); // determine the start times for each track

    baseTimes = [].concat.apply([], trafs.map(function (traf) {
      return MP4Demuxer.findBox(traf, ['tfhd']).map(function (tfhd) {
        var id, scale, baseTime; // get the track id from the tfhd

        id = MP4Demuxer.readUint32(tfhd, 4); // assume a 90kHz clock if no timescale was specified

        scale = initData[id].timescale || 90e3; // get the base media decode time from the tfdt

        baseTime = MP4Demuxer.findBox(traf, ['tfdt']).map(function (tfdt) {
          var version, result;
          version = tfdt.data[tfdt.start];
          result = MP4Demuxer.readUint32(tfdt, 4);

          if (version === 1) {
            result *= Math.pow(2, 32);
            result += MP4Demuxer.readUint32(tfdt, 8);
          }

          return result;
        })[0]; // convert base time to seconds

        return baseTime / scale;
      });
    })); // return the minimum

    result = Math.min.apply(null, baseTimes);
    return isFinite(result) ? result : 0;
  };

  MP4Demuxer.offsetStartDTS = function offsetStartDTS(initData, fragment, timeOffset) {
    MP4Demuxer.findBox(fragment, ['moof', 'traf']).map(function (traf) {
      return MP4Demuxer.findBox(traf, ['tfhd']).map(function (tfhd) {
        // get the track id from the tfhd
        var id = MP4Demuxer.readUint32(tfhd, 4); // assume a 90kHz clock if no timescale was specified

        var timescale = initData[id].timescale || 90e3; // get the base media decode time from the tfdt

        MP4Demuxer.findBox(traf, ['tfdt']).map(function (tfdt) {
          var version = tfdt.data[tfdt.start];
          var baseMediaDecodeTime = MP4Demuxer.readUint32(tfdt, 4);

          if (version === 0) {
            MP4Demuxer.writeUint32(tfdt, 4, baseMediaDecodeTime - timeOffset * timescale);
          } else {
            baseMediaDecodeTime *= Math.pow(2, 32);
            baseMediaDecodeTime += MP4Demuxer.readUint32(tfdt, 8);
            baseMediaDecodeTime -= timeOffset * timescale;
            baseMediaDecodeTime = Math.max(baseMediaDecodeTime, 0);
            var upper = Math.floor(baseMediaDecodeTime / (UINT32_MAX + 1));
            var lower = Math.floor(baseMediaDecodeTime % (UINT32_MAX + 1));
            MP4Demuxer.writeUint32(tfdt, 4, upper);
            MP4Demuxer.writeUint32(tfdt, 8, lower);
          }
        });
      });
    });
  } // feed incoming data to the front of the parsing pipeline
  ;

  _proto.append = function append(data, timeOffset, contiguous, accurateTimeOffset) {
    var initData = this.initData;

    if (!initData) {
      this.resetInitSegment(data, this.audioCodec, this.videoCodec, false);
      initData = this.initData;
    }

    var startDTS,
        initPTS = this.initPTS;

    if (initPTS === undefined) {
      var _startDTS = MP4Demuxer.getStartDTS(initData, data);

      this.initPTS = initPTS = _startDTS - timeOffset;
      this.observer.trigger(_events__WEBPACK_IMPORTED_MODULE_1__["default"].INIT_PTS_FOUND, {
        initPTS: initPTS
      });
    }

    MP4Demuxer.offsetStartDTS(initData, data, initPTS);
    startDTS = MP4Demuxer.getStartDTS(initData, data);
    this.remuxer.remux(initData.audio, initData.video, null, null, startDTS, contiguous, accurateTimeOffset, data);
  };

  _proto.destroy = function destroy() {};

  return MP4Demuxer;
}();

/* harmony default export */ __webpack_exports__["default"] = (MP4Demuxer);

/***/ }),

/***/ "./src/errors.ts":
/*!***********************!*\
  !*** ./src/errors.ts ***!
  \***********************/
/*! exports provided: ErrorTypes, ErrorDetails */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrorTypes", function() { return ErrorTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrorDetails", function() { return ErrorDetails; });
var ErrorTypes;
/**
 * @enum {ErrorDetails}
 * @typedef {string} ErrorDetail
 */

(function (ErrorTypes) {
  ErrorTypes["NETWORK_ERROR"] = "networkError";
  ErrorTypes["MEDIA_ERROR"] = "mediaError";
  ErrorTypes["KEY_SYSTEM_ERROR"] = "keySystemError";
  ErrorTypes["MUX_ERROR"] = "muxError";
  ErrorTypes["OTHER_ERROR"] = "otherError";
})(ErrorTypes || (ErrorTypes = {}));

var ErrorDetails;

(function (ErrorDetails) {
  ErrorDetails["KEY_SYSTEM_NO_KEYS"] = "keySystemNoKeys";
  ErrorDetails["KEY_SYSTEM_NO_ACCESS"] = "keySystemNoAccess";
  ErrorDetails["KEY_SYSTEM_NO_SESSION"] = "keySystemNoSession";
  ErrorDetails["KEY_SYSTEM_LICENSE_REQUEST_FAILED"] = "keySystemLicenseRequestFailed";
  ErrorDetails["KEY_SYSTEM_NO_INIT_DATA"] = "keySystemNoInitData";
  ErrorDetails["MANIFEST_LOAD_ERROR"] = "manifestLoadError";
  ErrorDetails["MANIFEST_LOAD_TIMEOUT"] = "manifestLoadTimeOut";
  ErrorDetails["MANIFEST_PARSING_ERROR"] = "manifestParsingError";
  ErrorDetails["MANIFEST_INCOMPATIBLE_CODECS_ERROR"] = "manifestIncompatibleCodecsError";
  ErrorDetails["LEVEL_EMPTY_ERROR"] = "levelEmptyError";
  ErrorDetails["LEVEL_LOAD_ERROR"] = "levelLoadError";
  ErrorDetails["LEVEL_LOAD_TIMEOUT"] = "levelLoadTimeOut";
  ErrorDetails["LEVEL_SWITCH_ERROR"] = "levelSwitchError";
  ErrorDetails["AUDIO_TRACK_LOAD_ERROR"] = "audioTrackLoadError";
  ErrorDetails["AUDIO_TRACK_LOAD_TIMEOUT"] = "audioTrackLoadTimeOut";
  ErrorDetails["FRAG_LOAD_ERROR"] = "fragLoadError";
  ErrorDetails["FRAG_LOAD_TIMEOUT"] = "fragLoadTimeOut";
  ErrorDetails["FRAG_DECRYPT_ERROR"] = "fragDecryptError";
  ErrorDetails["FRAG_PARSING_ERROR"] = "fragParsingError";
  ErrorDetails["REMUX_ALLOC_ERROR"] = "remuxAllocError";
  ErrorDetails["KEY_LOAD_ERROR"] = "keyLoadError";
  ErrorDetails["KEY_LOAD_TIMEOUT"] = "keyLoadTimeOut";
  ErrorDetails["BUFFER_ADD_CODEC_ERROR"] = "bufferAddCodecError";
  ErrorDetails["BUFFER_APPEND_ERROR"] = "bufferAppendError";
  ErrorDetails["BUFFER_APPENDING_ERROR"] = "bufferAppendingError";
  ErrorDetails["BUFFER_STALLED_ERROR"] = "bufferStalledError";
  ErrorDetails["BUFFER_FULL_ERROR"] = "bufferFullError";
  ErrorDetails["BUFFER_SEEK_OVER_HOLE"] = "bufferSeekOverHole";
  ErrorDetails["BUFFER_NUDGE_ON_STALL"] = "bufferNudgeOnStall";
  ErrorDetails["INTERNAL_EXCEPTION"] = "internalException";
})(ErrorDetails || (ErrorDetails = {}));

/***/ }),

/***/ "./src/events.js":
/*!***********************!*\
  !*** ./src/events.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * @readonly
 * @enum {string}
 */
var HlsEvents = {
  // fired before MediaSource is attaching to media element - data: { media }
  MEDIA_ATTACHING: 'hlsMediaAttaching',
  // fired when MediaSource has been succesfully attached to media element - data: { }
  MEDIA_ATTACHED: 'hlsMediaAttached',
  // fired before detaching MediaSource from media element - data: { }
  MEDIA_DETACHING: 'hlsMediaDetaching',
  // fired when MediaSource has been detached from media element - data: { }
  MEDIA_DETACHED: 'hlsMediaDetached',
  // fired when we buffer is going to be reset - data: { }
  BUFFER_RESET: 'hlsBufferReset',
  // fired when we know about the codecs that we need buffers for to push into - data: {tracks : { container, codec, levelCodec, initSegment, metadata }}
  BUFFER_CODECS: 'hlsBufferCodecs',
  // fired when sourcebuffers have been created - data: { tracks : tracks }
  BUFFER_CREATED: 'hlsBufferCreated',
  // fired when we append a segment to the buffer - data: { segment: segment object }
  BUFFER_APPENDING: 'hlsBufferAppending',
  // fired when we are done with appending a media segment to the buffer - data : { parent : segment parent that triggered BUFFER_APPENDING, pending : nb of segments waiting for appending for this segment parent}
  BUFFER_APPENDED: 'hlsBufferAppended',
  // fired when the stream is finished and we want to notify the media buffer that there will be no more data - data: { }
  BUFFER_EOS: 'hlsBufferEos',
  // fired when the media buffer should be flushed - data { startOffset, endOffset }
  BUFFER_FLUSHING: 'hlsBufferFlushing',
  // fired when the media buffer has been flushed - data: { }
  BUFFER_FLUSHED: 'hlsBufferFlushed',
  // fired to signal that a manifest loading starts - data: { url : manifestURL}
  MANIFEST_LOADING: 'hlsManifestLoading',
  // fired after manifest has been loaded - data: { levels : [available quality levels], audioTracks : [ available audio tracks], url : manifestURL, stats : { trequest, tfirst, tload, mtime}}
  MANIFEST_LOADED: 'hlsManifestLoaded',
  // fired after manifest has been parsed - data: { levels : [available quality levels], firstLevel : index of first quality level appearing in Manifest}
  MANIFEST_PARSED: 'hlsManifestParsed',
  // fired when a level switch is requested - data: { level : id of new level }
  LEVEL_SWITCHING: 'hlsLevelSwitching',
  // fired when a level switch is effective - data: { level : id of new level }
  LEVEL_SWITCHED: 'hlsLevelSwitched',
  // fired when a level playlist loading starts - data: { url : level URL, level : id of level being loaded}
  LEVEL_LOADING: 'hlsLevelLoading',
  // fired when a level playlist loading finishes - data: { details : levelDetails object, level : id of loaded level, stats : { trequest, tfirst, tload, mtime} }
  LEVEL_LOADED: 'hlsLevelLoaded',
  // fired when a level's details have been updated based on previous details, after it has been loaded - data: { details : levelDetails object, level : id of updated level }
  LEVEL_UPDATED: 'hlsLevelUpdated',
  // fired when a level's PTS information has been updated after parsing a fragment - data: { details : levelDetails object, level : id of updated level, drift: PTS drift observed when parsing last fragment }
  LEVEL_PTS_UPDATED: 'hlsLevelPtsUpdated',
  // fired to notify that levels have changed after removing a level - data: { levels : [available quality levels] }
  LEVELS_UPDATED: 'hlsLevelsUpdated',
  // fired to notify that audio track lists has been updated - data: { audioTracks : audioTracks }
  AUDIO_TRACKS_UPDATED: 'hlsAudioTracksUpdated',
  // fired when an audio track switching is requested - data: { id : audio track id }
  AUDIO_TRACK_SWITCHING: 'hlsAudioTrackSwitching',
  // fired when an audio track switch actually occurs - data: { id : audio track id }
  AUDIO_TRACK_SWITCHED: 'hlsAudioTrackSwitched',
  // fired when an audio track loading starts - data: { url : audio track URL, id : audio track id }
  AUDIO_TRACK_LOADING: 'hlsAudioTrackLoading',
  // fired when an audio track loading finishes - data: { details : levelDetails object, id : audio track id, stats : { trequest, tfirst, tload, mtime } }
  AUDIO_TRACK_LOADED: 'hlsAudioTrackLoaded',
  // fired to notify that subtitle track lists has been updated - data: { subtitleTracks : subtitleTracks }
  SUBTITLE_TRACKS_UPDATED: 'hlsSubtitleTracksUpdated',
  // fired when an subtitle track switch occurs - data: { id : subtitle track id }
  SUBTITLE_TRACK_SWITCH: 'hlsSubtitleTrackSwitch',
  // fired when a subtitle track loading starts - data: { url : subtitle track URL, id : subtitle track id }
  SUBTITLE_TRACK_LOADING: 'hlsSubtitleTrackLoading',
  // fired when a subtitle track loading finishes - data: { details : levelDetails object, id : subtitle track id, stats : { trequest, tfirst, tload, mtime } }
  SUBTITLE_TRACK_LOADED: 'hlsSubtitleTrackLoaded',
  // fired when a subtitle fragment has been processed - data: { success : boolean, frag : the processed frag }
  SUBTITLE_FRAG_PROCESSED: 'hlsSubtitleFragProcessed',
  // fired when a set of VTTCues to be managed externally has been parsed - data: { type: string, track: string, cues: [ VTTCue ] }
  CUES_PARSED: 'hlsCuesParsed',
  // fired when a text track to be managed externally is found - data: { tracks: [ { label: string, kind: string, default: boolean } ] }
  NON_NATIVE_TEXT_TRACKS_FOUND: 'hlsNonNativeTextTracksFound',
  // fired when the first timestamp is found - data: { id : demuxer id, initPTS: initPTS, frag : fragment object }
  INIT_PTS_FOUND: 'hlsInitPtsFound',
  // fired when a fragment loading starts - data: { frag : fragment object }
  FRAG_LOADING: 'hlsFragLoading',
  // fired when a fragment loading is progressing - data: { frag : fragment object, { trequest, tfirst, loaded } }
  FRAG_LOAD_PROGRESS: 'hlsFragLoadProgress',
  // Identifier for fragment load aborting for emergency switch down - data: { frag : fragment object }
  FRAG_LOAD_EMERGENCY_ABORTED: 'hlsFragLoadEmergencyAborted',
  // fired when a fragment loading is completed - data: { frag : fragment object, payload : fragment payload, stats : { trequest, tfirst, tload, length } }
  FRAG_LOADED: 'hlsFragLoaded',
  // fired when a fragment has finished decrypting - data: { id : demuxer id, frag: fragment object, payload : fragment payload, stats : { tstart, tdecrypt } }
  FRAG_DECRYPTED: 'hlsFragDecrypted',
  // fired when Init Segment has been extracted from fragment - data: { id : demuxer id, frag: fragment object, moov : moov MP4 box, codecs : codecs found while parsing fragment }
  FRAG_PARSING_INIT_SEGMENT: 'hlsFragParsingInitSegment',
  // fired when parsing sei text is completed - data: { id : demuxer id, frag: fragment object, samples : [ sei samples pes ] }
  FRAG_PARSING_USERDATA: 'hlsFragParsingUserdata',
  // fired when parsing id3 is completed - data: { id : demuxer id, frag: fragment object, samples : [ id3 samples pes ] }
  FRAG_PARSING_METADATA: 'hlsFragParsingMetadata',
  // fired when data have been extracted from fragment - data: { id : demuxer id, frag: fragment object, data1 : moof MP4 box or TS fragments, data2 : mdat MP4 box or null}
  FRAG_PARSING_DATA: 'hlsFragParsingData',
  // fired when fragment parsing is completed - data: { id : demuxer id, frag: fragment object }
  FRAG_PARSED: 'hlsFragParsed',
  // fired when fragment remuxed MP4 boxes have all been appended into SourceBuffer - data: { id : demuxer id, frag : fragment object, stats : { trequest, tfirst, tload, tparsed, tbuffered, length, bwEstimate } }
  FRAG_BUFFERED: 'hlsFragBuffered',
  // fired when fragment matching with current media position is changing - data : { id : demuxer id, frag : fragment object }
  FRAG_CHANGED: 'hlsFragChanged',
  // Identifier for a FPS drop event - data: { curentDropped, currentDecoded, totalDroppedFrames }
  FPS_DROP: 'hlsFpsDrop',
  // triggered when FPS drop triggers auto level capping - data: { level, droppedlevel }
  FPS_DROP_LEVEL_CAPPING: 'hlsFpsDropLevelCapping',
  // Identifier for an error event - data: { type : error type, details : error details, fatal : if true, hls.js cannot/will not try to recover, if false, hls.js will try to recover,other error specific data }
  ERROR: 'hlsError',
  // fired when hls.js instance starts destroying. Different from MEDIA_DETACHED as one could want to detach and reattach a media to the instance of hls.js to handle mid-rolls for example - data: { }
  DESTROYING: 'hlsDestroying',
  // fired when a decrypt key loading starts - data: { frag : fragment object }
  KEY_LOADING: 'hlsKeyLoading',
  // fired when a decrypt key loading is completed - data: { frag : fragment object, payload : key payload, stats : { trequest, tfirst, tload, length } }
  KEY_LOADED: 'hlsKeyLoaded',
  // fired upon stream controller state transitions - data: { previousState, nextState }
  STREAM_STATE_TRANSITION: 'hlsStreamStateTransition',
  // fired when the live back buffer is reached defined by the liveBackBufferLength config option - data : { bufferEnd: number }
  LIVE_BACK_BUFFER_REACHED: 'hlsLiveBackBufferReached'
};
/* harmony default export */ __webpack_exports__["default"] = (HlsEvents);

/***/ }),

/***/ "./src/hls.ts":
/*!*********************************!*\
  !*** ./src/hls.ts + 50 modules ***!
  \*********************************/
/*! exports provided: default */
/*! ModuleConcatenation bailout: Cannot concat with ./src/crypt/decrypter.js because of ./src/demux/demuxer-worker.js */
/*! ModuleConcatenation bailout: Cannot concat with ./src/demux/demuxer-inline.js because of ./src/demux/demuxer-worker.js */
/*! ModuleConcatenation bailout: Cannot concat with ./src/demux/id3.js because of ./src/demux/demuxer-worker.js */
/*! ModuleConcatenation bailout: Cannot concat with ./src/demux/mp4demuxer.js because of ./src/demux/demuxer-worker.js */
/*! ModuleConcatenation bailout: Cannot concat with ./src/errors.ts because of ./src/demux/demuxer-worker.js */
/*! ModuleConcatenation bailout: Cannot concat with ./src/events.js because of ./src/demux/demuxer-worker.js */
/*! ModuleConcatenation bailout: Cannot concat with ./src/polyfills/number.js because of ./src/demux/demuxer-worker.js */
/*! ModuleConcatenation bailout: Cannot concat with ./src/utils/get-self-scope.js because of ./src/demux/demuxer-worker.js */
/*! ModuleConcatenation bailout: Cannot concat with ./src/utils/logger.js because of ./src/demux/demuxer-worker.js */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/eventemitter3/index.js (<- Module is not an ECMAScript module) */
/*! ModuleConcatenation bailout: Cannot concat with ./node_modules/url-toolkit/src/url-toolkit.js (<- Module is not an ECMAScript module) */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, "default", function() { return /* binding */ hls_Hls; });

// NAMESPACE OBJECT: ./src/utils/cues.ts
var cues_namespaceObject = {};
__webpack_require__.r(cues_namespaceObject);
__webpack_require__.d(cues_namespaceObject, "newCue", function() { return newCue; });

// EXTERNAL MODULE: ./node_modules/url-toolkit/src/url-toolkit.js
var url_toolkit = __webpack_require__("./node_modules/url-toolkit/src/url-toolkit.js");

// EXTERNAL MODULE: ./src/errors.ts
var errors = __webpack_require__("./src/errors.ts");

// EXTERNAL MODULE: ./src/polyfills/number.js
var number = __webpack_require__("./src/polyfills/number.js");

// EXTERNAL MODULE: ./src/events.js
var events = __webpack_require__("./src/events.js");

// EXTERNAL MODULE: ./src/utils/logger.js
var logger = __webpack_require__("./src/utils/logger.js");

// CONCATENATED MODULE: ./src/event-handler.ts
/*
*
* All objects in the event handling chain should inherit from this class
*
*/



var FORBIDDEN_EVENT_NAMES = {
  'hlsEventGeneric': true,
  'hlsHandlerDestroying': true,
  'hlsHandlerDestroyed': true
};

var event_handler_EventHandler = /*#__PURE__*/function () {
  function EventHandler(hls) {
    this.hls = void 0;
    this.handledEvents = void 0;
    this.useGenericHandler = void 0;
    this.hls = hls;
    this.onEvent = this.onEvent.bind(this);

    for (var _len = arguments.length, events = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      events[_key - 1] = arguments[_key];
    }

    this.handledEvents = events;
    this.useGenericHandler = true;
    this.registerListeners();
  }

  var _proto = EventHandler.prototype;

  _proto.destroy = function destroy() {
    this.onHandlerDestroying();
    this.unregisterListeners();
    this.onHandlerDestroyed();
  };

  _proto.onHandlerDestroying = function onHandlerDestroying() {};

  _proto.onHandlerDestroyed = function onHandlerDestroyed() {};

  _proto.isEventHandler = function isEventHandler() {
    return typeof this.handledEvents === 'object' && this.handledEvents.length && typeof this.onEvent === 'function';
  };

  _proto.registerListeners = function registerListeners() {
    if (this.isEventHandler()) {
      this.handledEvents.forEach(function (event) {
        if (FORBIDDEN_EVENT_NAMES[event]) {
          throw new Error('Forbidden event-name: ' + event);
        }

        this.hls.on(event, this.onEvent);
      }, this);
    }
  };

  _proto.unregisterListeners = function unregisterListeners() {
    if (this.isEventHandler()) {
      this.handledEvents.forEach(function (event) {
        this.hls.off(event, this.onEvent);
      }, this);
    }
  }
  /**
   * arguments: event (string), data (any)
   */
  ;

  _proto.onEvent = function onEvent(event, data) {
    this.onEventGeneric(event, data);
  };

  _proto.onEventGeneric = function onEventGeneric(event, data) {
    var eventToFunction = function eventToFunction(event, data) {
      var funcName = 'on' + event.replace('hls', '');

      if (typeof this[funcName] !== 'function') {
        throw new Error("Event " + event + " has no generic handler in this " + this.constructor.name + " class (tried " + funcName + ")");
      }

      return this[funcName].bind(this, data);
    };

    try {
      eventToFunction.call(this, event, data).call();
    } catch (err) {
      logger["logger"].error("An internal error happened while handling event " + event + ". Error message: \"" + err.message + "\". Here is a stacktrace:", err);
      this.hls.trigger(events["default"].ERROR, {
        type: errors["ErrorTypes"].OTHER_ERROR,
        details: errors["ErrorDetails"].INTERNAL_EXCEPTION,
        fatal: false,
        event: event,
        err: err
      });
    }
  };

  return EventHandler;
}();

/* harmony default export */ var event_handler = (event_handler_EventHandler);
// CONCATENATED MODULE: ./src/types/loader.ts
/**
 * `type` property values for this loaders' context object
 * @enum
 *
 */
var PlaylistContextType;
/**
 * @enum {string}
 */

(function (PlaylistContextType) {
  PlaylistContextType["MANIFEST"] = "manifest";
  PlaylistContextType["LEVEL"] = "level";
  PlaylistContextType["AUDIO_TRACK"] = "audioTrack";
  PlaylistContextType["SUBTITLE_TRACK"] = "subtitleTrack";
})(PlaylistContextType || (PlaylistContextType = {}));

var PlaylistLevelType;

(function (PlaylistLevelType) {
  PlaylistLevelType["MAIN"] = "main";
  PlaylistLevelType["AUDIO"] = "audio";
  PlaylistLevelType["SUBTITLE"] = "subtitle";
})(PlaylistLevelType || (PlaylistLevelType = {}));
// EXTERNAL MODULE: ./src/demux/mp4demuxer.js
var mp4demuxer = __webpack_require__("./src/demux/mp4demuxer.js");

// CONCATENATED MODULE: ./src/loader/level-key.ts
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var level_key_LevelKey = /*#__PURE__*/function () {
  function LevelKey(baseURI, relativeURI) {
    this._uri = null;
    this.baseuri = void 0;
    this.reluri = void 0;
    this.method = null;
    this.key = null;
    this.iv = null;
    this.baseuri = baseURI;
    this.reluri = relativeURI;
  }

  _createClass(LevelKey, [{
    key: "uri",
    get: function get() {
      if (!this._uri && this.reluri) {
        this._uri = Object(url_toolkit["buildAbsoluteURL"])(this.baseuri, this.reluri, {
          alwaysNormalize: true
        });
      }

      return this._uri;
    }
  }]);

  return LevelKey;
}();


// CONCATENATED MODULE: ./src/loader/fragment.ts



function fragment_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function fragment_createClass(Constructor, protoProps, staticProps) { if (protoProps) fragment_defineProperties(Constructor.prototype, protoProps); if (staticProps) fragment_defineProperties(Constructor, staticProps); return Constructor; }




var ElementaryStreamTypes;

(function (ElementaryStreamTypes) {
  ElementaryStreamTypes["AUDIO"] = "audio";
  ElementaryStreamTypes["VIDEO"] = "video";
})(ElementaryStreamTypes || (ElementaryStreamTypes = {}));

var fragment_Fragment = /*#__PURE__*/function () {
  function Fragment() {
    var _this$_elementaryStre;

    this._url = null;
    this._byteRange = null;
    this._decryptdata = null;
    this._elementaryStreams = (_this$_elementaryStre = {}, _this$_elementaryStre[ElementaryStreamTypes.AUDIO] = false, _this$_elementaryStre[ElementaryStreamTypes.VIDEO] = false, _this$_elementaryStre);
    this.deltaPTS = 0;
    this.rawProgramDateTime = null;
    this.programDateTime = null;
    this.title = null;
    this.tagList = [];
    this.cc = void 0;
    this.type = void 0;
    this.relurl = void 0;
    this.baseurl = void 0;
    this.duration = void 0;
    this.start = void 0;
    this.sn = 0;
    this.urlId = 0;
    this.level = 0;
    this.levelkey = void 0;
    this.loader = void 0;
  }

  var _proto = Fragment.prototype;

  // setByteRange converts a EXT-X-BYTERANGE attribute into a two element array
  _proto.setByteRange = function setByteRange(value, previousFrag) {
    var params = value.split('@', 2);
    var byteRange = [];

    if (params.length === 1) {
      byteRange[0] = previousFrag ? previousFrag.byteRangeEndOffset : 0;
    } else {
      byteRange[0] = parseInt(params[1]);
    }

    byteRange[1] = parseInt(params[0]) + byteRange[0];
    this._byteRange = byteRange;
  };

  /**
   * @param {ElementaryStreamTypes} type
   */
  _proto.addElementaryStream = function addElementaryStream(type) {
    this._elementaryStreams[type] = true;
  }
  /**
   * @param {ElementaryStreamTypes} type
   */
  ;

  _proto.hasElementaryStream = function hasElementaryStream(type) {
    return this._elementaryStreams[type] === true;
  }
  /**
   * Utility method for parseLevelPlaylist to create an initialization vector for a given segment
   * @param {number} segmentNumber - segment number to generate IV with
   * @returns {Uint8Array}
   */
  ;

  _proto.createInitializationVector = function createInitializationVector(segmentNumber) {
    var uint8View = new Uint8Array(16);

    for (var i = 12; i < 16; i++) {
      uint8View[i] = segmentNumber >> 8 * (15 - i) & 0xff;
    }

    return uint8View;
  }
  /**
   * Utility method for parseLevelPlaylist to get a fragment's decryption data from the currently parsed encryption key data
   * @param levelkey - a playlist's encryption info
   * @param segmentNumber - the fragment's segment number
   * @returns {LevelKey} - an object to be applied as a fragment's decryptdata
   */
  ;

  _proto.setDecryptDataFromLevelKey = function setDecryptDataFromLevelKey(levelkey, segmentNumber) {
    var decryptdata = levelkey;

    if ((levelkey === null || levelkey === void 0 ? void 0 : levelkey.method) && levelkey.uri && !levelkey.iv) {
      decryptdata = new level_key_LevelKey(levelkey.baseuri, levelkey.reluri);
      decryptdata.method = levelkey.method;
      decryptdata.iv = this.createInitializationVector(segmentNumber);
    }

    return decryptdata;
  };

  fragment_createClass(Fragment, [{
    key: "url",
    get: function get() {
      if (!this._url && this.relurl) {
        this._url = Object(url_toolkit["buildAbsoluteURL"])(this.baseurl, this.relurl, {
          alwaysNormalize: true
        });
      }

      return this._url;
    },
    set: function set(value) {
      this._url = value;
    }
  }, {
    key: "byteRange",
    get: function get() {
      if (!this._byteRange) {
        return [];
      }

      return this._byteRange;
    }
    /**
     * @type {number}
     */

  }, {
    key: "byteRangeStartOffset",
    get: function get() {
      return this.byteRange[0];
    }
  }, {
    key: "byteRangeEndOffset",
    get: function get() {
      return this.byteRange[1];
    }
  }, {
    key: "decryptdata",
    get: function get() {
      if (!this.levelkey && !this._decryptdata) {
        return null;
      }

      if (!this._decryptdata && this.levelkey) {
        var sn = this.sn;

        if (typeof sn !== 'number') {
          // We are fetching decryption data for a initialization segment
          // If the segment was encrypted with AES-128
          // It must have an IV defined. We cannot substitute the Segment Number in.
          if (this.levelkey && this.levelkey.method === 'AES-128' && !this.levelkey.iv) {
            logger["logger"].warn("missing IV for initialization segment with method=\"" + this.levelkey.method + "\" - compliance issue");
          }
          /*
          Be converted to a Number.
          'initSegment' will become NaN.
          NaN, which when converted through ToInt32() -> +0.
          ---
          Explicitly set sn to resulting value from implicit conversions 'initSegment' values for IV generation.
          */


          sn = 0;
        }

        this._decryptdata = this.setDecryptDataFromLevelKey(this.levelkey, sn);
      }

      return this._decryptdata;
    }
  }, {
    key: "endProgramDateTime",
    get: function get() {
      if (this.programDateTime === null) {
        return null;
      }

      if (!Object(number["isFiniteNumber"])(this.programDateTime)) {
        return null;
      }

      var duration = !Object(number["isFiniteNumber"])(this.duration) ? 0 : this.duration;
      return this.programDateTime + duration * 1000;
    }
  }, {
    key: "encrypted",
    get: function get() {
      return !!(this.decryptdata && this.decryptdata.uri !== null && this.decryptdata.key === null);
    }
  }]);

  return Fragment;
}();


// CONCATENATED MODULE: ./src/loader/level.js


function level_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function level_createClass(Constructor, protoProps, staticProps) { if (protoProps) level_defineProperties(Constructor.prototype, protoProps); if (staticProps) level_defineProperties(Constructor, staticProps); return Constructor; }

var level_Level = /*#__PURE__*/function () {
  function Level(baseUrl) {
    // Please keep properties in alphabetical order
    this.endCC = 0;
    this.endSN = 0;
    this.fragments = [];
    this.initSegment = null;
    this.live = true;
    this.needSidxRanges = false;
    this.startCC = 0;
    this.startSN = 0;
    this.startTimeOffset = null;
    this.targetduration = 0;
    this.totalduration = 0;
    this.type = null;
    this.url = baseUrl;
    this.version = null;
  }

  level_createClass(Level, [{
    key: "hasProgramDateTime",
    get: function get() {
      return !!(this.fragments[0] && Object(number["isFiniteNumber"])(this.fragments[0].programDateTime));
    }
  }]);

  return Level;
}();


// CONCATENATED MODULE: ./src/utils/attr-list.js
var DECIMAL_RESOLUTION_REGEX = /^(\d+)x(\d+)$/; // eslint-disable-line no-useless-escape

var ATTR_LIST_REGEX = /\s*(.+?)\s*=((?:\".*?\")|.*?)(?:,|$)/g; // eslint-disable-line no-useless-escape
// adapted from https://github.com/kanongil/node-m3u8parse/blob/master/attrlist.js

var AttrList = /*#__PURE__*/function () {
  function AttrList(attrs) {
    if (typeof attrs === 'string') {
      attrs = AttrList.parseAttrList(attrs);
    }

    for (var attr in attrs) {
      if (attrs.hasOwnProperty(attr)) {
        this[attr] = attrs[attr];
      }
    }
  }

  var _proto = AttrList.prototype;

  _proto.decimalInteger = function decimalInteger(attrName) {
    var intValue = parseInt(this[attrName], 10);

    if (intValue > Number.MAX_SAFE_INTEGER) {
      return Infinity;
    }

    return intValue;
  };

  _proto.hexadecimalInteger = function hexadecimalInteger(attrName) {
    if (this[attrName]) {
      var stringValue = (this[attrName] || '0x').slice(2);
      stringValue = (stringValue.length & 1 ? '0' : '') + stringValue;
      var value = new Uint8Array(stringValue.length / 2);

      for (var i = 0; i < stringValue.length / 2; i++) {
        value[i] = parseInt(stringValue.slice(i * 2, i * 2 + 2), 16);
      }

      return value;
    } else {
      return null;
    }
  };

  _proto.hexadecimalIntegerAsNumber = function hexadecimalIntegerAsNumber(attrName) {
    var intValue = parseInt(this[attrName], 16);

    if (intValue > Number.MAX_SAFE_INTEGER) {
      return Infinity;
    }

    return intValue;
  };

  _proto.decimalFloatingPoint = function decimalFloatingPoint(attrName) {
    return parseFloat(this[attrName]);
  };

  _proto.enumeratedString = function enumeratedString(attrName) {
    return this[attrName];
  };

  _proto.decimalResolution = function decimalResolution(attrName) {
    var res = DECIMAL_RESOLUTION_REGEX.exec(this[attrName]);

    if (res === null) {
      return undefined;
    }

    return {
      width: parseInt(res[1], 10),
      height: parseInt(res[2], 10)
    };
  };

  AttrList.parseAttrList = function parseAttrList(input) {
    var match,
        attrs = {};
    ATTR_LIST_REGEX.lastIndex = 0;

    while ((match = ATTR_LIST_REGEX.exec(input)) !== null) {
      var value = match[2],
          quote = '"';

      if (value.indexOf(quote) === 0 && value.lastIndexOf(quote) === value.length - 1) {
        value = value.slice(1, -1);
      }

      attrs[match[1]] = value;
    }

    return attrs;
  };

  return AttrList;
}();

/* harmony default export */ var attr_list = (AttrList);
// CONCATENATED MODULE: ./src/utils/codecs.ts
// from http://mp4ra.org/codecs.html
var sampleEntryCodesISO = {
  audio: {
    'a3ds': true,
    'ac-3': true,
    'ac-4': true,
    'alac': true,
    'alaw': true,
    'dra1': true,
    'dts+': true,
    'dts-': true,
    'dtsc': true,
    'dtse': true,
    'dtsh': true,
    'ec-3': true,
    'enca': true,
    'g719': true,
    'g726': true,
    'm4ae': true,
    'mha1': true,
    'mha2': true,
    'mhm1': true,
    'mhm2': true,
    'mlpa': true,
    'mp4a': true,
    'raw ': true,
    'Opus': true,
    'samr': true,
    'sawb': true,
    'sawp': true,
    'sevc': true,
    'sqcp': true,
    'ssmv': true,
    'twos': true,
    'ulaw': true
  },
  video: {
    'avc1': true,
    'avc2': true,
    'avc3': true,
    'avc4': true,
    'avcp': true,
    'drac': true,
    'dvav': true,
    'dvhe': true,
    'encv': true,
    'hev1': true,
    'hvc1': true,
    'mjp2': true,
    'mp4v': true,
    'mvc1': true,
    'mvc2': true,
    'mvc3': true,
    'mvc4': true,
    'resv': true,
    'rv60': true,
    's263': true,
    'svc1': true,
    'svc2': true,
    'vc-1': true,
    'vp08': true,
    'vp09': true
  }
};

function isCodecType(codec, type) {
  var typeCodes = sampleEntryCodesISO[type];
  return !!typeCodes && typeCodes[codec.slice(0, 4)] === true;
}

function isCodecSupportedInMp4(codec, type) {
  return MediaSource.isTypeSupported((type || 'video') + "/mp4;codecs=\"" + codec + "\"");
}


// CONCATENATED MODULE: ./src/loader/m3u8-parser.ts











/**
 * M3U8 parser
 * @module
 */
// https://regex101.com is your friend
var MASTER_PLAYLIST_REGEX = /(?:#EXT-X-STREAM-INF:([^\n\r]*)[\r\n]+([^\r\n]+)|#EXT-X-SESSION-DATA:([^\n\r]*)[\r\n]+)/g;
var MASTER_PLAYLIST_MEDIA_REGEX = /#EXT-X-MEDIA:(.*)/g;
var LEVEL_PLAYLIST_REGEX_FAST = new RegExp([/#EXTINF:\s*(\d*(?:\.\d+)?)(?:,(.*)\s+)?/.source, // duration (#EXTINF:<duration>,<title>), group 1 => duration, group 2 => title
/|(?!#)([\S+ ?]+)/.source, // segment URI, group 3 => the URI (note newline is not eaten)
/|#EXT-X-BYTERANGE:*(.+)/.source, // next segment's byterange, group 4 => range spec (x@y)
/|#EXT-X-PROGRAM-DATE-TIME:(.+)/.source, // next segment's program date/time group 5 => the datetime spec
/|#.*/.source // All other non-segment oriented tags will match with all groups empty
].join(''), 'g');
var LEVEL_PLAYLIST_REGEX_SLOW = /(?:(?:#(EXTM3U))|(?:#EXT-X-(PLAYLIST-TYPE):(.+))|(?:#EXT-X-(MEDIA-SEQUENCE): *(\d+))|(?:#EXT-X-(TARGETDURATION): *(\d+))|(?:#EXT-X-(KEY):(.+))|(?:#EXT-X-(START):(.+))|(?:#EXT-X-(ENDLIST))|(?:#EXT-X-(DISCONTINUITY-SEQ)UENCE:(\d+))|(?:#EXT-X-(DIS)CONTINUITY))|(?:#EXT-X-(VERSION):(\d+))|(?:#EXT-X-(MAP):(.+))|(?:(#)([^:]*):(.*))|(?:(#)(.*))(?:.*)\r?\n?/;
var MP4_REGEX_SUFFIX = /\.(mp4|m4s|m4v|m4a)$/i;

var m3u8_parser_M3U8Parser = /*#__PURE__*/function () {
  function M3U8Parser() {}

  M3U8Parser.findGroup = function findGroup(groups, mediaGroupId) {
    for (var i = 0; i < groups.length; i++) {
      var group = groups[i];

      if (group.id === mediaGroupId) {
        return group;
      }
    }
  };

  M3U8Parser.convertAVC1ToAVCOTI = function convertAVC1ToAVCOTI(codec) {
    var avcdata = codec.split('.');
    var result;

    if (avcdata.length > 2) {
      result = avcdata.shift() + '.';
      result += parseInt(avcdata.shift()).toString(16);
      result += ('000' + parseInt(avcdata.shift()).toString(16)).substr(-4);
    } else {
      result = codec;
    }

    return result;
  };

  M3U8Parser.resolve = function resolve(url, baseUrl) {
    return url_toolkit["buildAbsoluteURL"](baseUrl, url, {
      alwaysNormalize: true
    });
  };

  M3U8Parser.parseMasterPlaylist = function parseMasterPlaylist(string, baseurl) {
    // TODO(typescript-level)
    var levels = [];
    var sessionData = {};
    var hasSessionData = false;
    MASTER_PLAYLIST_REGEX.lastIndex = 0; // TODO(typescript-level)

    function setCodecs(codecs, level) {
      ['video', 'audio'].forEach(function (type) {
        var filtered = codecs.filter(function (codec) {
          return isCodecType(codec, type);
        });

        if (filtered.length) {
          var preferred = filtered.filter(function (codec) {
            return codec.lastIndexOf('avc1', 0) === 0 || codec.lastIndexOf('mp4a', 0) === 0;
          });
          level[type + "Codec"] = preferred.length > 0 ? preferred[0] : filtered[0]; // remove from list

          codecs = codecs.filter(function (codec) {
            return filtered.indexOf(codec) === -1;
          });
        }
      });
      level.unknownCodecs = codecs;
    }

    var result;

    while ((result = MASTER_PLAYLIST_REGEX.exec(string)) != null) {
      if (result[1]) {
        // '#EXT-X-STREAM-INF' is found, parse level tag  in group 1
        // TODO(typescript-level)
        var level = {};
        var attrs = level.attrs = new attr_list(result[1]);
        level.url = M3U8Parser.resolve(result[2], baseurl);
        var resolution = attrs.decimalResolution('RESOLUTION');

        if (resolution) {
          level.width = resolution.width;
          level.height = resolution.height;
        }

        level.bitrate = attrs.decimalInteger('AVERAGE-BANDWIDTH') || attrs.decimalInteger('BANDWIDTH');
        level.name = attrs.NAME;
        setCodecs([].concat((attrs.CODECS || '').split(/[ ,]+/)), level);

        if (level.videoCodec && level.videoCodec.indexOf('avc1') !== -1) {
          level.videoCodec = M3U8Parser.convertAVC1ToAVCOTI(level.videoCodec);
        }

        levels.push(level);
      } else if (result[3]) {
        // '#EXT-X-SESSION-DATA' is found, parse session data in group 3
        var sessionAttrs = new attr_list(result[3]);

        if (sessionAttrs['DATA-ID']) {
          hasSessionData = true;
          sessionData[sessionAttrs['DATA-ID']] = sessionAttrs;
        }
      }
    }

    return {
      levels: levels,
      sessionData: hasSessionData ? sessionData : null
    };
  };

  M3U8Parser.parseMasterPlaylistMedia = function parseMasterPlaylistMedia(string, baseurl, type, audioGroups) {
    if (audioGroups === void 0) {
      audioGroups = [];
    }

    var result;
    var medias = [];
    var id = 0;
    MASTER_PLAYLIST_MEDIA_REGEX.lastIndex = 0;

    while ((result = MASTER_PLAYLIST_MEDIA_REGEX.exec(string)) !== null) {
      var attrs = new attr_list(result[1]);

      if (attrs.TYPE === type) {
        var media = {
          attrs: attrs,
          id: id++,
          groupId: attrs['GROUP-ID'],
          instreamId: attrs['INSTREAM-ID'],
          name: attrs.NAME || attrs.LANGUAGE,
          type: type,
          default: attrs.DEFAULT === 'YES',
          autoselect: attrs.AUTOSELECT === 'YES',
          forced: attrs.FORCED === 'YES',
          lang: attrs.LANGUAGE
        };

        if (attrs.URI) {
          media.url = M3U8Parser.resolve(attrs.URI, baseurl);
        }

        if (audioGroups.length) {
          // If there are audio groups signalled in the manifest, let's look for a matching codec string for this track
          var groupCodec = M3U8Parser.findGroup(audioGroups, media.groupId); // If we don't find the track signalled, lets use the first audio groups codec we have
          // Acting as a best guess

          media.audioCodec = groupCodec ? groupCodec.codec : audioGroups[0].codec;
        }

        medias.push(media);
      }
    }

    return medias;
  };

  M3U8Parser.parseLevelPlaylist = function parseLevelPlaylist(string, baseurl, id, type, levelUrlId) {
    var currentSN = 0;
    var totalduration = 0;
    var level = new level_Level(baseurl);
    var discontinuityCounter = 0;
    var prevFrag = null;
    var frag = new fragment_Fragment();
    var result;
    var i;
    var levelkey;
    var firstPdtIndex = null;
    LEVEL_PLAYLIST_REGEX_FAST.lastIndex = 0;

    while ((result = LEVEL_PLAYLIST_REGEX_FAST.exec(string)) !== null) {
      var duration = result[1];

      if (duration) {
        // INF
        frag.duration = parseFloat(duration); // avoid sliced strings    https://github.com/video-dev/hls.js/issues/939

        var title = (' ' + result[2]).slice(1);
        frag.title = title || null;
        frag.tagList.push(title ? ['INF', duration, title] : ['INF', duration]);
      } else if (result[3]) {
        // url
        if (Object(number["isFiniteNumber"])(frag.duration)) {
          var sn = currentSN++;
          frag.type = type;
          frag.start = totalduration;

          if (levelkey) {
            frag.levelkey = levelkey;
          }

          frag.sn = sn;
          frag.level = id;
          frag.cc = discontinuityCounter;
          frag.urlId = levelUrlId;
          frag.baseurl = baseurl; // avoid sliced strings    https://github.com/video-dev/hls.js/issues/939

          frag.relurl = (' ' + result[3]).slice(1);
          assignProgramDateTime(frag, prevFrag);
          level.fragments.push(frag);
          prevFrag = frag;
          totalduration += frag.duration;
          frag = new fragment_Fragment();
        }
      } else if (result[4]) {
        // X-BYTERANGE
        var data = (' ' + result[4]).slice(1);

        if (prevFrag) {
          frag.setByteRange(data, prevFrag);
        } else {
          frag.setByteRange(data);
        }
      } else if (result[5]) {
        // PROGRAM-DATE-TIME
        // avoid sliced strings    https://github.com/video-dev/hls.js/issues/939
        frag.rawProgramDateTime = (' ' + result[5]).slice(1);
        frag.tagList.push(['PROGRAM-DATE-TIME', frag.rawProgramDateTime]);

        if (firstPdtIndex === null) {
          firstPdtIndex = level.fragments.length;
        }
      } else {
        result = result[0].match(LEVEL_PLAYLIST_REGEX_SLOW);

        if (!result) {
          logger["logger"].warn('No matches on slow regex match for level playlist!');
          continue;
        }

        for (i = 1; i < result.length; i++) {
          if (typeof result[i] !== 'undefined') {
            break;
          }
        } // avoid sliced strings    https://github.com/video-dev/hls.js/issues/939


        var value1 = (' ' + result[i + 1]).slice(1);
        var value2 = (' ' + result[i + 2]).slice(1);

        switch (result[i]) {
          case '#':
            frag.tagList.push(value2 ? [value1, value2] : [value1]);
            break;

          case 'PLAYLIST-TYPE':
            level.type = value1.toUpperCase();
            break;

          case 'MEDIA-SEQUENCE':
            currentSN = level.startSN = parseInt(value1);
            break;

          case 'TARGETDURATION':
            level.targetduration = parseFloat(value1);
            break;

          case 'VERSION':
            level.version = parseInt(value1);
            break;

          case 'EXTM3U':
            break;

          case 'ENDLIST':
            level.live = false;
            break;

          case 'DIS':
            discontinuityCounter++;
            frag.tagList.push(['DIS']);
            break;

          case 'DISCONTINUITY-SEQ':
            discontinuityCounter = parseInt(value1);
            break;

          case 'KEY':
            {
              // https://tools.ietf.org/html/rfc8216#section-4.3.2.4
              var decryptparams = value1;
              var keyAttrs = new attr_list(decryptparams);
              var decryptmethod = keyAttrs.enumeratedString('METHOD');
              var decrypturi = keyAttrs.URI;
              var decryptiv = keyAttrs.hexadecimalInteger('IV'); // From RFC: This attribute is OPTIONAL; its absence indicates an implicit value of "identity".

              var decryptkeyformat = keyAttrs.KEYFORMAT || 'identity';

              if (decryptkeyformat === 'com.apple.streamingkeydelivery') {
                logger["logger"].warn('Keyformat com.apple.streamingkeydelivery is not supported');
                continue;
              }

              if (decryptmethod) {
                levelkey = new level_key_LevelKey(baseurl, decrypturi);

                if (decrypturi && ['AES-128', 'SAMPLE-AES', 'SAMPLE-AES-CENC'].indexOf(decryptmethod) >= 0) {
                  levelkey.method = decryptmethod;
                  levelkey.key = null; // Initialization Vector (IV)

                  levelkey.iv = decryptiv;
                }
              }

              break;
            }

          case 'START':
            {
              var startAttrs = new attr_list(value1);
              var startTimeOffset = startAttrs.decimalFloatingPoint('TIME-OFFSET'); // TIME-OFFSET can be 0

              if (Object(number["isFiniteNumber"])(startTimeOffset)) {
                level.startTimeOffset = startTimeOffset;
              }

              break;
            }

          case 'MAP':
            {
              var mapAttrs = new attr_list(value1);
              frag.relurl = mapAttrs.URI;

              if (mapAttrs.BYTERANGE) {
                frag.setByteRange(mapAttrs.BYTERANGE);
              }

              frag.baseurl = baseurl;
              frag.level = id;
              frag.type = type;
              frag.sn = 'initSegment';
              level.initSegment = frag;
              frag = new fragment_Fragment();
              frag.rawProgramDateTime = level.initSegment.rawProgramDateTime;
              break;
            }

          default:
            logger["logger"].warn("line parsed but not handled: " + result);
            break;
        }
      }
    }

    frag = prevFrag; // logger.log('found ' + level.fragments.length + ' fragments');

    if (frag && !frag.relurl) {
      level.fragments.pop();
      totalduration -= frag.duration;
    }

    level.totalduration = totalduration;
    level.averagetargetduration = totalduration / level.fragments.length;
    level.endSN = currentSN - 1;
    level.startCC = level.fragments[0] ? level.fragments[0].cc : 0;
    level.endCC = discontinuityCounter;

    if (!level.initSegment && level.fragments.length) {
      // this is a bit lurky but HLS really has no other way to tell us
      // if the fragments are TS or MP4, except if we download them :/
      // but this is to be able to handle SIDX.
      if (level.fragments.every(function (frag) {
        return MP4_REGEX_SUFFIX.test(frag.relurl);
      })) {
        logger["logger"].warn('MP4 fragments found but no init segment (probably no MAP, incomplete M3U8), trying to fetch SIDX');
        frag = new fragment_Fragment();
        frag.relurl = level.fragments[0].relurl;
        frag.baseurl = baseurl;
        frag.level = id;
        frag.type = type;
        frag.sn = 'initSegment';
        level.initSegment = frag;
        level.needSidxRanges = true;
      }
    }
    /**
     * Backfill any missing PDT values
       "If the first EXT-X-PROGRAM-DATE-TIME tag in a Playlist appears after
       one or more Media Segment URIs, the client SHOULD extrapolate
       backward from that tag (using EXTINF durations and/or media
       timestamps) to associate dates with those segments."
     * We have already extrapolated forward, but all fragments up to the first instance of PDT do not have their PDTs
     * computed.
     */


    if (firstPdtIndex) {
      backfillProgramDateTimes(level.fragments, firstPdtIndex);
    }

    return level;
  };

  return M3U8Parser;
}();



function backfillProgramDateTimes(fragments, startIndex) {
  var fragPrev = fragments[startIndex];

  for (var i = startIndex - 1; i >= 0; i--) {
    var frag = fragments[i];
    frag.programDateTime = fragPrev.programDateTime - frag.duration * 1000;
    fragPrev = frag;
  }
}

function assignProgramDateTime(frag, prevFrag) {
  if (frag.rawProgramDateTime) {
    frag.programDateTime = Date.parse(frag.rawProgramDateTime);
  } else if (prevFrag === null || prevFrag === void 0 ? void 0 : prevFrag.programDateTime) {
    frag.programDateTime = prevFrag.endProgramDateTime;
  }

  if (!Object(number["isFiniteNumber"])(frag.programDateTime)) {
    frag.programDateTime = null;
    frag.rawProgramDateTime = null;
  }
}
// CONCATENATED MODULE: ./src/loader/playlist-loader.ts



function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/**
 * PlaylistLoader - delegate for media manifest/playlist loading tasks. Takes care of parsing media to internal data-models.
 *
 * Once loaded, dispatches events with parsed data-models of manifest/levels/audio/subtitle tracks.
 *
 * Uses loader(s) set in config to do actual internal loading of resource tasks.
 *
 * @module
 *
 */







var _window = window,
    performance = _window.performance;
/**
 * @constructor
 */

var playlist_loader_PlaylistLoader = /*#__PURE__*/function (_EventHandler) {
  _inheritsLoose(PlaylistLoader, _EventHandler);

  /**
   * @constructs
   * @param {Hls} hls
   */
  function PlaylistLoader(hls) {
    var _this;

    _this = _EventHandler.call(this, hls, events["default"].MANIFEST_LOADING, events["default"].LEVEL_LOADING, events["default"].AUDIO_TRACK_LOADING, events["default"].SUBTITLE_TRACK_LOADING) || this;
    _this.loaders = {};
    return _this;
  }
  /**
   * @param {PlaylistContextType} type
   * @returns {boolean}
   */


  PlaylistLoader.canHaveQualityLevels = function canHaveQualityLevels(type) {
    return type !== PlaylistContextType.AUDIO_TRACK && type !== PlaylistContextType.SUBTITLE_TRACK;
  }
  /**
   * Map context.type to LevelType
   * @param {PlaylistLoaderContext} context
   * @returns {LevelType}
   */
  ;

  PlaylistLoader.mapContextToLevelType = function mapContextToLevelType(context) {
    var type = context.type;

    switch (type) {
      case PlaylistContextType.AUDIO_TRACK:
        return PlaylistLevelType.AUDIO;

      case PlaylistContextType.SUBTITLE_TRACK:
        return PlaylistLevelType.SUBTITLE;

      default:
        return PlaylistLevelType.MAIN;
    }
  };

  PlaylistLoader.getResponseUrl = function getResponseUrl(response, context) {
    var url = response.url; // responseURL not supported on some browsers (it is used to detect URL redirection)
    // data-uri mode also not supported (but no need to detect redirection)

    if (url === undefined || url.indexOf('data:') === 0) {
      // fallback to initial URL
      url = context.url;
    }

    return url;
  }
  /**
   * Returns defaults or configured loader-type overloads (pLoader and loader config params)
   * Default loader is XHRLoader (see utils)
   * @param {PlaylistLoaderContext} context
   * @returns {Loader} or other compatible configured overload
   */
  ;

  var _proto = PlaylistLoader.prototype;

  _proto.createInternalLoader = function createInternalLoader(context) {
    var config = this.hls.config;
    var PLoader = config.pLoader;
    var Loader = config.loader; // TODO(typescript-config): Verify once config is typed that InternalLoader always returns a Loader

    var InternalLoader = PLoader || Loader;
    var loader = new InternalLoader(config); // TODO - Do we really need to assign the instance or if the dep has been lost

    context.loader = loader;
    this.loaders[context.type] = loader;
    return loader;
  };

  _proto.getInternalLoader = function getInternalLoader(context) {
    return this.loaders[context.type];
  };

  _proto.resetInternalLoader = function resetInternalLoader(contextType) {
    if (this.loaders[contextType]) {
      delete this.loaders[contextType];
    }
  }
  /**
   * Call `destroy` on all internal loader instances mapped (one per context type)
   */
  ;

  _proto.destroyInternalLoaders = function destroyInternalLoaders() {
    for (var contextType in this.loaders) {
      var loader = this.loaders[contextType];

      if (loader) {
        loader.destroy();
      }

      this.resetInternalLoader(contextType);
    }
  };

  _proto.destroy = function destroy() {
    this.destroyInternalLoaders();

    _EventHandler.prototype.destroy.call(this);
  };

  _proto.onManifestLoading = function onManifestLoading(data) {
    this.load({
      url: data.url,
      type: PlaylistContextType.MANIFEST,
      level: 0,
      id: null,
      responseType: 'text'
    });
  };

  _proto.onLevelLoading = function onLevelLoading(data) {
    this.load({
      url: data.url,
      type: PlaylistContextType.LEVEL,
      level: data.level,
      id: data.id,
      responseType: 'text'
    });
  };

  _proto.onAudioTrackLoading = function onAudioTrackLoading(data) {
    this.load({
      url: data.url,
      type: PlaylistContextType.AUDIO_TRACK,
      level: null,
      id: data.id,
      responseType: 'text'
    });
  };

  _proto.onSubtitleTrackLoading = function onSubtitleTrackLoading(data) {
    this.load({
      url: data.url,
      type: PlaylistContextType.SUBTITLE_TRACK,
      level: null,
      id: data.id,
      responseType: 'text'
    });
  };

  _proto.load = function load(context) {
    var config = this.hls.config;
    logger["logger"].debug("Loading playlist of type " + context.type + ", level: " + context.level + ", id: " + context.id); // Check if a loader for this context already exists

    var loader = this.getInternalLoader(context);

    if (loader) {
      var loaderContext = loader.context;

      if (loaderContext && loaderContext.url === context.url) {
        // same URL can't overlap
        logger["logger"].trace('playlist request ongoing');
        return false;
      } else {
        logger["logger"].warn("aborting previous loader for type: " + context.type);
        loader.abort();
      }
    }

    var maxRetry;
    var timeout;
    var retryDelay;
    var maxRetryDelay; // apply different configs for retries depending on
    // context (manifest, level, audio/subs playlist)

    switch (context.type) {
      case PlaylistContextType.MANIFEST:
        maxRetry = config.manifestLoadingMaxRetry;
        timeout = config.manifestLoadingTimeOut;
        retryDelay = config.manifestLoadingRetryDelay;
        maxRetryDelay = config.manifestLoadingMaxRetryTimeout;
        break;

      case PlaylistContextType.LEVEL:
        // Disable internal loader retry logic, since we are managing retries in Level Controller
        maxRetry = 0;
        maxRetryDelay = 0;
        retryDelay = 0;
        timeout = config.levelLoadingTimeOut; // TODO Introduce retry settings for audio-track and subtitle-track, it should not use level retry config

        break;

      default:
        maxRetry = config.levelLoadingMaxRetry;
        timeout = config.levelLoadingTimeOut;
        retryDelay = config.levelLoadingRetryDelay;
        maxRetryDelay = config.levelLoadingMaxRetryTimeout;
        break;
    }

    loader = this.createInternalLoader(context);
    var loaderConfig = {
      timeout: timeout,
      maxRetry: maxRetry,
      retryDelay: retryDelay,
      maxRetryDelay: maxRetryDelay
    };
    var loaderCallbacks = {
      onSuccess: this.loadsuccess.bind(this),
      onError: this.loaderror.bind(this),
      onTimeout: this.loadtimeout.bind(this)
    };
    logger["logger"].debug("Calling internal loader delegate for URL: " + context.url);
    loader.load(context, loaderConfig, loaderCallbacks);
    return true;
  };

  _proto.loadsuccess = function loadsuccess(response, stats, context, networkDetails) {
    if (networkDetails === void 0) {
      networkDetails = null;
    }

    if (context.isSidxRequest) {
      this._handleSidxRequest(response, context);

      this._handlePlaylistLoaded(response, stats, context, networkDetails);

      return;
    }

    this.resetInternalLoader(context.type);

    if (typeof response.data !== 'string') {
      throw new Error('expected responseType of "text" for PlaylistLoader');
    }

    var string = response.data;
    stats.tload = performance.now(); // stats.mtime = new Date(target.getResponseHeader('Last-Modified'));
    // Validate if it is an M3U8 at all

    if (string.indexOf('#EXTM3U') !== 0) {
      this._handleManifestParsingError(response, context, 'no EXTM3U delimiter', networkDetails);

      return;
    } // Check if chunk-list or master. handle empty chunk list case (first EXTINF not signaled, but TARGETDURATION present)


    if (string.indexOf('#EXTINF:') > 0 || string.indexOf('#EXT-X-TARGETDURATION:') > 0) {
      this._handleTrackOrLevelPlaylist(response, stats, context, networkDetails);
    } else {
      this._handleMasterPlaylist(response, stats, context, networkDetails);
    }
  };

  _proto.loaderror = function loaderror(response, context, networkDetails) {
    if (networkDetails === void 0) {
      networkDetails = null;
    }

    this._handleNetworkError(context, networkDetails, false, response);
  };

  _proto.loadtimeout = function loadtimeout(stats, context, networkDetails) {
    if (networkDetails === void 0) {
      networkDetails = null;
    }

    this._handleNetworkError(context, networkDetails, true);
  } // TODO(typescript-config): networkDetails can currently be a XHR or Fetch impl,
  // but with custom loaders it could be generic investigate this further when config is typed
  ;

  _proto._handleMasterPlaylist = function _handleMasterPlaylist(response, stats, context, networkDetails) {
    var hls = this.hls;
    var string = response.data;
    var url = PlaylistLoader.getResponseUrl(response, context);

    var _M3U8Parser$parseMast = m3u8_parser_M3U8Parser.parseMasterPlaylist(string, url),
        levels = _M3U8Parser$parseMast.levels,
        sessionData = _M3U8Parser$parseMast.sessionData;

    if (!levels.length) {
      this._handleManifestParsingError(response, context, 'no level found in manifest', networkDetails);

      return;
    } // multi level playlist, parse level info


    var audioGroups = levels.map(function (level) {
      return {
        id: level.attrs.AUDIO,
        codec: level.audioCodec
      };
    });
    var audioTracks = m3u8_parser_M3U8Parser.parseMasterPlaylistMedia(string, url, 'AUDIO', audioGroups);
    var subtitles = m3u8_parser_M3U8Parser.parseMasterPlaylistMedia(string, url, 'SUBTITLES');
    var captions = m3u8_parser_M3U8Parser.parseMasterPlaylistMedia(string, url, 'CLOSED-CAPTIONS');

    if (audioTracks.length) {
      // check if we have found an audio track embedded in main playlist (audio track without URI attribute)
      var embeddedAudioFound = false;
      audioTracks.forEach(function (audioTrack) {
        if (!audioTrack.url) {
          embeddedAudioFound = true;
        }
      }); // if no embedded audio track defined, but audio codec signaled in quality level,
      // we need to signal this main audio track this could happen with playlists with
      // alt audio rendition in which quality levels (main)
      // contains both audio+video. but with mixed audio track not signaled

      if (embeddedAudioFound === false && levels[0].audioCodec && !levels[0].attrs.AUDIO) {
        logger["logger"].log('audio codec signaled in quality level, but no embedded audio track signaled, create one');
        audioTracks.unshift({
          type: 'main',
          name: 'main',
          default: false,
          autoselect: false,
          forced: false,
          id: -1,
          attrs: {},
          url: ''
        });
      }
    }

    hls.trigger(events["default"].MANIFEST_LOADED, {
      levels: levels,
      audioTracks: audioTracks,
      subtitles: subtitles,
      captions: captions,
      url: url,
      stats: stats,
      networkDetails: networkDetails,
      sessionData: sessionData
    });
  };

  _proto._handleTrackOrLevelPlaylist = function _handleTrackOrLevelPlaylist(response, stats, context, networkDetails) {
    var hls = this.hls;
    var id = context.id,
        level = context.level,
        type = context.type;
    var url = PlaylistLoader.getResponseUrl(response, context); // if the values are null, they will result in the else conditional

    var levelUrlId = Object(number["isFiniteNumber"])(id) ? id : 0;
    var levelId = Object(number["isFiniteNumber"])(level) ? level : levelUrlId;
    var levelType = PlaylistLoader.mapContextToLevelType(context);
    var levelDetails = m3u8_parser_M3U8Parser.parseLevelPlaylist(response.data, url, levelId, levelType, levelUrlId); // set stats on level structure
    // TODO(jstackhouse): why? mixing concerns, is it just treated as value bag?

    levelDetails.tload = stats.tload;

    if (!levelDetails.fragments.length) {
      hls.trigger(events["default"].ERROR, {
        type: errors["ErrorTypes"].NETWORK_ERROR,
        details: errors["ErrorDetails"].LEVEL_EMPTY_ERROR,
        fatal: false,
        url: url,
        reason: 'no fragments found in level',
        level: typeof context.level === 'number' ? context.level : undefined
      });
      return;
    } // We have done our first request (Manifest-type) and receive
    // not a master playlist but a chunk-list (track/level)
    // We fire the manifest-loaded event anyway with the parsed level-details
    // by creating a single-level structure for it.


    if (type === PlaylistContextType.MANIFEST) {
      var singleLevel = {
        url: url,
        details: levelDetails
      };
      hls.trigger(events["default"].MANIFEST_LOADED, {
        levels: [singleLevel],
        audioTracks: [],
        url: url,
        stats: stats,
        networkDetails: networkDetails,
        sessionData: null
      });
    } // save parsing time


    stats.tparsed = performance.now(); // in case we need SIDX ranges
    // return early after calling load for
    // the SIDX box.

    if (levelDetails.needSidxRanges) {
      var sidxUrl = levelDetails.initSegment.url;
      this.load({
        url: sidxUrl,
        isSidxRequest: true,
        type: type,
        level: level,
        levelDetails: levelDetails,
        id: id,
        rangeStart: 0,
        rangeEnd: 2048,
        responseType: 'arraybuffer'
      });
      return;
    } // extend the context with the new levelDetails property


    context.levelDetails = levelDetails;

    this._handlePlaylistLoaded(response, stats, context, networkDetails);
  };

  _proto._handleSidxRequest = function _handleSidxRequest(response, context) {
    if (typeof response.data === 'string') {
      throw new Error('sidx request must be made with responseType of array buffer');
    }

    var sidxInfo = mp4demuxer["default"].parseSegmentIndex(new Uint8Array(response.data)); // if provided fragment does not contain sidx, early return

    if (!sidxInfo) {
      return;
    }

    var sidxReferences = sidxInfo.references;
    var levelDetails = context.levelDetails;
    sidxReferences.forEach(function (segmentRef, index) {
      var segRefInfo = segmentRef.info;

      if (!levelDetails) {
        return;
      }

      var frag = levelDetails.fragments[index];

      if (frag.byteRange.length === 0) {
        frag.setByteRange(String(1 + segRefInfo.end - segRefInfo.start) + '@' + String(segRefInfo.start));
      }
    });

    if (levelDetails) {
      levelDetails.initSegment.setByteRange(String(sidxInfo.moovEndOffset) + '@0');
    }
  };

  _proto._handleManifestParsingError = function _handleManifestParsingError(response, context, reason, networkDetails) {
    this.hls.trigger(events["default"].ERROR, {
      type: errors["ErrorTypes"].NETWORK_ERROR,
      details: errors["ErrorDetails"].MANIFEST_PARSING_ERROR,
      fatal: true,
      url: response.url,
      reason: reason,
      networkDetails: networkDetails
    });
  };

  _proto._handleNetworkError = function _handleNetworkError(context, networkDetails, timeout, response) {
    if (timeout === void 0) {
      timeout = false;
    }

    if (response === void 0) {
      response = null;
    }

    logger["logger"].info("A network error occured while loading a " + context.type + "-type playlist");
    var details;
    var fatal;
    var loader = this.getInternalLoader(context);

    switch (context.type) {
      case PlaylistContextType.MANIFEST:
        details = timeout ? errors["ErrorDetails"].MANIFEST_LOAD_TIMEOUT : errors["ErrorDetails"].MANIFEST_LOAD_ERROR;
        fatal = true;
        break;

      case PlaylistContextType.LEVEL:
        details = timeout ? errors["ErrorDetails"].LEVEL_LOAD_TIMEOUT : errors["ErrorDetails"].LEVEL_LOAD_ERROR;
        fatal = false;
        break;

      case PlaylistContextType.AUDIO_TRACK:
        details = timeout ? errors["ErrorDetails"].AUDIO_TRACK_LOAD_TIMEOUT : errors["ErrorDetails"].AUDIO_TRACK_LOAD_ERROR;
        fatal = false;
        break;

      default:
        // details = ...?
        fatal = false;
    }

    if (loader) {
      loader.abort();
      this.resetInternalLoader(context.type);
    } // TODO(typescript-events): when error events are handled, type this


    var errorData = {
      type: errors["ErrorTypes"].NETWORK_ERROR,
      details: details,
      fatal: fatal,
      url: context.url,
      loader: loader,
      context: context,
      networkDetails: networkDetails
    };

    if (response) {
      errorData.response = response;
    }

    this.hls.trigger(events["default"].ERROR, errorData);
  };

  _proto._handlePlaylistLoaded = function _handlePlaylistLoaded(response, stats, context, networkDetails) {
    var type = context.type,
        level = context.level,
        id = context.id,
        levelDetails = context.levelDetails;

    if (!levelDetails || !levelDetails.targetduration) {
      this._handleManifestParsingError(response, context, 'invalid target duration', networkDetails);

      return;
    }

    var canHaveLevels = PlaylistLoader.canHaveQualityLevels(context.type);

    if (canHaveLevels) {
      this.hls.trigger(events["default"].LEVEL_LOADED, {
        details: levelDetails,
        level: level || 0,
        id: id || 0,
        stats: stats,
        networkDetails: networkDetails
      });
    } else {
      switch (type) {
        case PlaylistContextType.AUDIO_TRACK:
          this.hls.trigger(events["default"].AUDIO_TRACK_LOADED, {
            details: levelDetails,
            id: id,
            stats: stats,
            networkDetails: networkDetails
          });
          break;

        case PlaylistContextType.SUBTITLE_TRACK:
          this.hls.trigger(events["default"].SUBTITLE_TRACK_LOADED, {
            details: levelDetails,
            id: id,
            stats: stats,
            networkDetails: networkDetails
          });
          break;
      }
    }
  };

  return PlaylistLoader;
}(event_handler);

/* harmony default export */ var playlist_loader = (playlist_loader_PlaylistLoader);
// CONCATENATED MODULE: ./src/loader/fragment-loader.js



function fragment_loader_inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/*
 * Fragment Loader
*/





var fragment_loader_FragmentLoader = /*#__PURE__*/function (_EventHandler) {
  fragment_loader_inheritsLoose(FragmentLoader, _EventHandler);

  function FragmentLoader(hls) {
    var _this;

    _this = _EventHandler.call(this, hls, events["default"].FRAG_LOADING) || this;
    _this.loaders = {};
    return _this;
  }

  var _proto = FragmentLoader.prototype;

  _proto.destroy = function destroy() {
    var loaders = this.loaders;

    for (var loaderName in loaders) {
      var loader = loaders[loaderName];

      if (loader) {
        loader.destroy();
      }
    }

    this.loaders = {};

    _EventHandler.prototype.destroy.call(this);
  };

  _proto.onFragLoading = function onFragLoading(data) {
    var frag = data.frag,
        type = frag.type,
        loaders = this.loaders,
        config = this.hls.config,
        FragmentILoader = config.fLoader,
        DefaultILoader = config.loader; // reset fragment state

    frag.loaded = 0;
    var loader = loaders[type];

    if (loader) {
      logger["logger"].warn("abort previous fragment loader for type: " + type);
      loader.abort();
    }

    loader = loaders[type] = frag.loader = config.fLoader ? new FragmentILoader(config) : new DefaultILoader(config);
    var loaderContext, loaderConfig, loaderCallbacks;
    loaderContext = {
      url: frag.url,
      frag: frag,
      responseType: 'arraybuffer',
      progressData: false
    };
    var start = frag.byteRangeStartOffset,
        end = frag.byteRangeEndOffset;

    if (Object(number["isFiniteNumber"])(start) && Object(number["isFiniteNumber"])(end)) {
      loaderContext.rangeStart = start;
      loaderContext.rangeEnd = end;
    }

    loaderConfig = {
      timeout: config.fragLoadingTimeOut,
      maxRetry: 0,
      retryDelay: 0,
      maxRetryDelay: config.fragLoadingMaxRetryTimeout
    };
    loaderCallbacks = {
      onSuccess: this.loadsuccess.bind(this),
      onError: this.loaderror.bind(this),
      onTimeout: this.loadtimeout.bind(this),
      onProgress: this.loadprogress.bind(this)
    };
    loader.load(loaderContext, loaderConfig, loaderCallbacks);
  };

  _proto.loadsuccess = function loadsuccess(response, stats, context, networkDetails) {
    if (networkDetails === void 0) {
      networkDetails = null;
    }

    var payload = response.data,
        frag = context.frag; // detach fragment loader on load success

    frag.loader = undefined;
    this.loaders[frag.type] = undefined;
    this.hls.trigger(events["default"].FRAG_LOADED, {
      payload: payload,
      frag: frag,
      stats: stats,
      networkDetails: networkDetails
    });
  };

  _proto.loaderror = function loaderror(response, context, networkDetails) {
    if (networkDetails === void 0) {
      networkDetails = null;
    }

    var frag = context.frag;
    var loader = frag.loader;

    if (loader) {
      loader.abort();
    }

    this.loaders[frag.type] = undefined;
    this.hls.trigger(events["default"].ERROR, {
      type: errors["ErrorTypes"].NETWORK_ERROR,
      details: errors["ErrorDetails"].FRAG_LOAD_ERROR,
      fatal: false,
      frag: context.frag,
      response: response,
      networkDetails: networkDetails
    });
  };

  _proto.loadtimeout = function loadtimeout(stats, context, networkDetails) {
    if (networkDetails === void 0) {
      networkDetails = null;
    }

    var frag = context.frag;
    var loader = frag.loader;

    if (loader) {
      loader.abort();
    }

    this.loaders[frag.type] = undefined;
    this.hls.trigger(events["default"].ERROR, {
      type: errors["ErrorTypes"].NETWORK_ERROR,
      details: errors["ErrorDetails"].FRAG_LOAD_TIMEOUT,
      fatal: false,
      frag: context.frag,
      networkDetails: networkDetails
    });
  } // data will be used for progressive parsing
  ;

  _proto.loadprogress = function loadprogress(stats, context, data, networkDetails) {
    if (networkDetails === void 0) {
      networkDetails = null;
    }

    // jshint ignore:line
    var frag = context.frag;
    frag.loaded = stats.loaded;
    this.hls.trigger(events["default"].FRAG_LOAD_PROGRESS, {
      frag: frag,
      stats: stats,
      networkDetails: networkDetails
    });
  };

  return FragmentLoader;
}(event_handler);

/* harmony default export */ var fragment_loader = (fragment_loader_FragmentLoader);
// CONCATENATED MODULE: ./src/loader/key-loader.ts
function key_loader_inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/*
 * Decrypt key Loader
*/





var key_loader_KeyLoader = /*#__PURE__*/function (_EventHandler) {
  key_loader_inheritsLoose(KeyLoader, _EventHandler);

  function KeyLoader(hls) {
    var _this;

    _this = _EventHandler.call(this, hls, events["default"].KEY_LOADING) || this;
    _this.loaders = {};
    _this.decryptkey = null;
    _this.decrypturl = null;
    return _this;
  }

  var _proto = KeyLoader.prototype;

  _proto.destroy = function destroy() {
    for (var loaderName in this.loaders) {
      var loader = this.loaders[loaderName];

      if (loader) {
        loader.destroy();
      }
    }

    this.loaders = {};

    _EventHandler.prototype.destroy.call(this);
  };

  _proto.onKeyLoading = function onKeyLoading(data) {
    var frag = data.frag;
    var type = frag.type;
    var loader = this.loaders[type];

    if (!frag.decryptdata) {
      logger["logger"].warn('Missing decryption data on fragment in onKeyLoading');
      return;
    } // Load the key if the uri is different from previous one, or if the decrypt key has not yet been retrieved


    var uri = frag.decryptdata.uri;

    if (uri !== this.decrypturl || this.decryptkey === null) {
      var config = this.hls.config;

      if (loader) {
        logger["logger"].warn("abort previous key loader for type:" + type);
        loader.abort();
      }

      if (!uri) {
        logger["logger"].warn('key uri is falsy');
        return;
      }

      frag.loader = this.loaders[type] = new config.loader(config);
      this.decrypturl = uri;
      this.decryptkey = null;
      var loaderContext = {
        url: uri,
        frag: frag,
        responseType: 'arraybuffer'
      }; // maxRetry is 0 so that instead of retrying the same key on the same variant multiple times,
      // key-loader will trigger an error and rely on stream-controller to handle retry logic.
      // this will also align retry logic with fragment-loader

      var loaderConfig = {
        timeout: config.fragLoadingTimeOut,
        maxRetry: 0,
        retryDelay: config.fragLoadingRetryDelay,
        maxRetryDelay: config.fragLoadingMaxRetryTimeout
      };
      var loaderCallbacks = {
        onSuccess: this.loadsuccess.bind(this),
        onError: this.loaderror.bind(this),
        onTimeout: this.loadtimeout.bind(this)
      };
      frag.loader.load(loaderContext, loaderConfig, loaderCallbacks);
    } else if (this.decryptkey) {
      // Return the key if it's already been loaded
      frag.decryptdata.key = this.decryptkey;
      this.hls.trigger(events["default"].KEY_LOADED, {
        frag: frag
      });
    }
  };

  _proto.loadsuccess = function loadsuccess(response, stats, context) {
    var frag = context.frag;

    if (!frag.decryptdata) {
      logger["logger"].error('after key load, decryptdata unset');
      return;
    }

    this.decryptkey = frag.decryptdata.key = new Uint8Array(response.data); // detach fragment loader on load success

    frag.loader = undefined;
    delete this.loaders[frag.type];
    this.hls.trigger(events["default"].KEY_LOADED, {
      frag: frag
    });
  };

  _proto.loaderror = function loaderror(response, context) {
    var frag = context.frag;
    var loader = frag.loader;

    if (loader) {
      loader.abort();
    }

    delete this.loaders[frag.type];
    this.hls.trigger(events["default"].ERROR, {
      type: errors["ErrorTypes"].NETWORK_ERROR,
      details: errors["ErrorDetails"].KEY_LOAD_ERROR,
      fatal: false,
      frag: frag,
      response: response
    });
  };

  _proto.loadtimeout = function loadtimeout(stats, context) {
    var frag = context.frag;
    var loader = frag.loader;

    if (loader) {
      loader.abort();
    }

    delete this.loaders[frag.type];
    this.hls.trigger(events["default"].ERROR, {
      type: errors["ErrorTypes"].NETWORK_ERROR,
      details: errors["ErrorDetails"].KEY_LOAD_TIMEOUT,
      fatal: false,
      frag: frag
    });
  };

  return KeyLoader;
}(event_handler);

/* harmony default export */ var key_loader = (key_loader_KeyLoader);
// CONCATENATED MODULE: ./src/controller/fragment-tracker.js


function fragment_tracker_inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }



var FragmentState = {
  NOT_LOADED: 'NOT_LOADED',
  APPENDING: 'APPENDING',
  PARTIAL: 'PARTIAL',
  OK: 'OK'
};
var fragment_tracker_FragmentTracker = /*#__PURE__*/function (_EventHandler) {
  fragment_tracker_inheritsLoose(FragmentTracker, _EventHandler);

  function FragmentTracker(hls) {
    var _this;

    _this = _EventHandler.call(this, hls, events["default"].BUFFER_APPENDED, events["default"].FRAG_BUFFERED, events["default"].FRAG_LOADED) || this;
    _this.bufferPadding = 0.2;
    _this.fragments = Object.create(null);
    _this.timeRanges = Object.create(null);
    _this.config = hls.config;
    return _this;
  }

  var _proto = FragmentTracker.prototype;

  _proto.destroy = function destroy() {
    this.fragments = Object.create(null);
    this.timeRanges = Object.create(null);
    this.config = null;
    event_handler.prototype.destroy.call(this);

    _EventHandler.prototype.destroy.call(this);
  }
  /**
   * Return a Fragment that match the position and levelType.
   * If not found any Fragment, return null
   * @param {number} position
   * @param {LevelType} levelType
   * @returns {Fragment|null}
   */
  ;

  _proto.getBufferedFrag = function getBufferedFrag(position, levelType) {
    var fragments = this.fragments;
    var bufferedFrags = Object.keys(fragments).filter(function (key) {
      var fragmentEntity = fragments[key];

      if (fragmentEntity.body.type !== levelType) {
        return false;
      }

      if (!fragmentEntity.buffered) {
        return false;
      }

      var frag = fragmentEntity.body;
      return frag.startPTS <= position && position <= frag.endPTS;
    });

    if (bufferedFrags.length === 0) {
      return null;
    } else {
      // https://github.com/video-dev/hls.js/pull/1545#discussion_r166229566
      var bufferedFragKey = bufferedFrags.pop();
      return fragments[bufferedFragKey].body;
    }
  }
  /**
   * Partial fragments effected by coded frame eviction will be removed
   * The browser will unload parts of the buffer to free up memory for new buffer data
   * Fragments will need to be reloaded when the buffer is freed up, removing partial fragments will allow them to reload(since there might be parts that are still playable)
   * @param {String} elementaryStream The elementaryStream of media this is (eg. video/audio)
   * @param {TimeRanges} timeRange TimeRange object from a sourceBuffer
   */
  ;

  _proto.detectEvictedFragments = function detectEvictedFragments(elementaryStream, timeRange) {
    var _this2 = this;

    // Check if any flagged fragments have been unloaded
    Object.keys(this.fragments).forEach(function (key) {
      var fragmentEntity = _this2.fragments[key];

      if (!fragmentEntity || !fragmentEntity.buffered) {
        return;
      }

      var esData = fragmentEntity.range[elementaryStream];

      if (!esData) {
        return;
      }

      var fragmentTimes = esData.time;

      for (var i = 0; i < fragmentTimes.length; i++) {
        var time = fragmentTimes[i];

        if (!_this2.isTimeBuffered(time.startPTS, time.endPTS, timeRange)) {
          // Unregister partial fragment as it needs to load again to be reused
          _this2.removeFragment(fragmentEntity.body);

          break;
        }
      }
    });
  }
  /**
   * Checks if the fragment passed in is loaded in the buffer properly
   * Partially loaded fragments will be registered as a partial fragment
   * @param {Object} fragment Check the fragment against all sourceBuffers loaded
   */
  ;

  _proto.detectPartialFragments = function detectPartialFragments(fragment) {
    var _this3 = this;

    var fragKey = this.getFragmentKey(fragment);
    var fragmentEntity = this.fragments[fragKey];

    if (fragmentEntity) {
      fragmentEntity.buffered = true;
      Object.keys(this.timeRanges).forEach(function (elementaryStream) {
        if (fragment.hasElementaryStream(elementaryStream)) {
          var timeRange = _this3.timeRanges[elementaryStream]; // Check for malformed fragments
          // Gaps need to be calculated for each elementaryStream

          fragmentEntity.range[elementaryStream] = _this3.getBufferedTimes(fragment.startPTS, fragment.endPTS, timeRange);
        }
      });
    }
  };

  _proto.getBufferedTimes = function getBufferedTimes(startPTS, endPTS, timeRange) {
    var fragmentTimes = [];
    var startTime, endTime;
    var fragmentPartial = false;

    for (var i = 0; i < timeRange.length; i++) {
      startTime = timeRange.start(i) - this.bufferPadding;
      endTime = timeRange.end(i) + this.bufferPadding;

      if (startPTS >= startTime && endPTS <= endTime) {
        // Fragment is entirely contained in buffer
        // No need to check the other timeRange times since it's completely playable
        fragmentTimes.push({
          startPTS: Math.max(startPTS, timeRange.start(i)),
          endPTS: Math.min(endPTS, timeRange.end(i))
        });
        break;
      } else if (startPTS < endTime && endPTS > startTime) {
        // Check for intersection with buffer
        // Get playable sections of the fragment
        fragmentTimes.push({
          startPTS: Math.max(startPTS, timeRange.start(i)),
          endPTS: Math.min(endPTS, timeRange.end(i))
        });
        fragmentPartial = true;
      } else if (endPTS <= startTime) {
        // No need to check the rest of the timeRange as it is in order
        break;
      }
    }

    return {
      time: fragmentTimes,
      partial: fragmentPartial
    };
  };

  _proto.getFragmentKey = function getFragmentKey(fragment) {
    return fragment.type + "_" + fragment.level + "_" + fragment.urlId + "_" + fragment.sn;
  }
  /**
   * Gets the partial fragment for a certain time
   * @param {Number} time
   * @returns {Object} fragment Returns a partial fragment at a time or null if there is no partial fragment
   */
  ;

  _proto.getPartialFragment = function getPartialFragment(time) {
    var _this4 = this;

    var timePadding, startTime, endTime;
    var bestFragment = null;
    var bestOverlap = 0;
    Object.keys(this.fragments).forEach(function (key) {
      var fragmentEntity = _this4.fragments[key];

      if (_this4.isPartial(fragmentEntity)) {
        startTime = fragmentEntity.body.startPTS - _this4.bufferPadding;
        endTime = fragmentEntity.body.endPTS + _this4.bufferPadding;

        if (time >= startTime && time <= endTime) {
          // Use the fragment that has the most padding from start and end time
          timePadding = Math.min(time - startTime, endTime - time);

          if (bestOverlap <= timePadding) {
            bestFragment = fragmentEntity.body;
            bestOverlap = timePadding;
          }
        }
      }
    });
    return bestFragment;
  }
  /**
   * @param {Object} fragment The fragment to check
   * @returns {String} Returns the fragment state when a fragment never loaded or if it partially loaded
   */
  ;

  _proto.getState = function getState(fragment) {
    var fragKey = this.getFragmentKey(fragment);
    var fragmentEntity = this.fragments[fragKey];
    var state = FragmentState.NOT_LOADED;

    if (fragmentEntity !== undefined) {
      if (!fragmentEntity.buffered) {
        state = FragmentState.APPENDING;
      } else if (this.isPartial(fragmentEntity) === true) {
        state = FragmentState.PARTIAL;
      } else {
        state = FragmentState.OK;
      }
    }

    return state;
  };

  _proto.isPartial = function isPartial(fragmentEntity) {
    return fragmentEntity.buffered === true && (fragmentEntity.range.video !== undefined && fragmentEntity.range.video.partial === true || fragmentEntity.range.audio !== undefined && fragmentEntity.range.audio.partial === true);
  };

  _proto.isTimeBuffered = function isTimeBuffered(startPTS, endPTS, timeRange) {
    var startTime, endTime;

    for (var i = 0; i < timeRange.length; i++) {
      startTime = timeRange.start(i) - this.bufferPadding;
      endTime = timeRange.end(i) + this.bufferPadding;

      if (startPTS >= startTime && endPTS <= endTime) {
        return true;
      }

      if (endPTS <= startTime) {
        // No need to check the rest of the timeRange as it is in order
        return false;
      }
    }

    return false;
  }
  /**
   * Fires when a fragment loading is completed
   */
  ;

  _proto.onFragLoaded = function onFragLoaded(e) {
    var fragment = e.frag; // don't track initsegment (for which sn is not a number)
    // don't track frags used for bitrateTest, they're irrelevant.

    if (!Object(number["isFiniteNumber"])(fragment.sn) || fragment.bitrateTest) {
      return;
    }

    this.fragments[this.getFragmentKey(fragment)] = {
      body: fragment,
      range: Object.create(null),
      buffered: false
    };
  }
  /**
   * Fires when the buffer is updated
   */
  ;

  _proto.onBufferAppended = function onBufferAppended(e) {
    var _this5 = this;

    // Store the latest timeRanges loaded in the buffer
    this.timeRanges = e.timeRanges;
    Object.keys(this.timeRanges).forEach(function (elementaryStream) {
      var timeRange = _this5.timeRanges[elementaryStream];

      _this5.detectEvictedFragments(elementaryStream, timeRange);
    });
  }
  /**
   * Fires after a fragment has been loaded into the source buffer
   */
  ;

  _proto.onFragBuffered = function onFragBuffered(e) {
    this.detectPartialFragments(e.frag);
  }
  /**
   * Return true if fragment tracker has the fragment.
   * @param {Object} fragment
   * @returns {boolean}
   */
  ;

  _proto.hasFragment = function hasFragment(fragment) {
    var fragKey = this.getFragmentKey(fragment);
    return this.fragments[fragKey] !== undefined;
  }
  /**
   * Remove a fragment from fragment tracker until it is loaded again
   * @param {Object} fragment The fragment to remove
   */
  ;

  _proto.removeFragment = function removeFragment(fragment) {
    var fragKey = this.getFragmentKey(fragment);
    delete this.fragments[fragKey];
  }
  /**
   * Remove all fragments from fragment tracker.
   */
  ;

  _proto.removeAllFragments = function removeAllFragments() {
    this.fragments = Object.create(null);
  };

  return FragmentTracker;
}(event_handler);
// CONCATENATED MODULE: ./src/utils/binary-search.ts
var BinarySearch = {
  /**
   * Searches for an item in an array which matches a certain condition.
   * This requires the condition to only match one item in the array,
   * and for the array to be ordered.
   *
   * @param {Array<T>} list The array to search.
   * @param {BinarySearchComparison<T>} comparisonFn
   *      Called and provided a candidate item as the first argument.
   *      Should return:
   *          > -1 if the item should be located at a lower index than the provided item.
   *          > 1 if the item should be located at a higher index than the provided item.
   *          > 0 if the item is the item you're looking for.
   *
   * @return {T | null} The object if it is found or null otherwise.
   */
  search: function search(list, comparisonFn) {
    var minIndex = 0;
    var maxIndex = list.length - 1;
    var currentIndex = null;
    var currentElement = null;

    while (minIndex <= maxIndex) {
      currentIndex = (minIndex + maxIndex) / 2 | 0;
      currentElement = list[currentIndex];
      var comparisonResult = comparisonFn(currentElement);

      if (comparisonResult > 0) {
        minIndex = currentIndex + 1;
      } else if (comparisonResult < 0) {
        maxIndex = currentIndex - 1;
      } else {
        return currentElement;
      }
    }

    return null;
  }
};
/* harmony default export */ var binary_search = (BinarySearch);
// CONCATENATED MODULE: ./src/utils/buffer-helper.ts
/**
 * @module BufferHelper
 *
 * Providing methods dealing with buffer length retrieval for example.
 *
 * In general, a helper around HTML5 MediaElement TimeRanges gathered from `buffered` property.
 *
 * Also @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/buffered
*/
var BufferHelper = /*#__PURE__*/function () {
  function BufferHelper() {}

  /**
   * Return true if `media`'s buffered include `position`
   * @param {Bufferable} media
   * @param {number} position
   * @returns {boolean}
   */
  BufferHelper.isBuffered = function isBuffered(media, position) {
    try {
      if (media) {
        var buffered = media.buffered;

        for (var i = 0; i < buffered.length; i++) {
          if (position >= buffered.start(i) && position <= buffered.end(i)) {
            return true;
          }
        }
      }
    } catch (error) {// this is to catch
      // InvalidStateError: Failed to read the 'buffered' property from 'SourceBuffer':
      // This SourceBuffer has been removed from the parent media source
    }

    return false;
  };

  BufferHelper.bufferInfo = function bufferInfo(media, pos, maxHoleDuration) {
    try {
      if (media) {
        var vbuffered = media.buffered;
        var buffered = [];
        var i;

        for (i = 0; i < vbuffered.length; i++) {
          buffered.push({
            start: vbuffered.start(i),
            end: vbuffered.end(i)
          });
        }

        return this.bufferedInfo(buffered, pos, maxHoleDuration);
      }
    } catch (error) {// this is to catch
      // InvalidStateError: Failed to read the 'buffered' property from 'SourceBuffer':
      // This SourceBuffer has been removed from the parent media source
    }

    return {
      len: 0,
      start: pos,
      end: pos,
      nextStart: undefined
    };
  };

  BufferHelper.bufferedInfo = function bufferedInfo(buffered, pos, maxHoleDuration) {
    // sort on buffer.start/smaller end (IE does not always return sorted buffered range)
    buffered.sort(function (a, b) {
      var diff = a.start - b.start;

      if (diff) {
        return diff;
      } else {
        return b.end - a.end;
      }
    });
    var buffered2 = [];

    if (maxHoleDuration) {
      // there might be some small holes between buffer time range
      // consider that holes smaller than maxHoleDuration are irrelevant and build another
      // buffer time range representations that discards those holes
      for (var i = 0; i < buffered.length; i++) {
        var buf2len = buffered2.length;

        if (buf2len) {
          var buf2end = buffered2[buf2len - 1].end; // if small hole (value between 0 or maxHoleDuration ) or overlapping (negative)

          if (buffered[i].start - buf2end < maxHoleDuration) {
            // merge overlapping time ranges
            // update lastRange.end only if smaller than item.end
            // e.g.  [ 1, 15] with  [ 2,8] => [ 1,15] (no need to modify lastRange.end)
            // whereas [ 1, 8] with  [ 2,15] => [ 1,15] ( lastRange should switch from [1,8] to [1,15])
            if (buffered[i].end > buf2end) {
              buffered2[buf2len - 1].end = buffered[i].end;
            }
          } else {
            // big hole
            buffered2.push(buffered[i]);
          }
        } else {
          // first value
          buffered2.push(buffered[i]);
        }
      }
    } else {
      buffered2 = buffered;
    }

    var bufferLen = 0; // bufferStartNext can possibly be undefined based on the conditional logic below

    var bufferStartNext; // bufferStart and bufferEnd are buffer boundaries around current video position

    var bufferStart = pos;
    var bufferEnd = pos;

    for (var _i = 0; _i < buffered2.length; _i++) {
      var start = buffered2[_i].start,
          end = buffered2[_i].end; // logger.log('buf start/end:' + buffered.start(i) + '/' + buffered.end(i));

      if (pos + maxHoleDuration >= start && pos < end) {
        // play position is inside this buffer TimeRange, retrieve end of buffer position and buffer length
        bufferStart = start;
        bufferEnd = end;
        bufferLen = bufferEnd - pos;
      } else if (pos + maxHoleDuration < start) {
        bufferStartNext = start;
        break;
      }
    }

    return {
      len: bufferLen,
      start: bufferStart,
      end: bufferEnd,
      nextStart: bufferStartNext
    };
  };

  return BufferHelper;
}();
// EXTERNAL MODULE: ./node_modules/eventemitter3/index.js
var eventemitter3 = __webpack_require__("./node_modules/eventemitter3/index.js");

// EXTERNAL MODULE: ./node_modules/webworkify-webpack/index.js
var webworkify_webpack = __webpack_require__("./node_modules/webworkify-webpack/index.js");

// EXTERNAL MODULE: ./src/demux/demuxer-inline.js + 12 modules
var demuxer_inline = __webpack_require__("./src/demux/demuxer-inline.js");

// CONCATENATED MODULE: ./src/utils/mediasource-helper.ts
/**
 * MediaSource helper
 */
function getMediaSource() {
  return window.MediaSource || window.WebKitMediaSource;
}
// EXTERNAL MODULE: ./src/utils/get-self-scope.js
var get_self_scope = __webpack_require__("./src/utils/get-self-scope.js");

// CONCATENATED MODULE: ./src/observer.ts
function observer_inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }


/**
 * Simple adapter sub-class of Nodejs-like EventEmitter.
 */

var Observer = /*#__PURE__*/function (_EventEmitter) {
  observer_inheritsLoose(Observer, _EventEmitter);

  function Observer() {
    return _EventEmitter.apply(this, arguments) || this;
  }

  var _proto = Observer.prototype;

  /**
   * We simply want to pass along the event-name itself
   * in every call to a handler, which is the purpose of our `trigger` method
   * extending the standard API.
   */
  _proto.trigger = function trigger(event) {
    for (var _len = arguments.length, data = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      data[_key - 1] = arguments[_key];
    }

    this.emit.apply(this, [event, event].concat(data));
  };

  return Observer;
}(eventemitter3["EventEmitter"]);
// CONCATENATED MODULE: ./src/demux/demuxer.js









 // see https://stackoverflow.com/a/11237259/589493

var global = Object(get_self_scope["getSelfScope"])(); // safeguard for code that might run both on worker and main thread

var demuxer_MediaSource = getMediaSource() || {
  isTypeSupported: function isTypeSupported() {
    return false;
  }
};

var demuxer_Demuxer = /*#__PURE__*/function () {
  function Demuxer(hls, id) {
    var _this = this;

    this.hls = hls;
    this.id = id;
    var observer = this.observer = new Observer();
    var config = hls.config;

    var forwardMessage = function forwardMessage(ev, data) {
      data = data || {};
      data.frag = _this.frag;
      data.id = _this.id;
      hls.trigger(ev, data);
    }; // forward events to main thread


    observer.on(events["default"].FRAG_DECRYPTED, forwardMessage);
    observer.on(events["default"].FRAG_PARSING_INIT_SEGMENT, forwardMessage);
    observer.on(events["default"].FRAG_PARSING_DATA, forwardMessage);
    observer.on(events["default"].FRAG_PARSED, forwardMessage);
    observer.on(events["default"].ERROR, forwardMessage);
    observer.on(events["default"].FRAG_PARSING_METADATA, forwardMessage);
    observer.on(events["default"].FRAG_PARSING_USERDATA, forwardMessage);
    observer.on(events["default"].INIT_PTS_FOUND, forwardMessage);
    var typeSupported = {
      mp4: demuxer_MediaSource.isTypeSupported('video/mp4'),
      mpeg: demuxer_MediaSource.isTypeSupported('audio/mpeg'),
      mp3: demuxer_MediaSource.isTypeSupported('audio/mp4; codecs="mp3"')
    }; // navigator.vendor is not always available in Web Worker
    // refer to https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/navigator

    var vendor = navigator.vendor;

    if (config.enableWorker && typeof Worker !== 'undefined') {
      logger["logger"].log('demuxing in webworker');
      var w;

      try {
        w = this.w = webworkify_webpack(/*require.resolve*/(/*! ../demux/demuxer-worker.js */ "./src/demux/demuxer-worker.js"));
        this.onwmsg = this.onWorkerMessage.bind(this);
        w.addEventListener('message', this.onwmsg);

        w.onerror = function (event) {
          hls.trigger(events["default"].ERROR, {
            type: errors["ErrorTypes"].OTHER_ERROR,
            details: errors["ErrorDetails"].INTERNAL_EXCEPTION,
            fatal: true,
            event: 'demuxerWorker',
            err: {
              message: event.message + ' (' + event.filename + ':' + event.lineno + ')'
            }
          });
        };

        w.postMessage({
          cmd: 'init',
          typeSupported: typeSupported,
          vendor: vendor,
          id: id,
          config: JSON.stringify(config)
        });
      } catch (err) {
        logger["logger"].warn('Error in worker:', err);
        logger["logger"].error('Error while initializing DemuxerWorker, fallback on DemuxerInline');

        if (w) {
          // revoke the Object URL that was used to create demuxer worker, so as not to leak it
          global.URL.revokeObjectURL(w.objectURL);
        }

        this.demuxer = new demuxer_inline["default"](observer, typeSupported, config, vendor);
        this.w = undefined;
      }
    } else {
      this.demuxer = new demuxer_inline["default"](observer, typeSupported, config, vendor);
    }
  }

  var _proto = Demuxer.prototype;

  _proto.destroy = function destroy() {
    var w = this.w;

    if (w) {
      w.removeEventListener('message', this.onwmsg);
      w.terminate();
      this.w = null;
    } else {
      var demuxer = this.demuxer;

      if (demuxer) {
        demuxer.destroy();
        this.demuxer = null;
      }
    }

    var observer = this.observer;

    if (observer) {
      observer.removeAllListeners();
      this.observer = null;
    }
  };

  _proto.push = function push(data, initSegment, audioCodec, videoCodec, frag, duration, accurateTimeOffset, defaultInitPTS) {
    var w = this.w;
    var timeOffset = Object(number["isFiniteNumber"])(frag.startPTS) ? frag.startPTS : frag.start;
    var decryptdata = frag.decryptdata;
    var lastFrag = this.frag;
    var discontinuity = !(lastFrag && frag.cc === lastFrag.cc);
    var trackSwitch = !(lastFrag && frag.level === lastFrag.level);
    var nextSN = lastFrag && frag.sn === lastFrag.sn + 1;
    var contiguous = !trackSwitch && nextSN;

    if (discontinuity) {
      logger["logger"].log(this.id + ":discontinuity detected");
    }

    if (trackSwitch) {
      logger["logger"].log(this.id + ":switch detected");
    }

    this.frag = frag;

    if (w) {
      // post fragment payload as transferable objects for ArrayBuffer (no copy)
      w.postMessage({
        cmd: 'demux',
        data: data,
        decryptdata: decryptdata,
        initSegment: initSegment,
        audioCodec: audioCodec,
        videoCodec: videoCodec,
        timeOffset: timeOffset,
        discontinuity: discontinuity,
        trackSwitch: trackSwitch,
        contiguous: contiguous,
        duration: duration,
        accurateTimeOffset: accurateTimeOffset,
        defaultInitPTS: defaultInitPTS
      }, data instanceof ArrayBuffer ? [data] : []);
    } else {
      var demuxer = this.demuxer;

      if (demuxer) {
        demuxer.push(data, decryptdata, initSegment, audioCodec, videoCodec, timeOffset, discontinuity, trackSwitch, contiguous, duration, accurateTimeOffset, defaultInitPTS);
      }
    }
  };

  _proto.onWorkerMessage = function onWorkerMessage(ev) {
    var data = ev.data,
        hls = this.hls;

    switch (data.event) {
      case 'init':
        // revoke the Object URL that was used to create demuxer worker, so as not to leak it
        global.URL.revokeObjectURL(this.w.objectURL);
        break;
      // special case for FRAG_PARSING_DATA: data1 and data2 are transferable objects

      case events["default"].FRAG_PARSING_DATA:
        data.data.data1 = new Uint8Array(data.data1);

        if (data.data2) {
          data.data.data2 = new Uint8Array(data.data2);
        }

      /* falls through */

      default:
        data.data = data.data || {};
        data.data.frag = this.frag;
        data.data.id = this.id;
        hls.trigger(data.event, data.data);
        break;
    }
  };

  return Demuxer;
}();

/* harmony default export */ var demux_demuxer = (demuxer_Demuxer);
// CONCATENATED MODULE: ./src/controller/level-helper.js





/**
 * @module LevelHelper
 *
 * Providing methods dealing with playlist sliding and drift
 *
 * TODO: Create an actual `Level` class/model that deals with all this logic in an object-oriented-manner.
 *
 * */

function addGroupId(level, type, id) {
  switch (type) {
    case 'audio':
      if (!level.audioGroupIds) {
        level.audioGroupIds = [];
      }

      level.audioGroupIds.push(id);
      break;

    case 'text':
      if (!level.textGroupIds) {
        level.textGroupIds = [];
      }

      level.textGroupIds.push(id);
      break;
  }
}
function updatePTS(fragments, fromIdx, toIdx) {
  var fragFrom = fragments[fromIdx],
      fragTo = fragments[toIdx],
      fragToPTS = fragTo.startPTS; // if we know startPTS[toIdx]

  if (Object(number["isFiniteNumber"])(fragToPTS)) {
    // update fragment duration.
    // it helps to fix drifts between playlist reported duration and fragment real duration
    if (toIdx > fromIdx) {
      fragFrom.duration = fragToPTS - fragFrom.start;

      if (fragFrom.duration < 0) {
        logger["logger"].warn("negative duration computed for frag " + fragFrom.sn + ",level " + fragFrom.level + ", there should be some duration drift between playlist and fragment!");
      }
    } else {
      fragTo.duration = fragFrom.start - fragToPTS;

      if (fragTo.duration < 0) {
        logger["logger"].warn("negative duration computed for frag " + fragTo.sn + ",level " + fragTo.level + ", there should be some duration drift between playlist and fragment!");
      }
    }
  } else {
    // we dont know startPTS[toIdx]
    if (toIdx > fromIdx) {
      var contiguous = fragFrom.cc === fragTo.cc;
      fragTo.start = fragFrom.start + (contiguous && fragFrom.minEndPTS ? fragFrom.minEndPTS - fragFrom.start : fragFrom.duration);
    } else {
      fragTo.start = Math.max(fragFrom.start - fragTo.duration, 0);
    }
  }
}
function updateFragPTSDTS(details, frag, startPTS, endPTS, startDTS, endDTS) {
  // update frag PTS/DTS
  var maxStartPTS = startPTS;
  var minEndPTS = endPTS;

  if (Object(number["isFiniteNumber"])(frag.startPTS)) {
    // delta PTS between audio and video
    var deltaPTS = Math.abs(frag.startPTS - startPTS);

    if (!Object(number["isFiniteNumber"])(frag.deltaPTS)) {
      frag.deltaPTS = deltaPTS;
    } else {
      frag.deltaPTS = Math.max(deltaPTS, frag.deltaPTS);
    }

    maxStartPTS = Math.max(startPTS, frag.startPTS);
    startPTS = Math.min(startPTS, frag.startPTS);
    minEndPTS = Math.min(endPTS, frag.endPTS);
    endPTS = Math.max(endPTS, frag.endPTS);
    startDTS = Math.min(startDTS, frag.startDTS);
    endDTS = Math.max(endDTS, frag.endDTS);
  }

  var drift = startPTS - frag.start;
  frag.start = frag.startPTS = startPTS;
  frag.maxStartPTS = maxStartPTS;
  frag.endPTS = endPTS;
  frag.minEndPTS = minEndPTS;
  frag.startDTS = startDTS;
  frag.endDTS = endDTS;
  frag.duration = endPTS - startPTS;
  var sn = frag.sn; // exit if sn out of range

  if (!details || sn < details.startSN || sn > details.endSN) {
    return 0;
  }

  var fragIdx, fragments, i;
  fragIdx = sn - details.startSN;
  fragments = details.fragments; // update frag reference in fragments array
  // rationale is that fragments array might not contain this frag object.
  // this will happen if playlist has been refreshed between frag loading and call to updateFragPTSDTS()
  // if we don't update frag, we won't be able to propagate PTS info on the playlist
  // resulting in invalid sliding computation

  fragments[fragIdx] = frag; // adjust fragment PTS/duration from seqnum-1 to frag 0

  for (i = fragIdx; i > 0; i--) {
    updatePTS(fragments, i, i - 1);
  } // adjust fragment PTS/duration from seqnum to last frag


  for (i = fragIdx; i < fragments.length - 1; i++) {
    updatePTS(fragments, i, i + 1);
  }

  details.PTSKnown = true;
  return drift;
}
function mergeDetails(oldDetails, newDetails) {
  // potentially retrieve cached initsegment
  if (newDetails.initSegment && oldDetails.initSegment) {
    newDetails.initSegment = oldDetails.initSegment;
  } // check if old/new playlists have fragments in common
  // loop through overlapping SN and update startPTS , cc, and duration if any found


  var ccOffset = 0;
  var PTSFrag;
  mapFragmentIntersection(oldDetails, newDetails, function (oldFrag, newFrag) {
    ccOffset = oldFrag.cc - newFrag.cc;

    if (Object(number["isFiniteNumber"])(oldFrag.startPTS)) {
      newFrag.start = newFrag.startPTS = oldFrag.startPTS;
      newFrag.endPTS = oldFrag.endPTS;
      newFrag.duration = oldFrag.duration;
      newFrag.backtracked = oldFrag.backtracked;
      newFrag.dropped = oldFrag.dropped;
      PTSFrag = newFrag;
    } // PTS is known when there are overlapping segments


    newDetails.PTSKnown = true;
  });

  if (!newDetails.PTSKnown) {
    return;
  }

  if (ccOffset) {
    logger["logger"].log('discontinuity sliding from playlist, take drift into account');
    var newFragments = newDetails.fragments;

    for (var i = 0; i < newFragments.length; i++) {
      newFragments[i].cc += ccOffset;
    }
  } // if at least one fragment contains PTS info, recompute PTS information for all fragments


  if (PTSFrag) {
    updateFragPTSDTS(newDetails, PTSFrag, PTSFrag.startPTS, PTSFrag.endPTS, PTSFrag.startDTS, PTSFrag.endDTS);
  } else {
    // ensure that delta is within oldFragments range
    // also adjust sliding in case delta is 0 (we could have old=[50-60] and new=old=[50-61])
    // in that case we also need to adjust start offset of all fragments
    adjustSliding(oldDetails, newDetails);
  } // if we are here, it means we have fragments overlapping between
  // old and new level. reliable PTS info is thus relying on old level


  newDetails.PTSKnown = oldDetails.PTSKnown;
}
function mergeSubtitlePlaylists(oldPlaylist, newPlaylist, referenceStart) {
  if (referenceStart === void 0) {
    referenceStart = 0;
  }

  var lastIndex = -1;
  mapFragmentIntersection(oldPlaylist, newPlaylist, function (oldFrag, newFrag, index) {
    newFrag.start = oldFrag.start;
    lastIndex = index;
  });
  var frags = newPlaylist.fragments;

  if (lastIndex < 0) {
    frags.forEach(function (frag) {
      frag.start += referenceStart;
    });
    return;
  }

  for (var i = lastIndex + 1; i < frags.length; i++) {
    frags[i].start = frags[i - 1].start + frags[i - 1].duration;
  }
}
function mapFragmentIntersection(oldPlaylist, newPlaylist, intersectionFn) {
  if (!oldPlaylist || !newPlaylist) {
    return;
  }

  var start = Math.max(oldPlaylist.startSN, newPlaylist.startSN) - newPlaylist.startSN;
  var end = Math.min(oldPlaylist.endSN, newPlaylist.endSN) - newPlaylist.startSN;
  var delta = newPlaylist.startSN - oldPlaylist.startSN;

  for (var i = start; i <= end; i++) {
    var oldFrag = oldPlaylist.fragments[delta + i];
    var newFrag = newPlaylist.fragments[i];

    if (!oldFrag || !newFrag) {
      break;
    }

    intersectionFn(oldFrag, newFrag, i);
  }
}
function adjustSliding(oldPlaylist, newPlaylist) {
  var delta = newPlaylist.startSN - oldPlaylist.startSN;
  var oldFragments = oldPlaylist.fragments;
  var newFragments = newPlaylist.fragments;

  if (delta < 0 || delta > oldFragments.length) {
    return;
  }

  for (var i = 0; i < newFragments.length; i++) {
    newFragments[i].start += oldFragments[delta].start;
  }
}
function computeReloadInterval(currentPlaylist, newPlaylist, lastRequestTime) {
  var reloadInterval = 1000 * (newPlaylist.averagetargetduration ? newPlaylist.averagetargetduration : newPlaylist.targetduration);
  var minReloadInterval = reloadInterval / 2;

  if (currentPlaylist && newPlaylist.endSN === currentPlaylist.endSN) {
    // follow HLS Spec, If the client reloads a Playlist file and finds that it has not
    // changed then it MUST wait for a period of one-half the target
    // duration before retrying.
    reloadInterval = minReloadInterval;
  }

  if (lastRequestTime) {
    reloadInterval = Math.max(minReloadInterval, reloadInterval - (window.performance.now() - lastRequestTime));
  } // in any case, don't reload more than half of target duration


  return Math.round(reloadInterval);
}
// CONCATENATED MODULE: ./src/utils/time-ranges.ts
/**
 *  TimeRanges to string helper
 */
var TimeRanges = {
  toString: function toString(r) {
    var log = '';
    var len = r.length;

    for (var i = 0; i < len; i++) {
      log += '[' + r.start(i).toFixed(3) + ',' + r.end(i).toFixed(3) + ']';
    }

    return log;
  }
};
/* harmony default export */ var time_ranges = (TimeRanges);
// CONCATENATED MODULE: ./src/utils/discontinuities.js



function findFirstFragWithCC(fragments, cc) {
  var firstFrag = null;

  for (var i = 0; i < fragments.length; i += 1) {
    var currentFrag = fragments[i];

    if (currentFrag && currentFrag.cc === cc) {
      firstFrag = currentFrag;
      break;
    }
  }

  return firstFrag;
}
function findFragWithCC(fragments, CC) {
  return binary_search.search(fragments, function (candidate) {
    if (candidate.cc < CC) {
      return 1;
    } else if (candidate.cc > CC) {
      return -1;
    } else {
      return 0;
    }
  });
}
function shouldAlignOnDiscontinuities(lastFrag, lastLevel, details) {
  var shouldAlign = false;

  if (lastLevel && lastLevel.details && details) {
    if (details.endCC > details.startCC || lastFrag && lastFrag.cc < details.startCC) {
      shouldAlign = true;
    }
  }

  return shouldAlign;
} // Find the first frag in the previous level which matches the CC of the first frag of the new level

function findDiscontinuousReferenceFrag(prevDetails, curDetails) {
  var prevFrags = prevDetails.fragments;
  var curFrags = curDetails.fragments;

  if (!curFrags.length || !prevFrags.length) {
    logger["logger"].log('No fragments to align');
    return;
  }

  var prevStartFrag = findFirstFragWithCC(prevFrags, curFrags[0].cc);

  if (!prevStartFrag || prevStartFrag && !prevStartFrag.startPTS) {
    logger["logger"].log('No frag in previous level to align on');
    return;
  }

  return prevStartFrag;
}
function adjustPts(sliding, details) {
  details.fragments.forEach(function (frag) {
    if (frag) {
      var start = frag.start + sliding;
      frag.start = frag.startPTS = start;
      frag.endPTS = start + frag.duration;
    }
  });
  details.PTSKnown = true;
}
/**
 * Using the parameters of the last level, this function computes PTS' of the new fragments so that they form a
 * contiguous stream with the last fragments.
 * The PTS of a fragment lets Hls.js know where it fits into a stream - by knowing every PTS, we know which fragment to
 * download at any given time. PTS is normally computed when the fragment is demuxed, so taking this step saves us time
 * and an extra download.
 * @param lastFrag
 * @param lastLevel
 * @param details
 */

function alignStream(lastFrag, lastLevel, details) {
  alignDiscontinuities(lastFrag, details, lastLevel);

  if (!details.PTSKnown && lastLevel) {
    // If the PTS wasn't figured out via discontinuity sequence that means there was no CC increase within the level.
    // Aligning via Program Date Time should therefore be reliable, since PDT should be the same within the same
    // discontinuity sequence.
    alignPDT(details, lastLevel.details);
  }
}
/**
 * Computes the PTS if a new level's fragments using the PTS of a fragment in the last level which shares the same
 * discontinuity sequence.
 * @param lastLevel - The details of the last loaded level
 * @param details - The details of the new level
 */

function alignDiscontinuities(lastFrag, details, lastLevel) {
  if (shouldAlignOnDiscontinuities(lastFrag, lastLevel, details)) {
    var referenceFrag = findDiscontinuousReferenceFrag(lastLevel.details, details);

    if (referenceFrag) {
      logger["logger"].log('Adjusting PTS using last level due to CC increase within current level');
      adjustPts(referenceFrag.start, details);
    }
  }
}
/**
 * Computes the PTS of a new level's fragments using the difference in Program Date Time from the last level.
 * @param details - The details of the new level
 * @param lastDetails - The details of the last loaded level
 */

function alignPDT(details, lastDetails) {
  if (lastDetails && lastDetails.fragments.length) {
    if (!details.hasProgramDateTime || !lastDetails.hasProgramDateTime) {
      return;
    } // if last level sliding is 1000 and its first frag PROGRAM-DATE-TIME is 2017-08-20 1:10:00 AM
    // and if new details first frag PROGRAM DATE-TIME is 2017-08-20 1:10:08 AM
    // then we can deduce that playlist B sliding is 1000+8 = 1008s


    var lastPDT = lastDetails.fragments[0].programDateTime;
    var newPDT = details.fragments[0].programDateTime; // date diff is in ms. frag.start is in seconds

    var sliding = (newPDT - lastPDT) / 1000 + lastDetails.fragments[0].start;

    if (Object(number["isFiniteNumber"])(sliding)) {
      logger["logger"].log("adjusting PTS using programDateTime delta, sliding:" + sliding.toFixed(3));
      adjustPts(sliding, details);
    }
  }
}
// CONCATENATED MODULE: ./src/controller/fragment-finders.ts



/**
 * Returns first fragment whose endPdt value exceeds the given PDT.
 * @param {Array<Fragment>} fragments - The array of candidate fragments
 * @param {number|null} [PDTValue = null] - The PDT value which must be exceeded
 * @param {number} [maxFragLookUpTolerance = 0] - The amount of time that a fragment's start/end can be within in order to be considered contiguous
 * @returns {*|null} fragment - The best matching fragment
 */
function findFragmentByPDT(fragments, PDTValue, maxFragLookUpTolerance) {
  if (PDTValue === null || !Array.isArray(fragments) || !fragments.length || !Object(number["isFiniteNumber"])(PDTValue)) {
    return null;
  } // if less than start


  var startPDT = fragments[0].programDateTime;

  if (PDTValue < (startPDT || 0)) {
    return null;
  }

  var endPDT = fragments[fragments.length - 1].endProgramDateTime;

  if (PDTValue >= (endPDT || 0)) {
    return null;
  }

  maxFragLookUpTolerance = maxFragLookUpTolerance || 0;

  for (var seg = 0; seg < fragments.length; ++seg) {
    var frag = fragments[seg];

    if (pdtWithinToleranceTest(PDTValue, maxFragLookUpTolerance, frag)) {
      return frag;
    }
  }

  return null;
}
/**
 * Finds a fragment based on the SN of the previous fragment; or based on the needs of the current buffer.
 * This method compensates for small buffer gaps by applying a tolerance to the start of any candidate fragment, thus
 * breaking any traps which would cause the same fragment to be continuously selected within a small range.
 * @param {*} fragPrevious - The last frag successfully appended
 * @param {Array<Fragment>} fragments - The array of candidate fragments
 * @param {number} [bufferEnd = 0] - The end of the contiguous buffered range the playhead is currently within
 * @param {number} maxFragLookUpTolerance - The amount of time that a fragment's start/end can be within in order to be considered contiguous
 * @returns {*} foundFrag - The best matching fragment
 */

function findFragmentByPTS(fragPrevious, fragments, bufferEnd, maxFragLookUpTolerance) {
  if (bufferEnd === void 0) {
    bufferEnd = 0;
  }

  if (maxFragLookUpTolerance === void 0) {
    maxFragLookUpTolerance = 0;
  }

  var fragNext = null;

  if (fragPrevious) {
    fragNext = fragments[fragPrevious.sn - fragments[0].sn + 1];
  } else if (bufferEnd === 0 && fragments[0].start === 0) {
    fragNext = fragments[0];
  } // Prefer the next fragment if it's within tolerance


  if (fragNext && fragmentWithinToleranceTest(bufferEnd, maxFragLookUpTolerance, fragNext) === 0) {
    return fragNext;
  } // We might be seeking past the tolerance so find the best match


  var foundFragment = binary_search.search(fragments, fragmentWithinToleranceTest.bind(null, bufferEnd, maxFragLookUpTolerance));

  if (foundFragment) {
    return foundFragment;
  } // If no match was found return the next fragment after fragPrevious, or null


  return fragNext;
}
/**
 * The test function used by the findFragmentBySn's BinarySearch to look for the best match to the current buffer conditions.
 * @param {*} candidate - The fragment to test
 * @param {number} [bufferEnd = 0] - The end of the current buffered range the playhead is currently within
 * @param {number} [maxFragLookUpTolerance = 0] - The amount of time that a fragment's start can be within in order to be considered contiguous
 * @returns {number} - 0 if it matches, 1 if too low, -1 if too high
 */

function fragmentWithinToleranceTest(bufferEnd, maxFragLookUpTolerance, candidate) {
  if (bufferEnd === void 0) {
    bufferEnd = 0;
  }

  if (maxFragLookUpTolerance === void 0) {
    maxFragLookUpTolerance = 0;
  }

  // offset should be within fragment boundary - config.maxFragLookUpTolerance
  // this is to cope with situations like
  // bufferEnd = 9.991
  // frag[Ø] : [0,10]
  // frag[1] : [10,20]
  // bufferEnd is within frag[0] range ... although what we are expecting is to return frag[1] here
  //              frag start               frag start+duration
  //                  |-----------------------------|
  //              <--->                         <--->
  //  ...--------><-----------------------------><---------....
  // previous frag         matching fragment         next frag
  //  return -1             return 0                 return 1
  // logger.log(`level/sn/start/end/bufEnd:${level}/${candidate.sn}/${candidate.start}/${(candidate.start+candidate.duration)}/${bufferEnd}`);
  // Set the lookup tolerance to be small enough to detect the current segment - ensures we don't skip over very small segments
  var candidateLookupTolerance = Math.min(maxFragLookUpTolerance, candidate.duration + (candidate.deltaPTS ? candidate.deltaPTS : 0));

  if (candidate.start + candidate.duration - candidateLookupTolerance <= bufferEnd) {
    return 1;
  } else if (candidate.start - candidateLookupTolerance > bufferEnd && candidate.start) {
    // if maxFragLookUpTolerance will have negative value then don't return -1 for first element
    return -1;
  }

  return 0;
}
/**
 * The test function used by the findFragmentByPdt's BinarySearch to look for the best match to the current buffer conditions.
 * This function tests the candidate's program date time values, as represented in Unix time
 * @param {*} candidate - The fragment to test
 * @param {number} [pdtBufferEnd = 0] - The Unix time representing the end of the current buffered range
 * @param {number} [maxFragLookUpTolerance = 0] - The amount of time that a fragment's start can be within in order to be considered contiguous
 * @returns {boolean} True if contiguous, false otherwise
 */

function pdtWithinToleranceTest(pdtBufferEnd, maxFragLookUpTolerance, candidate) {
  var candidateLookupTolerance = Math.min(maxFragLookUpTolerance, candidate.duration + (candidate.deltaPTS ? candidate.deltaPTS : 0)) * 1000; // endProgramDateTime can be null, default to zero

  var endProgramDateTime = candidate.endProgramDateTime || 0;
  return endProgramDateTime - candidateLookupTolerance > pdtBufferEnd;
}
// CONCATENATED MODULE: ./src/controller/gap-controller.js




var STALL_MINIMUM_DURATION_MS = 250;
var MAX_START_GAP_JUMP = 2.0;
var SKIP_BUFFER_HOLE_STEP_SECONDS = 0.1;
var SKIP_BUFFER_RANGE_START = 0.05;

var gap_controller_GapController = /*#__PURE__*/function () {
  function GapController(config, media, fragmentTracker, hls) {
    this.config = config;
    this.media = media;
    this.fragmentTracker = fragmentTracker;
    this.hls = hls;
    this.nudgeRetry = 0;
    this.stallReported = false;
    this.stalled = null;
    this.moved = false;
    this.seeking = false;
  }
  /**
   * Checks if the playhead is stuck within a gap, and if so, attempts to free it.
   * A gap is an unbuffered range between two buffered ranges (or the start and the first buffered range).
   *
   * @param {number} lastCurrentTime Previously read playhead position
   */


  var _proto = GapController.prototype;

  _proto.poll = function poll(lastCurrentTime) {
    var config = this.config,
        media = this.media,
        stalled = this.stalled;
    var currentTime = media.currentTime,
        seeking = media.seeking;
    var seeked = this.seeking && !seeking;
    var beginSeek = !this.seeking && seeking;
    this.seeking = seeking; // The playhead is moving, no-op

    if (currentTime !== lastCurrentTime) {
      this.moved = true;

      if (stalled !== null) {
        // The playhead is now moving, but was previously stalled
        if (this.stallReported) {
          var _stalledDuration = self.performance.now() - stalled;

          logger["logger"].warn("playback not stuck anymore @" + currentTime + ", after " + Math.round(_stalledDuration) + "ms");
          this.stallReported = false;
        }

        this.stalled = null;
        this.nudgeRetry = 0;
      }

      return;
    } // Clear stalled state when beginning or finishing seeking so that we don't report stalls coming out of a seek


    if (beginSeek || seeked) {
      this.stalled = null;
    } // The playhead should not be moving


    if (media.paused || media.ended || media.playbackRate === 0 || !media.buffered.length) {
      return;
    }

    var bufferInfo = BufferHelper.bufferInfo(media, currentTime, 0);
    var isBuffered = bufferInfo.len > 0;
    var nextStart = bufferInfo.nextStart || 0; // There is no playable buffer (waiting for buffer append)

    if (!isBuffered && !nextStart) {
      return;
    }

    if (seeking) {
      // Waiting for seeking in a buffered range to complete
      var hasEnoughBuffer = bufferInfo.len > MAX_START_GAP_JUMP; // Next buffered range is too far ahead to jump to while still seeking

      var noBufferGap = !nextStart || nextStart - currentTime > MAX_START_GAP_JUMP && !this.fragmentTracker.getPartialFragment(currentTime);

      if (hasEnoughBuffer || noBufferGap) {
        return;
      } // Reset moved state when seeking to a point in or before a gap


      this.moved = false;
    } // Skip start gaps if we haven't played, but the last poll detected the start of a stall
    // The addition poll gives the browser a chance to jump the gap for us


    if (!this.moved && this.stalled) {
      // Jump start gaps within jump threshold
      var startJump = Math.max(nextStart, bufferInfo.start || 0) - currentTime;

      if (startJump > 0 && startJump <= MAX_START_GAP_JUMP) {
        this._trySkipBufferHole(null);

        return;
      }
    } // Start tracking stall time


    var tnow = self.performance.now();

    if (stalled === null) {
      this.stalled = tnow;
      return;
    }

    var stalledDuration = tnow - stalled;

    if (!seeking && stalledDuration >= STALL_MINIMUM_DURATION_MS) {
      // Report stalling after trying to fix
      this._reportStall(bufferInfo.len);
    }

    var bufferedWithHoles = BufferHelper.bufferInfo(media, currentTime, config.maxBufferHole);

    this._tryFixBufferStall(bufferedWithHoles, stalledDuration);
  }
  /**
   * Detects and attempts to fix known buffer stalling issues.
   * @param bufferInfo - The properties of the current buffer.
   * @param stalledDurationMs - The amount of time Hls.js has been stalling for.
   * @private
   */
  ;

  _proto._tryFixBufferStall = function _tryFixBufferStall(bufferInfo, stalledDurationMs) {
    var config = this.config,
        fragmentTracker = this.fragmentTracker,
        media = this.media;
    var currentTime = media.currentTime;
    var partial = fragmentTracker.getPartialFragment(currentTime);

    if (partial) {
      // Try to skip over the buffer hole caused by a partial fragment
      // This method isn't limited by the size of the gap between buffered ranges
      var targetTime = this._trySkipBufferHole(partial); // we return here in this case, meaning
      // the branch below only executes when we don't handle a partial fragment


      if (targetTime) {
        return;
      }
    } // if we haven't had to skip over a buffer hole of a partial fragment
    // we may just have to "nudge" the playlist as the browser decoding/rendering engine
    // needs to cross some sort of threshold covering all source-buffers content
    // to start playing properly.


    if (bufferInfo.len > config.maxBufferHole && stalledDurationMs > config.highBufferWatchdogPeriod * 1000) {
      logger["logger"].warn('Trying to nudge playhead over buffer-hole'); // Try to nudge currentTime over a buffer hole if we've been stalling for the configured amount of seconds
      // We only try to jump the hole if it's under the configured size
      // Reset stalled so to rearm watchdog timer

      this.stalled = null;

      this._tryNudgeBuffer();
    }
  }
  /**
   * Triggers a BUFFER_STALLED_ERROR event, but only once per stall period.
   * @param bufferLen - The playhead distance from the end of the current buffer segment.
   * @private
   */
  ;

  _proto._reportStall = function _reportStall(bufferLen) {
    var hls = this.hls,
        media = this.media,
        stallReported = this.stallReported;

    if (!stallReported) {
      // Report stalled error once
      this.stallReported = true;
      logger["logger"].warn("Playback stalling at @" + media.currentTime + " due to low buffer (buffer=" + bufferLen + ")");
      hls.trigger(events["default"].ERROR, {
        type: errors["ErrorTypes"].MEDIA_ERROR,
        details: errors["ErrorDetails"].BUFFER_STALLED_ERROR,
        fatal: false,
        buffer: bufferLen
      });
    }
  }
  /**
   * Attempts to fix buffer stalls by jumping over known gaps caused by partial fragments
   * @param partial - The partial fragment found at the current time (where playback is stalling).
   * @private
   */
  ;

  _proto._trySkipBufferHole = function _trySkipBufferHole(partial) {
    var config = this.config,
        hls = this.hls,
        media = this.media;
    var currentTime = media.currentTime;
    var lastEndTime = 0; // Check if currentTime is between unbuffered regions of partial fragments

    for (var i = 0; i < media.buffered.length; i++) {
      var startTime = media.buffered.start(i);

      if (currentTime + config.maxBufferHole >= lastEndTime && currentTime < startTime) {
        var targetTime = Math.max(startTime + SKIP_BUFFER_RANGE_START, media.currentTime + SKIP_BUFFER_HOLE_STEP_SECONDS);
        logger["logger"].warn("skipping hole, adjusting currentTime from " + currentTime + " to " + targetTime);
        this.moved = true;
        this.stalled = null;
        media.currentTime = targetTime;

        if (partial) {
          hls.trigger(events["default"].ERROR, {
            type: errors["ErrorTypes"].MEDIA_ERROR,
            details: errors["ErrorDetails"].BUFFER_SEEK_OVER_HOLE,
            fatal: false,
            reason: "fragment loaded with buffer holes, seeking from " + currentTime + " to " + targetTime,
            frag: partial
          });
        }

        return targetTime;
      }

      lastEndTime = media.buffered.end(i);
    }

    return 0;
  }
  /**
   * Attempts to fix buffer stalls by advancing the mediaElement's current time by a small amount.
   * @private
   */
  ;

  _proto._tryNudgeBuffer = function _tryNudgeBuffer() {
    var config = this.config,
        hls = this.hls,
        media = this.media;
    var currentTime = media.currentTime;
    var nudgeRetry = (this.nudgeRetry || 0) + 1;
    this.nudgeRetry = nudgeRetry;

    if (nudgeRetry < config.nudgeMaxRetry) {
      var targetTime = currentTime + nudgeRetry * config.nudgeOffset; // playback stalled in buffered area ... let's nudge currentTime to try to overcome this

      logger["logger"].warn("Nudging 'currentTime' from " + currentTime + " to " + targetTime);
      media.currentTime = targetTime;
      hls.trigger(events["default"].ERROR, {
        type: errors["ErrorTypes"].MEDIA_ERROR,
        details: errors["ErrorDetails"].BUFFER_NUDGE_ON_STALL,
        fatal: false
      });
    } else {
      logger["logger"].error("Playhead still not moving while enough data buffered @" + currentTime + " after " + config.nudgeMaxRetry + " nudges");
      hls.trigger(events["default"].ERROR, {
        type: errors["ErrorTypes"].MEDIA_ERROR,
        details: errors["ErrorDetails"].BUFFER_STALLED_ERROR,
        fatal: true
      });
    }
  };

  return GapController;
}();


// CONCATENATED MODULE: ./src/task-loop.ts
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function task_loop_inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }



/**
 * Sub-class specialization of EventHandler base class.
 *
 * TaskLoop allows to schedule a task function being called (optionnaly repeatedly) on the main loop,
 * scheduled asynchroneously, avoiding recursive calls in the same tick.
 *
 * The task itself is implemented in `doTick`. It can be requested and called for single execution
 * using the `tick` method.
 *
 * It will be assured that the task execution method (`tick`) only gets called once per main loop "tick",
 * no matter how often it gets requested for execution. Execution in further ticks will be scheduled accordingly.
 *
 * If further execution requests have already been scheduled on the next tick, it can be checked with `hasNextTick`,
 * and cancelled with `clearNextTick`.
 *
 * The task can be scheduled as an interval repeatedly with a period as parameter (see `setInterval`, `clearInterval`).
 *
 * Sub-classes need to implement the `doTick` method which will effectively have the task execution routine.
 *
 * Further explanations:
 *
 * The baseclass has a `tick` method that will schedule the doTick call. It may be called synchroneously
 * only for a stack-depth of one. On re-entrant calls, sub-sequent calls are scheduled for next main loop ticks.
 *
 * When the task execution (`tick` method) is called in re-entrant way this is detected and
 * we are limiting the task execution per call stack to exactly one, but scheduling/post-poning further
 * task processing on the next main loop iteration (also known as "next tick" in the Node/JS runtime lingo).
 */
var TaskLoop = /*#__PURE__*/function (_EventHandler) {
  task_loop_inheritsLoose(TaskLoop, _EventHandler);

  function TaskLoop(hls) {
    var _this;

    for (var _len = arguments.length, events = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      events[_key - 1] = arguments[_key];
    }

    _this = _EventHandler.call.apply(_EventHandler, [this, hls].concat(events)) || this;
    _this._boundTick = void 0;
    _this._tickTimer = null;
    _this._tickInterval = null;
    _this._tickCallCount = 0;
    _this._boundTick = _this.tick.bind(_assertThisInitialized(_this));
    return _this;
  }
  /**
   * @override
   */


  var _proto = TaskLoop.prototype;

  _proto.onHandlerDestroying = function onHandlerDestroying() {
    // clear all timers before unregistering from event bus
    this.clearNextTick();
    this.clearInterval();
  }
  /**
   * @returns {boolean}
   */
  ;

  _proto.hasInterval = function hasInterval() {
    return !!this._tickInterval;
  }
  /**
   * @returns {boolean}
   */
  ;

  _proto.hasNextTick = function hasNextTick() {
    return !!this._tickTimer;
  }
  /**
   * @param {number} millis Interval time (ms)
   * @returns {boolean} True when interval has been scheduled, false when already scheduled (no effect)
   */
  ;

  _proto.setInterval = function setInterval(millis) {
    if (!this._tickInterval) {
      this._tickInterval = self.setInterval(this._boundTick, millis);
      return true;
    }

    return false;
  }
  /**
   * @returns {boolean} True when interval was cleared, false when none was set (no effect)
   */
  ;

  _proto.clearInterval = function clearInterval() {
    if (this._tickInterval) {
      self.clearInterval(this._tickInterval);
      this._tickInterval = null;
      return true;
    }

    return false;
  }
  /**
   * @returns {boolean} True when timeout was cleared, false when none was set (no effect)
   */
  ;

  _proto.clearNextTick = function clearNextTick() {
    if (this._tickTimer) {
      self.clearTimeout(this._tickTimer);
      this._tickTimer = null;
      return true;
    }

    return false;
  }
  /**
   * Will call the subclass doTick implementation in this main loop tick
   * or in the next one (via setTimeout(,0)) in case it has already been called
   * in this tick (in case this is a re-entrant call).
   */
  ;

  _proto.tick = function tick() {
    this._tickCallCount++;

    if (this._tickCallCount === 1) {
      this.doTick(); // re-entrant call to tick from previous doTick call stack
      // -> schedule a call on the next main loop iteration to process this task processing request

      if (this._tickCallCount > 1) {
        // make sure only one timer exists at any time at max
        this.clearNextTick();
        this._tickTimer = self.setTimeout(this._boundTick, 0);
      }

      this._tickCallCount = 0;
    }
  }
  /**
   * For subclass to implement task logic
   * @abstract
   */
  ;

  _proto.doTick = function doTick() {};

  return TaskLoop;
}(event_handler);


// CONCATENATED MODULE: ./src/controller/base-stream-controller.js


function base_stream_controller_inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }





var State = {
  STOPPED: 'STOPPED',
  STARTING: 'STARTING',
  IDLE: 'IDLE',
  PAUSED: 'PAUSED',
  KEY_LOADING: 'KEY_LOADING',
  FRAG_LOADING: 'FRAG_LOADING',
  FRAG_LOADING_WAITING_RETRY: 'FRAG_LOADING_WAITING_RETRY',
  WAITING_TRACK: 'WAITING_TRACK',
  PARSING: 'PARSING',
  PARSED: 'PARSED',
  BUFFER_FLUSHING: 'BUFFER_FLUSHING',
  ENDED: 'ENDED',
  ERROR: 'ERROR',
  WAITING_INIT_PTS: 'WAITING_INIT_PTS',
  WAITING_LEVEL: 'WAITING_LEVEL'
};

var base_stream_controller_BaseStreamController = /*#__PURE__*/function (_TaskLoop) {
  base_stream_controller_inheritsLoose(BaseStreamController, _TaskLoop);

  function BaseStreamController() {
    return _TaskLoop.apply(this, arguments) || this;
  }

  var _proto = BaseStreamController.prototype;

  _proto.doTick = function doTick() {};

  _proto.startLoad = function startLoad() {};

  _proto.stopLoad = function stopLoad() {
    var frag = this.fragCurrent;

    if (frag) {
      if (frag.loader) {
        frag.loader.abort();
      }

      this.fragmentTracker.removeFragment(frag);
    }

    if (this.demuxer) {
      this.demuxer.destroy();
      this.demuxer = null;
    }

    this.fragCurrent = null;
    this.fragPrevious = null;
    this.clearInterval();
    this.clearNextTick();
    this.state = State.STOPPED;
  };

  _proto._streamEnded = function _streamEnded(bufferInfo, levelDetails) {
    var fragCurrent = this.fragCurrent,
        fragmentTracker = this.fragmentTracker; // we just got done loading the final fragment and there is no other buffered range after ...
    // rationale is that in case there are any buffered ranges after, it means that there are unbuffered portion in between
    // so we should not switch to ENDED in that case, to be able to buffer them
    // dont switch to ENDED if we need to backtrack last fragment

    if (!levelDetails.live && fragCurrent && !fragCurrent.backtracked && fragCurrent.sn === levelDetails.endSN && !bufferInfo.nextStart) {
      var fragState = fragmentTracker.getState(fragCurrent);
      return fragState === FragmentState.PARTIAL || fragState === FragmentState.OK;
    }

    return false;
  };

  _proto.onMediaSeeking = function onMediaSeeking() {
    var config = this.config,
        media = this.media,
        mediaBuffer = this.mediaBuffer,
        state = this.state;
    var currentTime = media ? media.currentTime : null;
    var bufferInfo = BufferHelper.bufferInfo(mediaBuffer || media, currentTime, this.config.maxBufferHole);
    logger["logger"].log("media seeking to " + (Object(number["isFiniteNumber"])(currentTime) ? currentTime.toFixed(3) : currentTime));

    if (state === State.FRAG_LOADING) {
      var fragCurrent = this.fragCurrent; // check if we are seeking to a unbuffered area AND if frag loading is in progress

      if (bufferInfo.len === 0 && fragCurrent) {
        var tolerance = config.maxFragLookUpTolerance;
        var fragStartOffset = fragCurrent.start - tolerance;
        var fragEndOffset = fragCurrent.start + fragCurrent.duration + tolerance; // check if we seek position will be out of currently loaded frag range : if out cancel frag load, if in, don't do anything

        if (currentTime < fragStartOffset || currentTime > fragEndOffset) {
          if (fragCurrent.loader) {
            logger["logger"].log('seeking outside of buffer while fragment load in progress, cancel fragment load');
            fragCurrent.loader.abort();
          }

          this.fragCurrent = null;
          this.fragPrevious = null; // switch to IDLE state to load new fragment

          this.state = State.IDLE;
        } else {
          logger["logger"].log('seeking outside of buffer but within currently loaded fragment range');
        }
      }
    } else if (state === State.ENDED) {
      // if seeking to unbuffered area, clean up fragPrevious
      if (bufferInfo.len === 0) {
        this.fragPrevious = null;
        this.fragCurrent = null;
      } // switch to IDLE state to check for potential new fragment


      this.state = State.IDLE;
    }

    if (media) {
      this.lastCurrentTime = currentTime;
    } // in case seeking occurs although no media buffered, adjust startPosition and nextLoadPosition to seek target


    if (!this.loadedmetadata) {
      this.nextLoadPosition = this.startPosition = currentTime;
    } // tick to speed up processing


    this.tick();
  };

  _proto.onMediaEnded = function onMediaEnded() {
    // reset startPosition and lastCurrentTime to restart playback @ stream beginning
    this.startPosition = this.lastCurrentTime = 0;
  };

  _proto.onHandlerDestroying = function onHandlerDestroying() {
    this.stopLoad();

    _TaskLoop.prototype.onHandlerDestroying.call(this);
  };

  _proto.onHandlerDestroyed = function onHandlerDestroyed() {
    this.state = State.STOPPED;
    this.fragmentTracker = null;
  };

  _proto.computeLivePosition = function computeLivePosition(sliding, levelDetails) {
    var targetLatency = this.config.liveSyncDuration !== undefined ? this.config.liveSyncDuration : this.config.liveSyncDurationCount * levelDetails.targetduration;
    return sliding + Math.max(0, levelDetails.totalduration - targetLatency);
  };

  return BaseStreamController;
}(TaskLoop);


// CONCATENATED MODULE: ./src/controller/stream-controller.js







function stream_controller_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function stream_controller_createClass(Constructor, protoProps, staticProps) { if (protoProps) stream_controller_defineProperties(Constructor.prototype, protoProps); if (staticProps) stream_controller_defineProperties(Constructor, staticProps); return Constructor; }

function stream_controller_inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/*
 * Stream Controller
*/















var TICK_INTERVAL = 100; // how often to tick in ms

var stream_controller_StreamController = /*#__PURE__*/function (_BaseStreamController) {
  stream_controller_inheritsLoose(StreamController, _BaseStreamController);

  function StreamController(hls, fragmentTracker) {
    var _this;

    _this = _BaseStreamController.call(this, hls, events["default"].MEDIA_ATTACHED, events["default"].MEDIA_DETACHING, events["default"].MANIFEST_LOADING, events["default"].MANIFEST_PARSED, events["default"].LEVEL_LOADED, events["default"].LEVELS_UPDATED, events["default"].KEY_LOADED, events["default"].FRAG_LOADED, events["default"].FRAG_LOAD_EMERGENCY_ABORTED, events["default"].FRAG_PARSING_INIT_SEGMENT, events["default"].FRAG_PARSING_DATA, events["default"].FRAG_PARSED, events["default"].ERROR, events["default"].AUDIO_TRACK_SWITCHING, events["default"].AUDIO_TRACK_SWITCHED, events["default"].BUFFER_CREATED, events["default"].BUFFER_APPENDED, events["default"].BUFFER_FLUSHED) || this;
    _this.fragmentTracker = fragmentTracker;
    _this.config = hls.config;
    _this.audioCodecSwap = false;
    _this._state = State.STOPPED;
    _this.stallReported = false;
    _this.gapController = null;
    _this.altAudio = false;
    _this.audioOnly = false;
    _this.bitrateTest = false;
    return _this;
  }

  var _proto = StreamController.prototype;

  _proto.startLoad = function startLoad(startPosition) {
    if (this.levels) {
      var lastCurrentTime = this.lastCurrentTime,
          hls = this.hls;
      this.stopLoad();
      this.setInterval(TICK_INTERVAL);
      this.level = -1;
      this.fragLoadError = 0;

      if (!this.startFragRequested) {
        // determine load level
        var startLevel = hls.startLevel;

        if (startLevel === -1) {
          if (hls.config.testBandwidth) {
            // -1 : guess start Level by doing a bitrate test by loading first fragment of lowest quality level
            startLevel = 0;
            this.bitrateTest = true;
          } else {
            startLevel = hls.nextAutoLevel;
          }
        } // set new level to playlist loader : this will trigger start level load
        // hls.nextLoadLevel remains until it is set to a new value or until a new frag is successfully loaded


        this.level = hls.nextLoadLevel = startLevel;
        this.loadedmetadata = false;
      } // if startPosition undefined but lastCurrentTime set, set startPosition to last currentTime


      if (lastCurrentTime > 0 && startPosition === -1) {
        logger["logger"].log("override startPosition with lastCurrentTime @" + lastCurrentTime.toFixed(3));
        startPosition = lastCurrentTime;
      }

      this.state = State.IDLE;
      this.nextLoadPosition = this.startPosition = this.lastCurrentTime = startPosition;
      this.tick();
    } else {
      this.forceStartLoad = true;
      this.state = State.STOPPED;
    }
  };

  _proto.stopLoad = function stopLoad() {
    this.forceStartLoad = false;

    _BaseStreamController.prototype.stopLoad.call(this);
  };

  _proto.doTick = function doTick() {
    switch (this.state) {
      case State.BUFFER_FLUSHING:
        // in buffer flushing state, reset fragLoadError counter
        this.fragLoadError = 0;
        break;

      case State.IDLE:
        this._doTickIdle();

        break;

      case State.WAITING_LEVEL:
        var level = this.levels[this.level]; // check if playlist is already loaded

        if (level && level.details) {
          this.state = State.IDLE;
        }

        break;

      case State.FRAG_LOADING_WAITING_RETRY:
        var now = window.performance.now();
        var retryDate = this.retryDate; // if current time is gt than retryDate, or if media seeking let's switch to IDLE state to retry loading

        if (!retryDate || now >= retryDate || this.media && this.media.seeking) {
          logger["logger"].log('mediaController: retryDate reached, switch back to IDLE state');
          this.state = State.IDLE;
        }

        break;

      case State.ERROR:
      case State.STOPPED:
      case State.FRAG_LOADING:
      case State.PARSING:
      case State.PARSED:
      case State.ENDED:
        break;

      default:
        break;
    } // check buffer


    this._checkBuffer(); // check/update current fragment


    this._checkFragmentChanged();
  } // Ironically the "idle" state is the on we do the most logic in it seems ....
  // NOTE: Maybe we could rather schedule a check for buffer length after half of the currently
  //       played segment, or on pause/play/seek instead of naively checking every 100ms?
  ;

  _proto._doTickIdle = function _doTickIdle() {
    var hls = this.hls,
        config = hls.config,
        media = this.media; // if start level not parsed yet OR
    // if video not attached AND start fragment already requested OR start frag prefetch disable
    // exit loop, as we either need more info (level not parsed) or we need media to be attached to load new fragment

    if (this.levelLastLoaded === undefined || !media && (this.startFragRequested || !config.startFragPrefetch)) {
      return;
    } // If the "main" level is audio-only but we are loading an alternate track in the same group, do not load anything


    if (this.altAudio && this.audioOnly) {
      // Clear audio demuxer state so when switching back to main audio we're not still appending where we left off
      this.demuxer.frag = null;
      return;
    } // if we have not yet loaded any fragment, start loading from start position


    var pos;

    if (this.loadedmetadata) {
      pos = media.currentTime;
    } else {
      pos = this.nextLoadPosition;
    } // determine next load level


    var level = hls.nextLoadLevel,
        levelInfo = this.levels[level];

    if (!levelInfo) {
      return;
    }

    var levelBitrate = levelInfo.bitrate,
        maxBufLen; // compute max Buffer Length that we could get from this load level, based on level bitrate.

    if (levelBitrate) {
      maxBufLen = Math.max(8 * config.maxBufferSize / levelBitrate, config.maxBufferLength);
    } else {
      maxBufLen = config.maxBufferLength;
    }

    maxBufLen = Math.min(maxBufLen, config.maxMaxBufferLength); // determine next candidate fragment to be loaded, based on current position and end of buffer position
    // ensure up to `config.maxMaxBufferLength` of buffer upfront

    var maxBufferHole = pos < config.maxBufferHole ? Math.max(MAX_START_GAP_JUMP, config.maxBufferHole) : config.maxBufferHole;
    var bufferInfo = BufferHelper.bufferInfo(this.mediaBuffer ? this.mediaBuffer : media, pos, maxBufferHole);
    var bufferLen = bufferInfo.len; // Stay idle if we are still with buffer margins

    if (bufferLen >= maxBufLen) {
      return;
    } // if buffer length is less than maxBufLen try to load a new fragment ...


    logger["logger"].trace("buffer length of " + bufferLen.toFixed(3) + " is below max of " + maxBufLen.toFixed(3) + ". checking for more payload ..."); // set next load level : this will trigger a playlist load if needed

    this.level = hls.nextLoadLevel = level;
    var levelDetails = levelInfo.details; // if level info not retrieved yet, switch state and wait for level retrieval
    // if live playlist, ensure that new playlist has been refreshed to avoid loading/try to load
    // a useless and outdated fragment (that might even introduce load error if it is already out of the live playlist)

    if (!levelDetails || levelDetails.live && this.levelLastLoaded !== level) {
      this.state = State.WAITING_LEVEL;
      return;
    }

    if (this._streamEnded(bufferInfo, levelDetails)) {
      var data = {};

      if (this.altAudio) {
        data.type = 'video';
      }

      this.hls.trigger(events["default"].BUFFER_EOS, data);
      this.state = State.ENDED;
      return;
    } // if we have the levelDetails for the selected variant, lets continue enrichen our stream (load keys/fragments or trigger EOS, etc..)


    this._fetchPayloadOrEos(pos, bufferInfo, levelDetails);
  };

  _proto._fetchPayloadOrEos = function _fetchPayloadOrEos(pos, bufferInfo, levelDetails) {
    var fragPrevious = this.fragPrevious,
        level = this.level,
        fragments = levelDetails.fragments,
        fragLen = fragments.length; // empty playlist

    if (fragLen === 0) {
      return;
    } // find fragment index, contiguous with end of buffer position


    var start = fragments[0].start,
        end = fragments[fragLen - 1].start + fragments[fragLen - 1].duration,
        bufferEnd = bufferInfo.end,
        frag;

    if (levelDetails.initSegment && !levelDetails.initSegment.data) {
      frag = levelDetails.initSegment;
    } else {
      // in case of live playlist we need to ensure that requested position is not located before playlist start
      if (levelDetails.live) {
        var initialLiveManifestSize = this.config.initialLiveManifestSize;

        if (fragLen < initialLiveManifestSize) {
          logger["logger"].warn("Can not start playback of a level, reason: not enough fragments " + fragLen + " < " + initialLiveManifestSize);
          return;
        }

        frag = this._ensureFragmentAtLivePoint(levelDetails, bufferEnd, start, end, fragPrevious, fragments); // if it explicitely returns null don't load any fragment and exit function now

        if (frag === null) {
          return;
        }
      } else {
        // VoD playlist: if bufferEnd before start of playlist, load first fragment
        if (bufferEnd < start) {
          frag = fragments[0];
        }
      }
    }

    if (!frag) {
      frag = this._findFragment(start, fragPrevious, fragLen, fragments, bufferEnd, end, levelDetails);
    }

    if (frag) {
      if (frag.encrypted) {
        this._loadKey(frag, levelDetails);
      } else {
        this._loadFragment(frag, levelDetails, pos, bufferEnd);
      }
    }
  };

  _proto._ensureFragmentAtLivePoint = function _ensureFragmentAtLivePoint(levelDetails, bufferEnd, start, end, fragPrevious, fragments) {
    var config = this.hls.config,
        media = this.media;
    var frag; // check if requested position is within seekable boundaries :
    // logger.log(`start/pos/bufEnd/seeking:${start.toFixed(3)}/${pos.toFixed(3)}/${bufferEnd.toFixed(3)}/${this.media.seeking}`);

    var maxLatency = Infinity;

    if (config.liveMaxLatencyDuration !== undefined) {
      maxLatency = config.liveMaxLatencyDuration;
    } else if (Object(number["isFiniteNumber"])(config.liveMaxLatencyDurationCount)) {
      maxLatency = config.liveMaxLatencyDurationCount * levelDetails.targetduration;
    }

    if (bufferEnd < Math.max(start - config.maxFragLookUpTolerance, end - maxLatency)) {
      var liveSyncPosition = this.liveSyncPosition = this.computeLivePosition(start, levelDetails);
      bufferEnd = liveSyncPosition;

      if (media && !media.paused && media.readyState && media.duration > liveSyncPosition && liveSyncPosition > media.currentTime) {
        logger["logger"].log("buffer end: " + bufferEnd.toFixed(3) + " is located too far from the end of live sliding playlist, reset currentTime to : " + liveSyncPosition.toFixed(3));
        media.currentTime = liveSyncPosition;
      }

      this.nextLoadPosition = liveSyncPosition;
    } // if end of buffer greater than live edge, don't load any fragment
    // this could happen if live playlist intermittently slides in the past.
    // level 1 loaded [182580161,182580167]
    // level 1 loaded [182580162,182580169]
    // Loading 182580168 of [182580162 ,182580169],level 1 ..
    // Loading 182580169 of [182580162 ,182580169],level 1 ..
    // level 1 loaded [182580162,182580168] <============= here we should have bufferEnd > end. in that case break to avoid reloading 182580168
    // level 1 loaded [182580164,182580171]
    //
    // don't return null in case media not loaded yet (readystate === 0)


    if (levelDetails.PTSKnown && bufferEnd > end && media && media.readyState) {
      return null;
    }

    if (this.startFragRequested && !levelDetails.PTSKnown) {
      /* we are switching level on live playlist, but we don't have any PTS info for that quality level ...
         try to load frag matching with next SN.
         even if SN are not synchronized between playlists, loading this frag will help us
         compute playlist sliding and find the right one after in case it was not the right consecutive one */
      if (fragPrevious) {
        if (levelDetails.hasProgramDateTime) {
          // Relies on PDT in order to switch bitrates (Support EXT-X-DISCONTINUITY without EXT-X-DISCONTINUITY-SEQUENCE)
          logger["logger"].log("live playlist, switching playlist, load frag with same PDT: " + fragPrevious.programDateTime);
          frag = findFragmentByPDT(fragments, fragPrevious.endProgramDateTime, config.maxFragLookUpTolerance);
        } else {
          // Uses buffer and sequence number to calculate switch segment (required if using EXT-X-DISCONTINUITY-SEQUENCE)
          var targetSN = fragPrevious.sn + 1;

          if (targetSN >= levelDetails.startSN && targetSN <= levelDetails.endSN) {
            var fragNext = fragments[targetSN - levelDetails.startSN];

            if (fragPrevious.cc === fragNext.cc) {
              frag = fragNext;
              logger["logger"].log("live playlist, switching playlist, load frag with next SN: " + frag.sn);
            }
          } // next frag SN not available (or not with same continuity counter)
          // look for a frag sharing the same CC


          if (!frag) {
            frag = binary_search.search(fragments, function (frag) {
              return fragPrevious.cc - frag.cc;
            });

            if (frag) {
              logger["logger"].log("live playlist, switching playlist, load frag with same CC: " + frag.sn);
            }
          }
        }
      }
    }

    return frag;
  };

  _proto._findFragment = function _findFragment(start, fragPreviousLoad, fragmentIndexRange, fragments, bufferEnd, end, levelDetails) {
    var config = this.hls.config;
    var fragNextLoad;

    if (bufferEnd < end) {
      var lookupTolerance = bufferEnd > end - config.maxFragLookUpTolerance ? 0 : config.maxFragLookUpTolerance; // Remove the tolerance if it would put the bufferEnd past the actual end of stream
      // Uses buffer and sequence number to calculate switch segment (required if using EXT-X-DISCONTINUITY-SEQUENCE)

      fragNextLoad = findFragmentByPTS(fragPreviousLoad, fragments, bufferEnd, lookupTolerance);
    } else {
      // reach end of playlist
      fragNextLoad = fragments[fragmentIndexRange - 1];
    }

    if (fragNextLoad) {
      var curSNIdx = fragNextLoad.sn - levelDetails.startSN;
      var sameLevel = fragPreviousLoad && fragNextLoad.level === fragPreviousLoad.level;
      var prevSnFrag = fragments[curSNIdx - 1];
      var nextSnFrag = fragments[curSNIdx + 1]; // logger.log('find SN matching with pos:' +  bufferEnd + ':' + frag.sn);

      if (fragPreviousLoad && fragNextLoad.sn === fragPreviousLoad.sn) {
        if (sameLevel && !fragNextLoad.backtracked) {
          if (fragNextLoad.sn < levelDetails.endSN) {
            var deltaPTS = fragPreviousLoad.deltaPTS; // if there is a significant delta between audio and video, larger than max allowed hole,
            // and if previous remuxed fragment did not start with a keyframe. (fragPrevious.dropped)
            // let's try to load previous fragment again to get last keyframe
            // then we will reload again current fragment (that way we should be able to fill the buffer hole ...)

            if (deltaPTS && deltaPTS > config.maxBufferHole && fragPreviousLoad.dropped && curSNIdx) {
              fragNextLoad = prevSnFrag;
              logger["logger"].warn('Previous fragment was dropped with large PTS gap between audio and video. Maybe fragment is not starting with a keyframe? Loading previous one to try to overcome this');
            } else {
              fragNextLoad = nextSnFrag;

              if (this.fragmentTracker.getState(fragNextLoad) !== FragmentState.OK) {
                logger["logger"].log("Re-loading fragment with SN: " + fragNextLoad.sn);
              }
            }
          } else {
            fragNextLoad = null;
          }
        } else if (fragNextLoad.backtracked) {
          // Only backtrack a max of 1 consecutive fragment to prevent sliding back too far when little or no frags start with keyframes
          if (nextSnFrag && nextSnFrag.backtracked) {
            logger["logger"].warn("Already backtracked from fragment " + nextSnFrag.sn + ", will not backtrack to fragment " + fragNextLoad.sn + ". Loading fragment " + nextSnFrag.sn);
            fragNextLoad = nextSnFrag;
          } else {
            // If a fragment has dropped frames and it's in a same level/sequence, load the previous fragment to try and find the keyframe
            // Reset the dropped count now since it won't be reset until we parse the fragment again, which prevents infinite backtracking on the same segment
            logger["logger"].warn('Loaded fragment with dropped frames, backtracking 1 segment to find a keyframe');
            fragNextLoad.dropped = 0;

            if (prevSnFrag) {
              fragNextLoad = prevSnFrag;
              fragNextLoad.backtracked = true;
            } else if (curSNIdx) {
              // can't backtrack on very first fragment
              fragNextLoad = null;
            }
          }
        }
      }
    }

    return fragNextLoad;
  };

  _proto._loadKey = function _loadKey(frag, levelDetails) {
    logger["logger"].log("Loading key for " + frag.sn + " of [" + levelDetails.startSN + "-" + levelDetails.endSN + "], level " + this.level);
    this.state = State.KEY_LOADING;
    this.hls.trigger(events["default"].KEY_LOADING, {
      frag: frag
    });
  };

  _proto._loadFragment = function _loadFragment(frag, levelDetails, pos, bufferEnd) {
    // Check if fragment is not loaded
    var fragState = this.fragmentTracker.getState(frag);
    this.fragCurrent = frag;

    if (frag.sn !== 'initSegment') {
      this.startFragRequested = true;
    } // Don't update nextLoadPosition for fragments which are not buffered


    if (Object(number["isFiniteNumber"])(frag.sn) && !frag.bitrateTest) {
      this.nextLoadPosition = frag.start + frag.duration;
    } // Allow backtracked fragments to load


    if (frag.backtracked || fragState === FragmentState.NOT_LOADED || fragState === FragmentState.PARTIAL) {
      frag.autoLevel = this.hls.autoLevelEnabled;
      frag.bitrateTest = this.bitrateTest;
      logger["logger"].log("Loading " + frag.sn + " of [" + levelDetails.startSN + "-" + levelDetails.endSN + "], level " + this.level + ", " + (this.loadedmetadata ? 'currentTime' : 'nextLoadPosition') + ": " + parseFloat(pos.toFixed(3)) + ", bufferEnd: " + parseFloat(bufferEnd.toFixed(3)));
      this.hls.trigger(events["default"].FRAG_LOADING, {
        frag: frag
      }); // lazy demuxer init, as this could take some time ... do it during frag loading

      if (!this.demuxer) {
        this.demuxer = new demux_demuxer(this.hls, 'main');
      }

      this.state = State.FRAG_LOADING;
    } else if (fragState === FragmentState.APPENDING) {
      // Lower the buffer size and try again
      if (this._reduceMaxBufferLength(frag.duration)) {
        this.fragmentTracker.removeFragment(frag);
      }
    }
  };

  _proto.getBufferedFrag = function getBufferedFrag(position) {
    return this.fragmentTracker.getBufferedFrag(position, PlaylistLevelType.MAIN);
  };

  _proto.followingBufferedFrag = function followingBufferedFrag(frag) {
    if (frag) {
      // try to get range of next fragment (500ms after this range)
      return this.getBufferedFrag(frag.endPTS + 0.5);
    }

    return null;
  };

  _proto._checkFragmentChanged = function _checkFragmentChanged() {
    var fragPlayingCurrent,
        currentTime,
        video = this.media;

    if (video && video.readyState && video.seeking === false) {
      currentTime = video.currentTime;
      /* if video element is in seeked state, currentTime can only increase.
        (assuming that playback rate is positive ...)
        As sometimes currentTime jumps back to zero after a
        media decode error, check this, to avoid seeking back to
        wrong position after a media decode error
      */

      if (currentTime > this.lastCurrentTime) {
        this.lastCurrentTime = currentTime;
      }

      if (BufferHelper.isBuffered(video, currentTime)) {
        fragPlayingCurrent = this.getBufferedFrag(currentTime);
      } else if (BufferHelper.isBuffered(video, currentTime + 0.1)) {
        /* ensure that FRAG_CHANGED event is triggered at startup,
          when first video frame is displayed and playback is paused.
          add a tolerance of 100ms, in case current position is not buffered,
          check if current pos+100ms is buffered and use that buffer range
          for FRAG_CHANGED event reporting */
        fragPlayingCurrent = this.getBufferedFrag(currentTime + 0.1);
      }

      if (fragPlayingCurrent) {
        var fragPlaying = fragPlayingCurrent;

        if (fragPlaying !== this.fragPlaying) {
          this.hls.trigger(events["default"].FRAG_CHANGED, {
            frag: fragPlaying
          });
          var fragPlayingLevel = fragPlaying.level;

          if (!this.fragPlaying || this.fragPlaying.level !== fragPlayingLevel) {
            this.hls.trigger(events["default"].LEVEL_SWITCHED, {
              level: fragPlayingLevel
            });
          }

          this.fragPlaying = fragPlaying;
        }
      }
    }
  }
  /*
    on immediate level switch :
     - pause playback if playing
     - cancel any pending load request
     - and trigger a buffer flush
  */
  ;

  _proto.immediateLevelSwitch = function immediateLevelSwitch() {
    logger["logger"].log('immediateLevelSwitch');

    if (!this.immediateSwitch) {
      this.immediateSwitch = true;
      var media = this.media,
          previouslyPaused;

      if (media) {
        previouslyPaused = media.paused;

        if (!previouslyPaused) {
          media.pause();
        }
      } else {
        // don't restart playback after instant level switch in case media not attached
        previouslyPaused = true;
      }

      this.previouslyPaused = previouslyPaused;
    }

    var fragCurrent = this.fragCurrent;

    if (fragCurrent && fragCurrent.loader) {
      fragCurrent.loader.abort();
    }

    this.fragCurrent = null; // flush everything

    this.flushMainBuffer(0, Number.POSITIVE_INFINITY);
  }
  /**
   * on immediate level switch end, after new fragment has been buffered:
   * - nudge video decoder by slightly adjusting video currentTime (if currentTime buffered)
   * - resume the playback if needed
   */
  ;

  _proto.immediateLevelSwitchEnd = function immediateLevelSwitchEnd() {
    var media = this.media;

    if (media && media.buffered.length) {
      this.immediateSwitch = false;

      if (media.currentTime > 0 && BufferHelper.isBuffered(media, media.currentTime)) {
        // only nudge if currentTime is buffered
        media.currentTime -= 0.0001;
      }

      if (!this.previouslyPaused) {
        media.play();
      }
    }
  }
  /**
   * try to switch ASAP without breaking video playback:
   * in order to ensure smooth but quick level switching,
   * we need to find the next flushable buffer range
   * we should take into account new segment fetch time
   */
  ;

  _proto.nextLevelSwitch = function nextLevelSwitch() {
    var media = this.media; // ensure that media is defined and that metadata are available (to retrieve currentTime)

    if (media && media.readyState) {
      var fetchdelay;
      var fragPlayingCurrent = this.getBufferedFrag(media.currentTime);

      if (fragPlayingCurrent && fragPlayingCurrent.startPTS > 1) {
        // flush buffer preceding current fragment (flush until current fragment start offset)
        // minus 1s to avoid video freezing, that could happen if we flush keyframe of current video ...
        this.flushMainBuffer(0, fragPlayingCurrent.startPTS - 1);
      }

      if (!media.paused) {
        // add a safety delay of 1s
        var nextLevelId = this.hls.nextLoadLevel,
            nextLevel = this.levels[nextLevelId],
            fragLastKbps = this.fragLastKbps;

        if (fragLastKbps && this.fragCurrent) {
          fetchdelay = this.fragCurrent.duration * nextLevel.bitrate / (1000 * fragLastKbps) + 1;
        } else {
          fetchdelay = 0;
        }
      } else {
        fetchdelay = 0;
      } // logger.log('fetchdelay:'+fetchdelay);
      // find buffer range that will be reached once new fragment will be fetched


      var bufferedFrag = this.getBufferedFrag(media.currentTime + fetchdelay);

      if (bufferedFrag) {
        // we can flush buffer range following this one without stalling playback
        var nextBufferedFrag = this.followingBufferedFrag(bufferedFrag);

        if (nextBufferedFrag) {
          // if we are here, we can also cancel any loading/demuxing in progress, as they are useless
          var fragCurrent = this.fragCurrent;

          if (fragCurrent && fragCurrent.loader) {
            fragCurrent.loader.abort();
          }

          this.fragCurrent = null; // start flush position is the start PTS of next buffered frag.
          // we use frag.naxStartPTS which is max(audio startPTS, video startPTS).
          // in case there is a small PTS Delta between audio and video, using maxStartPTS avoids flushing last samples from current fragment

          var startPts = Math.max(bufferedFrag.endPTS, nextBufferedFrag.maxStartPTS + Math.min(this.config.maxFragLookUpTolerance, nextBufferedFrag.duration));
          this.flushMainBuffer(startPts, Number.POSITIVE_INFINITY);
        }
      }
    }
  };

  _proto.flushMainBuffer = function flushMainBuffer(startOffset, endOffset) {
    this.state = State.BUFFER_FLUSHING;
    var flushScope = {
      startOffset: startOffset,
      endOffset: endOffset
    }; // if alternate audio tracks are used, only flush video, otherwise flush everything

    if (this.altAudio) {
      flushScope.type = 'video';
    }

    this.hls.trigger(events["default"].BUFFER_FLUSHING, flushScope);
  };

  _proto.onMediaAttached = function onMediaAttached(data) {
    var media = this.media = this.mediaBuffer = data.media;
    this.onvseeking = this.onMediaSeeking.bind(this);
    this.onvseeked = this.onMediaSeeked.bind(this);
    this.onvended = this.onMediaEnded.bind(this);
    media.addEventListener('seeking', this.onvseeking);
    media.addEventListener('seeked', this.onvseeked);
    media.addEventListener('ended', this.onvended);
    var config = this.config;

    if (this.levels && config.autoStartLoad) {
      this.hls.startLoad(config.startPosition);
    }

    this.gapController = new gap_controller_GapController(config, media, this.fragmentTracker, this.hls);
  };

  _proto.onMediaDetaching = function onMediaDetaching() {
    var media = this.media;

    if (media && media.ended) {
      logger["logger"].log('MSE detaching and video ended, reset startPosition');
      this.startPosition = this.lastCurrentTime = 0;
    } // reset fragment backtracked flag


    var levels = this.levels;

    if (levels) {
      levels.forEach(function (level) {
        if (level.details) {
          level.details.fragments.forEach(function (fragment) {
            fragment.backtracked = undefined;
          });
        }
      });
    } // remove video listeners


    if (media) {
      media.removeEventListener('seeking', this.onvseeking);
      media.removeEventListener('seeked', this.onvseeked);
      media.removeEventListener('ended', this.onvended);
      this.onvseeking = this.onvseeked = this.onvended = null;
    }

    this.fragmentTracker.removeAllFragments();
    this.media = this.mediaBuffer = null;
    this.loadedmetadata = false;
    this.stopLoad();
  };

  _proto.onMediaSeeked = function onMediaSeeked() {
    var media = this.media;
    var currentTime = media ? media.currentTime : undefined;

    if (Object(number["isFiniteNumber"])(currentTime)) {
      logger["logger"].log("media seeked to " + currentTime.toFixed(3));
    } // tick to speed up FRAGMENT_PLAYING triggering


    this.tick();
  };

  _proto.onManifestLoading = function onManifestLoading() {
    // reset buffer on manifest loading
    logger["logger"].log('trigger BUFFER_RESET');
    this.hls.trigger(events["default"].BUFFER_RESET);
    this.fragmentTracker.removeAllFragments();
    this.stalled = false;
    this.startPosition = this.lastCurrentTime = 0;
  };

  _proto.onManifestParsed = function onManifestParsed(data) {
    var aac = false,
        heaac = false,
        codec;
    data.levels.forEach(function (level) {
      // detect if we have different kind of audio codecs used amongst playlists
      codec = level.audioCodec;

      if (codec) {
        if (codec.indexOf('mp4a.40.2') !== -1) {
          aac = true;
        }

        if (codec.indexOf('mp4a.40.5') !== -1) {
          heaac = true;
        }
      }
    });
    this.audioCodecSwitch = aac && heaac;

    if (this.audioCodecSwitch) {
      logger["logger"].log('both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC');
    }

    this.altAudio = data.altAudio;
    this.levels = data.levels;
    this.startFragRequested = false;
    var config = this.config;

    if (config.autoStartLoad || this.forceStartLoad) {
      this.hls.startLoad(config.startPosition);
    }
  };

  _proto.onLevelLoaded = function onLevelLoaded(data) {
    var newDetails = data.details;
    var newLevelId = data.level;
    var lastLevel = this.levels[this.levelLastLoaded];
    var curLevel = this.levels[newLevelId];
    var duration = newDetails.totalduration;
    var sliding = 0;
    logger["logger"].log("level " + newLevelId + " loaded [" + newDetails.startSN + "," + newDetails.endSN + "],duration:" + duration);

    if (newDetails.live || curLevel.details && curLevel.details.live) {
      var curDetails = curLevel.details;

      if (curDetails && newDetails.fragments.length > 0) {
        // we already have details for that level, merge them
        mergeDetails(curDetails, newDetails);
        sliding = newDetails.fragments[0].start;
        this.liveSyncPosition = this.computeLivePosition(sliding, curDetails);

        if (newDetails.PTSKnown && Object(number["isFiniteNumber"])(sliding)) {
          logger["logger"].log("live playlist sliding:" + sliding.toFixed(3));
        } else {
          logger["logger"].log('live playlist - outdated PTS, unknown sliding');
          alignStream(this.fragPrevious, lastLevel, newDetails);
        }
      } else {
        logger["logger"].log('live playlist - first load, unknown sliding');
        newDetails.PTSKnown = false;
        alignStream(this.fragPrevious, lastLevel, newDetails);
      }
    } else {
      newDetails.PTSKnown = false;
    } // override level info


    curLevel.details = newDetails;
    this.levelLastLoaded = newLevelId;
    this.hls.trigger(events["default"].LEVEL_UPDATED, {
      details: newDetails,
      level: newLevelId
    });

    if (this.startFragRequested === false) {
      // compute start position if set to -1. use it straight away if value is defined
      if (this.startPosition === -1 || this.lastCurrentTime === -1) {
        // first, check if start time offset has been set in playlist, if yes, use this value
        var startTimeOffset = newDetails.startTimeOffset;

        if (Object(number["isFiniteNumber"])(startTimeOffset)) {
          if (startTimeOffset < 0) {
            logger["logger"].log("negative start time offset " + startTimeOffset + ", count from end of last fragment");
            startTimeOffset = sliding + duration + startTimeOffset;
          }

          logger["logger"].log("start time offset found in playlist, adjust startPosition to " + startTimeOffset);
          this.startPosition = startTimeOffset;
        } else {
          // if live playlist, set start position to be fragment N-this.config.liveSyncDurationCount (usually 3)
          if (newDetails.live) {
            this.startPosition = this.computeLivePosition(sliding, newDetails);
            logger["logger"].log("configure startPosition to " + this.startPosition);
          } else {
            this.startPosition = 0;
          }
        }

        this.lastCurrentTime = this.startPosition;
      }

      this.nextLoadPosition = this.startPosition;
    } // only switch batck to IDLE state if we were waiting for level to start downloading a new fragment


    if (this.state === State.WAITING_LEVEL) {
      this.state = State.IDLE;
    } // trigger handler right now


    this.tick();
  };

  _proto.onKeyLoaded = function onKeyLoaded() {
    if (this.state === State.KEY_LOADING) {
      this.state = State.IDLE;
      this.tick();
    }
  };

  _proto.onFragLoaded = function onFragLoaded(data) {
    var fragCurrent = this.fragCurrent,
        hls = this.hls,
        levels = this.levels,
        media = this.media;
    var fragLoaded = data.frag;

    if (this.state === State.FRAG_LOADING && fragCurrent && fragLoaded.type === 'main' && fragLoaded.level === fragCurrent.level && fragLoaded.sn === fragCurrent.sn) {
      var stats = data.stats;
      var currentLevel = levels[fragCurrent.level];
      var details = currentLevel.details; // reset frag bitrate test in any case after frag loaded event
      // if this frag was loaded to perform a bitrate test AND if hls.nextLoadLevel is greater than 0
      // then this means that we should be able to load a fragment at a higher quality level

      this.bitrateTest = false;
      this.stats = stats;
      logger["logger"].log("Loaded " + fragCurrent.sn + " of [" + details.startSN + " ," + details.endSN + "],level " + fragCurrent.level);

      if (fragLoaded.bitrateTest && hls.nextLoadLevel) {
        // switch back to IDLE state ... we just loaded a fragment to determine adequate start bitrate and initialize autoswitch algo
        this.state = State.IDLE;
        this.startFragRequested = false;
        stats.tparsed = stats.tbuffered = window.performance.now();
        hls.trigger(events["default"].FRAG_BUFFERED, {
          stats: stats,
          frag: fragCurrent,
          id: 'main'
        });
        this.tick();
      } else if (fragLoaded.sn === 'initSegment') {
        this.state = State.IDLE;
        stats.tparsed = stats.tbuffered = window.performance.now();
        details.initSegment.data = data.payload;
        hls.trigger(events["default"].FRAG_BUFFERED, {
          stats: stats,
          frag: fragCurrent,
          id: 'main'
        });
        this.tick();
      } else {
        logger["logger"].log("Parsing " + fragCurrent.sn + " of [" + details.startSN + " ," + details.endSN + "],level " + fragCurrent.level + ", cc " + fragCurrent.cc);
        this.state = State.PARSING;
        this.pendingBuffering = true;
        this.appended = false; // Bitrate test frags are not usually buffered so the fragment tracker ignores them. If Hls.js decides to buffer
        // it (and therefore ends up at this line), then the fragment tracker needs to be manually informed.

        if (fragLoaded.bitrateTest) {
          fragLoaded.bitrateTest = false;
          this.fragmentTracker.onFragLoaded({
            frag: fragLoaded
          });
        } // time Offset is accurate if level PTS is known, or if playlist is not sliding (not live) and if media is not seeking (this is to overcome potential timestamp drifts between playlists and fragments)


        var accurateTimeOffset = !(media && media.seeking) && (details.PTSKnown || !details.live);
        var initSegmentData = details.initSegment ? details.initSegment.data : [];

        var audioCodec = this._getAudioCodec(currentLevel); // transmux the MPEG-TS data to ISO-BMFF segments


        var demuxer = this.demuxer = this.demuxer || new demux_demuxer(this.hls, 'main');
        demuxer.push(data.payload, initSegmentData, audioCodec, currentLevel.videoCodec, fragCurrent, details.totalduration, accurateTimeOffset);
      }
    }

    this.fragLoadError = 0;
  };

  _proto.onFragParsingInitSegment = function onFragParsingInitSegment(data) {
    var fragCurrent = this.fragCurrent;
    var fragNew = data.frag;

    if (fragCurrent && data.id === 'main' && fragNew.sn === fragCurrent.sn && fragNew.level === fragCurrent.level && this.state === State.PARSING) {
      var tracks = data.tracks,
          trackName,
          track;
      this.audioOnly = tracks.audio && !tracks.video; // if audio track is expected to come from audio stream controller, discard any coming from main

      if (this.altAudio && !this.audioOnly) {
        delete tracks.audio;
      } // include levelCodec in audio and video tracks


      track = tracks.audio;

      if (track) {
        var audioCodec = this.levels[this.level].audioCodec,
            ua = navigator.userAgent.toLowerCase();

        if (audioCodec && this.audioCodecSwap) {
          logger["logger"].log('swapping playlist audio codec');

          if (audioCodec.indexOf('mp4a.40.5') !== -1) {
            audioCodec = 'mp4a.40.2';
          } else {
            audioCodec = 'mp4a.40.5';
          }
        } // in case AAC and HE-AAC audio codecs are signalled in manifest
        // force HE-AAC , as it seems that most browsers prefers that way,
        // except for mono streams OR on FF
        // these conditions might need to be reviewed ...


        if (this.audioCodecSwitch) {
          // don't force HE-AAC if mono stream
          if (track.metadata.channelCount !== 1 && // don't force HE-AAC if firefox
          ua.indexOf('firefox') === -1) {
            audioCodec = 'mp4a.40.5';
          }
        } // HE-AAC is broken on Android, always signal audio codec as AAC even if variant manifest states otherwise


        if (ua.indexOf('android') !== -1 && track.container !== 'audio/mpeg') {
          // Exclude mpeg audio
          audioCodec = 'mp4a.40.2';
          logger["logger"].log("Android: force audio codec to " + audioCodec);
        }

        track.levelCodec = audioCodec;
        track.id = data.id;
      }

      track = tracks.video;

      if (track) {
        track.levelCodec = this.levels[this.level].videoCodec;
        track.id = data.id;
      }

      this.hls.trigger(events["default"].BUFFER_CODECS, tracks); // loop through tracks that are going to be provided to bufferController

      for (trackName in tracks) {
        track = tracks[trackName];
        logger["logger"].log("main track:" + trackName + ",container:" + track.container + ",codecs[level/parsed]=[" + track.levelCodec + "/" + track.codec + "]");
        var initSegment = track.initSegment;

        if (initSegment) {
          this.appended = true; // arm pending Buffering flag before appending a segment

          this.pendingBuffering = true;
          this.hls.trigger(events["default"].BUFFER_APPENDING, {
            type: trackName,
            data: initSegment,
            parent: 'main',
            content: 'initSegment'
          });
        }
      } // trigger handler right now


      this.tick();
    }
  };

  _proto.onFragParsingData = function onFragParsingData(data) {
    var _this2 = this;

    var fragCurrent = this.fragCurrent;
    var fragNew = data.frag;

    if (fragCurrent && data.id === 'main' && fragNew.sn === fragCurrent.sn && fragNew.level === fragCurrent.level && !(data.type === 'audio' && this.altAudio) && // filter out main audio if audio track is loaded through audio stream controller
    this.state === State.PARSING) {
      var level = this.levels[this.level],
          frag = fragCurrent;

      if (!Object(number["isFiniteNumber"])(data.endPTS)) {
        data.endPTS = data.startPTS + fragCurrent.duration;
        data.endDTS = data.startDTS + fragCurrent.duration;
      }

      if (data.hasAudio === true) {
        frag.addElementaryStream(ElementaryStreamTypes.AUDIO);
      }

      if (data.hasVideo === true) {
        frag.addElementaryStream(ElementaryStreamTypes.VIDEO);
      }

      logger["logger"].log("Parsed " + data.type + ",PTS:[" + data.startPTS.toFixed(3) + "," + data.endPTS.toFixed(3) + "],DTS:[" + data.startDTS.toFixed(3) + "/" + data.endDTS.toFixed(3) + "],nb:" + data.nb + ",dropped:" + (data.dropped || 0)); // Detect gaps in a fragment  and try to fix it by finding a keyframe in the previous fragment (see _findFragments)

      if (data.type === 'video') {
        frag.dropped = data.dropped;

        if (frag.dropped) {
          if (!frag.backtracked) {
            var levelDetails = level.details;

            if (levelDetails && frag.sn === levelDetails.startSN) {
              logger["logger"].warn('missing video frame(s) on first frag, appending with gap', frag.sn);
            } else {
              logger["logger"].warn('missing video frame(s), backtracking fragment', frag.sn); // Return back to the IDLE state without appending to buffer
              // Causes findFragments to backtrack a segment and find the keyframe
              // Audio fragments arriving before video sets the nextLoadPosition, causing _findFragments to skip the backtracked fragment

              this.fragmentTracker.removeFragment(frag);
              frag.backtracked = true;
              this.nextLoadPosition = data.startPTS;
              this.state = State.IDLE;
              this.fragPrevious = frag;

              if (this.demuxer) {
                this.demuxer.destroy();
                this.demuxer = null;
              }

              this.tick();
              return;
            }
          } else {
            logger["logger"].warn('Already backtracked on this fragment, appending with the gap', frag.sn);
          }
        } else {
          // Only reset the backtracked flag if we've loaded the frag without any dropped frames
          frag.backtracked = false;
        }
      }

      var drift = updateFragPTSDTS(level.details, frag, data.startPTS, data.endPTS, data.startDTS, data.endDTS),
          hls = this.hls;
      hls.trigger(events["default"].LEVEL_PTS_UPDATED, {
        details: level.details,
        level: this.level,
        drift: drift,
        type: data.type,
        start: data.startPTS,
        end: data.endPTS
      }); // has remuxer dropped video frames located before first keyframe ?

      [data.data1, data.data2].forEach(function (buffer) {
        // only append in PARSING state (rationale is that an appending error could happen synchronously on first segment appending)
        // in that case it is useless to append following segments
        if (buffer && buffer.length && _this2.state === State.PARSING) {
          _this2.appended = true; // arm pending Buffering flag before appending a segment

          _this2.pendingBuffering = true;
          hls.trigger(events["default"].BUFFER_APPENDING, {
            type: data.type,
            data: buffer,
            parent: 'main',
            content: 'data'
          });
        }
      }); // trigger handler right now

      this.tick();
    }
  };

  _proto.onFragParsed = function onFragParsed(data) {
    var fragCurrent = this.fragCurrent;
    var fragNew = data.frag;

    if (fragCurrent && data.id === 'main' && fragNew.sn === fragCurrent.sn && fragNew.level === fragCurrent.level && this.state === State.PARSING) {
      this.stats.tparsed = window.performance.now();
      this.state = State.PARSED;

      this._checkAppendedParsed();
    }
  };

  _proto.onAudioTrackSwitching = function onAudioTrackSwitching(data) {
    // if any URL found on new audio track, it is an alternate audio track
    var fromAltAudio = this.altAudio;
    var altAudio = !!data.url;
    var trackId = data.id; // if we switch on main audio, ensure that main fragment scheduling is synced with media.buffered
    // don't do anything if we switch to alt audio: audio stream controller is handling it.
    // we will just have to change buffer scheduling on audioTrackSwitched

    if (!altAudio) {
      if (this.mediaBuffer !== this.media) {
        logger["logger"].log('switching on main audio, use media.buffered to schedule main fragment loading');
        this.mediaBuffer = this.media;
        var fragCurrent = this.fragCurrent; // we need to refill audio buffer from main: cancel any frag loading to speed up audio switch

        if (fragCurrent.loader) {
          logger["logger"].log('switching to main audio track, cancel main fragment load');
          fragCurrent.loader.abort();
        }

        this.fragCurrent = null;
        this.fragPrevious = null; // destroy demuxer to force init segment generation (following audio switch)

        if (this.demuxer) {
          this.demuxer.destroy();
          this.demuxer = null;
        } // switch to IDLE state to load new fragment


        this.state = State.IDLE;
      }

      var hls = this.hls; // If switching from alt to main audio, flush all audio and trigger track switched

      if (fromAltAudio) {
        hls.trigger(events["default"].BUFFER_FLUSHING, {
          startOffset: 0,
          endOffset: Number.POSITIVE_INFINITY,
          type: 'audio'
        });
      }

      hls.trigger(events["default"].AUDIO_TRACK_SWITCHED, {
        id: trackId
      });
    }
  };

  _proto.onAudioTrackSwitched = function onAudioTrackSwitched(data) {
    var trackId = data.id,
        altAudio = !!this.hls.audioTracks[trackId].url;

    if (altAudio) {
      var videoBuffer = this.videoBuffer; // if we switched on alternate audio, ensure that main fragment scheduling is synced with video sourcebuffer buffered

      if (videoBuffer && this.mediaBuffer !== videoBuffer) {
        logger["logger"].log('switching on alternate audio, use video.buffered to schedule main fragment loading');
        this.mediaBuffer = videoBuffer;
      }
    }

    this.altAudio = altAudio;
    this.tick();
  };

  _proto.onBufferCreated = function onBufferCreated(data) {
    var tracks = data.tracks,
        mediaTrack,
        name,
        alternate = false;

    for (var type in tracks) {
      var track = tracks[type];

      if (track.id === 'main') {
        name = type;
        mediaTrack = track; // keep video source buffer reference

        if (type === 'video') {
          this.videoBuffer = tracks[type].buffer;
        }
      } else {
        alternate = true;
      }
    }

    if (alternate && mediaTrack) {
      logger["logger"].log("alternate track found, use " + name + ".buffered to schedule main fragment loading");
      this.mediaBuffer = mediaTrack.buffer;
    } else {
      this.mediaBuffer = this.media;
    }
  };

  _proto.onBufferAppended = function onBufferAppended(data) {
    if (data.parent === 'main') {
      var state = this.state;

      if (state === State.PARSING || state === State.PARSED) {
        // check if all buffers have been appended
        this.pendingBuffering = data.pending > 0;

        this._checkAppendedParsed();
      }
    }
  };

  _proto._checkAppendedParsed = function _checkAppendedParsed() {
    // trigger handler right now
    if (this.state === State.PARSED && (!this.appended || !this.pendingBuffering)) {
      var frag = this.fragCurrent;

      if (frag) {
        var media = this.mediaBuffer ? this.mediaBuffer : this.media;
        logger["logger"].log("main buffered : " + time_ranges.toString(media.buffered));
        this.fragPrevious = frag;
        var stats = this.stats;
        stats.tbuffered = window.performance.now(); // we should get rid of this.fragLastKbps

        this.fragLastKbps = Math.round(8 * stats.total / (stats.tbuffered - stats.tfirst));
        this.hls.trigger(events["default"].FRAG_BUFFERED, {
          stats: stats,
          frag: frag,
          id: 'main'
        });
        this.state = State.IDLE;
      } // Do not tick when _seekToStartPos needs to be called as seeking to the start can fail on live streams at this point


      if (this.loadedmetadata || this.startPosition <= 0) {
        this.tick();
      }
    }
  };

  _proto.onError = function onError(data) {
    var frag = data.frag || this.fragCurrent; // don't handle frag error not related to main fragment

    if (frag && frag.type !== 'main') {
      return;
    } // 0.5 : tolerance needed as some browsers stalls playback before reaching buffered end


    var mediaBuffered = !!this.media && BufferHelper.isBuffered(this.media, this.media.currentTime) && BufferHelper.isBuffered(this.media, this.media.currentTime + 0.5);

    switch (data.details) {
      case errors["ErrorDetails"].FRAG_LOAD_ERROR:
      case errors["ErrorDetails"].FRAG_LOAD_TIMEOUT:
      case errors["ErrorDetails"].KEY_LOAD_ERROR:
      case errors["ErrorDetails"].KEY_LOAD_TIMEOUT:
        if (!data.fatal) {
          // keep retrying until the limit will be reached
          if (this.fragLoadError + 1 <= this.config.fragLoadingMaxRetry) {
            // exponential backoff capped to config.fragLoadingMaxRetryTimeout
            var delay = Math.min(Math.pow(2, this.fragLoadError) * this.config.fragLoadingRetryDelay, this.config.fragLoadingMaxRetryTimeout);
            logger["logger"].warn("mediaController: frag loading failed, retry in " + delay + " ms");
            this.retryDate = window.performance.now() + delay; // retry loading state
            // if loadedmetadata is not set, it means that we are emergency switch down on first frag
            // in that case, reset startFragRequested flag

            if (!this.loadedmetadata) {
              this.startFragRequested = false;
              this.nextLoadPosition = this.startPosition;
            }

            this.fragLoadError++;
            this.state = State.FRAG_LOADING_WAITING_RETRY;
          } else {
            logger["logger"].error("mediaController: " + data.details + " reaches max retry, redispatch as fatal ..."); // switch error to fatal

            data.fatal = true;
            this.state = State.ERROR;
          }
        }

        break;

      case errors["ErrorDetails"].LEVEL_LOAD_ERROR:
      case errors["ErrorDetails"].LEVEL_LOAD_TIMEOUT:
        if (this.state !== State.ERROR) {
          if (data.fatal) {
            // if fatal error, stop processing
            this.state = State.ERROR;
            logger["logger"].warn("streamController: " + data.details + ",switch to " + this.state + " state ...");
          } else {
            // in case of non fatal error while loading level, if level controller is not retrying to load level , switch back to IDLE
            if (!data.levelRetry && this.state === State.WAITING_LEVEL) {
              this.state = State.IDLE;
            }
          }
        }

        break;

      case errors["ErrorDetails"].BUFFER_FULL_ERROR:
        // if in appending state
        if (data.parent === 'main' && (this.state === State.PARSING || this.state === State.PARSED)) {
          // reduce max buf len if current position is buffered
          if (mediaBuffered) {
            this._reduceMaxBufferLength(this.config.maxBufferLength);

            this.state = State.IDLE;
          } else {
            // current position is not buffered, but browser is still complaining about buffer full error
            // this happens on IE/Edge, refer to https://github.com/video-dev/hls.js/pull/708
            // in that case flush the whole buffer to recover
            logger["logger"].warn('buffer full error also media.currentTime is not buffered, flush everything');
            this.fragCurrent = null; // flush everything

            this.flushMainBuffer(0, Number.POSITIVE_INFINITY);
          }
        }

        break;

      default:
        break;
    }
  };

  _proto._reduceMaxBufferLength = function _reduceMaxBufferLength(minLength) {
    var config = this.config;

    if (config.maxMaxBufferLength >= minLength) {
      // reduce max buffer length as it might be too high. we do this to avoid loop flushing ...
      config.maxMaxBufferLength /= 2;
      logger["logger"].warn("main:reduce max buffer length to " + config.maxMaxBufferLength + "s");
      return true;
    }

    return false;
  }
  /**
   * Checks the health of the buffer and attempts to resolve playback stalls.
   * @private
   */
  ;

  _proto._checkBuffer = function _checkBuffer() {
    var media = this.media;

    if (!media || media.readyState === 0) {
      // Exit early if we don't have media or if the media hasn't bufferd anything yet (readyState 0)
      return;
    }

    var mediaBuffer = this.mediaBuffer ? this.mediaBuffer : media;
    var buffered = mediaBuffer.buffered;

    if (!this.loadedmetadata && buffered.length) {
      this.loadedmetadata = true;

      this._seekToStartPos();
    } else if (this.immediateSwitch) {
      this.immediateLevelSwitchEnd();
    } else {
      this.gapController.poll(this.lastCurrentTime, buffered);
    }
  };

  _proto.onFragLoadEmergencyAborted = function onFragLoadEmergencyAborted() {
    this.state = State.IDLE; // if loadedmetadata is not set, it means that we are emergency switch down on first frag
    // in that case, reset startFragRequested flag

    if (!this.loadedmetadata) {
      this.startFragRequested = false;
      this.nextLoadPosition = this.startPosition;
    }

    this.tick();
  };

  _proto.onBufferFlushed = function onBufferFlushed() {
    /* after successful buffer flushing, filter flushed fragments from bufferedFrags
      use mediaBuffered instead of media (so that we will check against video.buffered ranges in case of alt audio track)
    */
    var media = this.mediaBuffer ? this.mediaBuffer : this.media;

    if (media) {
      // filter fragments potentially evicted from buffer. this is to avoid memleak on live streams
      var elementaryStreamType = this.audioOnly ? ElementaryStreamTypes.AUDIO : ElementaryStreamTypes.VIDEO;
      this.fragmentTracker.detectEvictedFragments(elementaryStreamType, media.buffered);
    } // move to IDLE once flush complete. this should trigger new fragment loading


    this.state = State.IDLE; // reset reference to frag

    this.fragPrevious = null;
  };

  _proto.onLevelsUpdated = function onLevelsUpdated(data) {
    this.levels = data.levels;
  };

  _proto.swapAudioCodec = function swapAudioCodec() {
    this.audioCodecSwap = !this.audioCodecSwap;
  }
  /**
   * Seeks to the set startPosition if not equal to the mediaElement's current time.
   * @private
   */
  ;

  _proto._seekToStartPos = function _seekToStartPos() {
    var media = this.media;
    var currentTime = media.currentTime;
    var startPosition = this.startPosition; // only adjust currentTime if different from startPosition or if startPosition not buffered
    // at that stage, there should be only one buffered range, as we reach that code after first fragment has been buffered

    if (currentTime !== startPosition && startPosition >= 0) {
      if (media.seeking) {
        logger["logger"].log("could not seek to " + startPosition + ", already seeking at " + currentTime);
        return;
      }

      var bufferStart = media.buffered.length ? media.buffered.start(0) : 0;
      var delta = bufferStart - startPosition;

      if (delta > 0 && delta < this.config.maxBufferHole) {
        logger["logger"].log("adjusting start position by " + delta + " to match buffer start");
        startPosition += delta;
        this.startPosition = startPosition;
      }

      logger["logger"].log("seek to target start position " + startPosition + " from current time " + currentTime + ". ready state " + media.readyState);
      media.currentTime = startPosition;
    }
  };

  _proto._getAudioCodec = function _getAudioCodec(currentLevel) {
    var audioCodec = this.config.defaultAudioCodec || currentLevel.audioCodec;

    if (this.audioCodecSwap) {
      logger["logger"].log('swapping playlist audio codec');

      if (audioCodec) {
        if (audioCodec.indexOf('mp4a.40.5') !== -1) {
          audioCodec = 'mp4a.40.2';
        } else {
          audioCodec = 'mp4a.40.5';
        }
      }
    }

    return audioCodec;
  };

  stream_controller_createClass(StreamController, [{
    key: "state",
    set: function set(nextState) {
      if (this.state !== nextState) {
        var previousState = this.state;
        this._state = nextState;
        logger["logger"].log("main stream-controller: " + previousState + "->" + nextState);
        this.hls.trigger(events["default"].STREAM_STATE_TRANSITION, {
          previousState: previousState,
          nextState: nextState
        });
      }
    },
    get: function get() {
      return this._state;
    }
  }, {
    key: "currentLevel",
    get: function get() {
      var media = this.media;

      if (media) {
        var frag = this.getBufferedFrag(media.currentTime);

        if (frag) {
          return frag.level;
        }
      }

      return -1;
    }
  }, {
    key: "nextBufferedFrag",
    get: function get() {
      var media = this.media;

      if (media) {
        // first get end range of current fragment
        return this.followingBufferedFrag(this.getBufferedFrag(media.currentTime));
      } else {
        return null;
      }
    }
  }, {
    key: "nextLevel",
    get: function get() {
      var frag = this.nextBufferedFrag;

      if (frag) {
        return frag.level;
      } else {
        return -1;
      }
    }
  }, {
    key: "liveSyncPosition",
    get: function get() {
      return this._liveSyncPosition;
    },
    set: function set(value) {
      this._liveSyncPosition = value;
    }
  }]);

  return StreamController;
}(base_stream_controller_BaseStreamController);

/* harmony default export */ var stream_controller = (stream_controller_StreamController);
// CONCATENATED MODULE: ./src/controller/level-controller.js
function level_controller_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function level_controller_createClass(Constructor, protoProps, staticProps) { if (protoProps) level_controller_defineProperties(Constructor.prototype, protoProps); if (staticProps) level_controller_defineProperties(Constructor, staticProps); return Constructor; }

function level_controller_inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/*
 * Level Controller
*/






var chromeOrFirefox;

var level_controller_LevelController = /*#__PURE__*/function (_EventHandler) {
  level_controller_inheritsLoose(LevelController, _EventHandler);

  function LevelController(hls) {
    var _this;

    _this = _EventHandler.call(this, hls, events["default"].MANIFEST_LOADED, events["default"].LEVEL_LOADED, events["default"].AUDIO_TRACK_SWITCHED, events["default"].FRAG_LOADED, events["default"].ERROR) || this;
    _this.canload = false;
    _this.currentLevelIndex = null;
    _this.manualLevelIndex = -1;
    _this.timer = null;
    chromeOrFirefox = /chrome|firefox/.test(navigator.userAgent.toLowerCase());
    return _this;
  }

  var _proto = LevelController.prototype;

  _proto.onHandlerDestroying = function onHandlerDestroying() {
    this.clearTimer();
    this.manualLevelIndex = -1;
  };

  _proto.clearTimer = function clearTimer() {
    if (this.timer !== null) {
      clearTimeout(this.timer);
      this.timer = null;
    }
  };

  _proto.startLoad = function startLoad() {
    var levels = this._levels;
    this.canload = true;
    this.levelRetryCount = 0; // clean up live level details to force reload them, and reset load errors

    if (levels) {
      levels.forEach(function (level) {
        level.loadError = 0;
        var levelDetails = level.details;

        if (levelDetails && levelDetails.live) {
          level.details = undefined;
        }
      });
    } // speed up live playlist refresh if timer exists


    if (this.timer !== null) {
      this.loadLevel();
    }
  };

  _proto.stopLoad = function stopLoad() {
    this.canload = false;
  };

  _proto.onManifestLoaded = function onManifestLoaded(data) {
    var levels = [];
    var audioTracks = [];
    var bitrateStart;
    var levelSet = {};
    var levelFromSet = null;
    var videoCodecFound = false;
    var audioCodecFound = false; // regroup redundant levels together

    data.levels.forEach(function (level) {
      var attributes = level.attrs;
      level.loadError = 0;
      level.fragmentError = false;
      videoCodecFound = videoCodecFound || !!level.videoCodec;
      audioCodecFound = audioCodecFound || !!level.audioCodec; // erase audio codec info if browser does not support mp4a.40.34.
      // demuxer will autodetect codec and fallback to mpeg/audio

      if (chromeOrFirefox && level.audioCodec && level.audioCodec.indexOf('mp4a.40.34') !== -1) {
        level.audioCodec = undefined;
      }

      levelFromSet = levelSet[level.bitrate]; // FIXME: we would also have to match the resolution here

      if (!levelFromSet) {
        level.url = [level.url];
        level.urlId = 0;
        levelSet[level.bitrate] = level;
        levels.push(level);
      } else {
        levelFromSet.url.push(level.url);
      }

      if (attributes) {
        if (attributes.AUDIO) {
          addGroupId(levelFromSet || level, 'audio', attributes.AUDIO);
        }

        if (attributes.SUBTITLES) {
          addGroupId(levelFromSet || level, 'text', attributes.SUBTITLES);
        }
      }
    }); // remove audio-only level if we also have levels with audio+video codecs signalled

    if (videoCodecFound && audioCodecFound) {
      levels = levels.filter(function (_ref) {
        var videoCodec = _ref.videoCodec;
        return !!videoCodec;
      });
    } // only keep levels with supported audio/video codecs


    levels = levels.filter(function (_ref2) {
      var audioCodec = _ref2.audioCodec,
          videoCodec = _ref2.videoCodec;
      return (!audioCodec || isCodecSupportedInMp4(audioCodec, 'audio')) && (!videoCodec || isCodecSupportedInMp4(videoCodec, 'video'));
    });

    if (data.audioTracks) {
      audioTracks = data.audioTracks.filter(function (track) {
        return !track.audioCodec || isCodecSupportedInMp4(track.audioCodec, 'audio');
      }); // Reassign id's after filtering since they're used as array indices

      audioTracks.forEach(function (track, index) {
        track.id = index;
      });
    }

    if (levels.length > 0) {
      // start bitrate is the first bitrate of the manifest
      bitrateStart = levels[0].bitrate; // sort level on bitrate

      levels.sort(function (a, b) {
        return a.bitrate - b.bitrate;
      });
      this._levels = levels; // find index of first level in sorted levels

      for (var i = 0; i < levels.length; i++) {
        if (levels[i].bitrate === bitrateStart) {
          this._firstLevel = i;
          logger["logger"].log("manifest loaded," + levels.length + " level(s) found, first bitrate:" + bitrateStart);
          break;
        }
      } // Audio is only alternate if manifest include a URI along with the audio group tag,
      // and this is not an audio-only stream where levels contain audio-only


      var audioOnly = audioCodecFound && !videoCodecFound;
      this.hls.trigger(events["default"].MANIFEST_PARSED, {
        levels: levels,
        audioTracks: audioTracks,
        firstLevel: this._firstLevel,
        stats: data.stats,
        audio: audioCodecFound,
        video: videoCodecFound,
        altAudio: !audioOnly && audioTracks.some(function (t) {
          return !!t.url;
        })
      });
    } else {
      this.hls.trigger(events["default"].ERROR, {
        type: errors["ErrorTypes"].MEDIA_ERROR,
        details: errors["ErrorDetails"].MANIFEST_INCOMPATIBLE_CODECS_ERROR,
        fatal: true,
        url: this.hls.url,
        reason: 'no level with compatible codecs found in manifest'
      });
    }
  };

  _proto.setLevelInternal = function setLevelInternal(newLevel) {
    var levels = this._levels;
    var hls = this.hls; // check if level idx is valid

    if (newLevel >= 0 && newLevel < levels.length) {
      // stopping live reloading timer if any
      this.clearTimer();

      if (this.currentLevelIndex !== newLevel) {
        logger["logger"].log("switching to level " + newLevel);
        this.currentLevelIndex = newLevel;
        var levelProperties = levels[newLevel];
        levelProperties.level = newLevel;
        hls.trigger(events["default"].LEVEL_SWITCHING, levelProperties);
      }

      var level = levels[newLevel];
      var levelDetails = level.details; // check if we need to load playlist for this level

      if (!levelDetails || levelDetails.live) {
        // level not retrieved yet, or live playlist we need to (re)load it
        var urlId = level.urlId;
        hls.trigger(events["default"].LEVEL_LOADING, {
          url: level.url[urlId],
          level: newLevel,
          id: urlId
        });
      }
    } else {
      // invalid level id given, trigger error
      hls.trigger(events["default"].ERROR, {
        type: errors["ErrorTypes"].OTHER_ERROR,
        details: errors["ErrorDetails"].LEVEL_SWITCH_ERROR,
        level: newLevel,
        fatal: false,
        reason: 'invalid level idx'
      });
    }
  };

  _proto.onError = function onError(data) {
    if (data.fatal) {
      if (data.type === errors["ErrorTypes"].NETWORK_ERROR) {
        this.clearTimer();
      }

      return;
    }

    var levelError = false,
        fragmentError = false;
    var levelIndex; // try to recover not fatal errors

    switch (data.details) {
      case errors["ErrorDetails"].FRAG_LOAD_ERROR:
      case errors["ErrorDetails"].FRAG_LOAD_TIMEOUT:
      case errors["ErrorDetails"].KEY_LOAD_ERROR:
      case errors["ErrorDetails"].KEY_LOAD_TIMEOUT:
        levelIndex = data.frag.level;
        fragmentError = true;
        break;

      case errors["ErrorDetails"].LEVEL_LOAD_ERROR:
      case errors["ErrorDetails"].LEVEL_LOAD_TIMEOUT:
        levelIndex = data.context.level;
        levelError = true;
        break;

      case errors["ErrorDetails"].REMUX_ALLOC_ERROR:
        levelIndex = data.level;
        levelError = true;
        break;
    }

    if (levelIndex !== undefined) {
      this.recoverLevel(data, levelIndex, levelError, fragmentError);
    }
  }
  /**
   * Switch to a redundant stream if any available.
   * If redundant stream is not available, emergency switch down if ABR mode is enabled.
   *
   * @param {Object} errorEvent
   * @param {Number} levelIndex current level index
   * @param {Boolean} levelError
   * @param {Boolean} fragmentError
   */
  // FIXME Find a better abstraction where fragment/level retry management is well decoupled
  ;

  _proto.recoverLevel = function recoverLevel(errorEvent, levelIndex, levelError, fragmentError) {
    var _this2 = this;

    var config = this.hls.config;
    var errorDetails = errorEvent.details;
    var level = this._levels[levelIndex];
    var redundantLevels, delay, nextLevel;
    level.loadError++;
    level.fragmentError = fragmentError;

    if (levelError) {
      if (this.levelRetryCount + 1 <= config.levelLoadingMaxRetry) {
        // exponential backoff capped to max retry timeout
        delay = Math.min(Math.pow(2, this.levelRetryCount) * config.levelLoadingRetryDelay, config.levelLoadingMaxRetryTimeout); // Schedule level reload

        this.timer = setTimeout(function () {
          return _this2.loadLevel();
        }, delay); // boolean used to inform stream controller not to switch back to IDLE on non fatal error

        errorEvent.levelRetry = true;
        this.levelRetryCount++;
        logger["logger"].warn("level controller, " + errorDetails + ", retry in " + delay + " ms, current retry count is " + this.levelRetryCount);
      } else {
        logger["logger"].error("level controller, cannot recover from " + errorDetails + " error");
        this.currentLevelIndex = null; // stopping live reloading timer if any

        this.clearTimer(); // switch error to fatal

        errorEvent.fatal = true;
        return;
      }
    } // Try any redundant streams if available for both errors: level and fragment
    // If level.loadError reaches redundantLevels it means that we tried them all, no hope  => let's switch down


    if (levelError || fragmentError) {
      redundantLevels = level.url.length;

      if (redundantLevels > 1 && level.loadError < redundantLevels) {
        level.urlId = (level.urlId + 1) % redundantLevels;
        level.details = undefined;
        logger["logger"].warn("level controller, " + errorDetails + " for level " + levelIndex + ": switching to redundant URL-id " + level.urlId); // console.log('Current audio track group ID:', this.hls.audioTracks[this.hls.audioTrack].groupId);
        // console.log('New video quality level audio group id:', level.attrs.AUDIO);
      } else {
        // Search for available level
        if (this.manualLevelIndex === -1) {
          // When lowest level has been reached, let's start hunt from the top
          nextLevel = levelIndex === 0 ? this._levels.length - 1 : levelIndex - 1;
          logger["logger"].warn("level controller, " + errorDetails + ": switch to " + nextLevel);
          this.hls.nextAutoLevel = this.currentLevelIndex = nextLevel;
        } else if (fragmentError) {
          // Allow fragment retry as long as configuration allows.
          // reset this._level so that another call to set level() will trigger again a frag load
          logger["logger"].warn("level controller, " + errorDetails + ": reload a fragment");
          this.currentLevelIndex = null;
        }
      }
    }
  } // reset errors on the successful load of a fragment
  ;

  _proto.onFragLoaded = function onFragLoaded(_ref3) {
    var frag = _ref3.frag;

    if (frag !== undefined && frag.type === 'main') {
      var level = this._levels[frag.level];

      if (level !== undefined) {
        level.fragmentError = false;
        level.loadError = 0;
        this.levelRetryCount = 0;
      }
    }
  };

  _proto.onLevelLoaded = function onLevelLoaded(data) {
    var _this3 = this;

    var level = data.level,
        details = data.details; // only process level loaded events matching with expected level

    if (level !== this.currentLevelIndex) {
      return;
    }

    var curLevel = this._levels[level]; // reset level load error counter on successful level loaded only if there is no issues with fragments

    if (!curLevel.fragmentError) {
      curLevel.loadError = 0;
      this.levelRetryCount = 0;
    } // if current playlist is a live playlist, arm a timer to reload it


    if (details.live) {
      var reloadInterval = computeReloadInterval(curLevel.details, details, data.stats.trequest);
      logger["logger"].log("live playlist, reload in " + Math.round(reloadInterval) + " ms");
      this.timer = setTimeout(function () {
        return _this3.loadLevel();
      }, reloadInterval);
    } else {
      this.clearTimer();
    }
  };

  _proto.onAudioTrackSwitched = function onAudioTrackSwitched(data) {
    var audioGroupId = this.hls.audioTracks[data.id].groupId;
    var currentLevel = this.hls.levels[this.currentLevelIndex];

    if (!currentLevel) {
      return;
    }

    if (currentLevel.audioGroupIds) {
      var urlId = -1;

      for (var i = 0; i < currentLevel.audioGroupIds.length; i++) {
        if (currentLevel.audioGroupIds[i] === audioGroupId) {
          urlId = i;
          break;
        }
      }

      if (urlId !== currentLevel.urlId) {
        currentLevel.urlId = urlId;
        this.startLoad();
      }
    }
  };

  _proto.loadLevel = function loadLevel() {
    logger["logger"].debug('call to loadLevel');

    if (this.currentLevelIndex !== null && this.canload) {
      var levelObject = this._levels[this.currentLevelIndex];

      if (typeof levelObject === 'object' && levelObject.url.length > 0) {
        var level = this.currentLevelIndex;
        var id = levelObject.urlId;
        var url = levelObject.url[id];
        logger["logger"].log("Attempt loading level index " + level + " with URL-id " + id); // console.log('Current audio track group ID:', this.hls.audioTracks[this.hls.audioTrack].groupId);
        // console.log('New video quality level audio group id:', levelObject.attrs.AUDIO, level);

        this.hls.trigger(events["default"].LEVEL_LOADING, {
          url: url,
          level: level,
          id: id
        });
      }
    }
  };

  _proto.removeLevel = function removeLevel(levelIndex, urlId) {
    var levels = this.levels.filter(function (level, index) {
      if (index !== levelIndex) {
        return true;
      }

      if (level.url.length > 1 && urlId !== undefined) {
        level.url = level.url.filter(function (url, id) {
          return id !== urlId;
        });
        level.urlId = 0;
        return true;
      }

      return false;
    }).map(function (level, index) {
      var details = level.details;

      if (details && details.fragments) {
        details.fragments.forEach(function (fragment) {
          fragment.level = index;
        });
      }

      return level;
    });
    this._levels = levels;
    this.hls.trigger(events["default"].LEVELS_UPDATED, {
      levels: levels
    });
  };

  level_controller_createClass(LevelController, [{
    key: "levels",
    get: function get() {
      return this._levels;
    }
  }, {
    key: "level",
    get: function get() {
      return this.currentLevelIndex;
    },
    set: function set(newLevel) {
      var levels = this._levels;

      if (levels) {
        newLevel = Math.min(newLevel, levels.length - 1);

        if (this.currentLevelIndex !== newLevel || !levels[newLevel].details) {
          this.setLevelInternal(newLevel);
        }
      }
    }
  }, {
    key: "manualLevel",
    get: function get() {
      return this.manualLevelIndex;
    },
    set: function set(newLevel) {
      this.manualLevelIndex = newLevel;

      if (this._startLevel === undefined) {
        this._startLevel = newLevel;
      }

      if (newLevel !== -1) {
        this.level = newLevel;
      }
    }
  }, {
    key: "firstLevel",
    get: function get() {
      return this._firstLevel;
    },
    set: function set(newLevel) {
      this._firstLevel = newLevel;
    }
  }, {
    key: "startLevel",
    get: function get() {
      // hls.startLevel takes precedence over config.startLevel
      // if none of these values are defined, fallback on this._firstLevel (first quality level appearing in variant manifest)
      if (this._startLevel === undefined) {
        var configStartLevel = this.hls.config.startLevel;

        if (configStartLevel !== undefined) {
          return configStartLevel;
        } else {
          return this._firstLevel;
        }
      } else {
        return this._startLevel;
      }
    },
    set: function set(newLevel) {
      this._startLevel = newLevel;
    }
  }, {
    key: "nextLoadLevel",
    get: function get() {
      if (this.manualLevelIndex !== -1) {
        return this.manualLevelIndex;
      } else {
        return this.hls.nextAutoLevel;
      }
    },
    set: function set(nextLevel) {
      this.level = nextLevel;

      if (this.manualLevelIndex === -1) {
        this.hls.nextAutoLevel = nextLevel;
      }
    }
  }]);

  return LevelController;
}(event_handler);


// EXTERNAL MODULE: ./src/demux/id3.js
var id3 = __webpack_require__("./src/demux/id3.js");

// CONCATENATED MODULE: ./src/utils/texttrack-utils.ts
function sendAddTrackEvent(track, videoEl) {
  var event;

  try {
    event = new Event('addtrack');
  } catch (err) {
    // for IE11
    event = document.createEvent('Event');
    event.initEvent('addtrack', false, false);
  }

  event.track = track;
  videoEl.dispatchEvent(event);
}
function clearCurrentCues(track) {
  if (track === null || track === void 0 ? void 0 : track.cues) {
    while (track.cues.length > 0) {
      track.removeCue(track.cues[0]);
    }
  }
}
/**
 *  Given a list of Cues, finds the closest cue matching the given time.
 *  Modified verison of binary search O(log(n)).
 *
 * @export
 * @param {(TextTrackCueList | TextTrackCue[])} cues - List of cues.
 * @param {number} time - Target time, to find closest cue to.
 * @returns {TextTrackCue}
 */

function getClosestCue(cues, time) {
  // If the offset is less than the first element, the first element is the closest.
  if (time < cues[0].endTime) {
    return cues[0];
  } // If the offset is greater than the last cue, the last is the closest.


  if (time > cues[cues.length - 1].endTime) {
    return cues[cues.length - 1];
  }

  var left = 0;
  var right = cues.length - 1;

  while (left <= right) {
    var mid = Math.floor((right + left) / 2);

    if (time < cues[mid].endTime) {
      right = mid - 1;
    } else if (time > cues[mid].endTime) {
      left = mid + 1;
    } else {
      // If it's not lower or higher, it must be equal.
      return cues[mid];
    }
  } // At this point, left and right have swapped.
  // No direct match was found, left or right element must be the closest. Check which one has the smallest diff.


  return cues[left].endTime - time < time - cues[right].endTime ? cues[left] : cues[right];
}
// CONCATENATED MODULE: ./src/controller/id3-track-controller.js
function id3_track_controller_inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/*
 * id3 metadata track controller
*/




var MIN_CUE_DURATION = 0.25;

var id3_track_controller_ID3TrackController = /*#__PURE__*/function (_EventHandler) {
  id3_track_controller_inheritsLoose(ID3TrackController, _EventHandler);

  function ID3TrackController(hls) {
    var _this;

    _this = _EventHandler.call(this, hls, events["default"].MEDIA_ATTACHED, events["default"].MEDIA_DETACHING, events["default"].FRAG_PARSING_METADATA, events["default"].LIVE_BACK_BUFFER_REACHED) || this;
    _this.id3Track = undefined;
    _this.media = undefined;
    return _this;
  }

  var _proto = ID3TrackController.prototype;

  _proto.destroy = function destroy() {
    event_handler.prototype.destroy.call(this);
  } // Add ID3 metatadata text track.
  ;

  _proto.onMediaAttached = function onMediaAttached(data) {
    this.media = data.media;

    if (!this.media) {}
  };

  _proto.onMediaDetaching = function onMediaDetaching() {
    clearCurrentCues(this.id3Track);
    this.id3Track = undefined;
    this.media = undefined;
  };

  _proto.getID3Track = function getID3Track(textTracks) {
    for (var i = 0; i < textTracks.length; i++) {
      var textTrack = textTracks[i];

      if (textTrack.kind === 'metadata' && textTrack.label === 'id3') {
        // send 'addtrack' when reusing the textTrack for metadata,
        // same as what we do for captions
        sendAddTrackEvent(textTrack, this.media);
        return textTrack;
      }
    }

    return this.media.addTextTrack('metadata', 'id3');
  };

  _proto.onFragParsingMetadata = function onFragParsingMetadata(data) {
    var fragment = data.frag;
    var samples = data.samples; // create track dynamically

    if (!this.id3Track) {
      this.id3Track = this.getID3Track(this.media.textTracks);
      this.id3Track.mode = 'hidden';
    } // Attempt to recreate Safari functionality by creating
    // WebKitDataCue objects when available and store the decoded
    // ID3 data in the value property of the cue


    var Cue = window.WebKitDataCue || window.VTTCue || window.TextTrackCue;

    for (var i = 0; i < samples.length; i++) {
      var frames = id3["default"].getID3Frames(samples[i].data);

      if (frames) {
        // Ensure the pts is positive - sometimes it's reported as a small negative number
        var startTime = Math.max(samples[i].pts, 0);
        var endTime = i < samples.length - 1 ? samples[i + 1].pts : fragment.endPTS;

        if (!endTime) {
          endTime = fragment.start + fragment.duration;
        }

        var timeDiff = endTime - startTime;

        if (timeDiff <= 0) {
          endTime = startTime + MIN_CUE_DURATION;
        }

        for (var j = 0; j < frames.length; j++) {
          var frame = frames[j]; // Safari doesn't put the timestamp frame in the TextTrack

          if (!id3["default"].isTimeStampFrame(frame)) {
            var cue = new Cue(startTime, endTime, '');
            cue.value = frame;
            this.id3Track.addCue(cue);
          }
        }
      }
    }
  };

  _proto.onLiveBackBufferReached = function onLiveBackBufferReached(_ref) {
    var bufferEnd = _ref.bufferEnd;
    var id3Track = this.id3Track;

    if (!id3Track || !id3Track.cues || !id3Track.cues.length) {
      return;
    }

    var foundCue = getClosestCue(id3Track.cues, bufferEnd);

    if (!foundCue) {
      return;
    }

    while (id3Track.cues[0] !== foundCue) {
      id3Track.removeCue(id3Track.cues[0]);
    }
  };

  return ID3TrackController;
}(event_handler);

/* harmony default export */ var id3_track_controller = (id3_track_controller_ID3TrackController);
// CONCATENATED MODULE: ./src/is-supported.ts

function is_supported_isSupported() {
  var mediaSource = getMediaSource();

  if (!mediaSource) {
    return false;
  }

  var sourceBuffer = self.SourceBuffer || self.WebKitSourceBuffer;
  var isTypeSupported = mediaSource && typeof mediaSource.isTypeSupported === 'function' && mediaSource.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"'); // if SourceBuffer is exposed ensure its API is valid
  // safari and old version of Chrome doe not expose SourceBuffer globally so checking SourceBuffer.prototype is impossible

  var sourceBufferValidAPI = !sourceBuffer || sourceBuffer.prototype && typeof sourceBuffer.prototype.appendBuffer === 'function' && typeof sourceBuffer.prototype.remove === 'function';
  return !!isTypeSupported && !!sourceBufferValidAPI;
}
// CONCATENATED MODULE: ./src/utils/ewma.ts
/*
 * compute an Exponential Weighted moving average
 * - https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average
 *  - heavily inspired from shaka-player
 */
var EWMA = /*#__PURE__*/function () {
  //  About half of the estimated value will be from the last |halfLife| samples by weight.
  function EWMA(halfLife) {
    this.alpha_ = void 0;
    this.estimate_ = void 0;
    this.totalWeight_ = void 0;
    // Larger values of alpha expire historical data more slowly.
    this.alpha_ = halfLife ? Math.exp(Math.log(0.5) / halfLife) : 0;
    this.estimate_ = 0;
    this.totalWeight_ = 0;
  }

  var _proto = EWMA.prototype;

  _proto.sample = function sample(weight, value) {
    var adjAlpha = Math.pow(this.alpha_, weight);
    this.estimate_ = value * (1 - adjAlpha) + adjAlpha * this.estimate_;
    this.totalWeight_ += weight;
  };

  _proto.getTotalWeight = function getTotalWeight() {
    return this.totalWeight_;
  };

  _proto.getEstimate = function getEstimate() {
    if (this.alpha_) {
      var zeroFactor = 1 - Math.pow(this.alpha_, this.totalWeight_);
      return this.estimate_ / zeroFactor;
    } else {
      return this.estimate_;
    }
  };

  return EWMA;
}();

/* harmony default export */ var ewma = (EWMA);
// CONCATENATED MODULE: ./src/utils/ewma-bandwidth-estimator.ts
/*
 * EWMA Bandwidth Estimator
 *  - heavily inspired from shaka-player
 * Tracks bandwidth samples and estimates available bandwidth.
 * Based on the minimum of two exponentially-weighted moving averages with
 * different half-lives.
 */


var ewma_bandwidth_estimator_EwmaBandWidthEstimator = /*#__PURE__*/function () {
  // TODO(typescript-hls)
  function EwmaBandWidthEstimator(hls, slow, fast, defaultEstimate) {
    this.hls = void 0;
    this.defaultEstimate_ = void 0;
    this.minWeight_ = void 0;
    this.minDelayMs_ = void 0;
    this.slow_ = void 0;
    this.fast_ = void 0;
    this.hls = hls;
    this.defaultEstimate_ = defaultEstimate;
    this.minWeight_ = 0.001;
    this.minDelayMs_ = 50;
    this.slow_ = new ewma(slow);
    this.fast_ = new ewma(fast);
  }

  var _proto = EwmaBandWidthEstimator.prototype;

  _proto.sample = function sample(durationMs, numBytes) {
    durationMs = Math.max(durationMs, this.minDelayMs_);
    var numBits = 8 * numBytes,
        // weight is duration in seconds
    durationS = durationMs / 1000,
        // value is bandwidth in bits/s
    bandwidthInBps = numBits / durationS;
    this.fast_.sample(durationS, bandwidthInBps);
    this.slow_.sample(durationS, bandwidthInBps);
  };

  _proto.canEstimate = function canEstimate() {
    var fast = this.fast_;
    return fast && fast.getTotalWeight() >= this.minWeight_;
  };

  _proto.getEstimate = function getEstimate() {
    if (this.canEstimate()) {
      // console.log('slow estimate:'+ Math.round(this.slow_.getEstimate()));
      // console.log('fast estimate:'+ Math.round(this.fast_.getEstimate()));
      // Take the minimum of these two estimates.  This should have the effect of
      // adapting down quickly, but up more slowly.
      return Math.min(this.fast_.getEstimate(), this.slow_.getEstimate());
    } else {
      return this.defaultEstimate_;
    }
  };

  _proto.destroy = function destroy() {};

  return EwmaBandWidthEstimator;
}();

/* harmony default export */ var ewma_bandwidth_estimator = (ewma_bandwidth_estimator_EwmaBandWidthEstimator);
// CONCATENATED MODULE: ./src/controller/abr-controller.js



function abr_controller_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function abr_controller_createClass(Constructor, protoProps, staticProps) { if (protoProps) abr_controller_defineProperties(Constructor.prototype, protoProps); if (staticProps) abr_controller_defineProperties(Constructor, staticProps); return Constructor; }

function abr_controller_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function abr_controller_inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/*
 * simple ABR Controller
 *  - compute next level based on last fragment bw heuristics
 *  - implement an abandon rules triggered if we have less than 2 frag buffered and if computed bw shows that we risk buffer stalling
 */






var abr_controller_window = window,
    abr_controller_performance = abr_controller_window.performance;

var abr_controller_AbrController = /*#__PURE__*/function (_EventHandler) {
  abr_controller_inheritsLoose(AbrController, _EventHandler);

  function AbrController(hls) {
    var _this;

    _this = _EventHandler.call(this, hls, events["default"].FRAG_LOADING, events["default"].FRAG_LOADED, events["default"].FRAG_BUFFERED, events["default"].ERROR) || this;
    _this.lastLoadedFragLevel = 0;
    _this._nextAutoLevel = -1;
    _this.hls = hls;
    _this.timer = null;
    _this._bwEstimator = null;
    _this.onCheck = _this._abandonRulesCheck.bind(abr_controller_assertThisInitialized(_this));
    return _this;
  }

  var _proto = AbrController.prototype;

  _proto.destroy = function destroy() {
    this.clearTimer();
    event_handler.prototype.destroy.call(this);
  };

  _proto.onFragLoading = function onFragLoading(data) {
    var frag = data.frag;

    if (frag.type === 'main') {
      if (!this.timer) {
        this.fragCurrent = frag;
        this.timer = setInterval(this.onCheck, 100);
      } // lazy init of BwEstimator, rationale is that we use different params for Live/VoD
      // so we need to wait for stream manifest / playlist type to instantiate it.


      if (!this._bwEstimator) {
        var hls = this.hls;
        var config = hls.config;
        var level = frag.level;
        var isLive = hls.levels[level].details.live;
        var ewmaFast;
        var ewmaSlow;

        if (isLive) {
          ewmaFast = config.abrEwmaFastLive;
          ewmaSlow = config.abrEwmaSlowLive;
        } else {
          ewmaFast = config.abrEwmaFastVoD;
          ewmaSlow = config.abrEwmaSlowVoD;
        }

        this._bwEstimator = new ewma_bandwidth_estimator(hls, ewmaSlow, ewmaFast, config.abrEwmaDefaultEstimate);
      }
    }
  };

  _proto._abandonRulesCheck = function _abandonRulesCheck() {
    /*
      monitor fragment retrieval time...
      we compute expected time of arrival of the complete fragment.
      we compare it to expected time of buffer starvation
    */
    var hls = this.hls;
    var video = hls.media;
    var frag = this.fragCurrent;

    if (!frag) {
      return;
    }

    var loader = frag.loader; // if loader has been destroyed or loading has been aborted, stop timer and return

    if (!loader || loader.stats && loader.stats.aborted) {
      logger["logger"].warn('frag loader destroy or aborted, disarm abandonRules');
      this.clearTimer(); // reset forced auto level value so that next level will be selected

      this._nextAutoLevel = -1;
      return;
    }

    var stats = loader.stats;
    /* only monitor frag retrieval time if
    (video not paused OR first fragment being loaded(ready state === HAVE_NOTHING = 0)) AND autoswitching enabled AND not lowest level (=> means that we have several levels) */

    if (video && stats && (!video.paused && video.playbackRate !== 0 || !video.readyState) && frag.autoLevel && frag.level) {
      var requestDelay = abr_controller_performance.now() - stats.trequest;
      var playbackRate = Math.abs(video.playbackRate); // monitor fragment load progress after half of expected fragment duration,to stabilize bitrate

      if (requestDelay > 500 * frag.duration / playbackRate) {
        var levels = hls.levels;
        var loadRate = Math.max(1, stats.bw ? stats.bw / 8 : stats.loaded * 1000 / requestDelay); // byte/s; at least 1 byte/s to avoid division by zero
        // compute expected fragment length using frag duration and level bitrate. also ensure that expected len is gte than already loaded size

        var level = levels[frag.level];

        if (!level) {
          return;
        }

        var levelBitrate = level.realBitrate ? Math.max(level.realBitrate, level.bitrate) : level.bitrate;
        var expectedLen = stats.total ? stats.total : Math.max(stats.loaded, Math.round(frag.duration * levelBitrate / 8));
        var pos = video.currentTime;
        var fragLoadedDelay = (expectedLen - stats.loaded) / loadRate;
        var bufferStarvationDelay = (BufferHelper.bufferInfo(video, pos, hls.config.maxBufferHole).end - pos) / playbackRate; // consider emergency switch down only if we have less than 2 frag buffered AND
        // time to finish loading current fragment is bigger than buffer starvation delay
        // ie if we risk buffer starvation if bw does not increase quickly

        if (bufferStarvationDelay < 2 * frag.duration / playbackRate && fragLoadedDelay > bufferStarvationDelay) {
          var minAutoLevel = hls.minAutoLevel;
          var fragLevelNextLoadedDelay;
          var nextLoadLevel; // lets iterate through lower level and try to find the biggest one that could avoid rebuffering
          // we start from current level - 1 and we step down , until we find a matching level

          for (nextLoadLevel = frag.level - 1; nextLoadLevel > minAutoLevel; nextLoadLevel--) {
            // compute time to load next fragment at lower level
            // 0.8 : consider only 80% of current bw to be conservative
            // 8 = bits per byte (bps/Bps)
            var levelNextBitrate = levels[nextLoadLevel].realBitrate ? Math.max(levels[nextLoadLevel].realBitrate, levels[nextLoadLevel].bitrate) : levels[nextLoadLevel].bitrate;

            var _fragLevelNextLoadedDelay = frag.duration * levelNextBitrate / (8 * 0.8 * loadRate);

            if (_fragLevelNextLoadedDelay < bufferStarvationDelay) {
              // we found a lower level that be rebuffering free with current estimated bw !
              break;
            }
          } // only emergency switch down if it takes less time to load new fragment at lowest level instead
          // of finishing loading current one ...


          if (fragLevelNextLoadedDelay < fragLoadedDelay) {
            logger["logger"].warn("loading too slow, abort fragment loading and switch to level " + nextLoadLevel + ":fragLoadedDelay[" + nextLoadLevel + "]<fragLoadedDelay[" + (frag.level - 1) + "];bufferStarvationDelay:" + fragLevelNextLoadedDelay.toFixed(1) + "<" + fragLoadedDelay.toFixed(1) + ":" + bufferStarvationDelay.toFixed(1)); // force next load level in auto mode

            hls.nextLoadLevel = nextLoadLevel; // update bw estimate for this fragment before cancelling load (this will help reducing the bw)

            this._bwEstimator.sample(requestDelay, stats.loaded); // abort fragment loading


            loader.abort(); // stop abandon rules timer

            this.clearTimer();
            hls.trigger(events["default"].FRAG_LOAD_EMERGENCY_ABORTED, {
              frag: frag,
              stats: stats
            });
          }
        }
      }
    }
  };

  _proto.onFragLoaded = function onFragLoaded(data) {
    var frag = data.frag;

    if (frag.type === 'main' && Object(number["isFiniteNumber"])(frag.sn)) {
      // stop monitoring bw once frag loaded
      this.clearTimer(); // store level id after successful fragment load

      this.lastLoadedFragLevel = frag.level; // reset forced auto level value so that next level will be selected

      this._nextAutoLevel = -1; // compute level average bitrate

      if (this.hls.config.abrMaxWithRealBitrate) {
        var level = this.hls.levels[frag.level];
        var loadedBytes = (level.loaded ? level.loaded.bytes : 0) + data.stats.loaded;
        var loadedDuration = (level.loaded ? level.loaded.duration : 0) + data.frag.duration;
        level.loaded = {
          bytes: loadedBytes,
          duration: loadedDuration
        };
        level.realBitrate = Math.round(8 * loadedBytes / loadedDuration);
      } // if fragment has been loaded to perform a bitrate test,


      if (data.frag.bitrateTest) {
        var stats = data.stats;
        stats.tparsed = stats.tbuffered = stats.tload;
        this.onFragBuffered(data);
      }
    }
  };

  _proto.onFragBuffered = function onFragBuffered(data) {
    var stats = data.stats;
    var frag = data.frag; // only update stats on first frag buffering
    // if same frag is loaded multiple times, it might be in browser cache, and loaded quickly
    // and leading to wrong bw estimation
    // on bitrate test, also only update stats once (if tload = tbuffered == on FRAG_LOADED)

    if (stats.aborted !== true && frag.type === 'main' && Object(number["isFiniteNumber"])(frag.sn) && (!frag.bitrateTest || stats.tload === stats.tbuffered)) {
      // use tparsed-trequest instead of tbuffered-trequest to compute fragLoadingProcessing; rationale is that  buffer appending only happens once media is attached
      // in case we use config.startFragPrefetch while media is not attached yet, fragment might be parsed while media not attached yet, but it will only be buffered on media attached
      // as a consequence it could happen really late in the process. meaning that appending duration might appears huge ... leading to underestimated throughput estimation
      var fragLoadingProcessingMs = stats.tparsed - stats.trequest;
      logger["logger"].log("latency/loading/parsing/append/kbps:" + Math.round(stats.tfirst - stats.trequest) + "/" + Math.round(stats.tload - stats.tfirst) + "/" + Math.round(stats.tparsed - stats.tload) + "/" + Math.round(stats.tbuffered - stats.tparsed) + "/" + Math.round(8 * stats.loaded / (stats.tbuffered - stats.trequest)));

      this._bwEstimator.sample(fragLoadingProcessingMs, stats.loaded);

      stats.bwEstimate = this._bwEstimator.getEstimate(); // if fragment has been loaded to perform a bitrate test, (hls.startLevel = -1), store bitrate test delay duration

      if (frag.bitrateTest) {
        this.bitrateTestDelay = fragLoadingProcessingMs / 1000;
      } else {
        this.bitrateTestDelay = 0;
      }
    }
  };

  _proto.onError = function onError(data) {
    // stop timer in case of frag loading error
    switch (data.details) {
      case errors["ErrorDetails"].FRAG_LOAD_ERROR:
      case errors["ErrorDetails"].FRAG_LOAD_TIMEOUT:
        this.clearTimer();
        break;

      default:
        break;
    }
  };

  _proto.clearTimer = function clearTimer() {
    clearInterval(this.timer);
    this.timer = null;
  } // return next auto level
  ;

  _proto._findBestLevel = function _findBestLevel(currentLevel, currentFragDuration, currentBw, minAutoLevel, maxAutoLevel, maxFetchDuration, bwFactor, bwUpFactor, levels) {
    for (var i = maxAutoLevel; i >= minAutoLevel; i--) {
      var levelInfo = levels[i];

      if (!levelInfo) {
        continue;
      }

      var levelDetails = levelInfo.details;
      var avgDuration = levelDetails ? levelDetails.totalduration / levelDetails.fragments.length : currentFragDuration;
      var live = levelDetails ? levelDetails.live : false;
      var adjustedbw = void 0; // follow algorithm captured from stagefright :
      // https://android.googlesource.com/platform/frameworks/av/+/master/media/libstagefright/httplive/LiveSession.cpp
      // Pick the highest bandwidth stream below or equal to estimated bandwidth.
      // consider only 80% of the available bandwidth, but if we are switching up,
      // be even more conservative (70%) to avoid overestimating and immediately
      // switching back.

      if (i <= currentLevel) {
        adjustedbw = bwFactor * currentBw;
      } else {
        adjustedbw = bwUpFactor * currentBw;
      }

      var bitrate = levels[i].realBitrate ? Math.max(levels[i].realBitrate, levels[i].bitrate) : levels[i].bitrate;
      var fetchDuration = bitrate * avgDuration / adjustedbw;
      logger["logger"].trace("level/adjustedbw/bitrate/avgDuration/maxFetchDuration/fetchDuration: " + i + "/" + Math.round(adjustedbw) + "/" + bitrate + "/" + avgDuration + "/" + maxFetchDuration + "/" + fetchDuration); // if adjusted bw is greater than level bitrate AND

      if (adjustedbw > bitrate && ( // fragment fetchDuration unknown OR live stream OR fragment fetchDuration less than max allowed fetch duration, then this level matches
      // we don't account for max Fetch Duration for live streams, this is to avoid switching down when near the edge of live sliding window ...
      // special case to support startLevel = -1 (bitrateTest) on live streams : in that case we should not exit loop so that _findBestLevel will return -1
      !fetchDuration || live && !this.bitrateTestDelay || fetchDuration < maxFetchDuration)) {
        // as we are looping from highest to lowest, this will return the best achievable quality level
        return i;
      }
    } // not enough time budget even with quality level 0 ... rebuffering might happen


    return -1;
  };

  abr_controller_createClass(AbrController, [{
    key: "nextAutoLevel",
    get: function get() {
      var forcedAutoLevel = this._nextAutoLevel;
      var bwEstimator = this._bwEstimator; // in case next auto level has been forced, and bw not available or not reliable, return forced value

      if (forcedAutoLevel !== -1 && (!bwEstimator || !bwEstimator.canEstimate())) {
        return forcedAutoLevel;
      } // compute next level using ABR logic


      var nextABRAutoLevel = this._nextABRAutoLevel; // if forced auto level has been defined, use it to cap ABR computed quality level

      if (forcedAutoLevel !== -1) {
        nextABRAutoLevel = Math.min(forcedAutoLevel, nextABRAutoLevel);
      }

      return nextABRAutoLevel;
    },
    set: function set(nextLevel) {
      this._nextAutoLevel = nextLevel;
    }
  }, {
    key: "_nextABRAutoLevel",
    get: function get() {
      var hls = this.hls;
      var maxAutoLevel = hls.maxAutoLevel,
          levels = hls.levels,
          config = hls.config,
          minAutoLevel = hls.minAutoLevel;
      var video = hls.media;
      var currentLevel = this.lastLoadedFragLevel;
      var currentFragDuration = this.fragCurrent ? this.fragCurrent.duration : 0;
      var pos = video ? video.currentTime : 0; // playbackRate is the absolute value of the playback rate; if video.playbackRate is 0, we use 1 to load as
      // if we're playing back at the normal rate.

      var playbackRate = video && video.playbackRate !== 0 ? Math.abs(video.playbackRate) : 1.0;
      var avgbw = this._bwEstimator ? this._bwEstimator.getEstimate() : config.abrEwmaDefaultEstimate; // bufferStarvationDelay is the wall-clock time left until the playback buffer is exhausted.

      var bufferStarvationDelay = (BufferHelper.bufferInfo(video, pos, config.maxBufferHole).end - pos) / playbackRate; // First, look to see if we can find a level matching with our avg bandwidth AND that could also guarantee no rebuffering at all

      var bestLevel = this._findBestLevel(currentLevel, currentFragDuration, avgbw, minAutoLevel, maxAutoLevel, bufferStarvationDelay, config.abrBandWidthFactor, config.abrBandWidthUpFactor, levels);

      if (bestLevel >= 0) {
        return bestLevel;
      } else {
        logger["logger"].trace('rebuffering expected to happen, lets try to find a quality level minimizing the rebuffering'); // not possible to get rid of rebuffering ... let's try to find level that will guarantee less than maxStarvationDelay of rebuffering
        // if no matching level found, logic will return 0

        var maxStarvationDelay = currentFragDuration ? Math.min(currentFragDuration, config.maxStarvationDelay) : config.maxStarvationDelay;
        var bwFactor = config.abrBandWidthFactor;
        var bwUpFactor = config.abrBandWidthUpFactor;

        if (bufferStarvationDelay === 0) {
          // in case buffer is empty, let's check if previous fragment was loaded to perform a bitrate test
          var bitrateTestDelay = this.bitrateTestDelay;

          if (bitrateTestDelay) {
            // if it is the case, then we need to adjust our max starvation delay using maxLoadingDelay config value
            // max video loading delay used in  automatic start level selection :
            // in that mode ABR controller will ensure that video loading time (ie the time to fetch the first fragment at lowest quality level +
            // the time to fetch the fragment at the appropriate quality level is less than ```maxLoadingDelay``` )
            // cap maxLoadingDelay and ensure it is not bigger 'than bitrate test' frag duration
            var maxLoadingDelay = currentFragDuration ? Math.min(currentFragDuration, config.maxLoadingDelay) : config.maxLoadingDelay;
            maxStarvationDelay = maxLoadingDelay - bitrateTestDelay;
            logger["logger"].trace("bitrate test took " + Math.round(1000 * bitrateTestDelay) + "ms, set first fragment max fetchDuration to " + Math.round(1000 * maxStarvationDelay) + " ms"); // don't use conservative factor on bitrate test

            bwFactor = bwUpFactor = 1;
          }
        }

        bestLevel = this._findBestLevel(currentLevel, currentFragDuration, avgbw, minAutoLevel, maxAutoLevel, bufferStarvationDelay + maxStarvationDelay, bwFactor, bwUpFactor, levels);
        return Math.max(bestLevel, 0);
      }
    }
  }]);

  return AbrController;
}(event_handler);

/* harmony default export */ var abr_controller = (abr_controller_AbrController);
// CONCATENATED MODULE: ./src/controller/buffer-controller.ts


function buffer_controller_inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/*
 * Buffer Controller
 */





var buffer_controller_MediaSource = getMediaSource();

var buffer_controller_BufferController = /*#__PURE__*/function (_EventHandler) {
  buffer_controller_inheritsLoose(BufferController, _EventHandler);

  // the value that we have set mediasource.duration to
  // (the actual duration may be tweaked slighly by the browser)
  // the value that we want to set mediaSource.duration to
  // the target duration of the current media playlist
  // current stream state: true - for live broadcast, false - for VoD content
  // cache the self generated object url to detect hijack of video tag
  // signals that the sourceBuffers need to be flushed
  // signals that mediaSource should have endOfStream called
  // this is optional because this property is removed from the class sometimes
  // The number of BUFFER_CODEC events received before any sourceBuffers are created
  // The total number of BUFFER_CODEC events received
  // A reference to the attached media element
  // A reference to the active media source
  // List of pending segments to be appended to source buffer
  // A guard to see if we are currently appending to the source buffer
  // counters
  function BufferController(hls) {
    var _this;

    _this = _EventHandler.call(this, hls, events["default"].MEDIA_ATTACHING, events["default"].MEDIA_DETACHING, events["default"].MANIFEST_PARSED, events["default"].BUFFER_RESET, events["default"].BUFFER_APPENDING, events["default"].BUFFER_CODECS, events["default"].BUFFER_EOS, events["default"].BUFFER_FLUSHING, events["default"].LEVEL_PTS_UPDATED, events["default"].LEVEL_UPDATED) || this;
    _this._msDuration = null;
    _this._levelDuration = null;
    _this._levelTargetDuration = 10;
    _this._live = null;
    _this._objectUrl = null;
    _this._needsFlush = false;
    _this._needsEos = false;
    _this.config = void 0;
    _this.audioTimestampOffset = void 0;
    _this.bufferCodecEventsExpected = 0;
    _this._bufferCodecEventsTotal = 0;
    _this.media = null;
    _this.mediaSource = null;
    _this.segments = [];
    _this.parent = void 0;
    _this.appending = false;
    _this.appended = 0;
    _this.appendError = 0;
    _this.flushBufferCounter = 0;
    _this.tracks = {};
    _this.pendingTracks = {};
    _this.sourceBuffer = {};
    _this.flushRange = [];

    _this._onMediaSourceOpen = function () {
      logger["logger"].log('media source opened');

      _this.hls.trigger(events["default"].MEDIA_ATTACHED, {
        media: _this.media
      });

      var mediaSource = _this.mediaSource;

      if (mediaSource) {
        // once received, don't listen anymore to sourceopen event
        mediaSource.removeEventListener('sourceopen', _this._onMediaSourceOpen);
      }

      _this.checkPendingTracks();
    };

    _this._onMediaSourceClose = function () {
      logger["logger"].log('media source closed');
    };

    _this._onMediaSourceEnded = function () {
      logger["logger"].log('media source ended');
    };

    _this._onSBUpdateEnd = function () {
      // update timestampOffset
      if (_this.audioTimestampOffset && _this.sourceBuffer.audio) {
        var audioBuffer = _this.sourceBuffer.audio;
        logger["logger"].warn("change mpeg audio timestamp offset from " + audioBuffer.timestampOffset + " to " + _this.audioTimestampOffset);
        audioBuffer.timestampOffset = _this.audioTimestampOffset;
        delete _this.audioTimestampOffset;
      }

      if (_this._needsFlush) {
        _this.doFlush();
      }

      if (_this._needsEos) {
        _this.checkEos();
      }

      _this.appending = false;
      var parent = _this.parent; // count nb of pending segments waiting for appending on this sourcebuffer

      var pending = _this.segments.reduce(function (counter, segment) {
        return segment.parent === parent ? counter + 1 : counter;
      }, 0); // this.sourceBuffer is better to use than media.buffered as it is closer to the PTS data from the fragments


      var timeRanges = {};
      var sbSet = _this.sourceBuffer;

      for (var streamType in sbSet) {
        var sb = sbSet[streamType];

        if (!sb) {
          throw Error("handling source buffer update end error: source buffer for " + streamType + " uninitilized and unable to update buffered TimeRanges.");
        }

        timeRanges[streamType] = sb.buffered;
      }

      _this.hls.trigger(events["default"].BUFFER_APPENDED, {
        parent: parent,
        pending: pending,
        timeRanges: timeRanges
      }); // don't append in flushing mode


      if (!_this._needsFlush) {
        _this.doAppending();
      }

      _this.updateMediaElementDuration(); // appending goes first


      if (pending === 0) {
        _this.flushLiveBackBuffer();
      }
    };

    _this._onSBUpdateError = function (event) {
      logger["logger"].error('sourceBuffer error:', event); // according to http://www.w3.org/TR/media-source/#sourcebuffer-append-error
      // this error might not always be fatal (it is fatal if decode error is set, in that case
      // it will be followed by a mediaElement error ...)

      _this.hls.trigger(events["default"].ERROR, {
        type: errors["ErrorTypes"].MEDIA_ERROR,
        details: errors["ErrorDetails"].BUFFER_APPENDING_ERROR,
        fatal: false
      }); // we don't need to do more than that, as accordin to the spec, updateend will be fired just after

    };

    _this.config = hls.config;
    return _this;
  }

  var _proto = BufferController.prototype;

  _proto.destroy = function destroy() {
    event_handler.prototype.destroy.call(this);
  };

  _proto.onLevelPtsUpdated = function onLevelPtsUpdated(data) {
    var type = data.type;
    var audioTrack = this.tracks.audio; // Adjusting `SourceBuffer.timestampOffset` (desired point in the timeline where the next frames should be appended)
    // in Chrome browser when we detect MPEG audio container and time delta between level PTS and `SourceBuffer.timestampOffset`
    // is greater than 100ms (this is enough to handle seek for VOD or level change for LIVE videos). At the time of change we issue
    // `SourceBuffer.abort()` and adjusting `SourceBuffer.timestampOffset` if `SourceBuffer.updating` is false or awaiting `updateend`
    // event if SB is in updating state.
    // More info here: https://github.com/video-dev/hls.js/issues/332#issuecomment-257986486

    if (type === 'audio' && audioTrack && audioTrack.container === 'audio/mpeg') {
      // Chrome audio mp3 track
      var audioBuffer = this.sourceBuffer.audio;

      if (!audioBuffer) {
        throw Error('Level PTS Updated and source buffer for audio uninitalized');
      }

      var delta = Math.abs(audioBuffer.timestampOffset - data.start); // adjust timestamp offset if time delta is greater than 100ms

      if (delta > 0.1) {
        var updating = audioBuffer.updating;

        try {
          audioBuffer.abort();
        } catch (err) {
          logger["logger"].warn('can not abort audio buffer: ' + err);
        }

        if (!updating) {
          logger["logger"].warn('change mpeg audio timestamp offset from ' + audioBuffer.timestampOffset + ' to ' + data.start);
          audioBuffer.timestampOffset = data.start;
        } else {
          this.audioTimestampOffset = data.start;
        }
      }
    }
  };

  _proto.onManifestParsed = function onManifestParsed(data) {
    // in case of alt audio (where all tracks have urls) 2 BUFFER_CODECS events will be triggered, one per stream controller
    // sourcebuffers will be created all at once when the expected nb of tracks will be reached
    // in case alt audio is not used, only one BUFFER_CODEC event will be fired from main stream controller
    // it will contain the expected nb of source buffers, no need to compute it
    var codecEvents = 2;

    if (data.audio && !data.video || !data.altAudio) {
      codecEvents = 1;
    }

    this.bufferCodecEventsExpected = this._bufferCodecEventsTotal = codecEvents;
    logger["logger"].log(this.bufferCodecEventsExpected + " bufferCodec event(s) expected");
  };

  _proto.onMediaAttaching = function onMediaAttaching(data) {
    var media = this.media = data.media;

    if (media && buffer_controller_MediaSource) {
      // setup the media source
      var ms = this.mediaSource = new buffer_controller_MediaSource(); // Media Source listeners

      ms.addEventListener('sourceopen', this._onMediaSourceOpen);
      ms.addEventListener('sourceended', this._onMediaSourceEnded);
      ms.addEventListener('sourceclose', this._onMediaSourceClose); // link video and media Source

      media.src = window.URL.createObjectURL(ms); // cache the locally generated object url

      this._objectUrl = media.src;
    }
  };

  _proto.onMediaDetaching = function onMediaDetaching() {
    logger["logger"].log('media source detaching');
    var ms = this.mediaSource;

    if (ms) {
      if (ms.readyState === 'open') {
        try {
          // endOfStream could trigger exception if any sourcebuffer is in updating state
          // we don't really care about checking sourcebuffer state here,
          // as we are anyway detaching the MediaSource
          // let's just avoid this exception to propagate
          ms.endOfStream();
        } catch (err) {
          logger["logger"].warn("onMediaDetaching:" + err.message + " while calling endOfStream");
        }
      }

      ms.removeEventListener('sourceopen', this._onMediaSourceOpen);
      ms.removeEventListener('sourceended', this._onMediaSourceEnded);
      ms.removeEventListener('sourceclose', this._onMediaSourceClose); // Detach properly the MediaSource from the HTMLMediaElement as
      // suggested in https://github.com/w3c/media-source/issues/53.

      if (this.media) {
        if (this._objectUrl) {
          window.URL.revokeObjectURL(this._objectUrl);
        } // clean up video tag src only if it's our own url. some external libraries might
        // hijack the video tag and change its 'src' without destroying the Hls instance first


        if (this.media.src === this._objectUrl) {
          this.media.removeAttribute('src');
          this.media.load();
        } else {
          logger["logger"].warn('media.src was changed by a third party - skip cleanup');
        }
      }

      this.mediaSource = null;
      this.media = null;
      this._objectUrl = null;
      this.bufferCodecEventsExpected = this._bufferCodecEventsTotal;
      this.pendingTracks = {};
      this.tracks = {};
      this.sourceBuffer = {};
      this.flushRange = [];
      this.segments = [];
      this.appended = 0;
    }

    this.hls.trigger(events["default"].MEDIA_DETACHED);
  };

  _proto.checkPendingTracks = function checkPendingTracks() {
    var bufferCodecEventsExpected = this.bufferCodecEventsExpected,
        pendingTracks = this.pendingTracks; // Check if we've received all of the expected bufferCodec events. When none remain, create all the sourceBuffers at once.
    // This is important because the MSE spec allows implementations to throw QuotaExceededErrors if creating new sourceBuffers after
    // data has been appended to existing ones.
    // 2 tracks is the max (one for audio, one for video). If we've reach this max go ahead and create the buffers.

    var pendingTracksCount = Object.keys(pendingTracks).length;

    if (pendingTracksCount && !bufferCodecEventsExpected || pendingTracksCount === 2) {
      // ok, let's create them now !
      this.createSourceBuffers(pendingTracks);
      this.pendingTracks = {}; // append any pending segments now !

      this.doAppending();
    }
  };

  _proto.onBufferReset = function onBufferReset() {
    var sourceBuffer = this.sourceBuffer;

    for (var type in sourceBuffer) {
      var sb = sourceBuffer[type];

      try {
        if (sb) {
          if (this.mediaSource) {
            this.mediaSource.removeSourceBuffer(sb);
          }

          sb.removeEventListener('updateend', this._onSBUpdateEnd);
          sb.removeEventListener('error', this._onSBUpdateError);
        }
      } catch (err) {}
    }

    this.sourceBuffer = {};
    this.flushRange = [];
    this.segments = [];
    this.appended = 0;
  };

  _proto.onBufferCodecs = function onBufferCodecs(tracks) {
    var _this2 = this;

    // if source buffer(s) not created yet, appended buffer tracks in this.pendingTracks
    // if sourcebuffers already created, do nothing ...
    if (Object.keys(this.sourceBuffer).length) {
      return;
    }

    Object.keys(tracks).forEach(function (trackName) {
      _this2.pendingTracks[trackName] = tracks[trackName];
    });
    this.bufferCodecEventsExpected = Math.max(this.bufferCodecEventsExpected - 1, 0);

    if (this.mediaSource && this.mediaSource.readyState === 'open') {
      this.checkPendingTracks();
    }
  };

  _proto.createSourceBuffers = function createSourceBuffers(tracks) {
    var sourceBuffer = this.sourceBuffer,
        mediaSource = this.mediaSource;

    if (!mediaSource) {
      throw Error('createSourceBuffers called when mediaSource was null');
    }

    for (var trackName in tracks) {
      if (!sourceBuffer[trackName]) {
        var track = tracks[trackName];

        if (!track) {
          throw Error("source buffer exists for track " + trackName + ", however track does not");
        } // use levelCodec as first priority


        var codec = track.levelCodec || track.codec;
        var mimeType = track.container + ";codecs=" + codec;
        logger["logger"].log("creating sourceBuffer(" + mimeType + ")");

        try {
          var sb = sourceBuffer[trackName] = mediaSource.addSourceBuffer(mimeType);
          sb.addEventListener('updateend', this._onSBUpdateEnd);
          sb.addEventListener('error', this._onSBUpdateError);
          this.tracks[trackName] = {
            buffer: sb,
            codec: codec,
            id: track.id,
            container: track.container,
            levelCodec: track.levelCodec
          };
        } catch (err) {
          logger["logger"].error("error while trying to add sourceBuffer:" + err.message);
          this.hls.trigger(events["default"].ERROR, {
            type: errors["ErrorTypes"].MEDIA_ERROR,
            details: errors["ErrorDetails"].BUFFER_ADD_CODEC_ERROR,
            fatal: false,
            err: err,
            mimeType: mimeType
          });
        }
      }
    }

    this.hls.trigger(events["default"].BUFFER_CREATED, {
      tracks: this.tracks
    });
  };

  _proto.onBufferAppending = function onBufferAppending(data) {
    if (!this._needsFlush) {
      if (!this.segments) {
        this.segments = [data];
      } else {
        this.segments.push(data);
      }

      this.doAppending();
    }
  } // on BUFFER_EOS mark matching sourcebuffer(s) as ended and trigger checkEos()
  // an undefined data.type will mark all buffers as EOS.
  ;

  _proto.onBufferEos = function onBufferEos(data) {
    for (var type in this.sourceBuffer) {
      if (!data.type || data.type === type) {
        var sb = this.sourceBuffer[type];

        if (sb && !sb.ended) {
          sb.ended = true;
          logger["logger"].log(type + " sourceBuffer now EOS");
        }
      }
    }

    this.checkEos();
  } // if all source buffers are marked as ended, signal endOfStream() to MediaSource.
  ;

  _proto.checkEos = function checkEos() {
    var sourceBuffer = this.sourceBuffer,
        mediaSource = this.mediaSource;

    if (!mediaSource || mediaSource.readyState !== 'open') {
      this._needsEos = false;
      return;
    }

    for (var type in sourceBuffer) {
      var sb = sourceBuffer[type];
      if (!sb) continue;

      if (!sb.ended) {
        return;
      }

      if (sb.updating) {
        this._needsEos = true;
        return;
      }
    }

    logger["logger"].log('all media data are available, signal endOfStream() to MediaSource and stop loading fragment'); // Notify the media element that it now has all of the media data

    try {
      mediaSource.endOfStream();
    } catch (e) {
      logger["logger"].warn('exception while calling mediaSource.endOfStream()');
    }

    this._needsEos = false;
  };

  _proto.onBufferFlushing = function onBufferFlushing(data) {
    if (data.type) {
      this.flushRange.push({
        start: data.startOffset,
        end: data.endOffset,
        type: data.type
      });
    } else {
      this.flushRange.push({
        start: data.startOffset,
        end: data.endOffset,
        type: 'video'
      });
      this.flushRange.push({
        start: data.startOffset,
        end: data.endOffset,
        type: 'audio'
      });
    } // attempt flush immediately


    this.flushBufferCounter = 0;
    this.doFlush();
  };

  _proto.flushLiveBackBuffer = function flushLiveBackBuffer() {
    // clear back buffer for live only
    if (!this._live) {
      return;
    }

    var liveBackBufferLength = this.config.liveBackBufferLength;

    if (!isFinite(liveBackBufferLength) || liveBackBufferLength < 0) {
      return;
    }

    if (!this.media) {
      logger["logger"].error('flushLiveBackBuffer called without attaching media');
      return;
    }

    var currentTime = this.media.currentTime;
    var sourceBuffer = this.sourceBuffer;
    var bufferTypes = Object.keys(sourceBuffer);
    var targetBackBufferPosition = currentTime - Math.max(liveBackBufferLength, this._levelTargetDuration);

    for (var index = bufferTypes.length - 1; index >= 0; index--) {
      var bufferType = bufferTypes[index];
      var sb = sourceBuffer[bufferType];

      if (sb) {
        var buffered = sb.buffered; // when target buffer start exceeds actual buffer start

        if (buffered.length > 0 && targetBackBufferPosition > buffered.start(0)) {
          // remove buffer up until current time minus minimum back buffer length (removing buffer too close to current
          // time will lead to playback freezing)
          // credits for level target duration - https://github.com/videojs/http-streaming/blob/3132933b6aa99ddefab29c10447624efd6fd6e52/src/segment-loader.js#L91
          if (this.removeBufferRange(bufferType, sb, 0, targetBackBufferPosition)) {
            this.hls.trigger(events["default"].LIVE_BACK_BUFFER_REACHED, {
              bufferEnd: targetBackBufferPosition
            });
          }
        }
      }
    }
  };

  _proto.onLevelUpdated = function onLevelUpdated(_ref) {
    var details = _ref.details;

    if (details.fragments.length > 0) {
      this._levelDuration = details.totalduration + details.fragments[0].start;
      this._levelTargetDuration = details.averagetargetduration || details.targetduration || 10;
      this._live = details.live;
      this.updateMediaElementDuration();
    }
  }
  /**
   * Update Media Source duration to current level duration or override to Infinity if configuration parameter
   * 'liveDurationInfinity` is set to `true`
   * More details: https://github.com/video-dev/hls.js/issues/355
   */
  ;

  _proto.updateMediaElementDuration = function updateMediaElementDuration() {
    var config = this.config;
    var duration;

    if (this._levelDuration === null || !this.media || !this.mediaSource || !this.sourceBuffer || this.media.readyState === 0 || this.mediaSource.readyState !== 'open') {
      return;
    }

    for (var type in this.sourceBuffer) {
      var sb = this.sourceBuffer[type];

      if (sb && sb.updating === true) {
        // can't set duration whilst a buffer is updating
        return;
      }
    }

    duration = this.media.duration; // initialise to the value that the media source is reporting

    if (this._msDuration === null) {
      this._msDuration = this.mediaSource.duration;
    }

    if (this._live === true && config.liveDurationInfinity === true) {
      // Override duration to Infinity
      logger["logger"].log('Media Source duration is set to Infinity');
      this._msDuration = this.mediaSource.duration = Infinity;
    } else if (this._levelDuration > this._msDuration && this._levelDuration > duration || !Object(number["isFiniteNumber"])(duration)) {
      // levelDuration was the last value we set.
      // not using mediaSource.duration as the browser may tweak this value
      // only update Media Source duration if its value increase, this is to avoid
      // flushing already buffered portion when switching between quality level
      logger["logger"].log("Updating Media Source duration to " + this._levelDuration.toFixed(3));
      this._msDuration = this.mediaSource.duration = this._levelDuration;
    }
  };

  _proto.doFlush = function doFlush() {
    // loop through all buffer ranges to flush
    while (this.flushRange.length) {
      var range = this.flushRange[0]; // flushBuffer will abort any buffer append in progress and flush Audio/Video Buffer

      if (this.flushBuffer(range.start, range.end, range.type)) {
        // range flushed, remove from flush array
        this.flushRange.shift();
        this.flushBufferCounter = 0;
      } else {
        this._needsFlush = true; // avoid looping, wait for SB update end to retrigger a flush

        return;
      }
    }

    if (this.flushRange.length === 0) {
      // everything flushed
      this._needsFlush = false; // let's recompute this.appended, which is used to avoid flush looping

      var appended = 0;
      var sourceBuffer = this.sourceBuffer;

      try {
        for (var type in sourceBuffer) {
          var sb = sourceBuffer[type];

          if (sb) {
            appended += sb.buffered.length;
          }
        }
      } catch (error) {
        // error could be thrown while accessing buffered, in case sourcebuffer has already been removed from MediaSource
        // this is harmess at this stage, catch this to avoid reporting an internal exception
        logger["logger"].error('error while accessing sourceBuffer.buffered');
      }

      this.appended = appended;
      this.hls.trigger(events["default"].BUFFER_FLUSHED);
    }
  };

  _proto.doAppending = function doAppending() {
    var config = this.config,
        hls = this.hls,
        segments = this.segments,
        sourceBuffer = this.sourceBuffer;

    if (!Object.keys(sourceBuffer).length) {
      // early exit if no source buffers have been initialized yet
      return;
    }

    if (!this.media || this.media.error) {
      this.segments = [];
      logger["logger"].error('trying to append although a media error occured, flush segment and abort');
      return;
    }

    if (this.appending) {
      // logger.log(`sb appending in progress`);
      return;
    }

    var segment = segments.shift();

    if (!segment) {
      // handle undefined shift
      return;
    }

    try {
      var sb = sourceBuffer[segment.type];

      if (!sb) {
        // in case we don't have any source buffer matching with this segment type,
        // it means that Mediasource fails to create sourcebuffer
        // discard this segment, and trigger update end
        this._onSBUpdateEnd();

        return;
      }

      if (sb.updating) {
        // if we are still updating the source buffer from the last segment, place this back at the front of the queue
        segments.unshift(segment);
        return;
      } // reset sourceBuffer ended flag before appending segment


      sb.ended = false; // logger.log(`appending ${segment.content} ${type} SB, size:${segment.data.length}, ${segment.parent}`);

      this.parent = segment.parent;
      sb.appendBuffer(segment.data);
      this.appendError = 0;
      this.appended++;
      this.appending = true;
    } catch (err) {
      // in case any error occured while appending, put back segment in segments table
      logger["logger"].error("error while trying to append buffer:" + err.message);
      segments.unshift(segment);
      var event = {
        type: errors["ErrorTypes"].MEDIA_ERROR,
        parent: segment.parent,
        details: '',
        fatal: false
      };

      if (err.code === 22) {
        // QuotaExceededError: http://www.w3.org/TR/html5/infrastructure.html#quotaexceedederror
        // let's stop appending any segments, and report BUFFER_FULL_ERROR error
        this.segments = [];
        event.details = errors["ErrorDetails"].BUFFER_FULL_ERROR;
      } else {
        this.appendError++;
        event.details = errors["ErrorDetails"].BUFFER_APPEND_ERROR;
        /* with UHD content, we could get loop of quota exceeded error until
          browser is able to evict some data from sourcebuffer. retrying help recovering this
        */

        if (this.appendError > config.appendErrorMaxRetry) {
          logger["logger"].log("fail " + config.appendErrorMaxRetry + " times to append segment in sourceBuffer");
          this.segments = [];
          event.fatal = true;
        }
      }

      hls.trigger(events["default"].ERROR, event);
    }
  }
  /*
    flush specified buffered range,
    return true once range has been flushed.
    as sourceBuffer.remove() is asynchronous, flushBuffer will be retriggered on sourceBuffer update end
  */
  ;

  _proto.flushBuffer = function flushBuffer(startOffset, endOffset, sbType) {
    var sourceBuffer = this.sourceBuffer; // exit if no sourceBuffers are initialized

    if (!Object.keys(sourceBuffer).length) {
      return true;
    }

    var currentTime = 'null';

    if (this.media) {
      currentTime = this.media.currentTime.toFixed(3);
    }

    logger["logger"].log("flushBuffer,pos/start/end: " + currentTime + "/" + startOffset + "/" + endOffset); // safeguard to avoid infinite looping : don't try to flush more than the nb of appended segments

    if (this.flushBufferCounter >= this.appended) {
      logger["logger"].warn('abort flushing too many retries');
      return true;
    }

    var sb = sourceBuffer[sbType]; // we are going to flush buffer, mark source buffer as 'not ended'

    if (sb) {
      sb.ended = false;

      if (!sb.updating) {
        if (this.removeBufferRange(sbType, sb, startOffset, endOffset)) {
          this.flushBufferCounter++;
          return false;
        }
      } else {
        logger["logger"].warn('cannot flush, sb updating in progress');
        return false;
      }
    }

    logger["logger"].log('buffer flushed'); // everything flushed !

    return true;
  }
  /**
   * Removes first buffered range from provided source buffer that lies within given start and end offsets.
   *
   * @param {string} type Type of the source buffer, logging purposes only.
   * @param {SourceBuffer} sb Target SourceBuffer instance.
   * @param {number} startOffset
   * @param {number} endOffset
   *
   * @returns {boolean} True when source buffer remove requested.
   */
  ;

  _proto.removeBufferRange = function removeBufferRange(type, sb, startOffset, endOffset) {
    try {
      for (var i = 0; i < sb.buffered.length; i++) {
        var bufStart = sb.buffered.start(i);
        var bufEnd = sb.buffered.end(i);
        var removeStart = Math.max(bufStart, startOffset);
        var removeEnd = Math.min(bufEnd, endOffset);
        /* sometimes sourcebuffer.remove() does not flush
          the exact expected time range.
          to avoid rounding issues/infinite loop,
          only flush buffer range of length greater than 500ms.
        */

        if (Math.min(removeEnd, bufEnd) - removeStart > 0.5) {
          var currentTime = 'null';

          if (this.media) {
            currentTime = this.media.currentTime.toString();
          }

          logger["logger"].log("sb remove " + type + " [" + removeStart + "," + removeEnd + "], of [" + bufStart + "," + bufEnd + "], pos:" + currentTime);
          sb.remove(removeStart, removeEnd);
          return true;
        }
      }
    } catch (error) {
      logger["logger"].warn('removeBufferRange failed', error);
    }

    return false;
  };

  return BufferController;
}(event_handler);

/* harmony default export */ var buffer_controller = (buffer_controller_BufferController);
// CONCATENATED MODULE: ./src/controller/cap-level-controller.js
function cap_level_controller_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function cap_level_controller_createClass(Constructor, protoProps, staticProps) { if (protoProps) cap_level_controller_defineProperties(Constructor.prototype, protoProps); if (staticProps) cap_level_controller_defineProperties(Constructor, staticProps); return Constructor; }

function cap_level_controller_inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/*
 * cap stream level to media size dimension controller
*/



var cap_level_controller_CapLevelController = /*#__PURE__*/function (_EventHandler) {
  cap_level_controller_inheritsLoose(CapLevelController, _EventHandler);

  function CapLevelController(hls) {
    var _this;

    _this = _EventHandler.call(this, hls, events["default"].FPS_DROP_LEVEL_CAPPING, events["default"].MEDIA_ATTACHING, events["default"].MANIFEST_PARSED, events["default"].LEVELS_UPDATED, events["default"].BUFFER_CODECS, events["default"].MEDIA_DETACHING) || this;
    _this.autoLevelCapping = Number.POSITIVE_INFINITY;
    _this.firstLevel = null;
    _this.levels = [];
    _this.media = null;
    _this.restrictedLevels = [];
    _this.timer = null;
    _this.clientRect = null;
    return _this;
  }

  var _proto = CapLevelController.prototype;

  _proto.destroy = function destroy() {
    if (this.hls.config.capLevelToPlayerSize) {
      this.media = null;
      this.clientRect = null;
      this.stopCapping();
    }
  };

  _proto.onFpsDropLevelCapping = function onFpsDropLevelCapping(data) {
    // Don't add a restricted level more than once
    if (CapLevelController.isLevelAllowed(data.droppedLevel, this.restrictedLevels)) {
      this.restrictedLevels.push(data.droppedLevel);
    }
  };

  _proto.onMediaAttaching = function onMediaAttaching(data) {
    this.media = data.media instanceof window.HTMLVideoElement ? data.media : null;
  };

  _proto.onManifestParsed = function onManifestParsed(data) {
    var hls = this.hls;
    this.restrictedLevels = [];
    this.levels = data.levels;
    this.firstLevel = data.firstLevel;

    if (hls.config.capLevelToPlayerSize && data.video) {
      // Start capping immediately if the manifest has signaled video codecs
      this.startCapping();
    }
  } // Only activate capping when playing a video stream; otherwise, multi-bitrate audio-only streams will be restricted
  // to the first level
  ;

  _proto.onBufferCodecs = function onBufferCodecs(data) {
    var hls = this.hls;

    if (hls.config.capLevelToPlayerSize && data.video) {
      // If the manifest did not signal a video codec capping has been deferred until we're certain video is present
      this.startCapping();
    }
  };

  _proto.onLevelsUpdated = function onLevelsUpdated(data) {
    this.levels = data.levels;
  };

  _proto.onMediaDetaching = function onMediaDetaching() {
    this.stopCapping();
  };

  _proto.detectPlayerSize = function detectPlayerSize() {
    if (this.media) {
      var levelsLength = this.levels ? this.levels.length : 0;

      if (levelsLength) {
        var hls = this.hls;
        hls.autoLevelCapping = this.getMaxLevel(levelsLength - 1);

        if (hls.autoLevelCapping > this.autoLevelCapping) {
          // if auto level capping has a higher value for the previous one, flush the buffer using nextLevelSwitch
          // usually happen when the user go to the fullscreen mode.
          hls.streamController.nextLevelSwitch();
        }

        this.autoLevelCapping = hls.autoLevelCapping;
      }
    }
  }
  /*
  * returns level should be the one with the dimensions equal or greater than the media (player) dimensions (so the video will be downscaled)
  */
  ;

  _proto.getMaxLevel = function getMaxLevel(capLevelIndex) {
    var _this2 = this;

    if (!this.levels) {
      return -1;
    }

    var validLevels = this.levels.filter(function (level, index) {
      return CapLevelController.isLevelAllowed(index, _this2.restrictedLevels) && index <= capLevelIndex;
    });
    this.clientRect = null;
    return CapLevelController.getMaxLevelByMediaSize(validLevels, this.mediaWidth, this.mediaHeight);
  };

  _proto.startCapping = function startCapping() {
    if (this.timer) {
      // Don't reset capping if started twice; this can happen if the manifest signals a video codec
      return;
    }

    this.autoLevelCapping = Number.POSITIVE_INFINITY;
    this.hls.firstLevel = this.getMaxLevel(this.firstLevel);
    clearInterval(this.timer);
    this.timer = setInterval(this.detectPlayerSize.bind(this), 1000);
    this.detectPlayerSize();
  };

  _proto.stopCapping = function stopCapping() {
    this.restrictedLevels = [];
    this.firstLevel = null;
    this.autoLevelCapping = Number.POSITIVE_INFINITY;

    if (this.timer) {
      this.timer = clearInterval(this.timer);
      this.timer = null;
    }
  };

  _proto.getDimensions = function getDimensions() {
    if (this.clientRect) {
      return this.clientRect;
    }

    var media = this.media;
    var boundsRect = {
      width: 0,
      height: 0
    };

    if (media) {
      var clientRect = media.getBoundingClientRect();
      boundsRect.width = clientRect.width;
      boundsRect.height = clientRect.height;

      if (!boundsRect.width && !boundsRect.height) {
        // When the media element has no width or height (equivalent to not being in the DOM),
        // then use its width and height attributes (media.width, media.height)
        boundsRect.width = clientRect.right - clientRect.left || media.width || 0;
        boundsRect.height = clientRect.bottom - clientRect.top || media.height || 0;
      }
    }

    this.clientRect = boundsRect;
    return boundsRect;
  };

  CapLevelController.isLevelAllowed = function isLevelAllowed(level, restrictedLevels) {
    if (restrictedLevels === void 0) {
      restrictedLevels = [];
    }

    return restrictedLevels.indexOf(level) === -1;
  };

  CapLevelController.getMaxLevelByMediaSize = function getMaxLevelByMediaSize(levels, width, height) {
    if (!levels || levels && !levels.length) {
      return -1;
    } // Levels can have the same dimensions but differing bandwidths - since levels are ordered, we can look to the next
    // to determine whether we've chosen the greatest bandwidth for the media's dimensions


    var atGreatestBandiwdth = function atGreatestBandiwdth(curLevel, nextLevel) {
      if (!nextLevel) {
        return true;
      }

      return curLevel.width !== nextLevel.width || curLevel.height !== nextLevel.height;
    }; // If we run through the loop without breaking, the media's dimensions are greater than every level, so default to
    // the max level


    var maxLevelIndex = levels.length - 1;

    for (var i = 0; i < levels.length; i += 1) {
      var level = levels[i];

      if ((level.width >= width || level.height >= height) && atGreatestBandiwdth(level, levels[i + 1])) {
        maxLevelIndex = i;
        break;
      }
    }

    return maxLevelIndex;
  };

  cap_level_controller_createClass(CapLevelController, [{
    key: "mediaWidth",
    get: function get() {
      return this.getDimensions().width * CapLevelController.contentScaleFactor;
    }
  }, {
    key: "mediaHeight",
    get: function get() {
      return this.getDimensions().height * CapLevelController.contentScaleFactor;
    }
  }], [{
    key: "contentScaleFactor",
    get: function get() {
      var pixelRatio = 1;

      try {
        pixelRatio = window.devicePixelRatio;
      } catch (e) {}

      return pixelRatio;
    }
  }]);

  return CapLevelController;
}(event_handler);

/* harmony default export */ var cap_level_controller = (cap_level_controller_CapLevelController);
// CONCATENATED MODULE: ./src/controller/fps-controller.js
function fps_controller_inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/*
 * FPS Controller
*/



var fps_controller_window = window,
    fps_controller_performance = fps_controller_window.performance;

var fps_controller_FPSController = /*#__PURE__*/function (_EventHandler) {
  fps_controller_inheritsLoose(FPSController, _EventHandler);

  function FPSController(hls) {
    return _EventHandler.call(this, hls, events["default"].MEDIA_ATTACHING) || this;
  }

  var _proto = FPSController.prototype;

  _proto.destroy = function destroy() {
    if (this.timer) {
      clearInterval(this.timer);
    }

    this.isVideoPlaybackQualityAvailable = false;
  };

  _proto.onMediaAttaching = function onMediaAttaching(data) {
    var config = this.hls.config;

    if (config.capLevelOnFPSDrop) {
      var video = this.video = data.media instanceof window.HTMLVideoElement ? data.media : null;

      if (typeof video.getVideoPlaybackQuality === 'function') {
        this.isVideoPlaybackQualityAvailable = true;
      }

      clearInterval(this.timer);
      this.timer = setInterval(this.checkFPSInterval.bind(this), config.fpsDroppedMonitoringPeriod);
    }
  };

  _proto.checkFPS = function checkFPS(video, decodedFrames, droppedFrames) {
    var currentTime = fps_controller_performance.now();

    if (decodedFrames) {
      if (this.lastTime) {
        var currentPeriod = currentTime - this.lastTime,
            currentDropped = droppedFrames - this.lastDroppedFrames,
            currentDecoded = decodedFrames - this.lastDecodedFrames,
            droppedFPS = 1000 * currentDropped / currentPeriod,
            hls = this.hls;
        hls.trigger(events["default"].FPS_DROP, {
          currentDropped: currentDropped,
          currentDecoded: currentDecoded,
          totalDroppedFrames: droppedFrames
        });

        if (droppedFPS > 0) {
          // logger.log('checkFPS : droppedFPS/decodedFPS:' + droppedFPS/(1000 * currentDecoded / currentPeriod));
          if (currentDropped > hls.config.fpsDroppedMonitoringThreshold * currentDecoded) {
            var currentLevel = hls.currentLevel;
            logger["logger"].warn('drop FPS ratio greater than max allowed value for currentLevel: ' + currentLevel);

            if (currentLevel > 0 && (hls.autoLevelCapping === -1 || hls.autoLevelCapping >= currentLevel)) {
              currentLevel = currentLevel - 1;
              hls.trigger(events["default"].FPS_DROP_LEVEL_CAPPING, {
                level: currentLevel,
                droppedLevel: hls.currentLevel
              });
              hls.autoLevelCapping = currentLevel;
              hls.streamController.nextLevelSwitch();
            }
          }
        }
      }

      this.lastTime = currentTime;
      this.lastDroppedFrames = droppedFrames;
      this.lastDecodedFrames = decodedFrames;
    }
  };

  _proto.checkFPSInterval = function checkFPSInterval() {
    var video = this.video;

    if (video) {
      if (this.isVideoPlaybackQualityAvailable) {
        var videoPlaybackQuality = video.getVideoPlaybackQuality();
        this.checkFPS(video, videoPlaybackQuality.totalVideoFrames, videoPlaybackQuality.droppedVideoFrames);
      } else {
        this.checkFPS(video, video.webkitDecodedFrameCount, video.webkitDroppedFrameCount);
      }
    }
  };

  return FPSController;
}(event_handler);

/* harmony default export */ var fps_controller = (fps_controller_FPSController);
// CONCATENATED MODULE: ./src/utils/xhr-loader.js
/**
 * XHR based logger
*/


var xhr_loader_XhrLoader = /*#__PURE__*/function () {
  function XhrLoader(config) {
    if (config && config.xhrSetup) {
      this.xhrSetup = config.xhrSetup;
    }
  }

  var _proto = XhrLoader.prototype;

  _proto.destroy = function destroy() {
    this.abort();
    this.loader = null;
  };

  _proto.abort = function abort() {
    var loader = this.loader;

    if (loader && loader.readyState !== 4) {
      this.stats.aborted = true;
      loader.abort();
    }

    window.clearTimeout(this.requestTimeout);
    this.requestTimeout = null;
    window.clearTimeout(this.retryTimeout);
    this.retryTimeout = null;
  };

  _proto.load = function load(context, config, callbacks) {
    this.context = context;
    this.config = config;
    this.callbacks = callbacks;
    this.stats = {
      trequest: window.performance.now(),
      retry: 0
    };
    this.retryDelay = config.retryDelay;
    this.loadInternal();
  };

  _proto.loadInternal = function loadInternal() {
    var xhr,
        context = this.context;
    xhr = this.loader = new window.XMLHttpRequest();
    var stats = this.stats;
    stats.tfirst = 0;
    stats.loaded = 0;
    var xhrSetup = this.xhrSetup;

    try {
      if (xhrSetup) {
        try {
          xhrSetup(xhr, context.url);
        } catch (e) {
          // fix xhrSetup: (xhr, url) => {xhr.setRequestHeader("Content-Language", "test");}
          // not working, as xhr.setRequestHeader expects xhr.readyState === OPEN
          xhr.open('GET', context.url, true);
          xhrSetup(xhr, context.url);
        }
      }

      if (!xhr.readyState) {
        xhr.open('GET', context.url, true);
      }
    } catch (e) {
      // IE11 throws an exception on xhr.open if attempting to access an HTTP resource over HTTPS
      this.callbacks.onError({
        code: xhr.status,
        text: e.message
      }, context, xhr);
      return;
    }

    if (context.rangeEnd) {
      xhr.setRequestHeader('Range', 'bytes=' + context.rangeStart + '-' + (context.rangeEnd - 1));
    }

    xhr.onreadystatechange = this.readystatechange.bind(this);
    xhr.onprogress = this.loadprogress.bind(this);
    xhr.responseType = context.responseType; // setup timeout before we perform request

    this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), this.config.timeout);
    xhr.send();
  };

  _proto.readystatechange = function readystatechange(event) {
    var xhr = event.currentTarget,
        readyState = xhr.readyState,
        stats = this.stats,
        context = this.context,
        config = this.config; // don't proceed if xhr has been aborted

    if (stats.aborted) {
      return;
    } // >= HEADERS_RECEIVED


    if (readyState >= 2) {
      // clear xhr timeout and rearm it if readyState less than 4
      window.clearTimeout(this.requestTimeout);

      if (stats.tfirst === 0) {
        stats.tfirst = Math.max(window.performance.now(), stats.trequest);
      }

      if (readyState === 4) {
        var status = xhr.status; // http status between 200 to 299 are all successful

        if (status >= 200 && status < 300) {
          stats.tload = Math.max(stats.tfirst, window.performance.now());
          var data, len;

          if (context.responseType === 'arraybuffer') {
            data = xhr.response;
            len = data.byteLength;
          } else {
            data = xhr.responseText;
            len = data.length;
          }

          stats.loaded = stats.total = len;
          var response = {
            url: xhr.responseURL,
            data: data
          };
          this.callbacks.onSuccess(response, stats, context, xhr);
        } else {
          // if max nb of retries reached or if http status between 400 and 499 (such error cannot be recovered, retrying is useless), return error
          if (stats.retry >= config.maxRetry || status >= 400 && status < 499) {
            logger["logger"].error(status + " while loading " + context.url);
            this.callbacks.onError({
              code: status,
              text: xhr.statusText
            }, context, xhr);
          } else {
            // retry
            logger["logger"].warn(status + " while loading " + context.url + ", retrying in " + this.retryDelay + "..."); // aborts and resets internal state

            this.destroy(); // schedule retry

            this.retryTimeout = window.setTimeout(this.loadInternal.bind(this), this.retryDelay); // set exponential backoff

            this.retryDelay = Math.min(2 * this.retryDelay, config.maxRetryDelay);
            stats.retry++;
          }
        }
      } else {
        // readyState >= 2 AND readyState !==4 (readyState = HEADERS_RECEIVED || LOADING) rearm timeout as xhr not finished yet
        this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), config.timeout);
      }
    }
  };

  _proto.loadtimeout = function loadtimeout() {
    logger["logger"].warn("timeout while loading " + this.context.url);
    this.callbacks.onTimeout(this.stats, this.context, null);
  };

  _proto.loadprogress = function loadprogress(event) {
    var xhr = event.currentTarget,
        stats = this.stats;
    stats.loaded = event.loaded;

    if (event.lengthComputable) {
      stats.total = event.total;
    }

    var onProgress = this.callbacks.onProgress;

    if (onProgress) {
      // third arg is to provide on progress data
      onProgress(stats, this.context, null, xhr);
    }
  };

  return XhrLoader;
}();

/* harmony default export */ var xhr_loader = (xhr_loader_XhrLoader);
// CONCATENATED MODULE: ./src/controller/audio-track-controller.js
function audio_track_controller_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function audio_track_controller_createClass(Constructor, protoProps, staticProps) { if (protoProps) audio_track_controller_defineProperties(Constructor.prototype, protoProps); if (staticProps) audio_track_controller_defineProperties(Constructor, staticProps); return Constructor; }

function audio_track_controller_inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }





/**
 * @class AudioTrackController
 * @implements {EventHandler}
 *
 * Handles main manifest and audio-track metadata loaded,
 * owns and exposes the selectable audio-tracks data-models.
 *
 * Exposes internal interface to select available audio-tracks.
 *
 * Handles errors on loading audio-track playlists. Manages fallback mechanism
 * with redundants tracks (group-IDs).
 *
 * Handles level-loading and group-ID switches for video (fallback on video levels),
 * and eventually adapts the audio-track group-ID to match.
 *
 * @fires AUDIO_TRACK_LOADING
 * @fires AUDIO_TRACK_SWITCHING
 * @fires AUDIO_TRACKS_UPDATED
 * @fires ERROR
 *
 */

var audio_track_controller_AudioTrackController = /*#__PURE__*/function (_TaskLoop) {
  audio_track_controller_inheritsLoose(AudioTrackController, _TaskLoop);

  function AudioTrackController(hls) {
    var _this;

    _this = _TaskLoop.call(this, hls, events["default"].MANIFEST_LOADING, events["default"].MANIFEST_PARSED, events["default"].AUDIO_TRACK_LOADED, events["default"].AUDIO_TRACK_SWITCHED, events["default"].LEVEL_LOADED, events["default"].ERROR) || this;
    /**
     * @private
     * Currently selected index in `tracks`
     * @member {number} trackId
     */

    _this._trackId = -1;
    /**
     * @private
     * If should select tracks according to default track attribute
     * @member {boolean} _selectDefaultTrack
     */

    _this._selectDefaultTrack = true;
    /**
     * @public
     * All tracks available
     * @member {AudioTrack[]}
     */

    _this.tracks = [];
    /**
     * @public
     * List of blacklisted audio track IDs (that have caused failure)
     * @member {number[]}
     */

    _this.trackIdBlacklist = Object.create(null);
    /**
     * @public
     * The currently running group ID for audio
     * (we grab this on manifest-parsed and new level-loaded)
     * @member {string}
     */

    _this.audioGroupId = null;
    return _this;
  }
  /**
   * Reset audio tracks on new manifest loading.
   */


  var _proto = AudioTrackController.prototype;

  _proto.onManifestLoading = function onManifestLoading() {
    this.tracks = [];
    this._trackId = -1;
    this._selectDefaultTrack = true;
  }
  /**
   * Store tracks data from manifest parsed data.
   *
   * Trigger AUDIO_TRACKS_UPDATED event.
   *
   * @param {*} data
   */
  ;

  _proto.onManifestParsed = function onManifestParsed(data) {
    var tracks = this.tracks = data.audioTracks || [];
    this.hls.trigger(events["default"].AUDIO_TRACKS_UPDATED, {
      audioTracks: tracks
    });

    this._selectAudioGroup(this.hls.nextLoadLevel);
  }
  /**
   * Store track details of loaded track in our data-model.
   *
   * Set-up metadata update interval task for live-mode streams.
   *
   * @param {*} data
   */
  ;

  _proto.onAudioTrackLoaded = function onAudioTrackLoaded(data) {
    if (data.id >= this.tracks.length) {
      logger["logger"].warn('Invalid audio track id:', data.id);
      return;
    }

    logger["logger"].log("audioTrack " + data.id + " loaded");
    this.tracks[data.id].details = data.details; // check if current playlist is a live playlist
    // and if we have already our reload interval setup

    if (data.details.live && !this.hasInterval()) {
      // if live playlist we will have to reload it periodically
      // set reload period to playlist target duration
      var updatePeriodMs = data.details.targetduration * 1000;
      this.setInterval(updatePeriodMs);
    }

    if (!data.details.live && this.hasInterval()) {
      // playlist is not live and timer is scheduled: cancel it
      this.clearInterval();
    }
  }
  /**
   * Update the internal group ID to any audio-track we may have set manually
   * or because of a failure-handling fallback.
   *
   * Quality-levels should update to that group ID in this case.
   *
   * @param {*} data
   */
  ;

  _proto.onAudioTrackSwitched = function onAudioTrackSwitched(data) {
    var audioGroupId = this.tracks[data.id].groupId;

    if (audioGroupId && this.audioGroupId !== audioGroupId) {
      this.audioGroupId = audioGroupId;
    }
  }
  /**
   * When a level gets loaded, if it has redundant audioGroupIds (in the same ordinality as it's redundant URLs)
   * we are setting our audio-group ID internally to the one set, if it is different from the group ID currently set.
   *
   * If group-ID got update, we re-select the appropriate audio-track with this group-ID matching the currently
   * selected one (based on NAME property).
   *
   * @param {*} data
   */
  ;

  _proto.onLevelLoaded = function onLevelLoaded(data) {
    this._selectAudioGroup(data.level);
  }
  /**
   * Handle network errors loading audio track manifests
   * and also pausing on any netwok errors.
   *
   * @param {ErrorEventData} data
   */
  ;

  _proto.onError = function onError(data) {
    // Only handle network errors
    if (data.type !== errors["ErrorTypes"].NETWORK_ERROR) {
      return;
    } // If fatal network error, cancel update task


    if (data.fatal) {
      this.clearInterval();
    } // If not an audio-track loading error don't handle further


    if (data.details !== errors["ErrorDetails"].AUDIO_TRACK_LOAD_ERROR) {
      return;
    }

    logger["logger"].warn('Network failure on audio-track id:', data.context.id);

    this._handleLoadError();
  }
  /**
   * @type {AudioTrack[]} Audio-track list we own
   */
  ;

  /**
   * @private
   * @param {number} newId
   */
  _proto._setAudioTrack = function _setAudioTrack(newId) {
    // noop on same audio track id as already set
    if (this._trackId === newId && this.tracks[this._trackId].details) {
      logger["logger"].debug('Same id as current audio-track passed, and track details available -> no-op');
      return;
    } // check if level idx is valid


    if (newId < 0 || newId >= this.tracks.length) {
      logger["logger"].warn('Invalid id passed to audio-track controller');
      return;
    }

    var audioTrack = this.tracks[newId];
    logger["logger"].log("Now switching to audio-track index " + newId); // stopping live reloading timer if any

    this.clearInterval();
    this._trackId = newId;
    var url = audioTrack.url,
        type = audioTrack.type,
        id = audioTrack.id;
    this.hls.trigger(events["default"].AUDIO_TRACK_SWITCHING, {
      id: id,
      type: type,
      url: url
    });

    this._loadTrackDetailsIfNeeded(audioTrack);
  }
  /**
   * @override
   */
  ;

  _proto.doTick = function doTick() {
    this._updateTrack(this._trackId);
  }
  /**
   * @param levelId
   * @private
   */
  ;

  _proto._selectAudioGroup = function _selectAudioGroup(levelId) {
    var levelInfo = this.hls.levels[levelId];

    if (!levelInfo || !levelInfo.audioGroupIds) {
      return;
    }

    var audioGroupId = levelInfo.audioGroupIds[levelInfo.urlId];

    if (this.audioGroupId !== audioGroupId) {
      this.audioGroupId = audioGroupId;

      this._selectInitialAudioTrack();
    }
  }
  /**
   * Select initial track
   * @private
   */
  ;

  _proto._selectInitialAudioTrack = function _selectInitialAudioTrack() {
    var _this2 = this;

    var tracks = this.tracks;

    if (!tracks.length) {
      return;
    }

    var currentAudioTrack = this.tracks[this._trackId];
    var name = null;

    if (currentAudioTrack) {
      name = currentAudioTrack.name;
    } // Pre-select default tracks if there are any


    if (this._selectDefaultTrack) {
      var defaultTracks = tracks.filter(function (track) {
        return track.default;
      });

      if (defaultTracks.length) {
        tracks = defaultTracks;
      } else {
        logger["logger"].warn('No default audio tracks defined');
      }
    }

    var trackFound = false;

    var traverseTracks = function traverseTracks() {
      // Select track with right group ID
      tracks.forEach(function (track) {
        if (trackFound) {
          return;
        } // We need to match the (pre-)selected group ID
        // and the NAME of the current track.


        if ((!_this2.audioGroupId || track.groupId === _this2.audioGroupId) && (!name || name === track.name)) {
          // If there was a previous track try to stay with the same `NAME`.
          // It should be unique across tracks of same group, and consistent through redundant track groups.
          _this2._setAudioTrack(track.id);

          trackFound = true;
        }
      });
    };

    traverseTracks();

    if (!trackFound) {
      name = null;
      traverseTracks();
    }

    if (!trackFound) {
      logger["logger"].error("No track found for running audio group-ID: " + this.audioGroupId);
      this.hls.trigger(events["default"].ERROR, {
        type: errors["ErrorTypes"].MEDIA_ERROR,
        details: errors["ErrorDetails"].AUDIO_TRACK_LOAD_ERROR,
        fatal: true
      });
    }
  }
  /**
   * @private
   * @param {AudioTrack} audioTrack
   * @returns {boolean}
   */
  ;

  _proto._needsTrackLoading = function _needsTrackLoading(audioTrack) {
    var details = audioTrack.details,
        url = audioTrack.url;

    if (!details || details.live) {
      // check if we face an audio track embedded in main playlist (audio track without URI attribute)
      return !!url;
    }

    return false;
  }
  /**
   * @private
   * @param {AudioTrack} audioTrack
   */
  ;

  _proto._loadTrackDetailsIfNeeded = function _loadTrackDetailsIfNeeded(audioTrack) {
    if (this._needsTrackLoading(audioTrack)) {
      var url = audioTrack.url,
          id = audioTrack.id; // track not retrieved yet, or live playlist we need to (re)load it

      logger["logger"].log("loading audio-track playlist for id: " + id);
      this.hls.trigger(events["default"].AUDIO_TRACK_LOADING, {
        url: url,
        id: id
      });
    }
  }
  /**
   * @private
   * @param {number} newId
   */
  ;

  _proto._updateTrack = function _updateTrack(newId) {
    // check if level idx is valid
    if (newId < 0 || newId >= this.tracks.length) {
      return;
    } // stopping live reloading timer if any


    this.clearInterval();
    this._trackId = newId;
    logger["logger"].log("trying to update audio-track " + newId);
    var audioTrack = this.tracks[newId];

    this._loadTrackDetailsIfNeeded(audioTrack);
  }
  /**
   * @private
   */
  ;

  _proto._handleLoadError = function _handleLoadError() {
    // First, let's black list current track id
    this.trackIdBlacklist[this._trackId] = true; // Let's try to fall back on a functional audio-track with the same group ID

    var previousId = this._trackId;
    var _this$tracks$previous = this.tracks[previousId],
        name = _this$tracks$previous.name,
        language = _this$tracks$previous.language,
        groupId = _this$tracks$previous.groupId;
    logger["logger"].warn("Loading failed on audio track id: " + previousId + ", group-id: " + groupId + ", name/language: \"" + name + "\" / \"" + language + "\""); // Find a non-blacklisted track ID with the same NAME
    // At least a track that is not blacklisted, thus on another group-ID.

    var newId = previousId;

    for (var i = 0; i < this.tracks.length; i++) {
      if (this.trackIdBlacklist[i]) {
        continue;
      }

      var newTrack = this.tracks[i];

      if (newTrack.name === name) {
        newId = i;
        break;
      }
    }

    if (newId === previousId) {
      logger["logger"].warn("No fallback audio-track found for name/language: \"" + name + "\" / \"" + language + "\"");
      return;
    }

    logger["logger"].log('Attempting audio-track fallback id:', newId, 'group-id:', this.tracks[newId].groupId);

    this._setAudioTrack(newId);
  };

  audio_track_controller_createClass(AudioTrackController, [{
    key: "audioTracks",
    get: function get() {
      return this.tracks;
    }
    /**
     * @type {number} Index into audio-tracks list of currently selected track.
     */

  }, {
    key: "audioTrack",
    get: function get() {
      return this._trackId;
    }
    /**
     * Select current track by index
     */
    ,
    set: function set(newId) {
      this._setAudioTrack(newId); // If audio track is selected from API then don't choose from the manifest default track


      this._selectDefaultTrack = false;
    }
  }]);

  return AudioTrackController;
}(TaskLoop);

/* harmony default export */ var audio_track_controller = (audio_track_controller_AudioTrackController);
// CONCATENATED MODULE: ./src/controller/audio-stream-controller.js




function audio_stream_controller_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function audio_stream_controller_createClass(Constructor, protoProps, staticProps) { if (protoProps) audio_stream_controller_defineProperties(Constructor.prototype, protoProps); if (staticProps) audio_stream_controller_defineProperties(Constructor, staticProps); return Constructor; }

function audio_stream_controller_inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/*
 * Audio Stream Controller
*/














var audio_stream_controller_window = window,
    audio_stream_controller_performance = audio_stream_controller_window.performance;
var audio_stream_controller_TICK_INTERVAL = 100; // how often to tick in ms

var audio_stream_controller_AudioStreamController = /*#__PURE__*/function (_BaseStreamController) {
  audio_stream_controller_inheritsLoose(AudioStreamController, _BaseStreamController);

  function AudioStreamController(hls, fragmentTracker) {
    var _this;

    _this = _BaseStreamController.call(this, hls, events["default"].MEDIA_ATTACHED, events["default"].MEDIA_DETACHING, events["default"].AUDIO_TRACKS_UPDATED, events["default"].AUDIO_TRACK_SWITCHING, events["default"].AUDIO_TRACK_LOADED, events["default"].KEY_LOADED, events["default"].FRAG_LOADED, events["default"].FRAG_PARSING_INIT_SEGMENT, events["default"].FRAG_PARSING_DATA, events["default"].FRAG_PARSED, events["default"].ERROR, events["default"].BUFFER_RESET, events["default"].BUFFER_CREATED, events["default"].BUFFER_APPENDED, events["default"].BUFFER_FLUSHED, events["default"].INIT_PTS_FOUND) || this;
    _this.fragmentTracker = fragmentTracker;
    _this.config = hls.config;
    _this.audioCodecSwap = false;
    _this._state = State.STOPPED;
    _this.initPTS = [];
    _this.waitingFragment = null;
    _this.videoTrackCC = null;
    _this.waitingVideoCC = null;
    return _this;
  } // Signal that video PTS was found


  var _proto = AudioStreamController.prototype;

  _proto.onInitPtsFound = function onInitPtsFound(data) {
    var demuxerId = data.id,
        cc = data.frag.cc,
        initPTS = data.initPTS;

    if (demuxerId === 'main') {
      // Always update the new INIT PTS
      // Can change due level switch
      this.initPTS[cc] = initPTS;
      this.videoTrackCC = cc;
      logger["logger"].log("InitPTS for cc: " + cc + " found from main: " + initPTS); // If we are waiting we need to demux/remux the waiting frag
      // With the new initPTS

      if (this.state === State.WAITING_INIT_PTS) {
        this.tick();
      }
    }
  };

  _proto.startLoad = function startLoad(startPosition) {
    if (this.tracks) {
      var lastCurrentTime = this.lastCurrentTime;
      this.stopLoad();
      this.setInterval(audio_stream_controller_TICK_INTERVAL);
      this.fragLoadError = 0;

      if (lastCurrentTime > 0 && startPosition === -1) {
        logger["logger"].log("audio:override startPosition with lastCurrentTime @" + lastCurrentTime.toFixed(3));
        this.state = State.IDLE;
      } else {
        this.lastCurrentTime = this.startPosition ? this.startPosition : startPosition;
        this.state = State.STARTING;
      }

      this.nextLoadPosition = this.startPosition = this.lastCurrentTime;
      this.tick();
    } else {
      this.startPosition = startPosition;
      this.state = State.STOPPED;
    }
  };

  _proto.doTick = function doTick() {
    var pos,
        track,
        trackDetails,
        hls = this.hls,
        config = hls.config; // logger.log('audioStream:' + this.state);

    switch (this.state) {
      case State.ERROR: // don't do anything in error state to avoid breaking further ...

      case State.PAUSED: // don't do anything in paused state either ...

      case State.BUFFER_FLUSHING:
        break;

      case State.STARTING:
        this.state = State.WAITING_TRACK;
        this.loadedmetadata = false;
        break;

      case State.IDLE:
        var tracks = this.tracks; // audio tracks not received => exit loop

        if (!tracks) {
          break;
        } // if video not attached AND
        // start fragment already requested OR start frag prefetch disable
        // exit loop
        // => if media not attached but start frag prefetch is enabled and start frag not requested yet, we will not exit loop


        if (!this.media && (this.startFragRequested || !config.startFragPrefetch)) {
          break;
        } // determine next candidate fragment to be loaded, based on current position and
        //  end of buffer position
        // if we have not yet loaded any fragment, start loading from start position


        if (this.loadedmetadata) {
          pos = this.media.currentTime;
        } else {
          pos = this.nextLoadPosition;

          if (pos === undefined) {
            break;
          }
        }

        var media = this.mediaBuffer ? this.mediaBuffer : this.media;
        var videoBuffer = this.videoBuffer ? this.videoBuffer : this.media;
        var maxBufferHole = pos < config.maxBufferHole ? Math.max(MAX_START_GAP_JUMP, config.maxBufferHole) : config.maxBufferHole;
        var bufferInfo = BufferHelper.bufferInfo(media, pos, maxBufferHole);
        var mainBufferInfo = BufferHelper.bufferInfo(videoBuffer, pos, maxBufferHole);
        var bufferLen = bufferInfo.len;
        var bufferEnd = bufferInfo.end;
        var fragPrevious = this.fragPrevious; // ensure we buffer at least config.maxBufferLength (default 30s) or config.maxMaxBufferLength (default: 600s)
        // whichever is smaller.
        // once we reach that threshold, don't buffer more than video (mainBufferInfo.len)

        var maxConfigBuffer = Math.min(config.maxBufferLength, config.maxMaxBufferLength);
        var maxBufLen = Math.max(maxConfigBuffer, mainBufferInfo.len);
        var audioSwitch = this.audioSwitch;
        var trackId = this.trackId; // if buffer length is less than maxBufLen try to load a new fragment

        if ((bufferLen < maxBufLen || audioSwitch) && trackId < tracks.length) {
          trackDetails = tracks[trackId].details; // if track info not retrieved yet, switch state and wait for track retrieval

          if (typeof trackDetails === 'undefined') {
            this.state = State.WAITING_TRACK;
            break;
          }

          if (!audioSwitch && this._streamEnded(bufferInfo, trackDetails)) {
            this.hls.trigger(events["default"].BUFFER_EOS, {
              type: 'audio'
            });
            this.state = State.ENDED;
            return;
          } // find fragment index, contiguous with end of buffer position


          var fragments = trackDetails.fragments,
              fragLen = fragments.length,
              start = fragments[0].start,
              end = fragments[fragLen - 1].start + fragments[fragLen - 1].duration,
              frag; // When switching audio track, reload audio as close as possible to currentTime

          if (audioSwitch) {
            if (trackDetails.live && !trackDetails.PTSKnown) {
              logger["logger"].log('switching audiotrack, live stream, unknown PTS,load first fragment');
              bufferEnd = 0;
            } else {
              bufferEnd = pos; // if currentTime (pos) is less than alt audio playlist start time, it means that alt audio is ahead of currentTime

              if (trackDetails.PTSKnown && pos < start) {
                // if everything is buffered from pos to start or if audio buffer upfront, let's seek to start
                if (bufferInfo.end > start || bufferInfo.nextStart) {
                  logger["logger"].log('alt audio track ahead of main track, seek to start of alt audio track');
                  this.media.currentTime = start + 0.05;
                } else {
                  return;
                }
              }
            }
          }

          if (trackDetails.initSegment && !trackDetails.initSegment.data) {
            frag = trackDetails.initSegment;
          } // eslint-disable-line brace-style
          // if bufferEnd before start of playlist, load first fragment
          else if (bufferEnd <= start) {
              frag = fragments[0];

              if (this.videoTrackCC !== null && frag.cc !== this.videoTrackCC) {
                // Ensure we find a fragment which matches the continuity of the video track
                frag = findFragWithCC(fragments, this.videoTrackCC);
              }

              if (trackDetails.live && frag.loadIdx && frag.loadIdx === this.fragLoadIdx) {
                // we just loaded this first fragment, and we are still lagging behind the start of the live playlist
                // let's force seek to start
                var nextBuffered = bufferInfo.nextStart ? bufferInfo.nextStart : start;
                logger["logger"].log("no alt audio available @currentTime:" + this.media.currentTime + ", seeking @" + (nextBuffered + 0.05));
                this.media.currentTime = nextBuffered + 0.05;
                return;
              }
            } else {
              var foundFrag;
              var maxFragLookUpTolerance = config.maxFragLookUpTolerance;
              var fragNext = fragPrevious ? fragments[fragPrevious.sn - fragments[0].sn + 1] : undefined;

              if (bufferEnd < end) {
                if (bufferEnd > end - maxFragLookUpTolerance) {
                  maxFragLookUpTolerance = 0;
                } // Prefer the next fragment if it's within tolerance


                if (fragNext && !fragmentWithinToleranceTest(bufferEnd, maxFragLookUpTolerance, fragNext)) {
                  foundFrag = fragNext;
                } else {
                  foundFrag = binary_search.search(fragments, function (frag) {
                    return fragmentWithinToleranceTest(bufferEnd, maxFragLookUpTolerance, frag);
                  });
                }
              } else {
                // reach end of playlist
                foundFrag = fragments[fragLen - 1];
              }

              if (foundFrag) {
                frag = foundFrag;
                start = foundFrag.start; // logger.log('find SN matching with pos:' +  bufferEnd + ':' + frag.sn);

                if (fragPrevious && frag.level === fragPrevious.level && frag.sn === fragPrevious.sn) {
                  if (frag.sn < trackDetails.endSN) {
                    frag = fragments[frag.sn + 1 - trackDetails.startSN];

                    if (this.fragmentTracker.getState(frag) !== FragmentState.OK) {
                      logger["logger"].log("SN just loaded, load next one: " + frag.sn);
                    }
                  } else {
                    frag = null;
                  }
                }
              }
            }

          if (frag) {
            // logger.log('      loading frag ' + i +',pos/bufEnd:' + pos.toFixed(3) + '/' + bufferEnd.toFixed(3));
            if (frag.encrypted) {
              logger["logger"].log("Loading key for " + frag.sn + " of [" + trackDetails.startSN + " ," + trackDetails.endSN + "],track " + trackId);
              this.state = State.KEY_LOADING;
              hls.trigger(events["default"].KEY_LOADING, {
                frag: frag
              });
            } else {
              // only load if fragment is not loaded or if in audio switch
              // we force a frag loading in audio switch as fragment tracker might not have evicted previous frags in case of quick audio switch
              this.fragCurrent = frag;

              if (audioSwitch || this.fragmentTracker.getState(frag) === FragmentState.NOT_LOADED) {
                logger["logger"].log("Loading " + frag.sn + ", cc: " + frag.cc + " of [" + trackDetails.startSN + " ," + trackDetails.endSN + "],track " + trackId + ", " + (this.loadedmetadata ? 'currentTime' : 'nextLoadPosition') + ": " + pos + ", bufferEnd: " + bufferEnd.toFixed(3));

                if (frag.sn !== 'initSegment') {
                  this.startFragRequested = true;
                }

                if (Object(number["isFiniteNumber"])(frag.sn)) {
                  this.nextLoadPosition = frag.start + frag.duration;
                }

                hls.trigger(events["default"].FRAG_LOADING, {
                  frag: frag
                });
                this.state = State.FRAG_LOADING;
              }
            }
          }
        }

        break;

      case State.WAITING_TRACK:
        track = this.tracks[this.trackId]; // check if playlist is already loaded

        if (track && track.details) {
          this.state = State.IDLE;
        }

        break;

      case State.FRAG_LOADING_WAITING_RETRY:
        var now = audio_stream_controller_performance.now();
        var retryDate = this.retryDate;
        media = this.media;
        var isSeeking = media && media.seeking; // if current time is gt than retryDate, or if media seeking let's switch to IDLE state to retry loading

        if (!retryDate || now >= retryDate || isSeeking) {
          logger["logger"].log('audioStreamController: retryDate reached, switch back to IDLE state');
          this.state = State.IDLE;
        }

        break;

      case State.WAITING_INIT_PTS:
        // Ensure we don't get stuck in the WAITING_INIT_PTS state if the waiting frag CC doesn't match any initPTS
        var waitingFrag = this.waitingFragment;

        if (waitingFrag) {
          var waitingFragCC = waitingFrag.frag.cc;

          if (this.initPTS[waitingFragCC] !== undefined) {
            this.waitingFragment = null;
            this.state = State.FRAG_LOADING;
            this.onFragLoaded(waitingFrag);
          } else if (this.videoTrackCC !== this.waitingVideoCC) {
            // Drop waiting fragment if videoTrackCC has changed since waitingFragment was set and initPTS was not found
            logger["logger"].log("Waiting fragment cc (" + waitingFragCC + ") cancelled because video is at cc " + this.videoTrackCC);
            this.clearWaitingFragment();
          } else {
            // Drop waiting fragment if an earlier fragment is needed
            var _bufferInfo = BufferHelper.bufferInfo(this.mediaBuffer, this.media.currentTime, config.maxBufferHole);

            var waitingFragmentAtPosition = fragmentWithinToleranceTest(_bufferInfo.end, config.maxFragLookUpTolerance, waitingFrag.frag);

            if (waitingFragmentAtPosition < 0) {
              logger["logger"].log("Waiting fragment cc (" + waitingFragCC + ") @ " + waitingFrag.frag.start + " cancelled because another fragment at " + _bufferInfo.end + " is needed");
              this.clearWaitingFragment();
            }
          }
        } else {
          this.state = State.IDLE;
        }

        break;

      case State.STOPPED:
      case State.FRAG_LOADING:
      case State.PARSING:
      case State.PARSED:
      case State.ENDED:
        break;

      default:
        break;
    }
  };

  _proto.clearWaitingFragment = function clearWaitingFragment() {
    var waitingFrag = this.waitingFragment;

    if (waitingFrag) {
      this.fragmentTracker.removeFragment(waitingFrag.frag);
      this.waitingFragment = null;
      this.waitingVideoCC = null;
      this.state = State.IDLE;
    }
  };

  _proto.onMediaAttached = function onMediaAttached(data) {
    var media = this.media = this.mediaBuffer = data.media;
    this.onvseeking = this.onMediaSeeking.bind(this);
    this.onvended = this.onMediaEnded.bind(this);
    media.addEventListener('seeking', this.onvseeking);
    media.addEventListener('ended', this.onvended);
    var config = this.config;

    if (this.tracks && config.autoStartLoad) {
      this.startLoad(config.startPosition);
    }
  };

  _proto.onMediaDetaching = function onMediaDetaching() {
    var media = this.media;

    if (media && media.ended) {
      logger["logger"].log('MSE detaching and video ended, reset startPosition');
      this.startPosition = this.lastCurrentTime = 0;
    } // remove video listeners


    if (media) {
      media.removeEventListener('seeking', this.onvseeking);
      media.removeEventListener('ended', this.onvended);
      this.onvseeking = this.onvseeked = this.onvended = null;
    }

    this.media = this.mediaBuffer = this.videoBuffer = null;
    this.loadedmetadata = false;
    this.fragmentTracker.removeAllFragments();
    this.stopLoad();
  };

  _proto.onAudioTracksUpdated = function onAudioTracksUpdated(data) {
    logger["logger"].log('audio tracks updated');
    this.tracks = data.audioTracks;
  };

  _proto.onAudioTrackSwitching = function onAudioTrackSwitching(data) {
    // if any URL found on new audio track, it is an alternate audio track
    var altAudio = !!data.url;
    this.trackId = data.id;
    this.fragCurrent = null;
    this.clearWaitingFragment();
    this.state = State.PAUSED; // destroy useless demuxer when switching audio to main

    if (!altAudio) {
      if (this.demuxer) {
        this.demuxer.destroy();
        this.demuxer = null;
      }
    } else {
      // switching to audio track, start timer if not already started
      this.setInterval(audio_stream_controller_TICK_INTERVAL);
    } // should we switch tracks ?


    if (altAudio) {
      this.audioSwitch = true; // main audio track are handled by stream-controller, just do something if switching to alt audio track

      this.state = State.IDLE;
    }

    this.tick();
  };

  _proto.onAudioTrackLoaded = function onAudioTrackLoaded(data) {
    var newDetails = data.details,
        trackId = data.id,
        track = this.tracks[trackId],
        curDetails = track.details,
        duration = newDetails.totalduration,
        sliding = 0;
    logger["logger"].log("track " + trackId + " loaded [" + newDetails.startSN + "," + newDetails.endSN + "],duration:" + duration);

    if (newDetails.live || curDetails && curDetails.live) {
      if (curDetails && newDetails.fragments.length > 0) {
        // we already have details for that level, merge them
        mergeDetails(curDetails, newDetails);
        sliding = newDetails.fragments[0].start; // TODO
        // this.liveSyncPosition = this.computeLivePosition(sliding, curDetails);

        if (newDetails.PTSKnown) {
          logger["logger"].log("live audio playlist sliding:" + sliding.toFixed(3));
        } else {
          logger["logger"].log('live audio playlist - outdated PTS, unknown sliding');
        }
      } else {
        newDetails.PTSKnown = false;
        logger["logger"].log('live audio playlist - first load, unknown sliding');
      }
    } else {
      newDetails.PTSKnown = false;
    }

    track.details = newDetails; // compute start position

    if (!this.startFragRequested) {
      // compute start position if set to -1. use it straight away if value is defined
      if (this.startPosition === -1) {
        // first, check if start time offset has been set in playlist, if yes, use this value
        var startTimeOffset = newDetails.startTimeOffset;

        if (Object(number["isFiniteNumber"])(startTimeOffset)) {
          logger["logger"].log("start time offset found in playlist, adjust startPosition to " + startTimeOffset);
          this.startPosition = startTimeOffset;
        } else {
          if (newDetails.live) {
            this.startPosition = this.computeLivePosition(sliding, newDetails);
            logger["logger"].log("compute startPosition for audio-track to " + this.startPosition);
          } else {
            this.startPosition = 0;
          }
        }
      }

      this.nextLoadPosition = this.startPosition;
    } // only switch batck to IDLE state if we were waiting for track to start downloading a new fragment


    if (this.state === State.WAITING_TRACK) {
      this.state = State.IDLE;
    } // trigger handler right now


    this.tick();
  };

  _proto.onKeyLoaded = function onKeyLoaded() {
    if (this.state === State.KEY_LOADING) {
      this.state = State.IDLE;
      this.tick();
    }
  };

  _proto.onFragLoaded = function onFragLoaded(data) {
    var fragCurrent = this.fragCurrent,
        fragLoaded = data.frag;

    if (this.state === State.FRAG_LOADING && fragCurrent && fragLoaded.type === 'audio' && fragLoaded.level === fragCurrent.level && fragLoaded.sn === fragCurrent.sn) {
      var track = this.tracks[this.trackId],
          details = track.details,
          duration = details.totalduration,
          trackId = fragCurrent.level,
          sn = fragCurrent.sn,
          cc = fragCurrent.cc,
          audioCodec = this.config.defaultAudioCodec || track.audioCodec || 'mp4a.40.2',
          stats = this.stats = data.stats;

      if (sn === 'initSegment') {
        this.state = State.IDLE;
        stats.tparsed = stats.tbuffered = audio_stream_controller_performance.now();
        details.initSegment.data = data.payload;
        this.hls.trigger(events["default"].FRAG_BUFFERED, {
          stats: stats,
          frag: fragCurrent,
          id: 'audio'
        });
        this.tick();
      } else {
        this.state = State.PARSING; // transmux the MPEG-TS data to ISO-BMFF segments

        this.appended = false;

        if (!this.demuxer) {
          this.demuxer = new demux_demuxer(this.hls, 'audio');
        } // Check if we have video initPTS
        // If not we need to wait for it


        var initPTS = this.initPTS[cc];
        var initSegmentData = details.initSegment ? details.initSegment.data : [];

        if (initPTS !== undefined) {
          this.pendingBuffering = true;
          logger["logger"].log("Demuxing " + sn + " of [" + details.startSN + " ," + details.endSN + "],track " + trackId); // time Offset is accurate if level PTS is known, or if playlist is not sliding (not live)

          var accurateTimeOffset = false; // details.PTSKnown || !details.live;

          this.demuxer.push(data.payload, initSegmentData, audioCodec, null, fragCurrent, duration, accurateTimeOffset, initPTS);
        } else {
          logger["logger"].log("Unknown video PTS for cc " + cc + ", waiting for video PTS before demuxing audio frag " + sn + " of [" + details.startSN + " ," + details.endSN + "],track " + trackId);
          this.waitingFragment = data;
          this.waitingVideoCC = this.videoTrackCC;
          this.state = State.WAITING_INIT_PTS;
        }
      }
    }

    this.fragLoadError = 0;
  };

  _proto.onFragParsingInitSegment = function onFragParsingInitSegment(data) {
    var fragCurrent = this.fragCurrent;
    var fragNew = data.frag;

    if (fragCurrent && data.id === 'audio' && fragNew.sn === fragCurrent.sn && fragNew.level === fragCurrent.level && this.state === State.PARSING) {
      var tracks = data.tracks,
          track; // delete any video track found on audio demuxer

      if (tracks.video) {
        delete tracks.video;
      } // include levelCodec in audio and video tracks


      track = tracks.audio;

      if (track) {
        track.levelCodec = track.codec;
        track.id = data.id;
        this.hls.trigger(events["default"].BUFFER_CODECS, tracks);
        logger["logger"].log("audio track:audio,container:" + track.container + ",codecs[level/parsed]=[" + track.levelCodec + "/" + track.codec + "]");
        var initSegment = track.initSegment;

        if (initSegment) {
          var appendObj = {
            type: 'audio',
            data: initSegment,
            parent: 'audio',
            content: 'initSegment'
          };

          if (this.audioSwitch) {
            this.pendingData = [appendObj];
          } else {
            this.appended = true; // arm pending Buffering flag before appending a segment

            this.pendingBuffering = true;
            this.hls.trigger(events["default"].BUFFER_APPENDING, appendObj);
          }
        } // trigger handler right now


        this.tick();
      }
    }
  };

  _proto.onFragParsingData = function onFragParsingData(data) {
    var _this2 = this;

    var fragCurrent = this.fragCurrent;
    var fragNew = data.frag;

    if (fragCurrent && data.id === 'audio' && data.type === 'audio' && fragNew.sn === fragCurrent.sn && fragNew.level === fragCurrent.level && this.state === State.PARSING) {
      var trackId = this.trackId,
          track = this.tracks[trackId],
          hls = this.hls;

      if (!Object(number["isFiniteNumber"])(data.endPTS)) {
        data.endPTS = data.startPTS + fragCurrent.duration;
        data.endDTS = data.startDTS + fragCurrent.duration;
      }

      fragCurrent.addElementaryStream(ElementaryStreamTypes.AUDIO);
      logger["logger"].log("parsed " + data.type + ",PTS:[" + data.startPTS.toFixed(3) + "," + data.endPTS.toFixed(3) + "],DTS:[" + data.startDTS.toFixed(3) + "/" + data.endDTS.toFixed(3) + "],nb:" + data.nb);
      updateFragPTSDTS(track.details, fragCurrent, data.startPTS, data.endPTS);
      var media = this.media;
      var appendOnBufferFlush = false; // Only flush audio from old audio tracks when PTS is known on new audio track

      if (this.audioSwitch) {
        if (media && media.readyState) {
          var currentTime = media.currentTime;
          logger["logger"].log('switching audio track : currentTime:' + currentTime);

          if (currentTime >= data.startPTS) {
            logger["logger"].log('switching audio track : flushing all audio');
            this.state = State.BUFFER_FLUSHING;
            hls.trigger(events["default"].BUFFER_FLUSHING, {
              startOffset: 0,
              endOffset: Number.POSITIVE_INFINITY,
              type: 'audio'
            });
            appendOnBufferFlush = true; // Lets announce that the initial audio track switch flush occur

            this.audioSwitch = false;
            hls.trigger(events["default"].AUDIO_TRACK_SWITCHED, {
              id: trackId
            });
          }
        } else {
          // Lets announce that the initial audio track switch flush occur
          this.audioSwitch = false;
          hls.trigger(events["default"].AUDIO_TRACK_SWITCHED, {
            id: trackId
          });
        }
      }

      var pendingData = this.pendingData;

      if (!pendingData) {
        logger["logger"].warn('Apparently attempt to enqueue media payload without codec initialization data upfront');
        hls.trigger(events["default"].ERROR, {
          type: errors["ErrorTypes"].MEDIA_ERROR,
          details: null,
          fatal: true
        });
        return;
      }

      if (!this.audioSwitch) {
        [data.data1, data.data2].forEach(function (buffer) {
          if (buffer && buffer.length) {
            pendingData.push({
              type: data.type,
              data: buffer,
              parent: 'audio',
              content: 'data'
            });
          }
        });

        if (!appendOnBufferFlush && pendingData.length) {
          pendingData.forEach(function (appendObj) {
            // only append in PARSING state (rationale is that an appending error could happen synchronously on first segment appending)
            // in that case it is useless to append following segments
            if (_this2.state === State.PARSING) {
              // arm pending Buffering flag before appending a segment
              _this2.pendingBuffering = true;

              _this2.hls.trigger(events["default"].BUFFER_APPENDING, appendObj);
            }
          });
          this.pendingData = [];
          this.appended = true;
        }
      } // trigger handler right now


      this.tick();
    }
  };

  _proto.onFragParsed = function onFragParsed(data) {
    var fragCurrent = this.fragCurrent;
    var fragNew = data.frag;

    if (fragCurrent && data.id === 'audio' && fragNew.sn === fragCurrent.sn && fragNew.level === fragCurrent.level && this.state === State.PARSING) {
      this.stats.tparsed = audio_stream_controller_performance.now();
      this.state = State.PARSED;

      this._checkAppendedParsed();
    }
  };

  _proto.onBufferReset = function onBufferReset() {
    // reset reference to sourcebuffers
    this.mediaBuffer = this.videoBuffer = null;
    this.loadedmetadata = false;
  };

  _proto.onBufferCreated = function onBufferCreated(data) {
    var audioTrack = data.tracks.audio;

    if (audioTrack) {
      this.mediaBuffer = audioTrack.buffer;
      this.loadedmetadata = true;
    }

    if (data.tracks.video) {
      this.videoBuffer = data.tracks.video.buffer;
    }
  };

  _proto.onBufferAppended = function onBufferAppended(data) {
    if (data.parent === 'audio') {
      var state = this.state;

      if (state === State.PARSING || state === State.PARSED) {
        // check if all buffers have been appended
        this.pendingBuffering = data.pending > 0;

        this._checkAppendedParsed();
      }
    }
  };

  _proto._checkAppendedParsed = function _checkAppendedParsed() {
    // trigger handler right now
    if (this.state === State.PARSED && (!this.appended || !this.pendingBuffering)) {
      var frag = this.fragCurrent,
          stats = this.stats,
          hls = this.hls;

      if (frag) {
        this.fragPrevious = frag;
        stats.tbuffered = audio_stream_controller_performance.now();
        hls.trigger(events["default"].FRAG_BUFFERED, {
          stats: stats,
          frag: frag,
          id: 'audio'
        });
        var media = this.mediaBuffer ? this.mediaBuffer : this.media;

        if (media) {
          logger["logger"].log("audio buffered : " + time_ranges.toString(media.buffered));
        }

        if (this.audioSwitch && this.appended) {
          this.audioSwitch = false;
          hls.trigger(events["default"].AUDIO_TRACK_SWITCHED, {
            id: this.trackId
          });
        }

        this.state = State.IDLE;
      }

      this.tick();
    }
  };

  _proto.onError = function onError(data) {
    var frag = data.frag; // don't handle frag error not related to audio fragment

    if (frag && frag.type !== 'audio') {
      return;
    }

    switch (data.details) {
      case errors["ErrorDetails"].FRAG_LOAD_ERROR:
      case errors["ErrorDetails"].FRAG_LOAD_TIMEOUT:
        var _frag = data.frag; // don't handle frag error not related to audio fragment

        if (_frag && _frag.type !== 'audio') {
          break;
        }

        if (!data.fatal) {
          var loadError = this.fragLoadError;

          if (loadError) {
            loadError++;
          } else {
            loadError = 1;
          }

          var config = this.config;

          if (loadError <= config.fragLoadingMaxRetry) {
            this.fragLoadError = loadError; // exponential backoff capped to config.fragLoadingMaxRetryTimeout

            var delay = Math.min(Math.pow(2, loadError - 1) * config.fragLoadingRetryDelay, config.fragLoadingMaxRetryTimeout);
            logger["logger"].warn("AudioStreamController: frag loading failed, retry in " + delay + " ms");
            this.retryDate = audio_stream_controller_performance.now() + delay; // retry loading state

            this.state = State.FRAG_LOADING_WAITING_RETRY;
          } else {
            logger["logger"].error("AudioStreamController: " + data.details + " reaches max retry, redispatch as fatal ..."); // switch error to fatal

            data.fatal = true;
            this.state = State.ERROR;
          }
        }

        break;

      case errors["ErrorDetails"].AUDIO_TRACK_LOAD_ERROR:
      case errors["ErrorDetails"].AUDIO_TRACK_LOAD_TIMEOUT:
      case errors["ErrorDetails"].KEY_LOAD_ERROR:
      case errors["ErrorDetails"].KEY_LOAD_TIMEOUT:
        //  when in ERROR state, don't switch back to IDLE state in case a non-fatal error is received
        if (this.state !== State.ERROR) {
          // if fatal error, stop processing, otherwise move to IDLE to retry loading
          this.state = data.fatal ? State.ERROR : State.IDLE;
          logger["logger"].warn("AudioStreamController: " + data.details + " while loading frag, now switching to " + this.state + " state ...");
        }

        break;

      case errors["ErrorDetails"].BUFFER_FULL_ERROR:
        // if in appending state
        if (data.parent === 'audio' && (this.state === State.PARSING || this.state === State.PARSED)) {
          var media = this.mediaBuffer,
              currentTime = this.media.currentTime,
              mediaBuffered = media && BufferHelper.isBuffered(media, currentTime) && BufferHelper.isBuffered(media, currentTime + 0.5); // reduce max buf len if current position is buffered

          if (mediaBuffered) {
            var _config = this.config;

            if (_config.maxMaxBufferLength >= _config.maxBufferLength) {
              // reduce max buffer length as it might be too high. we do this to avoid loop flushing ...
              _config.maxMaxBufferLength /= 2;
              logger["logger"].warn("AudioStreamController: reduce max buffer length to " + _config.maxMaxBufferLength + "s");
            }

            this.state = State.IDLE;
          } else {
            // current position is not buffered, but browser is still complaining about buffer full error
            // this happens on IE/Edge, refer to https://github.com/video-dev/hls.js/pull/708
            // in that case flush the whole audio buffer to recover
            logger["logger"].warn('AudioStreamController: buffer full error also media.currentTime is not buffered, flush audio buffer');
            this.fragCurrent = null; // flush everything

            this.state = State.BUFFER_FLUSHING;
            this.hls.trigger(events["default"].BUFFER_FLUSHING, {
              startOffset: 0,
              endOffset: Number.POSITIVE_INFINITY,
              type: 'audio'
            });
          }
        }

        break;

      default:
        break;
    }
  };

  _proto.onBufferFlushed = function onBufferFlushed() {
    var _this3 = this;

    var pendingData = this.pendingData;

    if (pendingData && pendingData.length) {
      logger["logger"].log('AudioStreamController: appending pending audio data after buffer flushed');
      pendingData.forEach(function (appendObj) {
        _this3.hls.trigger(events["default"].BUFFER_APPENDING, appendObj);
      });
      this.appended = true;
      this.pendingData = [];
      this.state = State.PARSED;
    } else {
      // move to IDLE once flush complete. this should trigger new fragment loading
      this.state = State.IDLE; // reset reference to frag

      this.fragPrevious = null;
      this.tick();
    }
  };

  audio_stream_controller_createClass(AudioStreamController, [{
    key: "state",
    set: function set(nextState) {
      if (this.state !== nextState) {
        var previousState = this.state;
        this._state = nextState;
        logger["logger"].log("audio stream:" + previousState + "->" + nextState);
      }
    },
    get: function get() {
      return this._state;
    }
  }]);

  return AudioStreamController;
}(base_stream_controller_BaseStreamController);

/* harmony default export */ var audio_stream_controller = (audio_stream_controller_AudioStreamController);
// CONCATENATED MODULE: ./src/utils/vttcue.js
/**
 * Copyright 2013 vtt.js Contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* harmony default export */ var vttcue = ((function () {
  if (typeof window !== 'undefined' && window.VTTCue) {
    return window.VTTCue;
  }

  var autoKeyword = 'auto';
  var directionSetting = {
    '': true,
    lr: true,
    rl: true
  };
  var alignSetting = {
    start: true,
    middle: true,
    end: true,
    left: true,
    right: true
  };

  function findDirectionSetting(value) {
    if (typeof value !== 'string') {
      return false;
    }

    var dir = directionSetting[value.toLowerCase()];
    return dir ? value.toLowerCase() : false;
  }

  function findAlignSetting(value) {
    if (typeof value !== 'string') {
      return false;
    }

    var align = alignSetting[value.toLowerCase()];
    return align ? value.toLowerCase() : false;
  }

  function extend(obj) {
    var i = 1;

    for (; i < arguments.length; i++) {
      var cobj = arguments[i];

      for (var p in cobj) {
        obj[p] = cobj[p];
      }
    }

    return obj;
  }

  function VTTCue(startTime, endTime, text) {
    var cue = this;
    var baseObj = {};
    baseObj.enumerable = true;
    /**
     * Shim implementation specific properties. These properties are not in
     * the spec.
     */
    // Lets us know when the VTTCue's data has changed in such a way that we need
    // to recompute its display state. This lets us compute its display state
    // lazily.

    cue.hasBeenReset = false;
    /**
     * VTTCue and TextTrackCue properties
     * http://dev.w3.org/html5/webvtt/#vttcue-interface
     */

    var _id = '';
    var _pauseOnExit = false;
    var _startTime = startTime;
    var _endTime = endTime;
    var _text = text;
    var _region = null;
    var _vertical = '';
    var _snapToLines = true;
    var _line = 'auto';
    var _lineAlign = 'start';
    var _position = 50;
    var _positionAlign = 'middle';
    var _size = 50;
    var _align = 'middle';
    Object.defineProperty(cue, 'id', extend({}, baseObj, {
      get: function get() {
        return _id;
      },
      set: function set(value) {
        _id = '' + value;
      }
    }));
    Object.defineProperty(cue, 'pauseOnExit', extend({}, baseObj, {
      get: function get() {
        return _pauseOnExit;
      },
      set: function set(value) {
        _pauseOnExit = !!value;
      }
    }));
    Object.defineProperty(cue, 'startTime', extend({}, baseObj, {
      get: function get() {
        return _startTime;
      },
      set: function set(value) {
        if (typeof value !== 'number') {
          throw new TypeError('Start time must be set to a number.');
        }

        _startTime = value;
        this.hasBeenReset = true;
      }
    }));
    Object.defineProperty(cue, 'endTime', extend({}, baseObj, {
      get: function get() {
        return _endTime;
      },
      set: function set(value) {
        if (typeof value !== 'number') {
          throw new TypeError('End time must be set to a number.');
        }

        _endTime = value;
        this.hasBeenReset = true;
      }
    }));
    Object.defineProperty(cue, 'text', extend({}, baseObj, {
      get: function get() {
        return _text;
      },
      set: function set(value) {
        _text = '' + value;
        this.hasBeenReset = true;
      }
    }));
    Object.defineProperty(cue, 'region', extend({}, baseObj, {
      get: function get() {
        return _region;
      },
      set: function set(value) {
        _region = value;
        this.hasBeenReset = true;
      }
    }));
    Object.defineProperty(cue, 'vertical', extend({}, baseObj, {
      get: function get() {
        return _vertical;
      },
      set: function set(value) {
        var setting = findDirectionSetting(value); // Have to check for false because the setting an be an empty string.

        if (setting === false) {
          throw new SyntaxError('An invalid or illegal string was specified.');
        }

        _vertical = setting;
        this.hasBeenReset = true;
      }
    }));
    Object.defineProperty(cue, 'snapToLines', extend({}, baseObj, {
      get: function get() {
        return _snapToLines;
      },
      set: function set(value) {
        _snapToLines = !!value;
        this.hasBeenReset = true;
      }
    }));
    Object.defineProperty(cue, 'line', extend({}, baseObj, {
      get: function get() {
        return _line;
      },
      set: function set(value) {
        if (typeof value !== 'number' && value !== autoKeyword) {
          throw new SyntaxError('An invalid number or illegal string was specified.');
        }

        _line = value;
        this.hasBeenReset = true;
      }
    }));
    Object.defineProperty(cue, 'lineAlign', extend({}, baseObj, {
      get: function get() {
        return _lineAlign;
      },
      set: function set(value) {
        var setting = findAlignSetting(value);

        if (!setting) {
          throw new SyntaxError('An invalid or illegal string was specified.');
        }

        _lineAlign = setting;
        this.hasBeenReset = true;
      }
    }));
    Object.defineProperty(cue, 'position', extend({}, baseObj, {
      get: function get() {
        return _position;
      },
      set: function set(value) {
        if (value < 0 || value > 100) {
          throw new Error('Position must be between 0 and 100.');
        }

        _position = value;
        this.hasBeenReset = true;
      }
    }));
    Object.defineProperty(cue, 'positionAlign', extend({}, baseObj, {
      get: function get() {
        return _positionAlign;
      },
      set: function set(value) {
        var setting = findAlignSetting(value);

        if (!setting) {
          throw new SyntaxError('An invalid or illegal string was specified.');
        }

        _positionAlign = setting;
        this.hasBeenReset = true;
      }
    }));
    Object.defineProperty(cue, 'size', extend({}, baseObj, {
      get: function get() {
        return _size;
      },
      set: function set(value) {
        if (value < 0 || value > 100) {
          throw new Error('Size must be between 0 and 100.');
        }

        _size = value;
        this.hasBeenReset = true;
      }
    }));
    Object.defineProperty(cue, 'align', extend({}, baseObj, {
      get: function get() {
        return _align;
      },
      set: function set(value) {
        var setting = findAlignSetting(value);

        if (!setting) {
          throw new SyntaxError('An invalid or illegal string was specified.');
        }

        _align = setting;
        this.hasBeenReset = true;
      }
    }));
    /**
     * Other <track> spec defined properties
     */
    // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state

    cue.displayState = void 0;
  }
  /**
   * VTTCue methods
   */


  VTTCue.prototype.getCueAsHTML = function () {
    // Assume WebVTT.convertCueToDOMTree is on the global.
    var WebVTT = window.WebVTT;
    return WebVTT.convertCueToDOMTree(window, this.text);
  };

  return VTTCue;
})());
// CONCATENATED MODULE: ./src/utils/vttparser.js
/*
 * Source: https://github.com/mozilla/vtt.js/blob/master/dist/vtt.js#L1716
 */


var StringDecoder = function StringDecoder() {
  return {
    decode: function decode(data) {
      if (!data) {
        return '';
      }

      if (typeof data !== 'string') {
        throw new Error('Error - expected string data.');
      }

      return decodeURIComponent(encodeURIComponent(data));
    }
  };
};

function VTTParser() {
  this.window = window;
  this.state = 'INITIAL';
  this.buffer = '';
  this.decoder = new StringDecoder();
  this.regionList = [];
} // Try to parse input as a time stamp.


function parseTimeStamp(input) {
  function computeSeconds(h, m, s, f) {
    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;
  }

  var m = input.match(/^(\d+):(\d{2})(:\d{2})?\.(\d{3})/);

  if (!m) {
    return null;
  }

  if (m[3]) {
    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]
    return computeSeconds(m[1], m[2], m[3].replace(':', ''), m[4]);
  } else if (m[1] > 59) {
    // Timestamp takes the form of [hours]:[minutes].[milliseconds]
    // First position is hours as it's over 59.
    return computeSeconds(m[1], m[2], 0, m[4]);
  } else {
    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]
    return computeSeconds(0, m[1], m[2], m[4]);
  }
} // A settings object holds key/value pairs and will ignore anything but the first
// assignment to a specific key.


function Settings() {
  this.values = Object.create(null);
}

Settings.prototype = {
  // Only accept the first assignment to any key.
  set: function set(k, v) {
    if (!this.get(k) && v !== '') {
      this.values[k] = v;
    }
  },
  // Return the value for a key, or a default value.
  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with
  // a number of possible default values as properties where 'defaultKey' is
  // the key of the property that will be chosen; otherwise it's assumed to be
  // a single value.
  get: function get(k, dflt, defaultKey) {
    if (defaultKey) {
      return this.has(k) ? this.values[k] : dflt[defaultKey];
    }

    return this.has(k) ? this.values[k] : dflt;
  },
  // Check whether we have a value for a key.
  has: function has(k) {
    return k in this.values;
  },
  // Accept a setting if its one of the given alternatives.
  alt: function alt(k, v, a) {
    for (var n = 0; n < a.length; ++n) {
      if (v === a[n]) {
        this.set(k, v);
        break;
      }
    }
  },
  // Accept a setting if its a valid (signed) integer.
  integer: function integer(k, v) {
    if (/^-?\d+$/.test(v)) {
      // integer
      this.set(k, parseInt(v, 10));
    }
  },
  // Accept a setting if its a valid percentage.
  percent: function percent(k, v) {
    var m;

    if (m = v.match(/^([\d]{1,3})(\.[\d]*)?%$/)) {
      v = parseFloat(v);

      if (v >= 0 && v <= 100) {
        this.set(k, v);
        return true;
      }
    }

    return false;
  }
}; // Helper function to parse input into groups separated by 'groupDelim', and
// interprete each group as a key/value pair separated by 'keyValueDelim'.

function parseOptions(input, callback, keyValueDelim, groupDelim) {
  var groups = groupDelim ? input.split(groupDelim) : [input];

  for (var i in groups) {
    if (typeof groups[i] !== 'string') {
      continue;
    }

    var kv = groups[i].split(keyValueDelim);

    if (kv.length !== 2) {
      continue;
    }

    var k = kv[0];
    var v = kv[1];
    callback(k, v);
  }
}

var defaults = new vttcue(0, 0, 0); // 'middle' was changed to 'center' in the spec: https://github.com/w3c/webvtt/pull/244
//  Safari doesn't yet support this change, but FF and Chrome do.

var center = defaults.align === 'middle' ? 'middle' : 'center';

function parseCue(input, cue, regionList) {
  // Remember the original input if we need to throw an error.
  var oInput = input; // 4.1 WebVTT timestamp

  function consumeTimeStamp() {
    var ts = parseTimeStamp(input);

    if (ts === null) {
      throw new Error('Malformed timestamp: ' + oInput);
    } // Remove time stamp from input.


    input = input.replace(/^[^\sa-zA-Z-]+/, '');
    return ts;
  } // 4.4.2 WebVTT cue settings


  function consumeCueSettings(input, cue) {
    var settings = new Settings();
    parseOptions(input, function (k, v) {
      switch (k) {
        case 'region':
          // Find the last region we parsed with the same region id.
          for (var i = regionList.length - 1; i >= 0; i--) {
            if (regionList[i].id === v) {
              settings.set(k, regionList[i].region);
              break;
            }
          }

          break;

        case 'vertical':
          settings.alt(k, v, ['rl', 'lr']);
          break;

        case 'line':
          var vals = v.split(','),
              vals0 = vals[0];
          settings.integer(k, vals0);

          if (settings.percent(k, vals0)) {
            settings.set('snapToLines', false);
          }

          settings.alt(k, vals0, ['auto']);

          if (vals.length === 2) {
            settings.alt('lineAlign', vals[1], ['start', center, 'end']);
          }

          break;

        case 'position':
          vals = v.split(',');
          settings.percent(k, vals[0]);

          if (vals.length === 2) {
            settings.alt('positionAlign', vals[1], ['start', center, 'end', 'line-left', 'line-right', 'auto']);
          }

          break;

        case 'size':
          settings.percent(k, v);
          break;

        case 'align':
          settings.alt(k, v, ['start', center, 'end', 'left', 'right']);
          break;
      }
    }, /:/, /\s/); // Apply default values for any missing fields.

    cue.region = settings.get('region', null);
    cue.vertical = settings.get('vertical', '');
    var line = settings.get('line', 'auto');

    if (line === 'auto' && defaults.line === -1) {
      // set numeric line number for Safari
      line = -1;
    }

    cue.line = line;
    cue.lineAlign = settings.get('lineAlign', 'start');
    cue.snapToLines = settings.get('snapToLines', true);
    cue.size = settings.get('size', 100);
    cue.align = settings.get('align', center);
    var position = settings.get('position', 'auto');

    if (position === 'auto' && defaults.position === 50) {
      // set numeric position for Safari
      position = cue.align === 'start' || cue.align === 'left' ? 0 : cue.align === 'end' || cue.align === 'right' ? 100 : 50;
    }

    cue.position = position;
  }

  function skipWhitespace() {
    input = input.replace(/^\s+/, '');
  } // 4.1 WebVTT cue timings.


  skipWhitespace();
  cue.startTime = consumeTimeStamp(); // (1) collect cue start time

  skipWhitespace();

  if (input.substr(0, 3) !== '-->') {
    // (3) next characters must match '-->'
    throw new Error('Malformed time stamp (time stamps must be separated by \'-->\'): ' + oInput);
  }

  input = input.substr(3);
  skipWhitespace();
  cue.endTime = consumeTimeStamp(); // (5) collect cue end time
  // 4.1 WebVTT cue settings list.

  skipWhitespace();
  consumeCueSettings(input, cue);
}

function fixLineBreaks(input) {
  return input.replace(/<br(?: \/)?>/gi, '\n');
}

VTTParser.prototype = {
  parse: function parse(data) {
    var self = this; // If there is no data then we won't decode it, but will just try to parse
    // whatever is in buffer already. This may occur in circumstances, for
    // example when flush() is called.

    if (data) {
      // Try to decode the data that we received.
      self.buffer += self.decoder.decode(data, {
        stream: true
      });
    }

    function collectNextLine() {
      var buffer = self.buffer;
      var pos = 0;
      buffer = fixLineBreaks(buffer);

      while (pos < buffer.length && buffer[pos] !== '\r' && buffer[pos] !== '\n') {
        ++pos;
      }

      var line = buffer.substr(0, pos); // Advance the buffer early in case we fail below.

      if (buffer[pos] === '\r') {
        ++pos;
      }

      if (buffer[pos] === '\n') {
        ++pos;
      }

      self.buffer = buffer.substr(pos);
      return line;
    } // 3.2 WebVTT metadata header syntax


    function parseHeader(input) {
      parseOptions(input, function (k, v) {
        switch (k) {
          case 'Region':
            // 3.3 WebVTT region metadata header syntax
            // console.log('parse region', v);
            // parseRegion(v);
            break;
        }
      }, /:/);
    } // 5.1 WebVTT file parsing.


    try {
      var line;

      if (self.state === 'INITIAL') {
        // We can't start parsing until we have the first line.
        if (!/\r\n|\n/.test(self.buffer)) {
          return this;
        }

        line = collectNextLine(); // strip of UTF-8 BOM if any
        // https://en.wikipedia.org/wiki/Byte_order_mark#UTF-8

        var m = line.match(/^(ï»¿)?WEBVTT([ \t].*)?$/);

        if (!m || !m[0]) {
          throw new Error('Malformed WebVTT signature.');
        }

        self.state = 'HEADER';
      }

      var alreadyCollectedLine = false;

      while (self.buffer) {
        // We can't parse a line until we have the full line.
        if (!/\r\n|\n/.test(self.buffer)) {
          return this;
        }

        if (!alreadyCollectedLine) {
          line = collectNextLine();
        } else {
          alreadyCollectedLine = false;
        }

        switch (self.state) {
          case 'HEADER':
            // 13-18 - Allow a header (metadata) under the WEBVTT line.
            if (/:/.test(line)) {
              parseHeader(line);
            } else if (!line) {
              // An empty line terminates the header and starts the body (cues).
              self.state = 'ID';
            }

            continue;

          case 'NOTE':
            // Ignore NOTE blocks.
            if (!line) {
              self.state = 'ID';
            }

            continue;

          case 'ID':
            // Check for the start of NOTE blocks.
            if (/^NOTE($|[ \t])/.test(line)) {
              self.state = 'NOTE';
              break;
            } // 19-29 - Allow any number of line terminators, then initialize new cue values.


            if (!line) {
              continue;
            }

            self.cue = new vttcue(0, 0, '');
            self.state = 'CUE'; // 30-39 - Check if self line contains an optional identifier or timing data.

            if (line.indexOf('-->') === -1) {
              self.cue.id = line;
              continue;
            }

          // Process line as start of a cue.

          /* falls through */

          case 'CUE':
            // 40 - Collect cue timings and settings.
            try {
              parseCue(line, self.cue, self.regionList);
            } catch (e) {
              // In case of an error ignore rest of the cue.
              self.cue = null;
              self.state = 'BADCUE';
              continue;
            }

            self.state = 'CUETEXT';
            continue;

          case 'CUETEXT':
            var hasSubstring = line.indexOf('-->') !== -1; // 34 - If we have an empty line then report the cue.
            // 35 - If we have the special substring '-->' then report the cue,
            // but do not collect the line as we need to process the current
            // one as a new cue.

            if (!line || hasSubstring && (alreadyCollectedLine = true)) {
              // We are done parsing self cue.
              if (self.oncue) {
                self.oncue(self.cue);
              }

              self.cue = null;
              self.state = 'ID';
              continue;
            }

            if (self.cue.text) {
              self.cue.text += '\n';
            }

            self.cue.text += line;
            continue;

          case 'BADCUE':
            // BADCUE
            // 54-62 - Collect and discard the remaining cue.
            if (!line) {
              self.state = 'ID';
            }

            continue;
        }
      }
    } catch (e) {
      // If we are currently parsing a cue, report what we have.
      if (self.state === 'CUETEXT' && self.cue && self.oncue) {
        self.oncue(self.cue);
      }

      self.cue = null; // Enter BADWEBVTT state if header was not parsed correctly otherwise
      // another exception occurred so enter BADCUE state.

      self.state = self.state === 'INITIAL' ? 'BADWEBVTT' : 'BADCUE';
    }

    return this;
  },
  flush: function flush() {
    var self = this;

    try {
      // Finish decoding the stream.
      self.buffer += self.decoder.decode(); // Synthesize the end of the current cue or region.

      if (self.cue || self.state === 'HEADER') {
        self.buffer += '\n\n';
        self.parse();
      } // If we've flushed, parsed, and we're still on the INITIAL state then
      // that means we don't have enough of the stream to parse the first
      // line.


      if (self.state === 'INITIAL') {
        throw new Error('Malformed WebVTT signature.');
      }
    } catch (e) {
      throw e;
    }

    if (self.onflush) {
      self.onflush();
    }

    return this;
  }
};

/* harmony default export */ var vttparser = (VTTParser);
// CONCATENATED MODULE: ./src/utils/cues.ts

function newCue(track, startTime, endTime, captionScreen) {
  var result = [];
  var row; // the type data states this is VTTCue, but it can potentially be a TextTrackCue on old browsers

  var cue;
  var indenting;
  var indent;
  var text;
  var VTTCue = window.VTTCue || TextTrackCue;

  for (var r = 0; r < captionScreen.rows.length; r++) {
    row = captionScreen.rows[r];
    indenting = true;
    indent = 0;
    text = '';

    if (!row.isEmpty()) {
      for (var c = 0; c < row.chars.length; c++) {
        if (row.chars[c].uchar.match(/\s/) && indenting) {
          indent++;
        } else {
          text += row.chars[c].uchar;
          indenting = false;
        }
      } // To be used for cleaning-up orphaned roll-up captions


      row.cueStartTime = startTime; // Give a slight bump to the endTime if it's equal to startTime to avoid a SyntaxError in IE

      if (startTime === endTime) {
        endTime += 0.0001;
      }

      cue = new VTTCue(startTime, endTime, fixLineBreaks(text.trim()));

      if (indent >= 16) {
        indent--;
      } else {
        indent++;
      } // VTTCue.line get's flakey when using controls, so let's now include line 13&14
      // also, drop line 1 since it's to close to the top


      if (navigator.userAgent.match(/Firefox\//)) {
        cue.line = r + 1;
      } else {
        cue.line = r > 7 ? r - 2 : r + 1;
      }

      cue.align = 'left'; // Clamp the position between 0 and 100 - if out of these bounds, Firefox throws an exception and captions break

      cue.position = Math.max(0, Math.min(100, 100 * (indent / 32)));
      result.push(cue);

      if (track) {
        track.addCue(cue);
      }
    }
  }

  return result;
}
// CONCATENATED MODULE: ./src/utils/cea-608-parser.ts

/**
 *
 * This code was ported from the dash.js project at:
 *   https://github.com/Dash-Industry-Forum/dash.js/blob/development/externals/cea608-parser.js
 *   https://github.com/Dash-Industry-Forum/dash.js/commit/8269b26a761e0853bb21d78780ed945144ecdd4d#diff-71bc295a2d6b6b7093a1d3290d53a4b2
 *
 * The original copyright appears below:
 *
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2015-2016, DASH Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  1. Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  2. Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */

/**
 *  Exceptions from regular ASCII. CodePoints are mapped to UTF-16 codes
 */

var specialCea608CharsCodes = {
  0x2a: 0xe1,
  // lowercase a, acute accent
  0x5c: 0xe9,
  // lowercase e, acute accent
  0x5e: 0xed,
  // lowercase i, acute accent
  0x5f: 0xf3,
  // lowercase o, acute accent
  0x60: 0xfa,
  // lowercase u, acute accent
  0x7b: 0xe7,
  // lowercase c with cedilla
  0x7c: 0xf7,
  // division symbol
  0x7d: 0xd1,
  // uppercase N tilde
  0x7e: 0xf1,
  // lowercase n tilde
  0x7f: 0x2588,
  // Full block
  // THIS BLOCK INCLUDES THE 16 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS
  // THAT COME FROM HI BYTE=0x11 AND LOW BETWEEN 0x30 AND 0x3F
  // THIS MEANS THAT \x50 MUST BE ADDED TO THE VALUES
  0x80: 0xae,
  // Registered symbol (R)
  0x81: 0xb0,
  // degree sign
  0x82: 0xbd,
  // 1/2 symbol
  0x83: 0xbf,
  // Inverted (open) question mark
  0x84: 0x2122,
  // Trademark symbol (TM)
  0x85: 0xa2,
  // Cents symbol
  0x86: 0xa3,
  // Pounds sterling
  0x87: 0x266a,
  // Music 8'th note
  0x88: 0xe0,
  // lowercase a, grave accent
  0x89: 0x20,
  // transparent space (regular)
  0x8a: 0xe8,
  // lowercase e, grave accent
  0x8b: 0xe2,
  // lowercase a, circumflex accent
  0x8c: 0xea,
  // lowercase e, circumflex accent
  0x8d: 0xee,
  // lowercase i, circumflex accent
  0x8e: 0xf4,
  // lowercase o, circumflex accent
  0x8f: 0xfb,
  // lowercase u, circumflex accent
  // THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS
  // THAT COME FROM HI BYTE=0x12 AND LOW BETWEEN 0x20 AND 0x3F
  0x90: 0xc1,
  // capital letter A with acute
  0x91: 0xc9,
  // capital letter E with acute
  0x92: 0xd3,
  // capital letter O with acute
  0x93: 0xda,
  // capital letter U with acute
  0x94: 0xdc,
  // capital letter U with diaresis
  0x95: 0xfc,
  // lowercase letter U with diaeresis
  0x96: 0x2018,
  // opening single quote
  0x97: 0xa1,
  // inverted exclamation mark
  0x98: 0x2a,
  // asterisk
  0x99: 0x2019,
  // closing single quote
  0x9a: 0x2501,
  // box drawings heavy horizontal
  0x9b: 0xa9,
  // copyright sign
  0x9c: 0x2120,
  // Service mark
  0x9d: 0x2022,
  // (round) bullet
  0x9e: 0x201c,
  // Left double quotation mark
  0x9f: 0x201d,
  // Right double quotation mark
  0xa0: 0xc0,
  // uppercase A, grave accent
  0xa1: 0xc2,
  // uppercase A, circumflex
  0xa2: 0xc7,
  // uppercase C with cedilla
  0xa3: 0xc8,
  // uppercase E, grave accent
  0xa4: 0xca,
  // uppercase E, circumflex
  0xa5: 0xcb,
  // capital letter E with diaresis
  0xa6: 0xeb,
  // lowercase letter e with diaresis
  0xa7: 0xce,
  // uppercase I, circumflex
  0xa8: 0xcf,
  // uppercase I, with diaresis
  0xa9: 0xef,
  // lowercase i, with diaresis
  0xaa: 0xd4,
  // uppercase O, circumflex
  0xab: 0xd9,
  // uppercase U, grave accent
  0xac: 0xf9,
  // lowercase u, grave accent
  0xad: 0xdb,
  // uppercase U, circumflex
  0xae: 0xab,
  // left-pointing double angle quotation mark
  0xaf: 0xbb,
  // right-pointing double angle quotation mark
  // THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS
  // THAT COME FROM HI BYTE=0x13 AND LOW BETWEEN 0x20 AND 0x3F
  0xb0: 0xc3,
  // Uppercase A, tilde
  0xb1: 0xe3,
  // Lowercase a, tilde
  0xb2: 0xcd,
  // Uppercase I, acute accent
  0xb3: 0xcc,
  // Uppercase I, grave accent
  0xb4: 0xec,
  // Lowercase i, grave accent
  0xb5: 0xd2,
  // Uppercase O, grave accent
  0xb6: 0xf2,
  // Lowercase o, grave accent
  0xb7: 0xd5,
  // Uppercase O, tilde
  0xb8: 0xf5,
  // Lowercase o, tilde
  0xb9: 0x7b,
  // Open curly brace
  0xba: 0x7d,
  // Closing curly brace
  0xbb: 0x5c,
  // Backslash
  0xbc: 0x5e,
  // Caret
  0xbd: 0x5f,
  // Underscore
  0xbe: 0x7c,
  // Pipe (vertical line)
  0xbf: 0x223c,
  // Tilde operator
  0xc0: 0xc4,
  // Uppercase A, umlaut
  0xc1: 0xe4,
  // Lowercase A, umlaut
  0xc2: 0xd6,
  // Uppercase O, umlaut
  0xc3: 0xf6,
  // Lowercase o, umlaut
  0xc4: 0xdf,
  // Esszett (sharp S)
  0xc5: 0xa5,
  // Yen symbol
  0xc6: 0xa4,
  // Generic currency sign
  0xc7: 0x2503,
  // Box drawings heavy vertical
  0xc8: 0xc5,
  // Uppercase A, ring
  0xc9: 0xe5,
  // Lowercase A, ring
  0xca: 0xd8,
  // Uppercase O, stroke
  0xcb: 0xf8,
  // Lowercase o, strok
  0xcc: 0x250f,
  // Box drawings heavy down and right
  0xcd: 0x2513,
  // Box drawings heavy down and left
  0xce: 0x2517,
  // Box drawings heavy up and right
  0xcf: 0x251b // Box drawings heavy up and left

};
/**
 * Utils
 */

var getCharForByte = function getCharForByte(_byte) {
  var charCode = _byte;

  if (specialCea608CharsCodes.hasOwnProperty(_byte)) {
    charCode = specialCea608CharsCodes[_byte];
  }

  return String.fromCharCode(charCode);
};

var NR_ROWS = 15;
var NR_COLS = 100; // Tables to look up row from PAC data

var rowsLowCh1 = {
  0x11: 1,
  0x12: 3,
  0x15: 5,
  0x16: 7,
  0x17: 9,
  0x10: 11,
  0x13: 12,
  0x14: 14
};
var rowsHighCh1 = {
  0x11: 2,
  0x12: 4,
  0x15: 6,
  0x16: 8,
  0x17: 10,
  0x13: 13,
  0x14: 15
};
var rowsLowCh2 = {
  0x19: 1,
  0x1A: 3,
  0x1D: 5,
  0x1E: 7,
  0x1F: 9,
  0x18: 11,
  0x1B: 12,
  0x1C: 14
};
var rowsHighCh2 = {
  0x19: 2,
  0x1A: 4,
  0x1D: 6,
  0x1E: 8,
  0x1F: 10,
  0x1B: 13,
  0x1C: 15
};
var backgroundColors = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'black', 'transparent'];
var VerboseLevel;

(function (VerboseLevel) {
  VerboseLevel[VerboseLevel["ERROR"] = 0] = "ERROR";
  VerboseLevel[VerboseLevel["TEXT"] = 1] = "TEXT";
  VerboseLevel[VerboseLevel["WARNING"] = 2] = "WARNING";
  VerboseLevel[VerboseLevel["INFO"] = 2] = "INFO";
  VerboseLevel[VerboseLevel["DEBUG"] = 3] = "DEBUG";
  VerboseLevel[VerboseLevel["DATA"] = 3] = "DATA";
})(VerboseLevel || (VerboseLevel = {}));

var cea_608_parser_CaptionsLogger = /*#__PURE__*/function () {
  function CaptionsLogger() {
    this.time = null;
    this.verboseLevel = VerboseLevel.ERROR;
  }

  var _proto = CaptionsLogger.prototype;

  _proto.log = function log(severity, msg) {
    if (this.verboseLevel >= severity) {
      logger["logger"].log(this.time + " [" + severity + "] " + msg);
    }
  };

  return CaptionsLogger;
}();

var numArrayToHexArray = function numArrayToHexArray(numArray) {
  var hexArray = [];

  for (var j = 0; j < numArray.length; j++) {
    hexArray.push(numArray[j].toString(16));
  }

  return hexArray;
};

var PenState = /*#__PURE__*/function () {
  function PenState(foreground, underline, italics, background, flash) {
    this.foreground = void 0;
    this.underline = void 0;
    this.italics = void 0;
    this.background = void 0;
    this.flash = void 0;
    this.foreground = foreground || 'white';
    this.underline = underline || false;
    this.italics = italics || false;
    this.background = background || 'black';
    this.flash = flash || false;
  }

  var _proto2 = PenState.prototype;

  _proto2.reset = function reset() {
    this.foreground = 'white';
    this.underline = false;
    this.italics = false;
    this.background = 'black';
    this.flash = false;
  };

  _proto2.setStyles = function setStyles(styles) {
    var attribs = ['foreground', 'underline', 'italics', 'background', 'flash'];

    for (var i = 0; i < attribs.length; i++) {
      var style = attribs[i];

      if (styles.hasOwnProperty(style)) {
        this[style] = styles[style];
      }
    }
  };

  _proto2.isDefault = function isDefault() {
    return this.foreground === 'white' && !this.underline && !this.italics && this.background === 'black' && !this.flash;
  };

  _proto2.equals = function equals(other) {
    return this.foreground === other.foreground && this.underline === other.underline && this.italics === other.italics && this.background === other.background && this.flash === other.flash;
  };

  _proto2.copy = function copy(newPenState) {
    this.foreground = newPenState.foreground;
    this.underline = newPenState.underline;
    this.italics = newPenState.italics;
    this.background = newPenState.background;
    this.flash = newPenState.flash;
  };

  _proto2.toString = function toString() {
    return 'color=' + this.foreground + ', underline=' + this.underline + ', italics=' + this.italics + ', background=' + this.background + ', flash=' + this.flash;
  };

  return PenState;
}();
/**
 * Unicode character with styling and background.
 * @constructor
 */


var StyledUnicodeChar = /*#__PURE__*/function () {
  function StyledUnicodeChar(uchar, foreground, underline, italics, background, flash) {
    this.uchar = void 0;
    this.penState = void 0;
    this.uchar = uchar || ' '; // unicode character

    this.penState = new PenState(foreground, underline, italics, background, flash);
  }

  var _proto3 = StyledUnicodeChar.prototype;

  _proto3.reset = function reset() {
    this.uchar = ' ';
    this.penState.reset();
  };

  _proto3.setChar = function setChar(uchar, newPenState) {
    this.uchar = uchar;
    this.penState.copy(newPenState);
  };

  _proto3.setPenState = function setPenState(newPenState) {
    this.penState.copy(newPenState);
  };

  _proto3.equals = function equals(other) {
    return this.uchar === other.uchar && this.penState.equals(other.penState);
  };

  _proto3.copy = function copy(newChar) {
    this.uchar = newChar.uchar;
    this.penState.copy(newChar.penState);
  };

  _proto3.isEmpty = function isEmpty() {
    return this.uchar === ' ' && this.penState.isDefault();
  };

  return StyledUnicodeChar;
}();
/**
 * CEA-608 row consisting of NR_COLS instances of StyledUnicodeChar.
 * @constructor
 */


var Row = /*#__PURE__*/function () {
  function Row(logger) {
    this.chars = void 0;
    this.pos = void 0;
    this.currPenState = void 0;
    this.cueStartTime = void 0;
    this.logger = void 0;
    this.chars = [];

    for (var i = 0; i < NR_COLS; i++) {
      this.chars.push(new StyledUnicodeChar());
    }

    this.logger = logger;
    this.pos = 0;
    this.currPenState = new PenState();
  }

  var _proto4 = Row.prototype;

  _proto4.equals = function equals(other) {
    var equal = true;

    for (var i = 0; i < NR_COLS; i++) {
      if (!this.chars[i].equals(other.chars[i])) {
        equal = false;
        break;
      }
    }

    return equal;
  };

  _proto4.copy = function copy(other) {
    for (var i = 0; i < NR_COLS; i++) {
      this.chars[i].copy(other.chars[i]);
    }
  };

  _proto4.isEmpty = function isEmpty() {
    var empty = true;

    for (var i = 0; i < NR_COLS; i++) {
      if (!this.chars[i].isEmpty()) {
        empty = false;
        break;
      }
    }

    return empty;
  }
  /**
   *  Set the cursor to a valid column.
   */
  ;

  _proto4.setCursor = function setCursor(absPos) {
    if (this.pos !== absPos) {
      this.pos = absPos;
    }

    if (this.pos < 0) {
      this.logger.log(VerboseLevel.DEBUG, 'Negative cursor position ' + this.pos);
      this.pos = 0;
    } else if (this.pos > NR_COLS) {
      this.logger.log(VerboseLevel.DEBUG, 'Too large cursor position ' + this.pos);
      this.pos = NR_COLS;
    }
  }
  /**
   * Move the cursor relative to current position.
   */
  ;

  _proto4.moveCursor = function moveCursor(relPos) {
    var newPos = this.pos + relPos;

    if (relPos > 1) {
      for (var i = this.pos + 1; i < newPos + 1; i++) {
        this.chars[i].setPenState(this.currPenState);
      }
    }

    this.setCursor(newPos);
  }
  /**
   * Backspace, move one step back and clear character.
   */
  ;

  _proto4.backSpace = function backSpace() {
    this.moveCursor(-1);
    this.chars[this.pos].setChar(' ', this.currPenState);
  };

  _proto4.insertChar = function insertChar(_byte2) {
    if (_byte2 >= 0x90) {
      // Extended char
      this.backSpace();
    }

    var _char = getCharForByte(_byte2);

    if (this.pos >= NR_COLS) {
      this.logger.log(VerboseLevel.ERROR, 'Cannot insert ' + _byte2.toString(16) + ' (' + _char + ') at position ' + this.pos + '. Skipping it!');
      return;
    }

    this.chars[this.pos].setChar(_char, this.currPenState);
    this.moveCursor(1);
  };

  _proto4.clearFromPos = function clearFromPos(startPos) {
    var i;

    for (i = startPos; i < NR_COLS; i++) {
      this.chars[i].reset();
    }
  };

  _proto4.clear = function clear() {
    this.clearFromPos(0);
    this.pos = 0;
    this.currPenState.reset();
  };

  _proto4.clearToEndOfRow = function clearToEndOfRow() {
    this.clearFromPos(this.pos);
  };

  _proto4.getTextString = function getTextString() {
    var chars = [];
    var empty = true;

    for (var i = 0; i < NR_COLS; i++) {
      var _char2 = this.chars[i].uchar;

      if (_char2 !== ' ') {
        empty = false;
      }

      chars.push(_char2);
    }

    if (empty) {
      return '';
    } else {
      return chars.join('');
    }
  };

  _proto4.setPenStyles = function setPenStyles(styles) {
    this.currPenState.setStyles(styles);
    var currChar = this.chars[this.pos];
    currChar.setPenState(this.currPenState);
  };

  return Row;
}();
/**
 * Keep a CEA-608 screen of 32x15 styled characters
 * @constructor
 */

var CaptionScreen = /*#__PURE__*/function () {
  function CaptionScreen(logger) {
    this.rows = void 0;
    this.currRow = void 0;
    this.nrRollUpRows = void 0;
    this.lastOutputScreen = void 0;
    this.logger = void 0;
    this.rows = [];

    for (var i = 0; i < NR_ROWS; i++) {
      this.rows.push(new Row(logger));
    } // Note that we use zero-based numbering (0-14)


    this.logger = logger;
    this.currRow = NR_ROWS - 1;
    this.nrRollUpRows = null;
    this.lastOutputScreen = null;
    this.reset();
  }

  var _proto5 = CaptionScreen.prototype;

  _proto5.reset = function reset() {
    for (var i = 0; i < NR_ROWS; i++) {
      this.rows[i].clear();
    }

    this.currRow = NR_ROWS - 1;
  };

  _proto5.equals = function equals(other) {
    var equal = true;

    for (var i = 0; i < NR_ROWS; i++) {
      if (!this.rows[i].equals(other.rows[i])) {
        equal = false;
        break;
      }
    }

    return equal;
  };

  _proto5.copy = function copy(other) {
    for (var i = 0; i < NR_ROWS; i++) {
      this.rows[i].copy(other.rows[i]);
    }
  };

  _proto5.isEmpty = function isEmpty() {
    var empty = true;

    for (var i = 0; i < NR_ROWS; i++) {
      if (!this.rows[i].isEmpty()) {
        empty = false;
        break;
      }
    }

    return empty;
  };

  _proto5.backSpace = function backSpace() {
    var row = this.rows[this.currRow];
    row.backSpace();
  };

  _proto5.clearToEndOfRow = function clearToEndOfRow() {
    var row = this.rows[this.currRow];
    row.clearToEndOfRow();
  }
  /**
   * Insert a character (without styling) in the current row.
   */
  ;

  _proto5.insertChar = function insertChar(_char3) {
    var row = this.rows[this.currRow];
    row.insertChar(_char3);
  };

  _proto5.setPen = function setPen(styles) {
    var row = this.rows[this.currRow];
    row.setPenStyles(styles);
  };

  _proto5.moveCursor = function moveCursor(relPos) {
    var row = this.rows[this.currRow];
    row.moveCursor(relPos);
  };

  _proto5.setCursor = function setCursor(absPos) {
    this.logger.log(VerboseLevel.INFO, 'setCursor: ' + absPos);
    var row = this.rows[this.currRow];
    row.setCursor(absPos);
  };

  _proto5.setPAC = function setPAC(pacData) {
    this.logger.log(VerboseLevel.INFO, 'pacData = ' + JSON.stringify(pacData));
    var newRow = pacData.row - 1;

    if (this.nrRollUpRows && newRow < this.nrRollUpRows - 1) {
      newRow = this.nrRollUpRows - 1;
    } // Make sure this only affects Roll-up Captions by checking this.nrRollUpRows


    if (this.nrRollUpRows && this.currRow !== newRow) {
      // clear all rows first
      for (var i = 0; i < NR_ROWS; i++) {
        this.rows[i].clear();
      } // Copy this.nrRollUpRows rows from lastOutputScreen and place it in the newRow location
      // topRowIndex - the start of rows to copy (inclusive index)


      var topRowIndex = this.currRow + 1 - this.nrRollUpRows; // We only copy if the last position was already shown.
      // We use the cueStartTime value to check this.

      var lastOutputScreen = this.lastOutputScreen;

      if (lastOutputScreen) {
        var prevLineTime = lastOutputScreen.rows[topRowIndex].cueStartTime;
        var time = this.logger.time;

        if (prevLineTime && time !== null && prevLineTime < time) {
          for (var _i = 0; _i < this.nrRollUpRows; _i++) {
            this.rows[newRow - this.nrRollUpRows + _i + 1].copy(lastOutputScreen.rows[topRowIndex + _i]);
          }
        }
      }
    }

    this.currRow = newRow;
    var row = this.rows[this.currRow];

    if (pacData.indent !== null) {
      var indent = pacData.indent;
      var prevPos = Math.max(indent - 1, 0);
      row.setCursor(pacData.indent);
      pacData.color = row.chars[prevPos].penState.foreground;
    }

    var styles = {
      foreground: pacData.color,
      underline: pacData.underline,
      italics: pacData.italics,
      background: 'black',
      flash: false
    };
    this.setPen(styles);
  }
  /**
   * Set background/extra foreground, but first do back_space, and then insert space (backwards compatibility).
   */
  ;

  _proto5.setBkgData = function setBkgData(bkgData) {
    this.logger.log(VerboseLevel.INFO, 'bkgData = ' + JSON.stringify(bkgData));
    this.backSpace();
    this.setPen(bkgData);
    this.insertChar(0x20); // Space
  };

  _proto5.setRollUpRows = function setRollUpRows(nrRows) {
    this.nrRollUpRows = nrRows;
  };

  _proto5.rollUp = function rollUp() {
    if (this.nrRollUpRows === null) {
      this.logger.log(VerboseLevel.DEBUG, 'roll_up but nrRollUpRows not set yet');
      return; // Not properly setup
    }

    this.logger.log(VerboseLevel.TEXT, this.getDisplayText());
    var topRowIndex = this.currRow + 1 - this.nrRollUpRows;
    var topRow = this.rows.splice(topRowIndex, 1)[0];
    topRow.clear();
    this.rows.splice(this.currRow, 0, topRow);
    this.logger.log(VerboseLevel.INFO, 'Rolling up'); // this.logger.log(VerboseLevel.TEXT, this.get_display_text())
  }
  /**
   * Get all non-empty rows with as unicode text.
   */
  ;

  _proto5.getDisplayText = function getDisplayText(asOneRow) {
    asOneRow = asOneRow || false;
    var displayText = [];
    var text = '';
    var rowNr = -1;

    for (var i = 0; i < NR_ROWS; i++) {
      var rowText = this.rows[i].getTextString();

      if (rowText) {
        rowNr = i + 1;

        if (asOneRow) {
          displayText.push('Row ' + rowNr + ': \'' + rowText + '\'');
        } else {
          displayText.push(rowText.trim());
        }
      }
    }

    if (displayText.length > 0) {
      if (asOneRow) {
        text = '[' + displayText.join(' | ') + ']';
      } else {
        text = displayText.join('\n');
      }
    }

    return text;
  };

  _proto5.getTextAndFormat = function getTextAndFormat() {
    return this.rows;
  };

  return CaptionScreen;
}(); // var modes = ['MODE_ROLL-UP', 'MODE_POP-ON', 'MODE_PAINT-ON', 'MODE_TEXT'];

var Cea608Channel = /*#__PURE__*/function () {
  function Cea608Channel(channelNumber, outputFilter, logger) {
    this.chNr = void 0;
    this.outputFilter = void 0;
    this.mode = void 0;
    this.verbose = void 0;
    this.displayedMemory = void 0;
    this.nonDisplayedMemory = void 0;
    this.lastOutputScreen = void 0;
    this.currRollUpRow = void 0;
    this.writeScreen = void 0;
    this.cueStartTime = void 0;
    this.logger = void 0;
    this.chNr = channelNumber;
    this.outputFilter = outputFilter;
    this.mode = null;
    this.verbose = 0;
    this.displayedMemory = new CaptionScreen(logger);
    this.nonDisplayedMemory = new CaptionScreen(logger);
    this.lastOutputScreen = new CaptionScreen(logger);
    this.currRollUpRow = this.displayedMemory.rows[NR_ROWS - 1];
    this.writeScreen = this.displayedMemory;
    this.mode = null;
    this.cueStartTime = null; // Keeps track of where a cue started.

    this.logger = logger;
  }

  var _proto6 = Cea608Channel.prototype;

  _proto6.reset = function reset() {
    this.mode = null;
    this.displayedMemory.reset();
    this.nonDisplayedMemory.reset();
    this.lastOutputScreen.reset();
    this.outputFilter.reset();
    this.currRollUpRow = this.displayedMemory.rows[NR_ROWS - 1];
    this.writeScreen = this.displayedMemory;
    this.mode = null;
    this.cueStartTime = null;
  };

  _proto6.getHandler = function getHandler() {
    return this.outputFilter;
  };

  _proto6.setHandler = function setHandler(newHandler) {
    this.outputFilter = newHandler;
  };

  _proto6.setPAC = function setPAC(pacData) {
    this.writeScreen.setPAC(pacData);
  };

  _proto6.setBkgData = function setBkgData(bkgData) {
    this.writeScreen.setBkgData(bkgData);
  };

  _proto6.setMode = function setMode(newMode) {
    if (newMode === this.mode) {
      return;
    }

    this.mode = newMode;
    this.logger.log(VerboseLevel.INFO, 'MODE=' + newMode);

    if (this.mode === 'MODE_POP-ON') {
      this.writeScreen = this.nonDisplayedMemory;
    } else {
      this.writeScreen = this.displayedMemory;
      this.writeScreen.reset();
    }

    if (this.mode !== 'MODE_ROLL-UP') {
      this.displayedMemory.nrRollUpRows = null;
      this.nonDisplayedMemory.nrRollUpRows = null;
    }

    this.mode = newMode;
  };

  _proto6.insertChars = function insertChars(chars) {
    for (var i = 0; i < chars.length; i++) {
      this.writeScreen.insertChar(chars[i]);
    }

    var screen = this.writeScreen === this.displayedMemory ? 'DISP' : 'NON_DISP';
    this.logger.log(VerboseLevel.INFO, screen + ': ' + this.writeScreen.getDisplayText(true));

    if (this.mode === 'MODE_PAINT-ON' || this.mode === 'MODE_ROLL-UP') {
      this.logger.log(VerboseLevel.TEXT, 'DISPLAYED: ' + this.displayedMemory.getDisplayText(true));
      this.outputDataUpdate();
    }
  };

  _proto6.ccRCL = function ccRCL() {
    // Resume Caption Loading (switch mode to Pop On)
    this.logger.log(VerboseLevel.INFO, 'RCL - Resume Caption Loading');
    this.setMode('MODE_POP-ON');
  };

  _proto6.ccBS = function ccBS() {
    // BackSpace
    this.logger.log(VerboseLevel.INFO, 'BS - BackSpace');

    if (this.mode === 'MODE_TEXT') {
      return;
    }

    this.writeScreen.backSpace();

    if (this.writeScreen === this.displayedMemory) {
      this.outputDataUpdate();
    }
  };

  _proto6.ccAOF = function ccAOF() {// Reserved (formerly Alarm Off)
  };

  _proto6.ccAON = function ccAON() {// Reserved (formerly Alarm On)
  };

  _proto6.ccDER = function ccDER() {
    // Delete to End of Row
    this.logger.log(VerboseLevel.INFO, 'DER- Delete to End of Row');
    this.writeScreen.clearToEndOfRow();
    this.outputDataUpdate();
  };

  _proto6.ccRU = function ccRU(nrRows) {
    // Roll-Up Captions-2,3,or 4 Rows
    this.logger.log(VerboseLevel.INFO, 'RU(' + nrRows + ') - Roll Up');
    this.writeScreen = this.displayedMemory;
    this.setMode('MODE_ROLL-UP');
    this.writeScreen.setRollUpRows(nrRows);
  };

  _proto6.ccFON = function ccFON() {
    // Flash On
    this.logger.log(VerboseLevel.INFO, 'FON - Flash On');
    this.writeScreen.setPen({
      flash: true
    });
  };

  _proto6.ccRDC = function ccRDC() {
    // Resume Direct Captioning (switch mode to PaintOn)
    this.logger.log(VerboseLevel.INFO, 'RDC - Resume Direct Captioning');
    this.setMode('MODE_PAINT-ON');
  };

  _proto6.ccTR = function ccTR() {
    // Text Restart in text mode (not supported, however)
    this.logger.log(VerboseLevel.INFO, 'TR');
    this.setMode('MODE_TEXT');
  };

  _proto6.ccRTD = function ccRTD() {
    // Resume Text Display in Text mode (not supported, however)
    this.logger.log(VerboseLevel.INFO, 'RTD');
    this.setMode('MODE_TEXT');
  };

  _proto6.ccEDM = function ccEDM() {
    // Erase Displayed Memory
    this.logger.log(VerboseLevel.INFO, 'EDM - Erase Displayed Memory');
    this.displayedMemory.reset();
    this.outputDataUpdate(true);
  };

  _proto6.ccCR = function ccCR() {
    // Carriage Return
    this.logger.log(VerboseLevel.INFO, 'CR - Carriage Return');
    this.writeScreen.rollUp();
    this.outputDataUpdate(true);
  };

  _proto6.ccENM = function ccENM() {
    // Erase Non-Displayed Memory
    this.logger.log(VerboseLevel.INFO, 'ENM - Erase Non-displayed Memory');
    this.nonDisplayedMemory.reset();
  };

  _proto6.ccEOC = function ccEOC() {
    // End of Caption (Flip Memories)
    this.logger.log(VerboseLevel.INFO, 'EOC - End Of Caption');

    if (this.mode === 'MODE_POP-ON') {
      var tmp = this.displayedMemory;
      this.displayedMemory = this.nonDisplayedMemory;
      this.nonDisplayedMemory = tmp;
      this.writeScreen = this.nonDisplayedMemory;
      this.logger.log(VerboseLevel.TEXT, 'DISP: ' + this.displayedMemory.getDisplayText());
    }

    this.outputDataUpdate(true);
  };

  _proto6.ccTO = function ccTO(nrCols) {
    // Tab Offset 1,2, or 3 columns
    this.logger.log(VerboseLevel.INFO, 'TO(' + nrCols + ') - Tab Offset');
    this.writeScreen.moveCursor(nrCols);
  };

  _proto6.ccMIDROW = function ccMIDROW(secondByte) {
    // Parse MIDROW command
    var styles = {
      flash: false
    };
    styles.underline = secondByte % 2 === 1;
    styles.italics = secondByte >= 0x2e;

    if (!styles.italics) {
      var colorIndex = Math.floor(secondByte / 2) - 0x10;
      var colors = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta'];
      styles.foreground = colors[colorIndex];
    } else {
      styles.foreground = 'white';
    }

    this.logger.log(VerboseLevel.INFO, 'MIDROW: ' + JSON.stringify(styles));
    this.writeScreen.setPen(styles);
  };

  _proto6.outputDataUpdate = function outputDataUpdate(dispatch) {
    if (dispatch === void 0) {
      dispatch = false;
    }

    var time = this.logger.time;

    if (time === null) {
      return;
    }

    if (this.outputFilter) {
      if (this.cueStartTime === null && !this.displayedMemory.isEmpty()) {
        // Start of a new cue
        this.cueStartTime = time;
      } else {
        if (!this.displayedMemory.equals(this.lastOutputScreen)) {
          this.outputFilter.newCue(this.cueStartTime, time, this.lastOutputScreen);

          if (dispatch && this.outputFilter.dispatchCue) {
            this.outputFilter.dispatchCue();
          }

          this.cueStartTime = this.displayedMemory.isEmpty() ? null : time;
        }
      }

      this.lastOutputScreen.copy(this.displayedMemory);
    }
  };

  _proto6.cueSplitAtTime = function cueSplitAtTime(t) {
    if (this.outputFilter) {
      if (!this.displayedMemory.isEmpty()) {
        if (this.outputFilter.newCue) {
          this.outputFilter.newCue(this.cueStartTime, t, this.displayedMemory);
        }

        this.cueStartTime = t;
      }
    }
  };

  return Cea608Channel;
}();

var Cea608Parser = /*#__PURE__*/function () {
  function Cea608Parser(field, out1, out2) {
    this.channels = void 0;
    this.currentChannel = 0;
    this.cmdHistory = void 0;
    this.logger = void 0;
    var logger = new cea_608_parser_CaptionsLogger();
    this.channels = [null, new Cea608Channel(field, out1, logger), new Cea608Channel(field + 1, out2, logger)];
    this.cmdHistory = createCmdHistory();
    this.logger = logger;
  }

  var _proto7 = Cea608Parser.prototype;

  _proto7.getHandler = function getHandler(channel) {
    return this.channels[channel].getHandler();
  };

  _proto7.setHandler = function setHandler(channel, newHandler) {
    this.channels[channel].setHandler(newHandler);
  }
  /**
   * Add data for time t in forms of list of bytes (unsigned ints). The bytes are treated as pairs.
   */
  ;

  _proto7.addData = function addData(time, byteList) {
    var cmdFound;
    var a;
    var b;
    var charsFound = false;
    this.logger.time = time;

    for (var i = 0; i < byteList.length; i += 2) {
      a = byteList[i] & 0x7f;
      b = byteList[i + 1] & 0x7f;

      if (a === 0 && b === 0) {
        continue;
      } else {
        this.logger.log(VerboseLevel.DATA, '[' + numArrayToHexArray([byteList[i], byteList[i + 1]]) + '] -> (' + numArrayToHexArray([a, b]) + ')');
      }

      cmdFound = this.parseCmd(a, b);

      if (!cmdFound) {
        cmdFound = this.parseMidrow(a, b);
      }

      if (!cmdFound) {
        cmdFound = this.parsePAC(a, b);
      }

      if (!cmdFound) {
        cmdFound = this.parseBackgroundAttributes(a, b);
      }

      if (!cmdFound) {
        charsFound = this.parseChars(a, b);

        if (charsFound) {
          var currChNr = this.currentChannel;

          if (currChNr && currChNr > 0) {
            var channel = this.channels[currChNr];
            channel.insertChars(charsFound);
          } else {
            this.logger.log(VerboseLevel.WARNING, 'No channel found yet. TEXT-MODE?');
          }
        }
      }

      if (!cmdFound && !charsFound) {
        this.logger.log(VerboseLevel.WARNING, 'Couldn\'t parse cleaned data ' + numArrayToHexArray([a, b]) + ' orig: ' + numArrayToHexArray([byteList[i], byteList[i + 1]]));
      }
    }
  }
  /**
   * Parse Command.
   * @returns {Boolean} Tells if a command was found
   */
  ;

  _proto7.parseCmd = function parseCmd(a, b) {
    var cmdHistory = this.cmdHistory;
    var cond1 = (a === 0x14 || a === 0x1C || a === 0x15 || a === 0x1D) && b >= 0x20 && b <= 0x2F;
    var cond2 = (a === 0x17 || a === 0x1F) && b >= 0x21 && b <= 0x23;

    if (!(cond1 || cond2)) {
      return false;
    }

    if (hasCmdRepeated(a, b, cmdHistory)) {
      setLastCmd(null, null, cmdHistory);
      this.logger.log(VerboseLevel.DEBUG, 'Repeated command (' + numArrayToHexArray([a, b]) + ') is dropped');
      return true;
    }

    var chNr = a === 0x14 || a === 0x15 || a === 0x17 ? 1 : 2;
    var channel = this.channels[chNr];

    if (a === 0x14 || a === 0x15 || a === 0x1C || a === 0x1D) {
      if (b === 0x20) {
        channel.ccRCL();
      } else if (b === 0x21) {
        channel.ccBS();
      } else if (b === 0x22) {
        channel.ccAOF();
      } else if (b === 0x23) {
        channel.ccAON();
      } else if (b === 0x24) {
        channel.ccDER();
      } else if (b === 0x25) {
        channel.ccRU(2);
      } else if (b === 0x26) {
        channel.ccRU(3);
      } else if (b === 0x27) {
        channel.ccRU(4);
      } else if (b === 0x28) {
        channel.ccFON();
      } else if (b === 0x29) {
        channel.ccRDC();
      } else if (b === 0x2A) {
        channel.ccTR();
      } else if (b === 0x2B) {
        channel.ccRTD();
      } else if (b === 0x2C) {
        channel.ccEDM();
      } else if (b === 0x2D) {
        channel.ccCR();
      } else if (b === 0x2E) {
        channel.ccENM();
      } else if (b === 0x2F) {
        channel.ccEOC();
      }
    } else {
      // a == 0x17 || a == 0x1F
      channel.ccTO(b - 0x20);
    }

    setLastCmd(a, b, cmdHistory);
    this.currentChannel = chNr;
    return true;
  }
  /**
   * Parse midrow styling command
   * @returns {Boolean}
   */
  ;

  _proto7.parseMidrow = function parseMidrow(a, b) {
    var chNr = 0;

    if ((a === 0x11 || a === 0x19) && b >= 0x20 && b <= 0x2f) {
      if (a === 0x11) {
        chNr = 1;
      } else {
        chNr = 2;
      }

      if (chNr !== this.currentChannel) {
        this.logger.log(VerboseLevel.ERROR, 'Mismatch channel in midrow parsing');
        return false;
      }

      var channel = this.channels[chNr];

      if (!channel) {
        return false;
      }

      channel.ccMIDROW(b);
      this.logger.log(VerboseLevel.DEBUG, 'MIDROW (' + numArrayToHexArray([a, b]) + ')');
      return true;
    }

    return false;
  }
  /**
   * Parse Preable Access Codes (Table 53).
   * @returns {Boolean} Tells if PAC found
   */
  ;

  _proto7.parsePAC = function parsePAC(a, b) {
    var row;
    var cmdHistory = this.cmdHistory;
    var case1 = (a >= 0x11 && a <= 0x17 || a >= 0x19 && a <= 0x1F) && b >= 0x40 && b <= 0x7F;
    var case2 = (a === 0x10 || a === 0x18) && b >= 0x40 && b <= 0x5F;

    if (!(case1 || case2)) {
      return false;
    }

    if (hasCmdRepeated(a, b, cmdHistory)) {
      setLastCmd(null, null, cmdHistory);
      return true; // Repeated commands are dropped (once)
    }

    var chNr = a <= 0x17 ? 1 : 2;

    if (b >= 0x40 && b <= 0x5F) {
      row = chNr === 1 ? rowsLowCh1[a] : rowsLowCh2[a];
    } else {
      // 0x60 <= b <= 0x7F
      row = chNr === 1 ? rowsHighCh1[a] : rowsHighCh2[a];
    }

    var channel = this.channels[chNr];

    if (!channel) {
      return false;
    }

    channel.setPAC(this.interpretPAC(row, b));
    setLastCmd(a, b, cmdHistory);
    this.currentChannel = chNr;
    return true;
  }
  /**
   * Interpret the second byte of the pac, and return the information.
   * @returns {Object} pacData with style parameters.
   */
  ;

  _proto7.interpretPAC = function interpretPAC(row, _byte3) {
    var pacIndex = _byte3;
    var pacData = {
      color: null,
      italics: false,
      indent: null,
      underline: false,
      row: row
    };

    if (_byte3 > 0x5F) {
      pacIndex = _byte3 - 0x60;
    } else {
      pacIndex = _byte3 - 0x40;
    }

    pacData.underline = (pacIndex & 1) === 1;

    if (pacIndex <= 0xd) {
      pacData.color = ['white', 'green', 'blue', 'cyan', 'red', 'yellow', 'magenta', 'white'][Math.floor(pacIndex / 2)];
    } else if (pacIndex <= 0xf) {
      pacData.italics = true;
      pacData.color = 'white';
    } else {
      pacData.indent = Math.floor((pacIndex - 0x10) / 2) * 4;
    }

    return pacData; // Note that row has zero offset. The spec uses 1.
  }
  /**
   * Parse characters.
   * @returns An array with 1 to 2 codes corresponding to chars, if found. null otherwise.
   */
  ;

  _proto7.parseChars = function parseChars(a, b) {
    var channelNr;
    var charCodes = null;
    var charCode1 = null;

    if (a >= 0x19) {
      channelNr = 2;
      charCode1 = a - 8;
    } else {
      channelNr = 1;
      charCode1 = a;
    }

    if (charCode1 >= 0x11 && charCode1 <= 0x13) {
      // Special character
      var oneCode = b;

      if (charCode1 === 0x11) {
        oneCode = b + 0x50;
      } else if (charCode1 === 0x12) {
        oneCode = b + 0x70;
      } else {
        oneCode = b + 0x90;
      }

      this.logger.log(VerboseLevel.INFO, 'Special char \'' + getCharForByte(oneCode) + '\' in channel ' + channelNr);
      charCodes = [oneCode];
    } else if (a >= 0x20 && a <= 0x7f) {
      charCodes = b === 0 ? [a] : [a, b];
    }

    if (charCodes) {
      var hexCodes = numArrayToHexArray(charCodes);
      this.logger.log(VerboseLevel.DEBUG, 'Char codes =  ' + hexCodes.join(','));
      setLastCmd(a, b, this.cmdHistory);
    }

    return charCodes;
  }
  /**
   * Parse extended background attributes as well as new foreground color black.
   * @returns {Boolean} Tells if background attributes are found
   */
  ;

  _proto7.parseBackgroundAttributes = function parseBackgroundAttributes(a, b) {
    var case1 = (a === 0x10 || a === 0x18) && b >= 0x20 && b <= 0x2f;
    var case2 = (a === 0x17 || a === 0x1f) && b >= 0x2d && b <= 0x2f;

    if (!(case1 || case2)) {
      return false;
    }

    var index;
    var bkgData = {};

    if (a === 0x10 || a === 0x18) {
      index = Math.floor((b - 0x20) / 2);
      bkgData.background = backgroundColors[index];

      if (b % 2 === 1) {
        bkgData.background = bkgData.background + '_semi';
      }
    } else if (b === 0x2d) {
      bkgData.background = 'transparent';
    } else {
      bkgData.foreground = 'black';

      if (b === 0x2f) {
        bkgData.underline = true;
      }
    }

    var chNr = a <= 0x17 ? 1 : 2;
    var channel = this.channels[chNr];
    channel.setBkgData(bkgData);
    setLastCmd(a, b, this.cmdHistory);
    return true;
  }
  /**
   * Reset state of parser and its channels.
   */
  ;

  _proto7.reset = function reset() {
    for (var i = 0; i < Object.keys(this.channels).length; i++) {
      var channel = this.channels[i];

      if (channel) {
        channel.reset();
      }
    }

    this.cmdHistory = createCmdHistory();
  }
  /**
   * Trigger the generation of a cue, and the start of a new one if displayScreens are not empty.
   */
  ;

  _proto7.cueSplitAtTime = function cueSplitAtTime(t) {
    for (var i = 0; i < this.channels.length; i++) {
      var channel = this.channels[i];

      if (channel) {
        channel.cueSplitAtTime(t);
      }
    }
  };

  return Cea608Parser;
}();

function setLastCmd(a, b, cmdHistory) {
  cmdHistory.a = a;
  cmdHistory.b = b;
}

function hasCmdRepeated(a, b, cmdHistory) {
  return cmdHistory.a === a && cmdHistory.b === b;
}

function createCmdHistory() {
  return {
    a: null,
    b: null
  };
}

/* harmony default export */ var cea_608_parser = (Cea608Parser);
// CONCATENATED MODULE: ./src/utils/output-filter.ts
var OutputFilter = /*#__PURE__*/function () {
  function OutputFilter(timelineController, trackName) {
    this.timelineController = void 0;
    this.cueRanges = [];
    this.trackName = void 0;
    this.startTime = null;
    this.endTime = null;
    this.screen = null;
    this.timelineController = timelineController;
    this.trackName = trackName;
  }

  var _proto = OutputFilter.prototype;

  _proto.dispatchCue = function dispatchCue() {
    if (this.startTime === null) {
      return;
    }

    this.timelineController.addCues(this.trackName, this.startTime, this.endTime, this.screen, this.cueRanges);
    this.startTime = null;
  };

  _proto.newCue = function newCue(startTime, endTime, screen) {
    if (this.startTime === null || this.startTime > startTime) {
      this.startTime = startTime;
    }

    this.endTime = endTime;
    this.screen = screen;
    this.timelineController.createCaptionsTrack(this.trackName);
  };

  _proto.reset = function reset() {
    this.cueRanges = [];
  };

  return OutputFilter;
}();


// CONCATENATED MODULE: ./src/utils/webvtt-parser.js





 // String.prototype.startsWith is not supported in IE11

var startsWith = function startsWith(inputString, searchString, position) {
  return inputString.substr(position || 0, searchString.length) === searchString;
};

var webvtt_parser_cueString2millis = function cueString2millis(timeString) {
  var ts = parseInt(timeString.substr(-3));
  var secs = parseInt(timeString.substr(-6, 2));
  var mins = parseInt(timeString.substr(-9, 2));
  var hours = timeString.length > 9 ? parseInt(timeString.substr(0, timeString.indexOf(':'))) : 0;

  if (!Object(number["isFiniteNumber"])(ts) || !Object(number["isFiniteNumber"])(secs) || !Object(number["isFiniteNumber"])(mins) || !Object(number["isFiniteNumber"])(hours)) {
    throw Error("Malformed X-TIMESTAMP-MAP: Local:" + timeString);
  }

  ts += 1000 * secs;
  ts += 60 * 1000 * mins;
  ts += 60 * 60 * 1000 * hours;
  return ts;
}; // From https://github.com/darkskyapp/string-hash


var hash = function hash(text) {
  var hash = 5381;
  var i = text.length;

  while (i) {
    hash = hash * 33 ^ text.charCodeAt(--i);
  }

  return (hash >>> 0).toString();
};

var calculateOffset = function calculateOffset(vttCCs, cc, presentationTime) {
  var currCC = vttCCs[cc];
  var prevCC = vttCCs[currCC.prevCC]; // This is the first discontinuity or cues have been processed since the last discontinuity
  // Offset = current discontinuity time

  if (!prevCC || !prevCC.new && currCC.new) {
    vttCCs.ccOffset = vttCCs.presentationOffset = currCC.start;
    currCC.new = false;
    return;
  } // There have been discontinuities since cues were last parsed.
  // Offset = time elapsed


  while (prevCC && prevCC.new) {
    vttCCs.ccOffset += currCC.start - prevCC.start;
    currCC.new = false;
    currCC = prevCC;
    prevCC = vttCCs[currCC.prevCC];
  }

  vttCCs.presentationOffset = presentationTime;
};

var WebVTTParser = {
  parse: function parse(vttByteArray, syncPTS, vttCCs, cc, callBack, errorCallBack) {
    // Convert byteArray into string, replacing any somewhat exotic linefeeds with "\n", then split on that character.
    var re = /\r\n|\n\r|\n|\r/g; // Uint8Array.prototype.reduce is not implemented in IE11

    var vttLines = Object(id3["utf8ArrayToStr"])(new Uint8Array(vttByteArray)).trim().replace(re, '\n').split('\n');
    var cueTime = '00:00.000';
    var mpegTs = 0;
    var localTime = 0;
    var presentationTime = 0;
    var cues = [];
    var parsingError;
    var inHeader = true;
    var timestampMap = false; // let VTTCue = VTTCue || window.TextTrackCue;
    // Create parser object using VTTCue with TextTrackCue fallback on certain browsers.

    var parser = new vttparser();

    parser.oncue = function (cue) {
      // Adjust cue timing; clamp cues to start no earlier than - and drop cues that don't end after - 0 on timeline.
      var currCC = vttCCs[cc];
      var cueOffset = vttCCs.ccOffset; // Update offsets for new discontinuities

      if (currCC && currCC.new) {
        if (localTime !== undefined) {
          // When local time is provided, offset = discontinuity start time - local time
          cueOffset = vttCCs.ccOffset = currCC.start;
        } else {
          calculateOffset(vttCCs, cc, presentationTime);
        }
      }

      if (presentationTime) {
        // If we have MPEGTS, offset = presentation time + discontinuity offset
        cueOffset = presentationTime - vttCCs.presentationOffset;
      }

      if (timestampMap) {
        cue.startTime += cueOffset - localTime;
        cue.endTime += cueOffset - localTime;
      } // Create a unique hash id for a cue based on start/end times and text.
      // This helps timeline-controller to avoid showing repeated captions.


      cue.id = hash(cue.startTime.toString()) + hash(cue.endTime.toString()) + hash(cue.text); // Fix encoding of special characters. TODO: Test with all sorts of weird characters.

      cue.text = decodeURIComponent(encodeURIComponent(cue.text));

      if (cue.endTime > 0) {
        cues.push(cue);
      }
    };

    parser.onparsingerror = function (e) {
      parsingError = e;
    };

    parser.onflush = function () {
      if (parsingError && errorCallBack) {
        errorCallBack(parsingError);
        return;
      }

      callBack(cues);
    }; // Go through contents line by line.


    vttLines.forEach(function (line) {
      if (inHeader) {
        // Look for X-TIMESTAMP-MAP in header.
        if (startsWith(line, 'X-TIMESTAMP-MAP=')) {
          // Once found, no more are allowed anyway, so stop searching.
          inHeader = false;
          timestampMap = true; // Extract LOCAL and MPEGTS.

          line.substr(16).split(',').forEach(function (timestamp) {
            if (startsWith(timestamp, 'LOCAL:')) {
              cueTime = timestamp.substr(6);
            } else if (startsWith(timestamp, 'MPEGTS:')) {
              mpegTs = parseInt(timestamp.substr(7));
            }
          });

          try {
            // Calculate subtitle offset in milliseconds.
            if (syncPTS + (vttCCs[cc].start * 90000 || 0) < 0) {
              syncPTS += 8589934592;
            } // Adjust MPEGTS by sync PTS.


            mpegTs -= syncPTS; // Convert cue time to seconds

            localTime = webvtt_parser_cueString2millis(cueTime) / 1000; // Convert MPEGTS to seconds from 90kHz.

            presentationTime = mpegTs / 90000;
          } catch (e) {
            timestampMap = false;
            parsingError = e;
          } // Return without parsing X-TIMESTAMP-MAP line.


          return;
        } else if (line === '') {
          inHeader = false;
        }
      } // Parse line by default.


      parser.parse(line + '\n');
    });
    parser.flush();
  }
};
/* harmony default export */ var webvtt_parser = (WebVTTParser);
// CONCATENATED MODULE: ./src/controller/timeline-controller.ts



function timeline_controller_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function timeline_controller_inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }









var timeline_controller_TimelineController = /*#__PURE__*/function (_EventHandler) {
  timeline_controller_inheritsLoose(TimelineController, _EventHandler);

  function TimelineController(hls) {
    var _this;

    _this = _EventHandler.call(this, hls, events["default"].MEDIA_ATTACHING, events["default"].MEDIA_DETACHING, events["default"].FRAG_PARSING_USERDATA, events["default"].FRAG_DECRYPTED, events["default"].MANIFEST_LOADING, events["default"].MANIFEST_LOADED, events["default"].FRAG_LOADED, events["default"].INIT_PTS_FOUND) || this;
    _this.media = null;
    _this.config = void 0;
    _this.enabled = true;
    _this.Cues = void 0;
    _this.textTracks = [];
    _this.tracks = [];
    _this.initPTS = [];
    _this.unparsedVttFrags = [];
    _this.captionsTracks = {};
    _this.nonNativeCaptionsTracks = {};
    _this.captionsProperties = void 0;
    _this.cea608Parser1 = void 0;
    _this.cea608Parser2 = void 0;
    _this.lastSn = -1;
    _this.prevCC = -1;
    _this.vttCCs = newVTTCCs();
    _this.hls = hls;
    _this.config = hls.config;
    _this.Cues = hls.config.cueHandler;
    _this.captionsProperties = {
      textTrack1: {
        label: _this.config.captionsTextTrack1Label,
        languageCode: _this.config.captionsTextTrack1LanguageCode
      },
      textTrack2: {
        label: _this.config.captionsTextTrack2Label,
        languageCode: _this.config.captionsTextTrack2LanguageCode
      },
      textTrack3: {
        label: _this.config.captionsTextTrack3Label,
        languageCode: _this.config.captionsTextTrack3LanguageCode
      },
      textTrack4: {
        label: _this.config.captionsTextTrack4Label,
        languageCode: _this.config.captionsTextTrack4LanguageCode
      }
    };

    if (_this.config.enableCEA708Captions) {
      var channel1 = new OutputFilter(timeline_controller_assertThisInitialized(_this), 'textTrack1');
      var channel2 = new OutputFilter(timeline_controller_assertThisInitialized(_this), 'textTrack2');
      var channel3 = new OutputFilter(timeline_controller_assertThisInitialized(_this), 'textTrack3');
      var channel4 = new OutputFilter(timeline_controller_assertThisInitialized(_this), 'textTrack4');
      _this.cea608Parser1 = new cea_608_parser(1, channel1, channel2);
      _this.cea608Parser2 = new cea_608_parser(3, channel3, channel4);
    }

    return _this;
  }

  var _proto = TimelineController.prototype;

  _proto.addCues = function addCues(trackName, startTime, endTime, screen, cueRanges) {
    // skip cues which overlap more than 50% with previously parsed time ranges
    var merged = false;

    for (var i = cueRanges.length; i--;) {
      var cueRange = cueRanges[i];
      var overlap = intersection(cueRange[0], cueRange[1], startTime, endTime);

      if (overlap >= 0) {
        cueRange[0] = Math.min(cueRange[0], startTime);
        cueRange[1] = Math.max(cueRange[1], endTime);
        merged = true;

        if (overlap / (endTime - startTime) > 0.5) {
          return;
        }
      }
    }

    if (!merged) {
      cueRanges.push([startTime, endTime]);
    }

    if (this.config.renderTextTracksNatively) {
      this.Cues.newCue(this.captionsTracks[trackName], startTime, endTime, screen);
    } else {
      var cues = this.Cues.newCue(null, startTime, endTime, screen);
      this.hls.trigger(events["default"].CUES_PARSED, {
        type: 'captions',
        cues: cues,
        track: trackName
      });
    }
  } // Triggered when an initial PTS is found; used for synchronisation of WebVTT.
  ;

  _proto.onInitPtsFound = function onInitPtsFound(data) {
    var _this2 = this;

    var frag = data.frag,
        id = data.id,
        initPTS = data.initPTS;
    var unparsedVttFrags = this.unparsedVttFrags;

    if (id === 'main') {
      this.initPTS[frag.cc] = initPTS;
    } // Due to asynchronous processing, initial PTS may arrive later than the first VTT fragments are loaded.
    // Parse any unparsed fragments upon receiving the initial PTS.


    if (unparsedVttFrags.length) {
      this.unparsedVttFrags = [];
      unparsedVttFrags.forEach(function (frag) {
        _this2.onFragLoaded(frag);
      });
    }
  };

  _proto.getExistingTrack = function getExistingTrack(trackName) {
    var media = this.media;

    if (media) {
      for (var i = 0; i < media.textTracks.length; i++) {
        var textTrack = media.textTracks[i];

        if (textTrack[trackName]) {
          return textTrack;
        }
      }
    }

    return null;
  };

  _proto.createCaptionsTrack = function createCaptionsTrack(trackName) {
    if (this.config.renderTextTracksNatively) {
      this.createNativeTrack(trackName);
    } else {
      this.createNonNativeTrack(trackName);
    }
  };

  _proto.createNativeTrack = function createNativeTrack(trackName) {
    if (this.captionsTracks[trackName]) {
      return;
    }

    var captionsProperties = this.captionsProperties,
        captionsTracks = this.captionsTracks,
        media = this.media;
    var _captionsProperties$t = captionsProperties[trackName],
        label = _captionsProperties$t.label,
        languageCode = _captionsProperties$t.languageCode; // Enable reuse of existing text track.

    var existingTrack = this.getExistingTrack(trackName);

    if (!existingTrack) {
      var textTrack = this.createTextTrack('captions', label, languageCode);

      if (textTrack) {
        // Set a special property on the track so we know it's managed by Hls.js
        textTrack[trackName] = true;
        captionsTracks[trackName] = textTrack;
      }
    } else {
      captionsTracks[trackName] = existingTrack;
      clearCurrentCues(captionsTracks[trackName]);
      sendAddTrackEvent(captionsTracks[trackName], media);
    }
  };

  _proto.createNonNativeTrack = function createNonNativeTrack(trackName) {
    if (this.nonNativeCaptionsTracks[trackName]) {
      return;
    } // Create a list of a single track for the provider to consume


    var trackProperties = this.captionsProperties[trackName];

    if (!trackProperties) {
      return;
    }

    var label = trackProperties.label;
    var track = {
      _id: trackName,
      label: label,
      kind: 'captions',
      default: trackProperties.media ? !!trackProperties.media.default : false,
      closedCaptions: trackProperties.media
    };
    this.nonNativeCaptionsTracks[trackName] = track;
    this.hls.trigger(events["default"].NON_NATIVE_TEXT_TRACKS_FOUND, {
      tracks: [track]
    });
  };

  _proto.createTextTrack = function createTextTrack(kind, label, lang) {
    var media = this.media;

    if (!media) {
      return;
    }

    return media.addTextTrack(kind, label, lang);
  };

  _proto.destroy = function destroy() {
    _EventHandler.prototype.destroy.call(this);
  };

  _proto.onMediaAttaching = function onMediaAttaching(data) {
    this.media = data.media;

    this._cleanTracks();
  };

  _proto.onMediaDetaching = function onMediaDetaching() {
    var captionsTracks = this.captionsTracks;
    Object.keys(captionsTracks).forEach(function (trackName) {
      clearCurrentCues(captionsTracks[trackName]);
      delete captionsTracks[trackName];
    });
    this.nonNativeCaptionsTracks = {};
  };

  _proto.onManifestLoading = function onManifestLoading() {
    this.lastSn = -1; // Detect discontiguity in fragment parsing

    this.prevCC = -1;
    this.vttCCs = newVTTCCs(); // Detect discontinuity in subtitle manifests

    this._cleanTracks();

    this.tracks = [];
    this.captionsTracks = {};
    this.nonNativeCaptionsTracks = {};
  };

  _proto._cleanTracks = function _cleanTracks() {
    // clear outdated subtitles
    var media = this.media;

    if (!media) {
      return;
    }

    var textTracks = media.textTracks;

    if (textTracks) {
      for (var i = 0; i < textTracks.length; i++) {
        clearCurrentCues(textTracks[i]);
      }
    }
  };

  _proto.onManifestLoaded = function onManifestLoaded(data) {
    var _this3 = this;

    this.textTracks = [];
    this.unparsedVttFrags = this.unparsedVttFrags || [];
    this.initPTS = [];

    if (this.cea608Parser1 && this.cea608Parser2) {
      this.cea608Parser1.reset();
      this.cea608Parser2.reset();
    }

    if (this.config.enableWebVTT) {
      var tracks = data.subtitles || [];
      var sameTracks = this.tracks && tracks && this.tracks.length === tracks.length;
      this.tracks = data.subtitles || [];

      if (this.config.renderTextTracksNatively) {
        var inUseTracks = this.media ? this.media.textTracks : [];
        this.tracks.forEach(function (track, index) {
          var textTrack;

          if (index < inUseTracks.length) {
            var inUseTrack = null;

            for (var i = 0; i < inUseTracks.length; i++) {
              if (canReuseVttTextTrack(inUseTracks[i], track)) {
                inUseTrack = inUseTracks[i];
                break;
              }
            } // Reuse tracks with the same label, but do not reuse 608/708 tracks


            if (inUseTrack) {
              textTrack = inUseTrack;
            }
          }

          if (!textTrack) {
            textTrack = _this3.createTextTrack('subtitles', track.name, track.lang);
          }

          if (track.default) {
            textTrack.mode = _this3.hls.subtitleDisplay ? 'showing' : 'hidden';
          } else {
            textTrack.mode = 'disabled';
          }

          _this3.textTracks.push(textTrack);
        });
      } else if (!sameTracks && this.tracks && this.tracks.length) {
        // Create a list of tracks for the provider to consume
        var tracksList = this.tracks.map(function (track) {
          return {
            label: track.name,
            kind: track.type.toLowerCase(),
            default: track.default,
            subtitleTrack: track
          };
        });
        this.hls.trigger(events["default"].NON_NATIVE_TEXT_TRACKS_FOUND, {
          tracks: tracksList
        });
      }
    }

    if (this.config.enableCEA708Captions && data.captions) {
      data.captions.forEach(function (captionsTrack) {
        var instreamIdMatch = /(?:CC|SERVICE)([1-4])/.exec(captionsTrack.instreamId);

        if (!instreamIdMatch) {
          return;
        }

        var trackName = "textTrack" + instreamIdMatch[1];
        var trackProperties = _this3.captionsProperties[trackName];

        if (!trackProperties) {
          return;
        }

        trackProperties.label = captionsTrack.name;

        if (captionsTrack.lang) {
          // optional attribute
          trackProperties.languageCode = captionsTrack.lang;
        }

        trackProperties.media = captionsTrack;
      });
    }
  };

  _proto.onFragLoaded = function onFragLoaded(data) {
    var frag = data.frag,
        payload = data.payload;
    var cea608Parser1 = this.cea608Parser1,
        cea608Parser2 = this.cea608Parser2,
        initPTS = this.initPTS,
        lastSn = this.lastSn,
        unparsedVttFrags = this.unparsedVttFrags;

    if (frag.type === 'main') {
      var sn = frag.sn; // if this frag isn't contiguous, clear the parser so cues with bad start/end times aren't added to the textTrack

      if (frag.sn !== lastSn + 1) {
        if (cea608Parser1 && cea608Parser2) {
          cea608Parser1.reset();
          cea608Parser2.reset();
        }
      }

      this.lastSn = sn;
    } // eslint-disable-line brace-style
    // If fragment is subtitle type, parse as WebVTT.
    else if (frag.type === 'subtitle') {
        if (payload.byteLength) {
          // We need an initial synchronisation PTS. Store fragments as long as none has arrived.
          if (!Object(number["isFiniteNumber"])(initPTS[frag.cc])) {
            unparsedVttFrags.push(data);

            if (initPTS.length) {
              // finish unsuccessfully, otherwise the subtitle-stream-controller could be blocked from loading new frags.
              this.hls.trigger(events["default"].SUBTITLE_FRAG_PROCESSED, {
                success: false,
                frag: frag
              });
            }

            return;
          }

          var decryptData = frag.decryptdata; // If the subtitles are not encrypted, parse VTTs now. Otherwise, we need to wait.

          if (decryptData == null || decryptData.key == null || decryptData.method !== 'AES-128') {
            this._parseVTTs(frag, payload);
          }
        } else {
          // In case there is no payload, finish unsuccessfully.
          this.hls.trigger(events["default"].SUBTITLE_FRAG_PROCESSED, {
            success: false,
            frag: frag
          });
        }
      }
  };

  _proto._parseVTTs = function _parseVTTs(frag, payload) {
    var _this4 = this;

    var hls = this.hls,
        prevCC = this.prevCC,
        textTracks = this.textTracks,
        vttCCs = this.vttCCs;

    if (!vttCCs[frag.cc]) {
      vttCCs[frag.cc] = {
        start: frag.start,
        prevCC: prevCC,
        new: true
      };
      this.prevCC = frag.cc;
    } // Parse the WebVTT file contents.


    webvtt_parser.parse(payload, this.initPTS[frag.cc], vttCCs, frag.cc, function (cues) {
      if (_this4.config.renderTextTracksNatively) {
        var currentTrack = textTracks[frag.level]; // WebVTTParser.parse is an async method and if the currently selected text track mode is set to "disabled"
        // before parsing is done then don't try to access currentTrack.cues.getCueById as cues will be null
        // and trying to access getCueById method of cues will throw an exception
        // Because we check if the mode is diabled, we can force check `cues` below. They can't be null.

        if (currentTrack.mode === 'disabled') {
          hls.trigger(events["default"].SUBTITLE_FRAG_PROCESSED, {
            success: false,
            frag: frag
          });
          return;
        } // Add cues and trigger event with success true.


        cues.forEach(function (cue) {
          // Sometimes there are cue overlaps on segmented vtts so the same
          // cue can appear more than once in different vtt files.
          // This avoid showing duplicated cues with same timecode and text.
          if (!currentTrack.cues.getCueById(cue.id)) {
            try {
              currentTrack.addCue(cue);

              if (!currentTrack.cues.getCueById(cue.id)) {
                throw new Error("addCue is failed for: " + cue);
              }
            } catch (err) {
              logger["logger"].debug("Failed occurred on adding cues: " + err);
              var textTrackCue = new window.TextTrackCue(cue.startTime, cue.endTime, cue.text);
              textTrackCue.id = cue.id;
              currentTrack.addCue(textTrackCue);
            }
          }
        });
      } else {
        var trackId = _this4.tracks[frag.level].default ? 'default' : 'subtitles' + frag.level;
        hls.trigger(events["default"].CUES_PARSED, {
          type: 'subtitles',
          cues: cues,
          track: trackId
        });
      }

      hls.trigger(events["default"].SUBTITLE_FRAG_PROCESSED, {
        success: true,
        frag: frag
      });
    }, function (e) {
      // Something went wrong while parsing. Trigger event with success false.
      logger["logger"].log("Failed to parse VTT cue: " + e);
      hls.trigger(events["default"].SUBTITLE_FRAG_PROCESSED, {
        success: false,
        frag: frag
      });
    });
  };

  _proto.onFragDecrypted = function onFragDecrypted(data) {
    var frag = data.frag,
        payload = data.payload;

    if (frag.type === 'subtitle') {
      if (!Object(number["isFiniteNumber"])(this.initPTS[frag.cc])) {
        this.unparsedVttFrags.push(data);
        return;
      }

      this._parseVTTs(frag, payload);
    }
  };

  _proto.onFragParsingUserdata = function onFragParsingUserdata(data) {
    var cea608Parser1 = this.cea608Parser1,
        cea608Parser2 = this.cea608Parser2;

    if (!this.enabled || !(cea608Parser1 && cea608Parser2)) {
      return;
    } // If the event contains captions (found in the bytes property), push all bytes into the parser immediately
    // It will create the proper timestamps based on the PTS value


    for (var i = 0; i < data.samples.length; i++) {
      var ccBytes = data.samples[i].bytes;

      if (ccBytes) {
        var ccdatas = this.extractCea608Data(ccBytes);
        cea608Parser1.addData(data.samples[i].pts, ccdatas[0]);
        cea608Parser2.addData(data.samples[i].pts, ccdatas[1]);
      }
    }
  };

  _proto.extractCea608Data = function extractCea608Data(byteArray) {
    var count = byteArray[0] & 31;
    var position = 2;
    var actualCCBytes = [[], []];

    for (var j = 0; j < count; j++) {
      var tmpByte = byteArray[position++];
      var ccbyte1 = 0x7F & byteArray[position++];
      var ccbyte2 = 0x7F & byteArray[position++];
      var ccValid = (4 & tmpByte) !== 0;
      var ccType = 3 & tmpByte;

      if (ccbyte1 === 0 && ccbyte2 === 0) {
        continue;
      }

      if (ccValid) {
        if (ccType === 0 || ccType === 1) {
          actualCCBytes[ccType].push(ccbyte1);
          actualCCBytes[ccType].push(ccbyte2);
        }
      }
    }

    return actualCCBytes;
  };

  return TimelineController;
}(event_handler);

function canReuseVttTextTrack(inUseTrack, manifestTrack) {
  return inUseTrack && inUseTrack.label === manifestTrack.name && !(inUseTrack.textTrack1 || inUseTrack.textTrack2);
}

function intersection(x1, x2, y1, y2) {
  return Math.min(x2, y2) - Math.max(x1, y1);
}

function newVTTCCs() {
  return {
    ccOffset: 0,
    presentationOffset: 0,
    0: {
      start: 0,
      prevCC: -1,
      new: false
    }
  };
}

/* harmony default export */ var timeline_controller = (timeline_controller_TimelineController);
// CONCATENATED MODULE: ./src/controller/subtitle-track-controller.js




function subtitle_track_controller_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function subtitle_track_controller_createClass(Constructor, protoProps, staticProps) { if (protoProps) subtitle_track_controller_defineProperties(Constructor.prototype, protoProps); if (staticProps) subtitle_track_controller_defineProperties(Constructor, staticProps); return Constructor; }

function subtitle_track_controller_inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }







var subtitle_track_controller_SubtitleTrackController = /*#__PURE__*/function (_EventHandler) {
  subtitle_track_controller_inheritsLoose(SubtitleTrackController, _EventHandler);

  function SubtitleTrackController(hls) {
    var _this;

    _this = _EventHandler.call(this, hls, events["default"].MEDIA_ATTACHED, events["default"].MEDIA_DETACHING, events["default"].MANIFEST_LOADED, events["default"].SUBTITLE_TRACK_LOADED) || this;
    _this.tracks = [];
    _this.trackId = -1;
    _this.media = null;
    _this.stopped = true;
    /**
     * @member {boolean} subtitleDisplay Enable/disable subtitle display rendering
     */

    _this.subtitleDisplay = true;
    /**
     * Keeps reference to a default track id when media has not been attached yet
     * @member {number}
     */

    _this.queuedDefaultTrack = null;
    return _this;
  }

  var _proto = SubtitleTrackController.prototype;

  _proto.destroy = function destroy() {
    event_handler.prototype.destroy.call(this);
  } // Listen for subtitle track change, then extract the current track ID.
  ;

  _proto.onMediaAttached = function onMediaAttached(data) {
    var _this2 = this;

    this.media = data.media;

    if (!this.media) {
      return;
    }

    if (Object(number["isFiniteNumber"])(this.queuedDefaultTrack)) {
      this.subtitleTrack = this.queuedDefaultTrack;
      this.queuedDefaultTrack = null;
    }

    this.trackChangeListener = this._onTextTracksChanged.bind(this);
    this.useTextTrackPolling = !(this.media.textTracks && 'onchange' in this.media.textTracks);

    if (this.useTextTrackPolling) {
      this.subtitlePollingInterval = setInterval(function () {
        _this2.trackChangeListener();
      }, 500);
    } else {
      this.media.textTracks.addEventListener('change', this.trackChangeListener);
    }
  };

  _proto.onMediaDetaching = function onMediaDetaching() {
    if (!this.media) {
      return;
    }

    if (this.useTextTrackPolling) {
      clearInterval(this.subtitlePollingInterval);
    } else {
      this.media.textTracks.removeEventListener('change', this.trackChangeListener);
    }

    if (Object(number["isFiniteNumber"])(this.subtitleTrack)) {
      this.queuedDefaultTrack = this.subtitleTrack;
    }

    var textTracks = filterSubtitleTracks(this.media.textTracks); // Clear loaded cues on media detachment from tracks

    textTracks.forEach(function (track) {
      clearCurrentCues(track);
    }); // Disable all subtitle tracks before detachment so when reattached only tracks in that content are enabled.

    this.subtitleTrack = -1;
    this.media = null;
  } // Fired whenever a new manifest is loaded.
  ;

  _proto.onManifestLoaded = function onManifestLoaded(data) {
    var _this3 = this;

    var tracks = data.subtitles || [];
    this.tracks = tracks;
    this.hls.trigger(events["default"].SUBTITLE_TRACKS_UPDATED, {
      subtitleTracks: tracks
    }); // loop through available subtitle tracks and autoselect default if needed
    // TODO: improve selection logic to handle forced, etc

    tracks.forEach(function (track) {
      if (track.default) {
        // setting this.subtitleTrack will trigger internal logic
        // if media has not been attached yet, it will fail
        // we keep a reference to the default track id
        // and we'll set subtitleTrack when onMediaAttached is triggered
        if (_this3.media) {
          _this3.subtitleTrack = track.id;
        } else {
          _this3.queuedDefaultTrack = track.id;
        }
      }
    });
  };

  _proto.onSubtitleTrackLoaded = function onSubtitleTrackLoaded(data) {
    var _this4 = this;

    var id = data.id,
        details = data.details;
    var trackId = this.trackId,
        tracks = this.tracks;
    var currentTrack = tracks[trackId];

    if (id >= tracks.length || id !== trackId || !currentTrack || this.stopped) {
      this._clearReloadTimer();

      return;
    }

    logger["logger"].log("subtitle track " + id + " loaded");

    if (details.live) {
      var reloadInterval = computeReloadInterval(currentTrack.details, details, data.stats.trequest);
      logger["logger"].log("Reloading live subtitle playlist in " + reloadInterval + "ms");
      this.timer = setTimeout(function () {
        _this4._loadCurrentTrack();
      }, reloadInterval);
    } else {
      this._clearReloadTimer();
    }
  };

  _proto.startLoad = function startLoad() {
    this.stopped = false;

    this._loadCurrentTrack();
  };

  _proto.stopLoad = function stopLoad() {
    this.stopped = true;

    this._clearReloadTimer();
  }
  /** get alternate subtitle tracks list from playlist **/
  ;

  _proto._clearReloadTimer = function _clearReloadTimer() {
    if (this.timer) {
      clearTimeout(this.timer);
      this.timer = null;
    }
  };

  _proto._loadCurrentTrack = function _loadCurrentTrack() {
    var trackId = this.trackId,
        tracks = this.tracks,
        hls = this.hls;
    var currentTrack = tracks[trackId];

    if (trackId < 0 || !currentTrack || currentTrack.details && !currentTrack.details.live) {
      return;
    }

    logger["logger"].log("Loading subtitle track " + trackId);
    hls.trigger(events["default"].SUBTITLE_TRACK_LOADING, {
      url: currentTrack.url,
      id: trackId
    });
  }
  /**
   * Disables the old subtitleTrack and sets current mode on the next subtitleTrack.
   * This operates on the DOM textTracks.
   * A value of -1 will disable all subtitle tracks.
   * @param newId - The id of the next track to enable
   * @private
   */
  ;

  _proto._toggleTrackModes = function _toggleTrackModes(newId) {
    var media = this.media,
        subtitleDisplay = this.subtitleDisplay,
        trackId = this.trackId;

    if (!media) {
      return;
    }

    var textTracks = filterSubtitleTracks(media.textTracks);

    if (newId === -1) {
      [].slice.call(textTracks).forEach(function (track) {
        track.mode = 'disabled';
      });
    } else {
      var oldTrack = textTracks[trackId];

      if (oldTrack) {
        oldTrack.mode = 'disabled';
      }
    }

    var nextTrack = textTracks[newId];

    if (nextTrack) {
      nextTrack.mode = subtitleDisplay ? 'showing' : 'hidden';
    }
  }
  /**
     * This method is responsible for validating the subtitle index and periodically reloading if live.
     * Dispatches the SUBTITLE_TRACK_SWITCH event, which instructs the subtitle-stream-controller to load the selected track.
     * @param newId - The id of the subtitle track to activate.
     */
  ;

  _proto._setSubtitleTrackInternal = function _setSubtitleTrackInternal(newId) {
    var hls = this.hls,
        tracks = this.tracks;

    if (!Object(number["isFiniteNumber"])(newId) || newId < -1 || newId >= tracks.length) {
      return;
    }

    this.trackId = newId;
    logger["logger"].log("Switching to subtitle track " + newId);
    hls.trigger(events["default"].SUBTITLE_TRACK_SWITCH, {
      id: newId
    });

    this._loadCurrentTrack();
  };

  _proto._onTextTracksChanged = function _onTextTracksChanged() {
    // Media is undefined when switching streams via loadSource()
    if (!this.media || !this.hls.config.renderTextTracksNatively) {
      return;
    }

    var trackId = -1;
    var tracks = filterSubtitleTracks(this.media.textTracks);

    for (var id = 0; id < tracks.length; id++) {
      if (tracks[id].mode === 'hidden') {
        // Do not break in case there is a following track with showing.
        trackId = id;
      } else if (tracks[id].mode === 'showing') {
        trackId = id;
        break;
      }
    } // Setting current subtitleTrack will invoke code.


    this.subtitleTrack = trackId;
  };

  subtitle_track_controller_createClass(SubtitleTrackController, [{
    key: "subtitleTracks",
    get: function get() {
      return this.tracks;
    }
    /** get index of the selected subtitle track (index in subtitle track lists) **/

  }, {
    key: "subtitleTrack",
    get: function get() {
      return this.trackId;
    }
    /** select a subtitle track, based on its index in subtitle track lists**/
    ,
    set: function set(subtitleTrackId) {
      if (this.trackId !== subtitleTrackId) {
        this._toggleTrackModes(subtitleTrackId);

        this._setSubtitleTrackInternal(subtitleTrackId);
      }
    }
  }]);

  return SubtitleTrackController;
}(event_handler);

function filterSubtitleTracks(textTrackList) {
  var tracks = [];

  for (var i = 0; i < textTrackList.length; i++) {
    var track = textTrackList[i]; // Edge adds a track without a label; we don't want to use it

    if (track.kind === 'subtitles' && track.label) {
      tracks.push(textTrackList[i]);
    }
  }

  return tracks;
}

/* harmony default export */ var subtitle_track_controller = (subtitle_track_controller_SubtitleTrackController);
// EXTERNAL MODULE: ./src/crypt/decrypter.js + 3 modules
var decrypter = __webpack_require__("./src/crypt/decrypter.js");

// CONCATENATED MODULE: ./src/controller/subtitle-stream-controller.js
function subtitle_stream_controller_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function subtitle_stream_controller_inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/**
 * @class SubtitleStreamController
 */








var subtitle_stream_controller_window = window,
    subtitle_stream_controller_performance = subtitle_stream_controller_window.performance;
var subtitle_stream_controller_TICK_INTERVAL = 500; // how often to tick in ms

var subtitle_stream_controller_SubtitleStreamController = /*#__PURE__*/function (_BaseStreamController) {
  subtitle_stream_controller_inheritsLoose(SubtitleStreamController, _BaseStreamController);

  function SubtitleStreamController(hls, fragmentTracker) {
    var _this;

    _this = _BaseStreamController.call(this, hls, events["default"].MEDIA_ATTACHED, events["default"].MEDIA_DETACHING, events["default"].ERROR, events["default"].KEY_LOADED, events["default"].FRAG_LOADED, events["default"].SUBTITLE_TRACKS_UPDATED, events["default"].SUBTITLE_TRACK_SWITCH, events["default"].SUBTITLE_TRACK_LOADED, events["default"].SUBTITLE_FRAG_PROCESSED, events["default"].LEVEL_UPDATED) || this;
    _this.fragmentTracker = fragmentTracker;
    _this.config = hls.config;
    _this.state = State.STOPPED;
    _this.tracks = [];
    _this.tracksBuffered = [];
    _this.currentTrackId = -1;
    _this.decrypter = new decrypter["default"](hls, hls.config); // lastAVStart stores the time in seconds for the start time of a level load

    _this.lastAVStart = 0;
    _this._onMediaSeeking = _this.onMediaSeeking.bind(subtitle_stream_controller_assertThisInitialized(_this));
    return _this;
  }

  var _proto = SubtitleStreamController.prototype;

  _proto.startLoad = function startLoad() {
    this.stopLoad();
    this.state = State.IDLE; // Check if we already have a track with necessary details to load fragments

    var currentTrack = this.tracks[this.currentTrackId];

    if (currentTrack && currentTrack.details) {
      this.setInterval(subtitle_stream_controller_TICK_INTERVAL);
      this.tick();
    }
  };

  _proto.onSubtitleFragProcessed = function onSubtitleFragProcessed(data) {
    var frag = data.frag,
        success = data.success;
    this.fragPrevious = frag;
    this.state = State.IDLE;

    if (!success) {
      return;
    }

    var buffered = this.tracksBuffered[this.currentTrackId];

    if (!buffered) {
      return;
    } // Create/update a buffered array matching the interface used by BufferHelper.bufferedInfo
    // so we can re-use the logic used to detect how much have been buffered


    var timeRange;
    var fragStart = frag.start;

    for (var i = 0; i < buffered.length; i++) {
      if (fragStart >= buffered[i].start && fragStart <= buffered[i].end) {
        timeRange = buffered[i];
        break;
      }
    }

    var fragEnd = frag.start + frag.duration;

    if (timeRange) {
      timeRange.end = fragEnd;
    } else {
      timeRange = {
        start: fragStart,
        end: fragEnd
      };
      buffered.push(timeRange);
    }
  };

  _proto.onMediaAttached = function onMediaAttached(_ref) {
    var media = _ref.media;
    this.media = media;
    media.addEventListener('seeking', this._onMediaSeeking);
    this.state = State.IDLE;
  };

  _proto.onMediaDetaching = function onMediaDetaching() {
    var _this2 = this;

    if (!this.media) {
      return;
    }

    this.media.removeEventListener('seeking', this._onMediaSeeking);
    this.fragmentTracker.removeAllFragments();
    this.currentTrackId = -1;
    this.tracks.forEach(function (track) {
      _this2.tracksBuffered[track.id] = [];
    });
    this.media = null;
    this.state = State.STOPPED;
  } // If something goes wrong, proceed to next frag, if we were processing one.
  ;

  _proto.onError = function onError(data) {
    var frag = data.frag; // don't handle error not related to subtitle fragment

    if (!frag || frag.type !== 'subtitle') {
      return;
    }

    if (this.fragCurrent && this.fragCurrent.loader) {
      this.fragCurrent.loader.abort();
    }

    this.state = State.IDLE;
  } // Got all new subtitle tracks.
  ;

  _proto.onSubtitleTracksUpdated = function onSubtitleTracksUpdated(data) {
    var _this3 = this;

    logger["logger"].log('subtitle tracks updated');
    this.tracksBuffered = [];
    this.tracks = data.subtitleTracks;
    this.tracks.forEach(function (track) {
      _this3.tracksBuffered[track.id] = [];
    });
  };

  _proto.onSubtitleTrackSwitch = function onSubtitleTrackSwitch(data) {
    this.currentTrackId = data.id;

    if (!this.tracks || !this.tracks.length || this.currentTrackId === -1) {
      this.clearInterval();
      return;
    } // Check if track has the necessary details to load fragments


    var currentTrack = this.tracks[this.currentTrackId];

    if (currentTrack && currentTrack.details) {
      this.setInterval(subtitle_stream_controller_TICK_INTERVAL);
    }
  } // Got a new set of subtitle fragments.
  ;

  _proto.onSubtitleTrackLoaded = function onSubtitleTrackLoaded(data) {
    var id = data.id,
        details = data.details;
    var currentTrackId = this.currentTrackId,
        tracks = this.tracks;
    var currentTrack = tracks[currentTrackId];

    if (id >= tracks.length || id !== currentTrackId || !currentTrack) {
      return;
    }

    if (details.live) {
      mergeSubtitlePlaylists(currentTrack.details, details, this.lastAVStart);
    }

    currentTrack.details = details;
    this.setInterval(subtitle_stream_controller_TICK_INTERVAL);
  };

  _proto.onKeyLoaded = function onKeyLoaded() {
    if (this.state === State.KEY_LOADING) {
      this.state = State.IDLE;
    }
  };

  _proto.onFragLoaded = function onFragLoaded(data) {
    var fragCurrent = this.fragCurrent;
    var decryptData = data.frag.decryptdata;
    var fragLoaded = data.frag;
    var hls = this.hls;

    if (this.state === State.FRAG_LOADING && fragCurrent && data.frag.type === 'subtitle' && fragCurrent.sn === data.frag.sn) {
      // check to see if the payload needs to be decrypted
      if (data.payload.byteLength > 0 && decryptData && decryptData.key && decryptData.method === 'AES-128') {
        var startTime = subtitle_stream_controller_performance.now(); // decrypt the subtitles

        this.decrypter.decrypt(data.payload, decryptData.key.buffer, decryptData.iv.buffer, function (decryptedData) {
          var endTime = subtitle_stream_controller_performance.now();
          hls.trigger(events["default"].FRAG_DECRYPTED, {
            frag: fragLoaded,
            payload: decryptedData,
            stats: {
              tstart: startTime,
              tdecrypt: endTime
            }
          });
        });
      }
    }
  };

  _proto.onLevelUpdated = function onLevelUpdated(_ref2) {
    var details = _ref2.details;
    var frags = details.fragments;
    this.lastAVStart = frags.length ? frags[0].start : 0;
  };

  _proto.doTick = function doTick() {
    if (!this.media) {
      this.state = State.IDLE;
      return;
    }

    switch (this.state) {
      case State.IDLE:
        {
          var config = this.config,
              currentTrackId = this.currentTrackId,
              fragmentTracker = this.fragmentTracker,
              media = this.media,
              tracks = this.tracks;

          if (!tracks || !tracks[currentTrackId] || !tracks[currentTrackId].details) {
            break;
          }

          var maxBufferHole = config.maxBufferHole,
              maxFragLookUpTolerance = config.maxFragLookUpTolerance;
          var maxConfigBuffer = Math.min(config.maxBufferLength, config.maxMaxBufferLength);
          var bufferedInfo = BufferHelper.bufferedInfo(this._getBuffered(), media.currentTime, maxBufferHole);
          var bufferEnd = bufferedInfo.end,
              bufferLen = bufferedInfo.len;
          var trackDetails = tracks[currentTrackId].details;
          var fragments = trackDetails.fragments;
          var fragLen = fragments.length;
          var end = fragments[fragLen - 1].start + fragments[fragLen - 1].duration;

          if (bufferLen > maxConfigBuffer) {
            return;
          }

          var foundFrag;
          var fragPrevious = this.fragPrevious;

          if (bufferEnd < end) {
            if (fragPrevious && trackDetails.hasProgramDateTime) {
              foundFrag = findFragmentByPDT(fragments, fragPrevious.endProgramDateTime, maxFragLookUpTolerance);
            }

            if (!foundFrag) {
              foundFrag = findFragmentByPTS(fragPrevious, fragments, bufferEnd, maxFragLookUpTolerance);
            }
          } else {
            foundFrag = fragments[fragLen - 1];
          }

          if (foundFrag && foundFrag.encrypted) {
            logger["logger"].log("Loading key for " + foundFrag.sn);
            this.state = State.KEY_LOADING;
            this.hls.trigger(events["default"].KEY_LOADING, {
              frag: foundFrag
            });
          } else if (foundFrag && fragmentTracker.getState(foundFrag) === FragmentState.NOT_LOADED) {
            // only load if fragment is not loaded
            this.fragCurrent = foundFrag;
            this.state = State.FRAG_LOADING;
            this.hls.trigger(events["default"].FRAG_LOADING, {
              frag: foundFrag
            });
          }
        }
    }
  };

  _proto.stopLoad = function stopLoad() {
    this.lastAVStart = 0;
    this.fragPrevious = null;

    _BaseStreamController.prototype.stopLoad.call(this);
  };

  _proto._getBuffered = function _getBuffered() {
    return this.tracksBuffered[this.currentTrackId] || [];
  };

  _proto.onMediaSeeking = function onMediaSeeking() {
    if (this.fragCurrent) {
      var currentTime = this.media ? this.media.currentTime : 0;
      var tolerance = this.config.maxFragLookUpTolerance;
      var fragStartOffset = this.fragCurrent.start - tolerance;
      var fragEndOffset = this.fragCurrent.start + this.fragCurrent.duration + tolerance; // check if position will be out of currently loaded frag range after seeking : if out, cancel frag load, if in, don't do anything

      if (currentTime < fragStartOffset || currentTime > fragEndOffset) {
        if (this.fragCurrent.loader) {
          this.fragCurrent.loader.abort();
        }

        this.fragmentTracker.removeFragment(this.fragCurrent);
        this.fragCurrent = null;
        this.fragPrevious = null; // switch to IDLE state to load new fragment

        this.state = State.IDLE; // speed up things

        this.tick();
      }
    }
  };

  return SubtitleStreamController;
}(base_stream_controller_BaseStreamController);
// CONCATENATED MODULE: ./src/utils/mediakeys-helper.ts
/**
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Navigator/requestMediaKeySystemAccess
 */
var KeySystems;

(function (KeySystems) {
  KeySystems["WIDEVINE"] = "com.widevine.alpha";
  KeySystems["PLAYREADY"] = "com.microsoft.playready";
})(KeySystems || (KeySystems = {}));

var requestMediaKeySystemAccess = function () {
  if (typeof window !== 'undefined' && window.navigator && window.navigator.requestMediaKeySystemAccess) {
    return window.navigator.requestMediaKeySystemAccess.bind(window.navigator);
  } else {
    return null;
  }
}();


// CONCATENATED MODULE: ./src/controller/eme-controller.ts
function eme_controller_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function eme_controller_createClass(Constructor, protoProps, staticProps) { if (protoProps) eme_controller_defineProperties(Constructor.prototype, protoProps); if (staticProps) eme_controller_defineProperties(Constructor, staticProps); return Constructor; }

function eme_controller_inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

/**
 * @author Stephan Hesse <disparat@gmail.com> | <tchakabam@gmail.com>
 *
 * DRM support for Hls.js
 */





var MAX_LICENSE_REQUEST_FAILURES = 3;
/**
 * @see https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemConfiguration
 * @param {Array<string>} audioCodecs List of required audio codecs to support
 * @param {Array<string>} videoCodecs List of required video codecs to support
 * @param {object} drmSystemOptions Optional parameters/requirements for the key-system
 * @returns {Array<MediaSystemConfiguration>} An array of supported configurations
 */

var createWidevineMediaKeySystemConfigurations = function createWidevineMediaKeySystemConfigurations(audioCodecs, videoCodecs, drmSystemOptions) {
  /* jshint ignore:line */
  var baseConfig = {
    // initDataTypes: ['keyids', 'mp4'],
    // label: "",
    // persistentState: "not-allowed", // or "required" ?
    // distinctiveIdentifier: "not-allowed", // or "required" ?
    // sessionTypes: ['temporary'],
    audioCapabilities: [],
    // { contentType: 'audio/mp4; codecs="mp4a.40.2"' }
    videoCapabilities: [] // { contentType: 'video/mp4; codecs="avc1.42E01E"' }

  };
  audioCodecs.forEach(function (codec) {
    baseConfig.audioCapabilities.push({
      contentType: "audio/mp4; codecs=\"" + codec + "\"",
      robustness: drmSystemOptions.audioRobustness || ''
    });
  });
  videoCodecs.forEach(function (codec) {
    baseConfig.videoCapabilities.push({
      contentType: "video/mp4; codecs=\"" + codec + "\"",
      robustness: drmSystemOptions.videoRobustness || ''
    });
  });
  return [baseConfig];
};
/**
 * The idea here is to handle key-system (and their respective platforms) specific configuration differences
 * in order to work with the local requestMediaKeySystemAccess method.
 *
 * We can also rule-out platform-related key-system support at this point by throwing an error.
 *
 * @param {string} keySystem Identifier for the key-system, see `KeySystems` enum
 * @param {Array<string>} audioCodecs List of required audio codecs to support
 * @param {Array<string>} videoCodecs List of required video codecs to support
 * @throws will throw an error if a unknown key system is passed
 * @returns {Array<MediaSystemConfiguration>} A non-empty Array of MediaKeySystemConfiguration objects
 */


var eme_controller_getSupportedMediaKeySystemConfigurations = function getSupportedMediaKeySystemConfigurations(keySystem, audioCodecs, videoCodecs, drmSystemOptions) {
  switch (keySystem) {
    case KeySystems.WIDEVINE:
      return createWidevineMediaKeySystemConfigurations(audioCodecs, videoCodecs, drmSystemOptions);

    default:
      throw new Error("Unknown key-system: " + keySystem);
  }
};

/**
 * Controller to deal with encrypted media extensions (EME)
 * @see https://developer.mozilla.org/en-US/docs/Web/API/Encrypted_Media_Extensions_API
 *
 * @class
 * @constructor
 */
var eme_controller_EMEController = /*#__PURE__*/function (_EventHandler) {
  eme_controller_inheritsLoose(EMEController, _EventHandler);

  /**
     * @constructs
     * @param {Hls} hls Our Hls.js instance
     */
  function EMEController(hls) {
    var _this;

    _this = _EventHandler.call(this, hls, events["default"].MEDIA_ATTACHED, events["default"].MEDIA_DETACHED, events["default"].MANIFEST_PARSED) || this;
    _this._widevineLicenseUrl = void 0;
    _this._licenseXhrSetup = void 0;
    _this._emeEnabled = void 0;
    _this._requestMediaKeySystemAccess = void 0;
    _this._drmSystemOptions = void 0;
    _this._config = void 0;
    _this._mediaKeysList = [];
    _this._media = null;
    _this._hasSetMediaKeys = false;
    _this._requestLicenseFailureCount = 0;
    _this.mediaKeysPromise = null;

    _this._onMediaEncrypted = function (e) {
      logger["logger"].log("Media is encrypted using \"" + e.initDataType + "\" init data type");

      if (!_this.mediaKeysPromise) {
        logger["logger"].error('Fatal: Media is encrypted but no CDM access or no keys have been requested');

        _this.hls.trigger(events["default"].ERROR, {
          type: errors["ErrorTypes"].KEY_SYSTEM_ERROR,
          details: errors["ErrorDetails"].KEY_SYSTEM_NO_KEYS,
          fatal: true
        });

        return;
      }

      var finallySetKeyAndStartSession = function finallySetKeyAndStartSession(mediaKeys) {
        if (!_this._media) {
          return;
        }

        _this._attemptSetMediaKeys(mediaKeys);

        _this._generateRequestWithPreferredKeySession(e.initDataType, e.initData);
      }; // Could use `Promise.finally` but some Promise polyfills are missing it


      _this.mediaKeysPromise.then(finallySetKeyAndStartSession).catch(finallySetKeyAndStartSession);
    };

    _this._config = hls.config;
    _this._widevineLicenseUrl = _this._config.widevineLicenseUrl;
    _this._licenseXhrSetup = _this._config.licenseXhrSetup;
    _this._emeEnabled = _this._config.emeEnabled;
    _this._requestMediaKeySystemAccess = _this._config.requestMediaKeySystemAccessFunc;
    _this._drmSystemOptions = hls.config.drmSystemOptions;
    return _this;
  }
  /**
   * @param {string} keySystem Identifier for the key-system, see `KeySystems` enum
   * @returns {string} License server URL for key-system (if any configured, otherwise causes error)
   * @throws if a unsupported keysystem is passed
   */


  var _proto = EMEController.prototype;

  _proto.getLicenseServerUrl = function getLicenseServerUrl(keySystem) {
    switch (keySystem) {
      case KeySystems.WIDEVINE:
        if (!this._widevineLicenseUrl) {
          break;
        }

        return this._widevineLicenseUrl;
    }

    throw new Error("no license server URL configured for key-system \"" + keySystem + "\"");
  }
  /**
     * Requests access object and adds it to our list upon success
     * @private
     * @param {string} keySystem System ID (see `KeySystems`)
     * @param {Array<string>} audioCodecs List of required audio codecs to support
     * @param {Array<string>} videoCodecs List of required video codecs to support
     * @throws When a unsupported KeySystem is passed
     */
  ;

  _proto._attemptKeySystemAccess = function _attemptKeySystemAccess(keySystem, audioCodecs, videoCodecs) {
    var _this2 = this;

    // This can throw, but is caught in event handler callpath
    var mediaKeySystemConfigs = eme_controller_getSupportedMediaKeySystemConfigurations(keySystem, audioCodecs, videoCodecs, this._drmSystemOptions);
    logger["logger"].log('Requesting encrypted media key-system access'); // expecting interface like window.navigator.requestMediaKeySystemAccess

    var keySystemAccessPromise = this.requestMediaKeySystemAccess(keySystem, mediaKeySystemConfigs);
    this.mediaKeysPromise = keySystemAccessPromise.then(function (mediaKeySystemAccess) {
      return _this2._onMediaKeySystemAccessObtained(keySystem, mediaKeySystemAccess);
    });
    keySystemAccessPromise.catch(function (err) {
      logger["logger"].error("Failed to obtain key-system \"" + keySystem + "\" access:", err);
    });
  };

  /**
     * Handles obtaining access to a key-system
     * @private
     * @param {string} keySystem
     * @param {MediaKeySystemAccess} mediaKeySystemAccess https://developer.mozilla.org/en-US/docs/Web/API/MediaKeySystemAccess
     */
  _proto._onMediaKeySystemAccessObtained = function _onMediaKeySystemAccessObtained(keySystem, mediaKeySystemAccess) {
    var _this3 = this;

    logger["logger"].log("Access for key-system \"" + keySystem + "\" obtained");
    var mediaKeysListItem = {
      mediaKeysSessionInitialized: false,
      mediaKeySystemAccess: mediaKeySystemAccess,
      mediaKeySystemDomain: keySystem
    };

    this._mediaKeysList.push(mediaKeysListItem);

    var mediaKeysPromise = Promise.resolve().then(function () {
      return mediaKeySystemAccess.createMediaKeys();
    }).then(function (mediaKeys) {
      mediaKeysListItem.mediaKeys = mediaKeys;
      logger["logger"].log("Media-keys created for key-system \"" + keySystem + "\"");

      _this3._onMediaKeysCreated();

      return mediaKeys;
    });
    mediaKeysPromise.catch(function (err) {
      logger["logger"].error('Failed to create media-keys:', err);
    });
    return mediaKeysPromise;
  }
  /**
   * Handles key-creation (represents access to CDM). We are going to create key-sessions upon this
   * for all existing keys where no session exists yet.
   *
   * @private
   */
  ;

  _proto._onMediaKeysCreated = function _onMediaKeysCreated() {
    var _this4 = this;

    // check for all key-list items if a session exists, otherwise, create one
    this._mediaKeysList.forEach(function (mediaKeysListItem) {
      if (!mediaKeysListItem.mediaKeysSession) {
        // mediaKeys is definitely initialized here
        mediaKeysListItem.mediaKeysSession = mediaKeysListItem.mediaKeys.createSession();

        _this4._onNewMediaKeySession(mediaKeysListItem.mediaKeysSession);
      }
    });
  }
  /**
     * @private
     * @param {*} keySession
     */
  ;

  _proto._onNewMediaKeySession = function _onNewMediaKeySession(keySession) {
    var _this5 = this;

    logger["logger"].log("New key-system session " + keySession.sessionId);
    keySession.addEventListener('message', function (event) {
      _this5._onKeySessionMessage(keySession, event.message);
    }, false);
  }
  /**
   * @private
   * @param {MediaKeySession} keySession
   * @param {ArrayBuffer} message
   */
  ;

  _proto._onKeySessionMessage = function _onKeySessionMessage(keySession, message) {
    logger["logger"].log('Got EME message event, creating license request');

    this._requestLicense(message, function (data) {
      logger["logger"].log("Received license data (length: " + (data ? data.byteLength : data) + "), updating key-session");
      keySession.update(data);
    });
  }
  /**
   * @private
   * @param e {MediaEncryptedEvent}
   */
  ;

  /**
   * @private
   */
  _proto._attemptSetMediaKeys = function _attemptSetMediaKeys(mediaKeys) {
    if (!this._media) {
      throw new Error('Attempted to set mediaKeys without first attaching a media element');
    }

    if (!this._hasSetMediaKeys) {
      // FIXME: see if we can/want/need-to really to deal with several potential key-sessions?
      var keysListItem = this._mediaKeysList[0];

      if (!keysListItem || !keysListItem.mediaKeys) {
        logger["logger"].error('Fatal: Media is encrypted but no CDM access or no keys have been obtained yet');
        this.hls.trigger(events["default"].ERROR, {
          type: errors["ErrorTypes"].KEY_SYSTEM_ERROR,
          details: errors["ErrorDetails"].KEY_SYSTEM_NO_KEYS,
          fatal: true
        });
        return;
      }

      logger["logger"].log('Setting keys for encrypted media');

      this._media.setMediaKeys(keysListItem.mediaKeys);

      this._hasSetMediaKeys = true;
    }
  }
  /**
   * @private
   */
  ;

  _proto._generateRequestWithPreferredKeySession = function _generateRequestWithPreferredKeySession(initDataType, initData) {
    var _this6 = this;

    // FIXME: see if we can/want/need-to really to deal with several potential key-sessions?
    var keysListItem = this._mediaKeysList[0];

    if (!keysListItem) {
      logger["logger"].error('Fatal: Media is encrypted but not any key-system access has been obtained yet');
      this.hls.trigger(events["default"].ERROR, {
        type: errors["ErrorTypes"].KEY_SYSTEM_ERROR,
        details: errors["ErrorDetails"].KEY_SYSTEM_NO_ACCESS,
        fatal: true
      });
      return;
    }

    if (keysListItem.mediaKeysSessionInitialized) {
      logger["logger"].warn('Key-Session already initialized but requested again');
      return;
    }

    var keySession = keysListItem.mediaKeysSession;

    if (!keySession) {
      logger["logger"].error('Fatal: Media is encrypted but no key-session existing');
      this.hls.trigger(events["default"].ERROR, {
        type: errors["ErrorTypes"].KEY_SYSTEM_ERROR,
        details: errors["ErrorDetails"].KEY_SYSTEM_NO_SESSION,
        fatal: true
      });
      return;
    } // initData is null if the media is not CORS-same-origin


    if (!initData) {
      logger["logger"].warn('Fatal: initData required for generating a key session is null');
      this.hls.trigger(events["default"].ERROR, {
        type: errors["ErrorTypes"].KEY_SYSTEM_ERROR,
        details: errors["ErrorDetails"].KEY_SYSTEM_NO_INIT_DATA,
        fatal: true
      });
      return;
    }

    logger["logger"].log("Generating key-session request for \"" + initDataType + "\" init data type");
    keysListItem.mediaKeysSessionInitialized = true;
    keySession.generateRequest(initDataType, initData).then(function () {
      logger["logger"].debug('Key-session generation succeeded');
    }).catch(function (err) {
      logger["logger"].error('Error generating key-session request:', err);

      _this6.hls.trigger(events["default"].ERROR, {
        type: errors["ErrorTypes"].KEY_SYSTEM_ERROR,
        details: errors["ErrorDetails"].KEY_SYSTEM_NO_SESSION,
        fatal: false
      });
    });
  }
  /**
   * @private
   * @param {string} url License server URL
   * @param {ArrayBuffer} keyMessage Message data issued by key-system
   * @param {function} callback Called when XHR has succeeded
   * @returns {XMLHttpRequest} Unsent (but opened state) XHR object
   * @throws if XMLHttpRequest construction failed
   */
  ;

  _proto._createLicenseXhr = function _createLicenseXhr(url, keyMessage, callback) {
    var xhr = new XMLHttpRequest();
    var licenseXhrSetup = this._licenseXhrSetup;

    try {
      if (licenseXhrSetup) {
        try {
          licenseXhrSetup(xhr, url);
        } catch (e) {
          // let's try to open before running setup
          xhr.open('POST', url, true);
          licenseXhrSetup(xhr, url);
        }
      } // if licenseXhrSetup did not yet call open, let's do it now


      if (!xhr.readyState) {
        xhr.open('POST', url, true);
      }
    } catch (e) {
      // IE11 throws an exception on xhr.open if attempting to access an HTTP resource over HTTPS
      throw new Error("issue setting up KeySystem license XHR " + e);
    } // Because we set responseType to ArrayBuffer here, callback is typed as handling only array buffers


    xhr.responseType = 'arraybuffer';
    xhr.onreadystatechange = this._onLicenseRequestReadyStageChange.bind(this, xhr, url, keyMessage, callback);
    return xhr;
  }
  /**
   * @private
   * @param {XMLHttpRequest} xhr
   * @param {string} url License server URL
   * @param {ArrayBuffer} keyMessage Message data issued by key-system
   * @param {function} callback Called when XHR has succeeded
   */
  ;

  _proto._onLicenseRequestReadyStageChange = function _onLicenseRequestReadyStageChange(xhr, url, keyMessage, callback) {
    switch (xhr.readyState) {
      case 4:
        if (xhr.status === 200) {
          this._requestLicenseFailureCount = 0;
          logger["logger"].log('License request succeeded');

          if (xhr.responseType !== 'arraybuffer') {
            logger["logger"].warn('xhr response type was not set to the expected arraybuffer for license request');
          }

          callback(xhr.response);
        } else {
          logger["logger"].error("License Request XHR failed (" + url + "). Status: " + xhr.status + " (" + xhr.statusText + ")");
          this._requestLicenseFailureCount++;

          if (this._requestLicenseFailureCount > MAX_LICENSE_REQUEST_FAILURES) {
            this.hls.trigger(events["default"].ERROR, {
              type: errors["ErrorTypes"].KEY_SYSTEM_ERROR,
              details: errors["ErrorDetails"].KEY_SYSTEM_LICENSE_REQUEST_FAILED,
              fatal: true
            });
            return;
          }

          var attemptsLeft = MAX_LICENSE_REQUEST_FAILURES - this._requestLicenseFailureCount + 1;
          logger["logger"].warn("Retrying license request, " + attemptsLeft + " attempts left");

          this._requestLicense(keyMessage, callback);
        }

        break;
    }
  }
  /**
   * @private
   * @param {MediaKeysListItem} keysListItem
   * @param {ArrayBuffer} keyMessage
   * @returns {ArrayBuffer} Challenge data posted to license server
   * @throws if KeySystem is unsupported
   */
  ;

  _proto._generateLicenseRequestChallenge = function _generateLicenseRequestChallenge(keysListItem, keyMessage) {
    switch (keysListItem.mediaKeySystemDomain) {
      // case KeySystems.PLAYREADY:
      // from https://github.com/MicrosoftEdge/Demos/blob/master/eme/scripts/demo.js

      /*
        if (this.licenseType !== this.LICENSE_TYPE_WIDEVINE) {
          // For PlayReady CDMs, we need to dig the Challenge out of the XML.
          var keyMessageXml = new DOMParser().parseFromString(String.fromCharCode.apply(null, new Uint16Array(keyMessage)), 'application/xml');
          if (keyMessageXml.getElementsByTagName('Challenge')[0]) {
              challenge = atob(keyMessageXml.getElementsByTagName('Challenge')[0].childNodes[0].nodeValue);
          } else {
              throw 'Cannot find <Challenge> in key message';
          }
          var headerNames = keyMessageXml.getElementsByTagName('name');
          var headerValues = keyMessageXml.getElementsByTagName('value');
          if (headerNames.length !== headerValues.length) {
              throw 'Mismatched header <name>/<value> pair in key message';
          }
          for (var i = 0; i < headerNames.length; i++) {
              xhr.setRequestHeader(headerNames[i].childNodes[0].nodeValue, headerValues[i].childNodes[0].nodeValue);
          }
        }
        break;
      */
      case KeySystems.WIDEVINE:
        // For Widevine CDMs, the challenge is the keyMessage.
        return keyMessage;
    }

    throw new Error("unsupported key-system: " + keysListItem.mediaKeySystemDomain);
  }
  /**
   * @private
   * @param keyMessage
   * @param callback
   */
  ;

  _proto._requestLicense = function _requestLicense(keyMessage, callback) {
    logger["logger"].log('Requesting content license for key-system');
    var keysListItem = this._mediaKeysList[0];

    if (!keysListItem) {
      logger["logger"].error('Fatal error: Media is encrypted but no key-system access has been obtained yet');
      this.hls.trigger(events["default"].ERROR, {
        type: errors["ErrorTypes"].KEY_SYSTEM_ERROR,
        details: errors["ErrorDetails"].KEY_SYSTEM_NO_ACCESS,
        fatal: true
      });
      return;
    }

    try {
      var _url = this.getLicenseServerUrl(keysListItem.mediaKeySystemDomain);

      var _xhr = this._createLicenseXhr(_url, keyMessage, callback);

      logger["logger"].log("Sending license request to URL: " + _url);

      var challenge = this._generateLicenseRequestChallenge(keysListItem, keyMessage);

      _xhr.send(challenge);
    } catch (e) {
      logger["logger"].error("Failure requesting DRM license: " + e);
      this.hls.trigger(events["default"].ERROR, {
        type: errors["ErrorTypes"].KEY_SYSTEM_ERROR,
        details: errors["ErrorDetails"].KEY_SYSTEM_LICENSE_REQUEST_FAILED,
        fatal: true
      });
    }
  };

  _proto.onMediaAttached = function onMediaAttached(data) {
    if (!this._emeEnabled) {
      return;
    }

    var media = data.media; // keep reference of media

    this._media = media;
    media.addEventListener('encrypted', this._onMediaEncrypted);
  };

  _proto.onMediaDetached = function onMediaDetached() {
    var media = this._media;
    var mediaKeysList = this._mediaKeysList;

    if (!media) {
      return;
    }

    media.removeEventListener('encrypted', this._onMediaEncrypted);
    this._media = null;
    this._mediaKeysList = []; // Close all sessions and remove media keys from the video element.

    Promise.all(mediaKeysList.map(function (mediaKeysListItem) {
      if (mediaKeysListItem.mediaKeysSession) {
        return mediaKeysListItem.mediaKeysSession.close().catch(function () {// Ignore errors when closing the sessions. Closing a session that
          // generated no key requests will throw an error.
        });
      }
    })).then(function () {
      return media.setMediaKeys(null);
    }).catch(function () {// Ignore any failures while removing media keys from the video element.
    });
  } // TODO: Use manifest types here when they are defined
  ;

  _proto.onManifestParsed = function onManifestParsed(data) {
    if (!this._emeEnabled) {
      return;
    }

    var audioCodecs = data.levels.map(function (level) {
      return level.audioCodec;
    });
    var videoCodecs = data.levels.map(function (level) {
      return level.videoCodec;
    });

    this._attemptKeySystemAccess(KeySystems.WIDEVINE, audioCodecs, videoCodecs);
  };

  eme_controller_createClass(EMEController, [{
    key: "requestMediaKeySystemAccess",
    get: function get() {
      if (!this._requestMediaKeySystemAccess) {
        throw new Error('No requestMediaKeySystemAccess function configured');
      }

      return this._requestMediaKeySystemAccess;
    }
  }]);

  return EMEController;
}(event_handler);

/* harmony default export */ var eme_controller = (eme_controller_EMEController);
// CONCATENATED MODULE: ./src/config.ts
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * HLS config
 */




 // import FetchLoader from './utils/fetch-loader';









// If possible, keep hlsDefaultConfig shallow
// It is cloned whenever a new Hls instance is created, by keeping the config
// shallow the properties are cloned, and we don't end up manipulating the default
var hlsDefaultConfig = _objectSpread(_objectSpread({
  autoStartLoad: true,
  // used by stream-controller
  startPosition: -1,
  // used by stream-controller
  defaultAudioCodec: void 0,
  // used by stream-controller
  debug: false,
  // used by logger
  capLevelOnFPSDrop: false,
  // used by fps-controller
  capLevelToPlayerSize: false,
  // used by cap-level-controller
  initialLiveManifestSize: 1,
  // used by stream-controller
  maxBufferLength: 30,
  // used by stream-controller
  maxBufferSize: 60 * 1000 * 1000,
  // used by stream-controller
  maxBufferHole: 0.5,
  // used by stream-controller
  lowBufferWatchdogPeriod: 0.5,
  // used by stream-controller
  highBufferWatchdogPeriod: 3,
  // used by stream-controller
  nudgeOffset: 0.1,
  // used by stream-controller
  nudgeMaxRetry: 3,
  // used by stream-controller
  maxFragLookUpTolerance: 0.25,
  // used by stream-controller
  liveSyncDurationCount: 3,
  // used by stream-controller
  liveMaxLatencyDurationCount: Infinity,
  // used by stream-controller
  liveSyncDuration: void 0,
  // used by stream-controller
  liveMaxLatencyDuration: void 0,
  // used by stream-controller
  liveDurationInfinity: false,
  // used by buffer-controller
  liveBackBufferLength: Infinity,
  // used by buffer-controller
  maxMaxBufferLength: 600,
  // used by stream-controller
  enableWorker: true,
  // used by demuxer
  enableSoftwareAES: true,
  // used by decrypter
  manifestLoadingTimeOut: 10000,
  // used by playlist-loader
  manifestLoadingMaxRetry: 1,
  // used by playlist-loader
  manifestLoadingRetryDelay: 1000,
  // used by playlist-loader
  manifestLoadingMaxRetryTimeout: 64000,
  // used by playlist-loader
  startLevel: void 0,
  // used by level-controller
  levelLoadingTimeOut: 10000,
  // used by playlist-loader
  levelLoadingMaxRetry: 4,
  // used by playlist-loader
  levelLoadingRetryDelay: 1000,
  // used by playlist-loader
  levelLoadingMaxRetryTimeout: 64000,
  // used by playlist-loader
  fragLoadingTimeOut: 20000,
  // used by fragment-loader
  fragLoadingMaxRetry: 6,
  // used by fragment-loader
  fragLoadingRetryDelay: 1000,
  // used by fragment-loader
  fragLoadingMaxRetryTimeout: 64000,
  // used by fragment-loader
  startFragPrefetch: false,
  // used by stream-controller
  fpsDroppedMonitoringPeriod: 5000,
  // used by fps-controller
  fpsDroppedMonitoringThreshold: 0.2,
  // used by fps-controller
  appendErrorMaxRetry: 3,
  // used by buffer-controller
  loader: xhr_loader,
  // loader: FetchLoader,
  fLoader: void 0,
  // used by fragment-loader
  pLoader: void 0,
  // used by playlist-loader
  xhrSetup: void 0,
  // used by xhr-loader
  licenseXhrSetup: void 0,
  // used by eme-controller
  // fetchSetup: void 0,
  abrController: abr_controller,
  bufferController: buffer_controller,
  capLevelController: cap_level_controller,
  fpsController: fps_controller,
  stretchShortVideoTrack: false,
  // used by mp4-remuxer
  maxAudioFramesDrift: 1,
  // used by mp4-remuxer
  forceKeyFrameOnDiscontinuity: true,
  // used by ts-demuxer
  abrEwmaFastLive: 3,
  // used by abr-controller
  abrEwmaSlowLive: 9,
  // used by abr-controller
  abrEwmaFastVoD: 3,
  // used by abr-controller
  abrEwmaSlowVoD: 9,
  // used by abr-controller
  abrEwmaDefaultEstimate: 5e5,
  // 500 kbps  // used by abr-controller
  abrBandWidthFactor: 0.95,
  // used by abr-controller
  abrBandWidthUpFactor: 0.7,
  // used by abr-controller
  abrMaxWithRealBitrate: false,
  // used by abr-controller
  maxStarvationDelay: 4,
  // used by abr-controller
  maxLoadingDelay: 4,
  // used by abr-controller
  minAutoBitrate: 0,
  // used by hls
  emeEnabled: false,
  // used by eme-controller
  widevineLicenseUrl: void 0,
  // used by eme-controller
  drmSystemOptions: {},
  // used by eme-controller
  requestMediaKeySystemAccessFunc: requestMediaKeySystemAccess,
  // used by eme-controller
  testBandwidth: true
}, timelineConfig()), {}, {
  subtitleStreamController:  true ? subtitle_stream_controller_SubtitleStreamController : undefined,
  subtitleTrackController:  true ? subtitle_track_controller : undefined,
  timelineController:  true ? timeline_controller : undefined,
  audioStreamController:  true ? audio_stream_controller : undefined,
  audioTrackController:  true ? audio_track_controller : undefined,
  emeController:  true ? eme_controller : undefined
});

function timelineConfig() {
  return {
    cueHandler: cues_namespaceObject,
    // used by timeline-controller
    enableCEA708Captions: true,
    // used by timeline-controller
    enableWebVTT: true,
    // used by timeline-controller
    captionsTextTrack1Label: 'English',
    // used by timeline-controller
    captionsTextTrack1LanguageCode: 'en',
    // used by timeline-controller
    captionsTextTrack2Label: 'Spanish',
    // used by timeline-controller
    captionsTextTrack2LanguageCode: 'es',
    // used by timeline-controller
    captionsTextTrack3Label: 'Unknown CC',
    // used by timeline-controller
    captionsTextTrack3LanguageCode: '',
    // used by timeline-controller
    captionsTextTrack4Label: 'Unknown CC',
    // used by timeline-controller
    captionsTextTrack4LanguageCode: '',
    // used by timeline-controller
    renderTextTracksNatively: true
  };
}
// CONCATENATED MODULE: ./src/hls.ts
function hls_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function hls_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { hls_ownKeys(Object(source), true).forEach(function (key) { hls_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { hls_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function hls_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function hls_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function hls_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function hls_createClass(Constructor, protoProps, staticProps) { if (protoProps) hls_defineProperties(Constructor.prototype, protoProps); if (staticProps) hls_defineProperties(Constructor, staticProps); return Constructor; }

function hls_inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }















/**
 * @module Hls
 * @class
 * @constructor
 */

var hls_Hls = /*#__PURE__*/function (_Observer) {
  hls_inheritsLoose(Hls, _Observer);

  /**
   * @type {boolean}
   */
  Hls.isSupported = function isSupported() {
    return is_supported_isSupported();
  }
  /**
   * @type {HlsEvents}
   */
  ;

  hls_createClass(Hls, null, [{
    key: "version",

    /**
     * @type {string}
     */
    get: function get() {
      return "0.14.17";
    }
  }, {
    key: "Events",
    get: function get() {
      return events["default"];
    }
    /**
     * @type {HlsErrorTypes}
     */

  }, {
    key: "ErrorTypes",
    get: function get() {
      return errors["ErrorTypes"];
    }
    /**
     * @type {HlsErrorDetails}
     */

  }, {
    key: "ErrorDetails",
    get: function get() {
      return errors["ErrorDetails"];
    }
    /**
     * @type {HlsConfig}
     */

  }, {
    key: "DefaultConfig",
    get: function get() {
      if (!Hls.defaultConfig) {
        return hlsDefaultConfig;
      }

      return Hls.defaultConfig;
    }
    /**
     * @type {HlsConfig}
     */
    ,
    set: function set(defaultConfig) {
      Hls.defaultConfig = defaultConfig;
    }
    /**
     * Creates an instance of an HLS client that can attach to exactly one `HTMLMediaElement`.
     *
     * @constructs Hls
     * @param {HlsConfig} config
     */

  }]);

  function Hls(userConfig) {
    var _this;

    if (userConfig === void 0) {
      userConfig = {};
    }

    _this = _Observer.call(this) || this;
    _this.config = void 0;
    _this._autoLevelCapping = void 0;
    _this.abrController = void 0;
    _this.capLevelController = void 0;
    _this.levelController = void 0;
    _this.streamController = void 0;
    _this.networkControllers = void 0;
    _this.audioTrackController = void 0;
    _this.subtitleTrackController = void 0;
    _this.emeController = void 0;
    _this.coreComponents = void 0;
    _this.media = null;
    _this.url = null;
    var defaultConfig = Hls.DefaultConfig;

    if ((userConfig.liveSyncDurationCount || userConfig.liveMaxLatencyDurationCount) && (userConfig.liveSyncDuration || userConfig.liveMaxLatencyDuration)) {
      throw new Error('Illegal hls.js config: don\'t mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration');
    } // Shallow clone


    _this.config = hls_objectSpread(hls_objectSpread({}, defaultConfig), userConfig);

    var _assertThisInitialize = hls_assertThisInitialized(_this),
        config = _assertThisInitialize.config;

    if (config.liveMaxLatencyDurationCount !== void 0 && config.liveMaxLatencyDurationCount <= config.liveSyncDurationCount) {
      throw new Error('Illegal hls.js config: "liveMaxLatencyDurationCount" must be gt "liveSyncDurationCount"');
    }

    if (config.liveMaxLatencyDuration !== void 0 && (config.liveSyncDuration === void 0 || config.liveMaxLatencyDuration <= config.liveSyncDuration)) {
      throw new Error('Illegal hls.js config: "liveMaxLatencyDuration" must be gt "liveSyncDuration"');
    }

    Object(logger["enableLogs"])(config.debug);
    _this._autoLevelCapping = -1; // core controllers and network loaders

    /**
     * @member {AbrController} abrController
     */

    var abrController = _this.abrController = new config.abrController(hls_assertThisInitialized(_this)); // eslint-disable-line new-cap

    var bufferController = new config.bufferController(hls_assertThisInitialized(_this)); // eslint-disable-line new-cap

    var capLevelController = _this.capLevelController = new config.capLevelController(hls_assertThisInitialized(_this)); // eslint-disable-line new-cap

    var fpsController = new config.fpsController(hls_assertThisInitialized(_this)); // eslint-disable-line new-cap

    var playListLoader = new playlist_loader(hls_assertThisInitialized(_this));
    var fragmentLoader = new fragment_loader(hls_assertThisInitialized(_this));
    var keyLoader = new key_loader(hls_assertThisInitialized(_this));
    var id3TrackController = new id3_track_controller(hls_assertThisInitialized(_this)); // network controllers

    /**
     * @member {LevelController} levelController
     */

    var levelController = _this.levelController = new level_controller_LevelController(hls_assertThisInitialized(_this)); // FIXME: FragmentTracker must be defined before StreamController because the order of event handling is important

    var fragmentTracker = new fragment_tracker_FragmentTracker(hls_assertThisInitialized(_this));
    /**
     * @member {StreamController} streamController
     */

    var streamController = _this.streamController = new stream_controller(hls_assertThisInitialized(_this), fragmentTracker);
    var networkControllers = [levelController, streamController]; // optional audio stream controller

    /**
     * @var {ICoreComponent | Controller}
     */

    var Controller = config.audioStreamController;

    if (Controller) {
      networkControllers.push(new Controller(hls_assertThisInitialized(_this), fragmentTracker));
    }
    /**
     * @member {INetworkController[]} networkControllers
     */


    _this.networkControllers = networkControllers;
    /**
     * @var {ICoreComponent[]}
     */

    var coreComponents = [playListLoader, fragmentLoader, keyLoader, abrController, bufferController, capLevelController, fpsController, id3TrackController, fragmentTracker]; // optional audio track and subtitle controller

    Controller = config.audioTrackController;

    if (Controller) {
      var audioTrackController = new Controller(hls_assertThisInitialized(_this));
      /**
       * @member {AudioTrackController} audioTrackController
       */

      _this.audioTrackController = audioTrackController;
      coreComponents.push(audioTrackController);
    }

    Controller = config.subtitleTrackController;

    if (Controller) {
      var subtitleTrackController = new Controller(hls_assertThisInitialized(_this));
      /**
       * @member {SubtitleTrackController} subtitleTrackController
       */

      _this.subtitleTrackController = subtitleTrackController;
      networkControllers.push(subtitleTrackController);
    }

    Controller = config.emeController;

    if (Controller) {
      var emeController = new Controller(hls_assertThisInitialized(_this));
      /**
       * @member {EMEController} emeController
       */

      _this.emeController = emeController;
      coreComponents.push(emeController);
    } // optional subtitle controllers


    Controller = config.subtitleStreamController;

    if (Controller) {
      networkControllers.push(new Controller(hls_assertThisInitialized(_this), fragmentTracker));
    }

    Controller = config.timelineController;

    if (Controller) {
      coreComponents.push(new Controller(hls_assertThisInitialized(_this)));
    }
    /**
     * @member {ICoreComponent[]}
     */


    _this.coreComponents = coreComponents;
    return _this;
  }
  /**
   * Dispose of the instance
   */


  var _proto = Hls.prototype;

  _proto.destroy = function destroy() {
    logger["logger"].log('destroy');
    this.trigger(events["default"].DESTROYING);
    this.detachMedia();
    this.coreComponents.concat(this.networkControllers).forEach(function (component) {
      component.destroy();
    });
    this.url = null;
    this.removeAllListeners();
    this._autoLevelCapping = -1;
  }
  /**
   * Attach a media element
   * @param {HTMLMediaElement} media
   */
  ;

  _proto.attachMedia = function attachMedia(media) {
    logger["logger"].log('attachMedia');
    this.media = media;
    this.trigger(events["default"].MEDIA_ATTACHING, {
      media: media
    });
  }
  /**
   * Detach from the media
   */
  ;

  _proto.detachMedia = function detachMedia() {
    logger["logger"].log('detachMedia');
    this.trigger(events["default"].MEDIA_DETACHING);
    this.media = null;
  }
  /**
   * Set the source URL. Can be relative or absolute.
   * @param {string} url
   */
  ;

  _proto.loadSource = function loadSource(url) {
    url = url_toolkit["buildAbsoluteURL"](window.location.href, url, {
      alwaysNormalize: true
    });
    logger["logger"].log("loadSource:" + url);
    this.url = url; // when attaching to a source URL, trigger a playlist load

    this.trigger(events["default"].MANIFEST_LOADING, {
      url: url
    });
  }
  /**
   * Start loading data from the stream source.
   * Depending on default config, client starts loading automatically when a source is set.
   *
   * @param {number} startPosition Set the start position to stream from
   * @default -1 None (from earliest point)
   */
  ;

  _proto.startLoad = function startLoad(startPosition) {
    if (startPosition === void 0) {
      startPosition = -1;
    }

    logger["logger"].log("startLoad(" + startPosition + ")");
    this.networkControllers.forEach(function (controller) {
      controller.startLoad(startPosition);
    });
  }
  /**
   * Stop loading of any stream data.
   */
  ;

  _proto.stopLoad = function stopLoad() {
    logger["logger"].log('stopLoad');
    this.networkControllers.forEach(function (controller) {
      controller.stopLoad();
    });
  }
  /**
   * Swap through possible audio codecs in the stream (for example to switch from stereo to 5.1)
   */
  ;

  _proto.swapAudioCodec = function swapAudioCodec() {
    logger["logger"].log('swapAudioCodec');
    this.streamController.swapAudioCodec();
  }
  /**
   * When the media-element fails, this allows to detach and then re-attach it
   * as one call (convenience method).
   *
   * Automatic recovery of media-errors by this process is configurable.
   */
  ;

  _proto.recoverMediaError = function recoverMediaError() {
    logger["logger"].log('recoverMediaError');
    var media = this.media;
    this.detachMedia();

    if (media) {
      this.attachMedia(media);
    }
  }
  /**
   * Remove a loaded level from the list of levels, or a level url in from a list of redundant level urls.
   * This can be used to remove a rendition or playlist url that errors frequently from the list of levels that a user
   * or hls.js can choose from.
   *
   * @param levelIndex {number} The quality level index to of the level to remove
   * @param urlId {number} The quality level url index in the case that fallback levels are available. Defaults to 0.
   */
  ;

  _proto.removeLevel = function removeLevel(levelIndex, urlId) {
    if (urlId === void 0) {
      urlId = 0;
    }

    this.levelController.removeLevel(levelIndex, urlId);
  }
  /**
   * @type {QualityLevel[]}
   */
  // todo(typescript-levelController)
  ;

  hls_createClass(Hls, [{
    key: "levels",
    get: function get() {
      return this.levelController.levels;
    }
    /**
     * Index of quality level currently played
     * @type {number}
     */

  }, {
    key: "currentLevel",
    get: function get() {
      return this.streamController.currentLevel;
    }
    /**
     * Set quality level index immediately .
     * This will flush the current buffer to replace the quality asap.
     * That means playback will interrupt at least shortly to re-buffer and re-sync eventually.
     * @param newLevel {number} -1 for automatic level selection
     */
    ,
    set: function set(newLevel) {
      logger["logger"].log("set currentLevel:" + newLevel);
      this.loadLevel = newLevel;
      this.streamController.immediateLevelSwitch();
    }
    /**
     * Index of next quality level loaded as scheduled by stream controller.
     * @type {number}
     */

  }, {
    key: "nextLevel",
    get: function get() {
      return this.streamController.nextLevel;
    }
    /**
     * Set quality level index for next loaded data.
     * This will switch the video quality asap, without interrupting playback.
     * May abort current loading of data, and flush parts of buffer (outside currently played fragment region).
     * @type {number} -1 for automatic level selection
     */
    ,
    set: function set(newLevel) {
      logger["logger"].log("set nextLevel:" + newLevel);
      this.levelController.manualLevel = newLevel;
      this.streamController.nextLevelSwitch();
    }
    /**
     * Return the quality level of the currently or last (of none is loaded currently) segment
     * @type {number}
     */

  }, {
    key: "loadLevel",
    get: function get() {
      return this.levelController.level;
    }
    /**
     * Set quality level index for next loaded data in a conservative way.
     * This will switch the quality without flushing, but interrupt current loading.
     * Thus the moment when the quality switch will appear in effect will only be after the already existing buffer.
     * @type {number} newLevel -1 for automatic level selection
     */
    ,
    set: function set(newLevel) {
      logger["logger"].log("set loadLevel:" + newLevel);
      this.levelController.manualLevel = newLevel;
    }
    /**
     * get next quality level loaded
     * @type {number}
     */

  }, {
    key: "nextLoadLevel",
    get: function get() {
      return this.levelController.nextLoadLevel;
    }
    /**
     * Set quality level of next loaded segment in a fully "non-destructive" way.
     * Same as `loadLevel` but will wait for next switch (until current loading is done).
     * @type {number} level
     */
    ,
    set: function set(level) {
      this.levelController.nextLoadLevel = level;
    }
    /**
     * Return "first level": like a default level, if not set,
     * falls back to index of first level referenced in manifest
     * @type {number}
     */

  }, {
    key: "firstLevel",
    get: function get() {
      return Math.max(this.levelController.firstLevel, this.minAutoLevel);
    }
    /**
     * Sets "first-level", see getter.
     * @type {number}
     */
    ,
    set: function set(newLevel) {
      logger["logger"].log("set firstLevel:" + newLevel);
      this.levelController.firstLevel = newLevel;
    }
    /**
     * Return start level (level of first fragment that will be played back)
     * if not overrided by user, first level appearing in manifest will be used as start level
     * if -1 : automatic start level selection, playback will start from level matching download bandwidth
     * (determined from download of first segment)
     * @type {number}
     */

  }, {
    key: "startLevel",
    get: function get() {
      return this.levelController.startLevel;
    }
    /**
     * set  start level (level of first fragment that will be played back)
     * if not overrided by user, first level appearing in manifest will be used as start level
     * if -1 : automatic start level selection, playback will start from level matching download bandwidth
     * (determined from download of first segment)
     * @type {number} newLevel
     */
    ,
    set: function set(newLevel) {
      logger["logger"].log("set startLevel:" + newLevel); // if not in automatic start level detection, ensure startLevel is greater than minAutoLevel

      if (newLevel !== -1) {
        newLevel = Math.max(newLevel, this.minAutoLevel);
      }

      this.levelController.startLevel = newLevel;
    }
    /**
     * set  dynamically set capLevelToPlayerSize against (`CapLevelController`)
     *
     * @type {boolean}
     */

  }, {
    key: "capLevelToPlayerSize",
    set: function set(shouldStartCapping) {
      var newCapLevelToPlayerSize = !!shouldStartCapping;

      if (newCapLevelToPlayerSize !== this.config.capLevelToPlayerSize) {
        if (newCapLevelToPlayerSize) {
          this.capLevelController.startCapping(); // If capping occurs, nextLevelSwitch will happen based on size.
        } else {
          this.capLevelController.stopCapping();
          this.autoLevelCapping = -1;
          this.streamController.nextLevelSwitch(); // Now we're uncapped, get the next level asap.
        }

        this.config.capLevelToPlayerSize = newCapLevelToPlayerSize;
      }
    }
    /**
     * Capping/max level value that should be used by automatic level selection algorithm (`ABRController`)
     * @type {number}
     */

  }, {
    key: "autoLevelCapping",
    get: function get() {
      return this._autoLevelCapping;
    }
    /**
     * get bandwidth estimate
     * @type {number}
     */
    ,

    /**
     * Capping/max level value that should be used by automatic level selection algorithm (`ABRController`)
     * @type {number}
     */
    set: function set(newLevel) {
      logger["logger"].log("set autoLevelCapping:" + newLevel);
      this._autoLevelCapping = newLevel;
    }
    /**
     * True when automatic level selection enabled
     * @type {boolean}
     */

  }, {
    key: "bandwidthEstimate",
    get: function get() {
      var bwEstimator = this.abrController._bwEstimator;
      return bwEstimator ? bwEstimator.getEstimate() : NaN;
    }
  }, {
    key: "autoLevelEnabled",
    get: function get() {
      return this.levelController.manualLevel === -1;
    }
    /**
     * Level set manually (if any)
     * @type {number}
     */

  }, {
    key: "manualLevel",
    get: function get() {
      return this.levelController.manualLevel;
    }
    /**
     * min level selectable in auto mode according to config.minAutoBitrate
     * @type {number}
     */

  }, {
    key: "minAutoLevel",
    get: function get() {
      var levels = this.levels,
          minAutoBitrate = this.config.minAutoBitrate;
      var len = levels ? levels.length : 0;

      for (var i = 0; i < len; i++) {
        var levelNextBitrate = levels[i].realBitrate ? Math.max(levels[i].realBitrate, levels[i].bitrate) : levels[i].bitrate;

        if (levelNextBitrate > minAutoBitrate) {
          return i;
        }
      }

      return 0;
    }
    /**
     * max level selectable in auto mode according to autoLevelCapping
     * @type {number}
     */

  }, {
    key: "maxAutoLevel",
    get: function get() {
      var levels = this.levels,
          autoLevelCapping = this.autoLevelCapping;
      var maxAutoLevel;

      if (autoLevelCapping === -1 && levels && levels.length) {
        maxAutoLevel = levels.length - 1;
      } else {
        maxAutoLevel = autoLevelCapping;
      }

      return maxAutoLevel;
    }
    /**
     * next automatically selected quality level
     * @type {number}
     */

  }, {
    key: "nextAutoLevel",
    get: function get() {
      // ensure next auto level is between  min and max auto level
      return Math.min(Math.max(this.abrController.nextAutoLevel, this.minAutoLevel), this.maxAutoLevel);
    }
    /**
     * this setter is used to force next auto level.
     * this is useful to force a switch down in auto mode:
     * in case of load error on level N, hls.js can set nextAutoLevel to N-1 for example)
     * forced value is valid for one fragment. upon succesful frag loading at forced level,
     * this value will be resetted to -1 by ABR controller.
     * @type {number}
     */
    ,
    set: function set(nextLevel) {
      this.abrController.nextAutoLevel = Math.max(this.minAutoLevel, nextLevel);
    }
    /**
     * @type {AudioTrack[]}
     */
    // todo(typescript-audioTrackController)

  }, {
    key: "audioTracks",
    get: function get() {
      var audioTrackController = this.audioTrackController;
      return audioTrackController ? audioTrackController.audioTracks : [];
    }
    /**
     * index of the selected audio track (index in audio track lists)
     * @type {number}
     */

  }, {
    key: "audioTrack",
    get: function get() {
      var audioTrackController = this.audioTrackController;
      return audioTrackController ? audioTrackController.audioTrack : -1;
    }
    /**
     * selects an audio track, based on its index in audio track lists
     * @type {number}
     */
    ,
    set: function set(audioTrackId) {
      var audioTrackController = this.audioTrackController;

      if (audioTrackController) {
        audioTrackController.audioTrack = audioTrackId;
      }
    }
    /**
     * @type {Seconds}
     */

  }, {
    key: "liveSyncPosition",
    get: function get() {
      return this.streamController.liveSyncPosition;
    }
    /**
     * get alternate subtitle tracks list from playlist
     * @type {SubtitleTrack[]}
     */
    // todo(typescript-subtitleTrackController)

  }, {
    key: "subtitleTracks",
    get: function get() {
      var subtitleTrackController = this.subtitleTrackController;
      return subtitleTrackController ? subtitleTrackController.subtitleTracks : [];
    }
    /**
     * index of the selected subtitle track (index in subtitle track lists)
     * @type {number}
     */

  }, {
    key: "subtitleTrack",
    get: function get() {
      var subtitleTrackController = this.subtitleTrackController;
      return subtitleTrackController ? subtitleTrackController.subtitleTrack : -1;
    }
    /**
     * select an subtitle track, based on its index in subtitle track lists
     * @type {number}
     */
    ,
    set: function set(subtitleTrackId) {
      var subtitleTrackController = this.subtitleTrackController;

      if (subtitleTrackController) {
        subtitleTrackController.subtitleTrack = subtitleTrackId;
      }
    }
    /**
     * @type {boolean}
     */

  }, {
    key: "subtitleDisplay",
    get: function get() {
      var subtitleTrackController = this.subtitleTrackController;
      return subtitleTrackController ? subtitleTrackController.subtitleDisplay : false;
    }
    /**
     * Enable/disable subtitle display rendering
     * @type {boolean}
     */
    ,
    set: function set(value) {
      var subtitleTrackController = this.subtitleTrackController;

      if (subtitleTrackController) {
        subtitleTrackController.subtitleDisplay = value;
      }
    }
  }]);

  return Hls;
}(Observer);

hls_Hls.defaultConfig = void 0;


/***/ }),

/***/ "./src/polyfills/number.js":
/*!*********************************!*\
  !*** ./src/polyfills/number.js ***!
  \*********************************/
/*! exports provided: isFiniteNumber, MAX_SAFE_INTEGER */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isFiniteNumber", function() { return isFiniteNumber; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAX_SAFE_INTEGER", function() { return MAX_SAFE_INTEGER; });
var isFiniteNumber = Number.isFinite || function (value) {
  return typeof value === 'number' && isFinite(value);
};
var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;

/***/ }),

/***/ "./src/utils/get-self-scope.js":
/*!*************************************!*\
  !*** ./src/utils/get-self-scope.js ***!
  \*************************************/
/*! exports provided: getSelfScope */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getSelfScope", function() { return getSelfScope; });
function getSelfScope() {
  // see https://stackoverflow.com/a/11237259/589493
  if (typeof window === 'undefined') {
    /* eslint-disable-next-line no-undef */
    return self;
  } else {
    return window;
  }
}

/***/ }),

/***/ "./src/utils/logger.js":
/*!*****************************!*\
  !*** ./src/utils/logger.js ***!
  \*****************************/
/*! exports provided: enableLogs, logger */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "enableLogs", function() { return enableLogs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "logger", function() { return logger; });
/* harmony import */ var _get_self_scope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./get-self-scope */ "./src/utils/get-self-scope.js");


function noop() {}

var fakeLogger = {
  trace: noop,
  debug: noop,
  log: noop,
  warn: noop,
  info: noop,
  error: noop
};
var exportedLogger = fakeLogger; // let lastCallTime;
// function formatMsgWithTimeInfo(type, msg) {
//   const now = Date.now();
//   const diff = lastCallTime ? '+' + (now - lastCallTime) : '0';
//   lastCallTime = now;
//   msg = (new Date(now)).toISOString() + ' | [' +  type + '] > ' + msg + ' ( ' + diff + ' ms )';
//   return msg;
// }

function formatMsg(type, msg) {
  msg = '[' + type + '] > ' + msg;
  return msg;
}

var global = Object(_get_self_scope__WEBPACK_IMPORTED_MODULE_0__["getSelfScope"])();

function consolePrintFn(type) {
  var func = global.console[type];

  if (func) {
    return function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      if (args[0]) {
        args[0] = formatMsg(type, args[0]);
      }

      func.apply(global.console, args);
    };
  }

  return noop;
}

function exportLoggerFunctions(debugConfig) {
  for (var _len2 = arguments.length, functions = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    functions[_key2 - 1] = arguments[_key2];
  }

  functions.forEach(function (type) {
    exportedLogger[type] = debugConfig[type] ? debugConfig[type].bind(debugConfig) : consolePrintFn(type);
  });
}

var enableLogs = function enableLogs(debugConfig) {
  // check that console is available
  if (global.console && debugConfig === true || typeof debugConfig === 'object') {
    exportLoggerFunctions(debugConfig, // Remove out from list here to hard-disable a log-level
    // 'trace',
    'debug', 'log', 'info', 'warn', 'error'); // Some browsers don't allow to use bind on console object anyway
    // fallback to default if needed

    try {
      exportedLogger.log();
    } catch (e) {
      exportedLogger = fakeLogger;
    }
  } else {
    exportedLogger = fakeLogger;
  }
};
var logger = exportedLogger;

/***/ })

/******/ })["default"];
});

},{}],"../src/playerTechs/hls_player.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HlsPlayer = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _interface = require("./interface");

var _hls = _interopRequireDefault(require("hls.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var HlsPlayer =
/*#__PURE__*/
function (_PlayerTechInterface) {
  (0, _inherits2.default)(HlsPlayer, _PlayerTechInterface);

  var _super = _createSuper(HlsPlayer);

  function HlsPlayer(wrapperId, manifestUrl) {
    (0, _classCallCheck2.default)(this, HlsPlayer);
    return _super.call(this, wrapperId, manifestUrl);
  }

  (0, _createClass2.default)(HlsPlayer, [{
    key: "load",
    value: function load() {
      var _this = this;

      return new Promise(function (resolve) {
        var hls = new _hls.default();

        if (_this.videoElement_.canPlayType("application/vnd.apple.mpegurl")) {
          _this.videoElement_.src = _this.manifestUrl_;
          resolve();
        } else if (_hls.default.isSupported) {
          hls.attachMedia(_this.videoElement_);
          hls.on(_hls.default.Events.MEDIA_ATTACHED, function () {
            hls.loadSource(_this.manifestUrl_);
          });
          hls.on(_hls.default.Events.MANIFEST_PARSED, function () {//resolve();
          });
          hls.on(_hls.default.Events.LEVEL_LOADED, function (event, data) {
            _this.isLive_ = data.details.live;
            resolve();
          });
          _this.hls_ = hls;
        }
      });
    }
  }, {
    key: "destroy",
    value: function destroy() {
      if (this.hls_) {
        this.hls_.destroy();
      }

      (0, _get2.default)((0, _getPrototypeOf2.default)(HlsPlayer.prototype), "destroy", this).call(this);
    }
  }, {
    key: "isLive",
    get: function get() {
      if (this.hls_) {
        return this.isLive_;
      } else {
        return isNaN(this.videoElement_.duration);
      }
    }
  }]);
  return HlsPlayer;
}(_interface.PlayerTechInterface);

exports.HlsPlayer = HlsPlayer;
},{"@babel/runtime/helpers/classCallCheck":"../node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"../node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/get":"../node_modules/@babel/runtime/helpers/get.js","@babel/runtime/helpers/inherits":"../node_modules/@babel/runtime/helpers/inherits.js","@babel/runtime/helpers/possibleConstructorReturn":"../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"../node_modules/@babel/runtime/helpers/getPrototypeOf.js","./interface":"../src/playerTechs/interface.js","hls.js":"../node_modules/hls.js/dist/hls.js"}],"../node_modules/shaka-player/dist/shaka-player.compiled.js":[function(require,module,exports) {
var global = arguments[3];
var define;
/*
 @license
 Shaka Player
 Copyright 2016 Google LLC
 SPDX-License-Identifier: Apache-2.0
*/
(function(){var innerGlobal=typeof window!="undefined"?window:global;var exportTo={};(function(window,global,module){/*

 Copyright The Closure Library Authors.
 SPDX-License-Identifier: Apache-2.0
*/
var p;function ba(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}}var ca="function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){if(a==Array.prototype||a==Object.prototype)return a;a[b]=c.value;return a};
function da(a){a=["object"==typeof globalThis&&globalThis,a,"object"==typeof window&&window,"object"==typeof self&&self,"object"==typeof global&&global];for(var b=0;b<a.length;++b){var c=a[b];if(c&&c.Math==Math)return c}throw Error("Cannot find global object");}var ea=da(this);function fa(a,b){if(b)a:{for(var c=ea,d=a.split("."),e=0;e<d.length-1;e++){var f=d[e];if(!(f in c))break a;c=c[f]}d=d[d.length-1];e=c[d];f=b(e);f!=e&&null!=f&&ca(c,d,{configurable:!0,writable:!0,value:f})}}
fa("Symbol",function(a){function b(e){if(this instanceof b)throw new TypeError("Symbol is not a constructor");return new c("jscomp_symbol_"+(e||"")+"_"+d++,e)}function c(e,f){this.a=e;ca(this,"description",{configurable:!0,writable:!0,value:f})}if(a)return a;c.prototype.toString=function(){return this.a};var d=0;return b});
fa("Symbol.iterator",function(a){if(a)return a;a=Symbol("Symbol.iterator");for(var b="Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array".split(" "),c=0;c<b.length;c++){var d=ea[b[c]];"function"===typeof d&&"function"!=typeof d.prototype[a]&&ca(d.prototype,a,{configurable:!0,writable:!0,value:function(){return ha(ba(this))}})}return a});function ha(a){a={next:a};a[Symbol.iterator]=function(){return this};return a}
function q(a){var b="undefined"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):{next:ba(a)}}function ia(a){if(!(a instanceof Array)){a=q(a);for(var b,c=[];!(b=a.next()).done;)c.push(b.value);a=c}return a}var ja="function"==typeof Object.create?Object.create:function(a){function b(){}b.prototype=a;return new b},ka;
if("function"==typeof Object.setPrototypeOf)ka=Object.setPrototypeOf;else{var la;a:{var ma={ae:!0},na={};try{na.__proto__=ma;la=na.ae;break a}catch(a){}la=!1}ka=la?function(a,b){a.__proto__=b;if(a.__proto__!==b)throw new TypeError(a+" is not extensible");return a}:null}var oa=ka;
function pa(a,b){a.prototype=ja(b.prototype);a.prototype.constructor=a;if(oa)oa(a,b);else for(var c in b)if("prototype"!=c)if(Object.defineProperties){var d=Object.getOwnPropertyDescriptor(b,c);d&&Object.defineProperty(a,c,d)}else a[c]=b[c];a.Rf=b.prototype}function qa(){this.j=!1;this.g=null;this.b=void 0;this.a=1;this.f=this.h=0;this.v=this.c=null}function ra(a){if(a.j)throw new TypeError("Generator is already running");a.j=!0}qa.prototype.m=function(a){this.b=a};
function sa(a,b){a.c={Bd:b,Gd:!0};a.a=a.h||a.f}qa.prototype["return"]=function(a){this.c={"return":a};this.a=this.f};function t(a,b,c){a.a=c;return{value:b}}qa.prototype.u=function(a){this.a=a};function w(a){a.a=0}function x(a,b,c){a.h=b;void 0!=c&&(a.f=c)}function ta(a){a.h=0;a.f=2}function ua(a,b){a.a=b;a.h=0}function C(a){a.h=0;var b=a.c.Bd;a.c=null;return b}function va(a){a.v=[a.c];a.h=0;a.f=0}
function wa(a,b){var c=a.v.splice(0)[0];(c=a.c=a.c||c)?c.Gd?a.a=a.h||a.f:void 0!=c.u&&a.f<c.u?(a.a=c.u,a.c=null):a.a=a.f:a.a=b}function xa(a){this.a=new qa;this.b=a}function za(a,b){ra(a.a);var c=a.a.g;if(c)return Ba(a,"return"in c?c["return"]:function(d){return{value:d,done:!0}},b,a.a["return"]);a.a["return"](b);return Da(a)}
function Ba(a,b,c,d){try{var e=b.call(a.a.g,c);if(!(e instanceof Object))throw new TypeError("Iterator result "+e+" is not an object");if(!e.done)return a.a.j=!1,e;var f=e.value}catch(g){return a.a.g=null,sa(a.a,g),Da(a)}a.a.g=null;d.call(a.a,f);return Da(a)}
function Da(a){for(;a.a.a;)try{var b=a.b(a.a);if(b)return a.a.j=!1,{value:b.value,done:!1}}catch(c){a.a.b=void 0,sa(a.a,c)}a.a.j=!1;if(a.a.c){b=a.a.c;a.a.c=null;if(b.Gd)throw b.Bd;return{value:b["return"],done:!0}}return{value:void 0,done:!0}}
function Ea(a){this.next=function(b){ra(a.a);a.a.g?b=Ba(a,a.a.g.next,b,a.a.m):(a.a.m(b),b=Da(a));return b};this["throw"]=function(b){ra(a.a);a.a.g?b=Ba(a,a.a.g["throw"],b,a.a.m):(sa(a.a,b),b=Da(a));return b};this["return"]=function(b){return za(a,b)};this[Symbol.iterator]=function(){return this}}function Fa(a,b){var c=new Ea(new xa(b));oa&&a.prototype&&oa(c,a.prototype);return c}
function Ia(a){function b(d){return a.next(d)}function c(d){return a["throw"](d)}return new Promise(function(d,e){function f(g){g.done?d(g.value):Promise.resolve(g.value).then(b,c).then(f,e)}f(a.next())})}function J(a){return Ia(new Ea(new xa(a)))}
fa("Promise",function(a){function b(g){this.b=0;this.c=void 0;this.a=[];this.j=!1;var h=this.f();try{g(h.resolve,h.reject)}catch(k){h.reject(k)}}function c(){this.a=null}function d(g){return g instanceof b?g:new b(function(h){h(g)})}if(a)return a;c.prototype.b=function(g){if(null==this.a){this.a=[];var h=this;this.c(function(){h.g()})}this.a.push(g)};var e=ea.setTimeout;c.prototype.c=function(g){e(g,0)};c.prototype.g=function(){for(;this.a&&this.a.length;){var g=this.a;this.a=[];for(var h=0;h<g.length;++h){var k=
g[h];g[h]=null;try{k()}catch(l){this.f(l)}}}this.a=null};c.prototype.f=function(g){this.c(function(){throw g;})};b.prototype.f=function(){function g(l){return function(m){k||(k=!0,l.call(h,m))}}var h=this,k=!1;return{resolve:g(this.H),reject:g(this.g)}};b.prototype.H=function(g){if(g===this)this.g(new TypeError("A Promise cannot resolve to itself"));else if(g instanceof b)this.J(g);else{a:switch(typeof g){case "object":var h=null!=g;break a;case "function":h=!0;break a;default:h=!1}h?this.D(g):this.h(g)}};
b.prototype.D=function(g){var h=void 0;try{h=g.then}catch(k){this.g(k);return}"function"==typeof h?this.M(h,g):this.h(g)};b.prototype.g=function(g){this.m(2,g)};b.prototype.h=function(g){this.m(1,g)};b.prototype.m=function(g,h){if(0!=this.b)throw Error("Cannot settle("+g+", "+h+"): Promise already settled in state"+this.b);this.b=g;this.c=h;2===this.b&&this.I();this.v()};b.prototype.I=function(){var g=this;e(function(){if(g.A()){var h=ea.console;"undefined"!==typeof h&&h.error(g.c)}},1)};b.prototype.A=
function(){if(this.j)return!1;var g=ea.CustomEvent,h=ea.Event,k=ea.dispatchEvent;if("undefined"===typeof k)return!0;"function"===typeof g?g=new g("unhandledrejection",{cancelable:!0}):"function"===typeof h?g=new h("unhandledrejection",{cancelable:!0}):(g=ea.document.createEvent("CustomEvent"),g.initCustomEvent("unhandledrejection",!1,!0,g));g.promise=this;g.reason=this.c;return k(g)};b.prototype.v=function(){if(null!=this.a){for(var g=0;g<this.a.length;++g)f.b(this.a[g]);this.a=null}};var f=new c;
b.prototype.J=function(g){var h=this.f();g.ec(h.resolve,h.reject)};b.prototype.M=function(g,h){var k=this.f();try{g.call(h,k.resolve,k.reject)}catch(l){k.reject(l)}};b.prototype.then=function(g,h){function k(r,u){return"function"==typeof r?function(v){try{l(r(v))}catch(A){m(A)}}:u}var l,m,n=new b(function(r,u){l=r;m=u});this.ec(k(g,l),k(h,m));return n};b.prototype["catch"]=function(g){return this.then(void 0,g)};b.prototype.ec=function(g,h){function k(){switch(l.b){case 1:g(l.c);break;case 2:h(l.c);
break;default:throw Error("Unexpected state: "+l.b);}}var l=this;null==this.a?f.b(k):this.a.push(k);this.j=!0};b.resolve=d;b.reject=function(g){return new b(function(h,k){k(g)})};b.race=function(g){return new b(function(h,k){for(var l=q(g),m=l.next();!m.done;m=l.next())d(m.value).ec(h,k)})};b.all=function(g){var h=q(g),k=h.next();return k.done?d([]):new b(function(l,m){function n(v){return function(A){r[v]=A;u--;0==u&&l(r)}}var r=[],u=0;do r.push(void 0),u++,d(k.value).ec(n(r.length-1),m),k=h.next();
while(!k.done)})};return b});function Ja(a,b){return Object.prototype.hasOwnProperty.call(a,b)}
fa("WeakMap",function(a){function b(k){this.a=(h+=Math.random()+1).toString();if(k){k=q(k);for(var l;!(l=k.next()).done;)l=l.value,this.set(l[0],l[1])}}function c(){}function d(k){var l=typeof k;return"object"===l&&null!==k||"function"===l}function e(k){if(!Ja(k,g)){var l=new c;ca(k,g,{value:l})}}function f(k){var l=Object[k];l&&(Object[k]=function(m){if(m instanceof c)return m;Object.isExtensible(m)&&e(m);return l(m)})}if(function(){if(!a||!Object.seal)return!1;try{var k=Object.seal({}),l=Object.seal({}),
m=new a([[k,2],[l,3]]);if(2!=m.get(k)||3!=m.get(l))return!1;m["delete"](k);m.set(l,4);return!m.has(k)&&4==m.get(l)}catch(n){return!1}}())return a;var g="$jscomp_hidden_"+Math.random();f("freeze");f("preventExtensions");f("seal");var h=0;b.prototype.set=function(k,l){if(!d(k))throw Error("Invalid WeakMap key");e(k);if(!Ja(k,g))throw Error("WeakMap key fail: "+k);k[g][this.a]=l;return this};b.prototype.get=function(k){return d(k)&&Ja(k,g)?k[g][this.a]:void 0};b.prototype.has=function(k){return d(k)&&
Ja(k,g)&&Ja(k[g],this.a)};b.prototype["delete"]=function(k){return d(k)&&Ja(k,g)&&Ja(k[g],this.a)?delete k[g][this.a]:!1};return b});
fa("Map",function(a){function b(){var h={};return h.Ga=h.next=h.head=h}function c(h,k){var l=h.a;return ha(function(){if(l){for(;l.head!=h.a;)l=l.Ga;for(;l.next!=l.head;)return l=l.next,{done:!1,value:k(l)};l=null}return{done:!0,value:void 0}})}function d(h,k){var l=k&&typeof k;"object"==l||"function"==l?f.has(k)?l=f.get(k):(l=""+ ++g,f.set(k,l)):l="p_"+k;var m=h.b[l];if(m&&Ja(h.b,l))for(var n=0;n<m.length;n++){var r=m[n];if(k!==k&&r.key!==r.key||k===r.key)return{id:l,list:m,index:n,X:r}}return{id:l,
list:m,index:-1,X:void 0}}function e(h){this.b={};this.a=b();this.size=0;if(h){h=q(h);for(var k;!(k=h.next()).done;)k=k.value,this.set(k[0],k[1])}}if(function(){if(!a||"function"!=typeof a||!a.prototype.entries||"function"!=typeof Object.seal)return!1;try{var h=Object.seal({x:4}),k=new a(q([[h,"s"]]));if("s"!=k.get(h)||1!=k.size||k.get({x:4})||k.set({x:4},"t")!=k||2!=k.size)return!1;var l=k.entries(),m=l.next();if(m.done||m.value[0]!=h||"s"!=m.value[1])return!1;m=l.next();return m.done||4!=m.value[0].x||
"t"!=m.value[1]||!l.next().done?!1:!0}catch(n){return!1}}())return a;var f=new WeakMap;e.prototype.set=function(h,k){h=0===h?0:h;var l=d(this,h);l.list||(l.list=this.b[l.id]=[]);l.X?l.X.value=k:(l.X={next:this.a,Ga:this.a.Ga,head:this.a,key:h,value:k},l.list.push(l.X),this.a.Ga.next=l.X,this.a.Ga=l.X,this.size++);return this};e.prototype["delete"]=function(h){h=d(this,h);return h.X&&h.list?(h.list.splice(h.index,1),h.list.length||delete this.b[h.id],h.X.Ga.next=h.X.next,h.X.next.Ga=h.X.Ga,h.X.head=
null,this.size--,!0):!1};e.prototype.clear=function(){this.b={};this.a=this.a.Ga=b();this.size=0};e.prototype.has=function(h){return!!d(this,h).X};e.prototype.get=function(h){return(h=d(this,h).X)&&h.value};e.prototype.entries=function(){return c(this,function(h){return[h.key,h.value]})};e.prototype.keys=function(){return c(this,function(h){return h.key})};e.prototype.values=function(){return c(this,function(h){return h.value})};e.prototype.forEach=function(h,k){for(var l=this.entries(),m;!(m=l.next()).done;)m=
m.value,h.call(k,m[1],m[0],this)};e.prototype[Symbol.iterator]=e.prototype.entries;var g=0;return e});
fa("Set",function(a){function b(c){this.a=new Map;if(c){c=q(c);for(var d;!(d=c.next()).done;)this.add(d.value)}this.size=this.a.size}if(function(){if(!a||"function"!=typeof a||!a.prototype.entries||"function"!=typeof Object.seal)return!1;try{var c=Object.seal({x:4}),d=new a(q([c]));if(!d.has(c)||1!=d.size||d.add(c)!=d||1!=d.size||d.add({x:4})!=d||2!=d.size)return!1;var e=d.entries(),f=e.next();if(f.done||f.value[0]!=c||f.value[1]!=c)return!1;f=e.next();return f.done||f.value[0]==c||4!=f.value[0].x||
f.value[1]!=f.value[0]?!1:e.next().done}catch(g){return!1}}())return a;b.prototype.add=function(c){c=0===c?0:c;this.a.set(c,c);this.size=this.a.size;return this};b.prototype["delete"]=function(c){c=this.a["delete"](c);this.size=this.a.size;return c};b.prototype.clear=function(){this.a.clear();this.size=0};b.prototype.has=function(c){return this.a.has(c)};b.prototype.entries=function(){return this.a.entries()};b.prototype.values=function(){return this.a.values()};b.prototype.keys=b.prototype.values;
b.prototype[Symbol.iterator]=b.prototype.values;b.prototype.forEach=function(c,d){var e=this;this.a.forEach(function(f){return c.call(d,f,f,e)})};return b});function Ka(a,b,c){a instanceof String&&(a=String(a));for(var d=a.length,e=0;e<d;e++){var f=a[e];if(b.call(c,f,e,a))return{Y:e,Yd:f}}return{Y:-1,Yd:void 0}}fa("Array.prototype.findIndex",function(a){return a?a:function(b,c){return Ka(this,b,c).Y}});
fa("Promise.prototype.finally",function(a){return a?a:function(b){return this.then(function(c){return Promise.resolve(b()).then(function(){return c})},function(c){return Promise.resolve(b()).then(function(){throw c;})})}});function La(a,b){a instanceof String&&(a+="");var c=0,d=!1,e={next:function(){if(!d&&c<a.length){var f=c++;return{value:b(f,a[f]),done:!1}}d=!0;return{done:!0,value:void 0}}};e[Symbol.iterator]=function(){return e};return e}
fa("Array.prototype.keys",function(a){return a?a:function(){return La(this,function(b){return b})}});fa("Object.is",function(a){return a?a:function(b,c){return b===c?0!==b||1/b===1/c:b!==b&&c!==c}});fa("Array.prototype.includes",function(a){return a?a:function(b,c){var d=this;d instanceof String&&(d=String(d));var e=d.length,f=c||0;for(0>f&&(f=Math.max(f+e,0));f<e;f++){var g=d[f];if(g===b||Object.is(g,b))return!0}return!1}});
function Ma(a,b,c){if(null==a)throw new TypeError("The 'this' value for String.prototype."+c+" must not be null or undefined");if(b instanceof RegExp)throw new TypeError("First argument to String.prototype."+c+" must not be a regular expression");return a+""}fa("String.prototype.includes",function(a){return a?a:function(b,c){return-1!==Ma(this,b,"includes").indexOf(b,c||0)}});fa("Array.prototype.values",function(a){return a?a:function(){return La(this,function(b,c){return c})}});
fa("Array.from",function(a){return a?a:function(b,c,d){c=null!=c?c:function(h){return h};var e=[],f="undefined"!=typeof Symbol&&Symbol.iterator&&b[Symbol.iterator];if("function"==typeof f){b=f.call(b);for(var g=0;!(f=b.next()).done;)e.push(c.call(d,f.value,g++))}else for(f=b.length,g=0;g<f;g++)e.push(c.call(d,b[g],g));return e}});fa("Array.prototype.find",function(a){return a?a:function(b,c){return Ka(this,b,c).Yd}});fa("Math.log2",function(a){return a?a:function(b){return Math.log(b)/Math.LN2}});
var Na="function"==typeof Object.assign?Object.assign:function(a,b){for(var c=1;c<arguments.length;c++){var d=arguments[c];if(d)for(var e in d)Ja(d,e)&&(a[e]=d[e])}return a};fa("Object.assign",function(a){return a||Na});fa("Object.values",function(a){return a?a:function(b){var c=[],d;for(d in b)Ja(b,d)&&c.push(b[d]);return c}});
fa("String.prototype.startsWith",function(a){return a?a:function(b,c){for(var d=Ma(this,b,"startsWith"),e=d.length,f=b.length,g=Math.max(0,Math.min(c|0,d.length)),h=0;h<f&&g<e;)if(d[g++]!=b[h++])return!1;return h>=f}});var Oa=this||self;function K(a,b){var c=a.split("."),d=Oa;c[0]in d||"undefined"==typeof d.execScript||d.execScript("var "+c[0]);for(var e;c.length&&(e=c.shift());)c.length||void 0===b?d[e]&&d[e]!==Object.prototype[e]?d=d[e]:d=d[e]={}:d[e]=b};/*
 @license
 Shaka Player
 Copyright 2016 Google LLC
 SPDX-License-Identifier: Apache-2.0
*/
function Pa(a){this.c=Math.exp(Math.log(.5)/a);this.b=this.a=0}function Qa(a,b,c){var d=Math.pow(a.c,b);c=c*(1-d)+d*a.a;isNaN(c)||(a.a=c,a.b+=b)}function Ta(a){return a.a/(1-Math.pow(a.c,a.b))};function Ua(){this.b=new Pa(2);this.c=new Pa(5);this.a=0}Ua.prototype.getBandwidthEstimate=function(a){return 128E3>this.a?a:Math.min(Ta(this.b),Ta(this.c))};function Va(){}function Wa(){}function Xa(){}function Ya(a,b){for(var c=[],d=1;d<arguments.length;++d)c[d-1]=arguments[d];Za.has(a)||(Za.add(a),Xa.apply(Va,ia(c)))}function $a(){}function ab(){}var Za=new Set;if(window.console&&window.console.log.bind){var bb={},cb=(bb[1]=console.error.bind(console),bb[2]=console.warn.bind(console),bb[3]=console.info.bind(console),bb[4]=console.log.bind(console),bb[5]=console.debug.bind(console),bb[6]=console.debug.bind(console),bb);Xa=cb[2];Wa=cb[1]};function db(a,b){for(var c=[],d=q(a),e=d.next();!e.done;e=d.next())c.push(b(e.value));return c}function eb(a,b){for(var c=q(a),d=c.next();!d.done;d=c.next())if(!b(d.value))return!1;return!0}
var gb=function fb(a){var c;return Fa(fb,function(d){1==d.a&&(c=0);if(3!=d.a)return c<a?t(d,c,3):d.u(0);c++;return d.u(2)})},ib=function hb(a){var c,d,e,f,g,h;return Fa(hb,function(k){1==k.a&&(c=-1,e=d=void 0,f=q(a),g=f.next());if(5!=k.a){if(g.done)return-1==c?k.u(0):t(k,{Y:c,Oe:d,item:e,next:void 0},0);h=g.value;return 0<=c?t(k,{Y:c,item:e,Oe:d,next:h},5):k.u(5)}c++;d=e;e=h;g=f.next();return k.u(2)})};function jb(){}function kb(a,b){if(!a&&!b)return!0;if(!a||!b||a.byteLength!=b.byteLength)return!1;if(lb(a)==lb(b)&&(a.byteOffset||0)==(b.byteOffset||0))return!0;for(var c=L(a),d=L(b),e=q(gb(a.byteLength)),f=e.next();!f.done;f=e.next())if(f=f.value,c[f]!=d[f])return!1;return!0}function lb(a){return a instanceof ArrayBuffer?a:a.buffer}function mb(a){return a instanceof ArrayBuffer?a:0==a.byteOffset&&a.byteLength==a.buffer.byteLength?a.buffer:(new Uint8Array(a)).buffer}
function L(a,b,c){c=void 0===c?Infinity:c;return nb(a,void 0===b?0:b,c,Uint8Array)}function ob(a,b,c){c=void 0===c?Infinity:c;return nb(a,void 0===b?0:b,c,DataView)}function nb(a,b,c,d){var e=(a.byteOffset||0)+a.byteLength;b=Math.max(0,Math.min((a.byteOffset||0)+b,e));return new d(lb(a),b,Math.min(b+Math.max(c,0),e)-b)}K("shaka.util.BufferUtils",jb);jb.toDataView=ob;jb.toUint8=L;jb.toArrayBuffer=mb;jb.equal=kb;function M(a,b,c,d){for(var e=[],f=3;f<arguments.length;++f)e[f-3]=arguments[f];this.severity=a;this.category=b;this.code=c;this.data=e;this.handled=!1}M.prototype.toString=function(){return"shaka.util.Error "+JSON.stringify(this,null,"  ")};K("shaka.util.Error",M);M.Severity={RECOVERABLE:1,CRITICAL:2};M.Category={NETWORK:1,TEXT:2,MEDIA:3,MANIFEST:4,STREAMING:5,DRM:6,PLAYER:7,CAST:8,STORAGE:9,ADS:10};
M.Code={UNSUPPORTED_SCHEME:1E3,BAD_HTTP_STATUS:1001,HTTP_ERROR:1002,TIMEOUT:1003,MALFORMED_DATA_URI:1004,REQUEST_FILTER_ERROR:1006,RESPONSE_FILTER_ERROR:1007,MALFORMED_TEST_URI:1008,UNEXPECTED_TEST_REQUEST:1009,ATTEMPTS_EXHAUSTED:1010,INVALID_TEXT_HEADER:2E3,INVALID_TEXT_CUE:2001,UNABLE_TO_DETECT_ENCODING:2003,BAD_ENCODING:2004,INVALID_XML:2005,INVALID_MP4_TTML:2007,INVALID_MP4_VTT:2008,UNABLE_TO_EXTRACT_CUE_START_TIME:2009,BUFFER_READ_OUT_OF_BOUNDS:3E3,JS_INTEGER_OVERFLOW:3001,EBML_OVERFLOW:3002,
EBML_BAD_FLOATING_POINT_SIZE:3003,MP4_SIDX_WRONG_BOX_TYPE:3004,MP4_SIDX_INVALID_TIMESCALE:3005,MP4_SIDX_TYPE_NOT_SUPPORTED:3006,WEBM_CUES_ELEMENT_MISSING:3007,WEBM_EBML_HEADER_ELEMENT_MISSING:3008,WEBM_SEGMENT_ELEMENT_MISSING:3009,WEBM_INFO_ELEMENT_MISSING:3010,WEBM_DURATION_ELEMENT_MISSING:3011,WEBM_CUE_TRACK_POSITIONS_ELEMENT_MISSING:3012,WEBM_CUE_TIME_ELEMENT_MISSING:3013,MEDIA_SOURCE_OPERATION_FAILED:3014,MEDIA_SOURCE_OPERATION_THREW:3015,VIDEO_ERROR:3016,QUOTA_EXCEEDED_ERROR:3017,TRANSMUXING_FAILED:3018,
UNABLE_TO_GUESS_MANIFEST_TYPE:4E3,DASH_INVALID_XML:4001,DASH_NO_SEGMENT_INFO:4002,DASH_EMPTY_ADAPTATION_SET:4003,DASH_EMPTY_PERIOD:4004,DASH_WEBM_MISSING_INIT:4005,DASH_UNSUPPORTED_CONTAINER:4006,DASH_PSSH_BAD_ENCODING:4007,DASH_NO_COMMON_KEY_SYSTEM:4008,DASH_MULTIPLE_KEY_IDS_NOT_SUPPORTED:4009,DASH_CONFLICTING_KEY_IDS:4010,RESTRICTIONS_CANNOT_BE_MET:4012,HLS_PLAYLIST_HEADER_MISSING:4015,INVALID_HLS_TAG:4016,HLS_INVALID_PLAYLIST_HIERARCHY:4017,DASH_DUPLICATE_REPRESENTATION_ID:4018,HLS_MULTIPLE_MEDIA_INIT_SECTIONS_FOUND:4020,
HLS_COULD_NOT_GUESS_MIME_TYPE:4021,HLS_MASTER_PLAYLIST_NOT_PROVIDED:4022,HLS_REQUIRED_ATTRIBUTE_MISSING:4023,HLS_REQUIRED_TAG_MISSING:4024,HLS_COULD_NOT_GUESS_CODECS:4025,HLS_KEYFORMATS_NOT_SUPPORTED:4026,DASH_UNSUPPORTED_XLINK_ACTUATE:4027,DASH_XLINK_DEPTH_LIMIT:4028,HLS_COULD_NOT_PARSE_SEGMENT_START_TIME:4030,CONTENT_UNSUPPORTED_BY_BROWSER:4032,CANNOT_ADD_EXTERNAL_TEXT_TO_LIVE_STREAM:4033,HLS_AES_128_ENCRYPTION_NOT_SUPPORTED:4034,HLS_INTERNAL_SKIP_STREAM:4035,NO_VARIANTS:4036,PERIOD_FLATTENING_FAILED:4037,
INCONSISTENT_DRM_ACROSS_PERIODS:4038,HLS_VARIABLE_NOT_FOUND:4039,STREAMING_ENGINE_STARTUP_INVALID_STATE:5006,NO_RECOGNIZED_KEY_SYSTEMS:6E3,REQUESTED_KEY_SYSTEM_CONFIG_UNAVAILABLE:6001,FAILED_TO_CREATE_CDM:6002,FAILED_TO_ATTACH_TO_VIDEO:6003,INVALID_SERVER_CERTIFICATE:6004,FAILED_TO_CREATE_SESSION:6005,FAILED_TO_GENERATE_LICENSE_REQUEST:6006,LICENSE_REQUEST_FAILED:6007,LICENSE_RESPONSE_REJECTED:6008,ENCRYPTED_CONTENT_WITHOUT_DRM_INFO:6010,NO_LICENSE_SERVER_GIVEN:6012,OFFLINE_SESSION_REMOVED:6013,EXPIRED:6014,
SERVER_CERTIFICATE_REQUIRED:6015,INIT_DATA_TRANSFORM_ERROR:6016,LOAD_INTERRUPTED:7E3,OPERATION_ABORTED:7001,NO_VIDEO_ELEMENT:7002,OBJECT_DESTROYED:7003,CAST_API_UNAVAILABLE:8E3,NO_CAST_RECEIVERS:8001,ALREADY_CASTING:8002,UNEXPECTED_CAST_ERROR:8003,CAST_CANCELED_BY_USER:8004,CAST_CONNECTION_TIMED_OUT:8005,CAST_RECEIVER_APP_UNAVAILABLE:8006,STORAGE_NOT_SUPPORTED:9E3,INDEXED_DB_ERROR:9001,DEPRECATED_OPERATION_ABORTED:9002,REQUESTED_ITEM_NOT_FOUND:9003,MALFORMED_OFFLINE_URI:9004,CANNOT_STORE_LIVE_OFFLINE:9005,
NO_INIT_DATA_FOR_OFFLINE:9007,LOCAL_PLAYER_INSTANCE_REQUIRED:9008,NEW_KEY_OPERATION_NOT_SUPPORTED:9011,KEY_NOT_FOUND:9012,MISSING_STORAGE_CELL:9013,CS_IMA_SDK_MISSING:1E4,CS_AD_MANAGER_NOT_INITIALIZED:10001,SS_IMA_SDK_MISSING:10002,SS_AD_MANAGER_NOT_INITIALIZED:10003,CURRENT_DAI_REQUEST_NOT_FINISHED:10004};/*
 @license
 Copyright 2008 The Closure Library Authors
 SPDX-License-Identifier: Apache-2.0
*/
var pb=/^(?:([^:/?#.]+):)?(?:\/\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\?([^#]*))?(?:#(.*))?$/;/*
 @license
 Copyright 2006 The Closure Library Authors
 SPDX-License-Identifier: Apache-2.0
*/
function qb(a){var b;a instanceof qb?(rb(this,a.va),this.Za=a.Za,this.ua=a.ua,sb(this,a.qb),this.ja=a.ja,tb(this,a.a.clone()),this.Qa=a.Qa):a&&(b=String(a).match(pb))?(rb(this,b[1]||"",!0),this.Za=ub(b[2]||""),this.ua=ub(b[3]||"",!0),sb(this,b[4]),this.ja=ub(b[5]||"",!0),tb(this,b[6]||"",!0),this.Qa=ub(b[7]||"")):this.a=new vb(null)}p=qb.prototype;p.va="";p.Za="";p.ua="";p.qb=null;p.ja="";p.Qa="";
p.toString=function(){var a=[],b=this.va;b&&a.push(wb(b,xb,!0),":");if(b=this.ua){a.push("//");var c=this.Za;c&&a.push(wb(c,xb,!0),"@");a.push(encodeURIComponent(b).replace(/%25([0-9a-fA-F]{2})/g,"%$1"));b=this.qb;null!=b&&a.push(":",String(b))}if(b=this.ja)this.ua&&"/"!=b.charAt(0)&&a.push("/"),a.push(wb(b,"/"==b.charAt(0)?yb:zb,!0));(b=this.a.toString())&&a.push("?",b);(b=this.Qa)&&a.push("#",wb(b,Ab));return a.join("")};
p.resolve=function(a){var b=this.clone();"data"===b.va&&(b=new qb);var c=!!a.va;c?rb(b,a.va):c=!!a.Za;c?b.Za=a.Za:c=!!a.ua;c?b.ua=a.ua:c=null!=a.qb;var d=a.ja;if(c)sb(b,a.qb);else if(c=!!a.ja){if("/"!=d.charAt(0))if(this.ua&&!this.ja)d="/"+d;else{var e=b.ja.lastIndexOf("/");-1!=e&&(d=b.ja.substr(0,e+1)+d)}if(".."==d||"."==d)d="";else if(-1!=d.indexOf("./")||-1!=d.indexOf("/.")){e=0==d.lastIndexOf("/",0);d=d.split("/");for(var f=[],g=0;g<d.length;){var h=d[g++];"."==h?e&&g==d.length&&f.push(""):".."==
h?((1<f.length||1==f.length&&""!=f[0])&&f.pop(),e&&g==d.length&&f.push("")):(f.push(h),e=!0)}d=f.join("/")}}c?b.ja=d:c=""!==a.a.toString();c?tb(b,a.a.clone()):c=!!a.Qa;c&&(b.Qa=a.Qa);return b};p.clone=function(){return new qb(this)};function rb(a,b,c){a.va=c?ub(b,!0):b;a.va&&(a.va=a.va.replace(/:$/,""))}function sb(a,b){if(b){b=Number(b);if(isNaN(b)||0>b)throw Error("Bad port number "+b);a.qb=b}else a.qb=null}function tb(a,b,c){b instanceof vb?a.a=b:(c||(b=wb(b,Bb)),a.a=new vb(b))}
function ub(a,b){return a?b?decodeURI(a):decodeURIComponent(a):""}function wb(a,b,c){return null!=a?(a=encodeURI(a).replace(b,Cb),c&&(a=a.replace(/%25([0-9a-fA-F]{2})/g,"%$1")),a):null}function Cb(a){a=a.charCodeAt(0);return"%"+(a>>4&15).toString(16)+(a&15).toString(16)}var xb=/[#\/\?@]/g,zb=/[#\?:]/g,yb=/[#\?]/g,Bb=/[#\?@]/g,Ab=/#/g;function vb(a){this.a=a||null}p=vb.prototype;p.ga=null;p.hc=null;
p.add=function(a,b){if(!this.ga&&(this.ga={},this.hc=0,this.a))for(var c=this.a.split("&"),d=0;d<c.length;d++){var e=c[d].indexOf("="),f=null;if(0<=e){var g=c[d].substring(0,e);f=c[d].substring(e+1)}else g=c[d];g=decodeURIComponent(g.replace(/\+/g," "));f=f||"";this.add(g,decodeURIComponent(f.replace(/\+/g," ")))}this.a=null;(c=this.ga.hasOwnProperty(a)&&this.ga[a])||(this.ga[a]=c=[]);c.push(b);this.hc++;return this};
p.toString=function(){if(this.a)return this.a;if(!this.ga)return"";var a=[],b;for(b in this.ga)for(var c=encodeURIComponent(b),d=this.ga[b],e=0;e<d.length;e++){var f=c;""!==d[e]&&(f+="="+encodeURIComponent(d[e]));a.push(f)}return this.a=a.join("&")};p.clone=function(){var a=new vb;a.a=this.a;if(this.ga){var b={},c;for(c in this.ga)b[c]=this.ga[c].concat();a.ga=b;a.hc=this.hc}return a};function Db(a,b){this.a=a;this.b=b}Db.prototype.toString=function(){return"v"+this.a+"."+this.b};function Eb(a,b){var c=new Db(4,0),d=Fb,e=d.a,f=c.b-e.b;(0<(c.a-e.a||f)?d.c:d.b)(d.a,c,a,b)}function Gb(a,b,c,d){Xa([c,"has been deprecated and will be removed in",b,". We are currently at version",a,". Additional information:",d].join(" "))}function Hb(a,b,c,d){Wa([c,"has been deprecated and has been removed in",b,". We are now at version",a,". Additional information:",d].join(""))}var Fb=null;function Ib(a,b){return a.concat(b)}function Jb(){}function Kb(a){return null!=a}function Lb(a){var b=Object.create(a.prototype||Object.prototype);try{var c=a.call(b);c||(Eb("Factories requiring new","Factories should be plain functions"),c=b)}catch(d){Eb("Factories requiring new","Factories should be plain functions"),c=new a}return c};function Mb(a,b){if(0==b.length)return a;var c=b.map(function(d){return new qb(d)});return a.map(function(d){return new qb(d)}).map(function(d){return c.map(function(e){return d.resolve(e)})}).reduce(Ib,[]).map(function(d){return d.toString()})}function Nb(a,b){return{keySystem:a,licenseServerUri:"",distinctiveIdentifierRequired:!1,persistentStateRequired:!1,audioRobustness:"",videoRobustness:"",serverCertificate:null,initData:b||[],keyIds:new Set}}
var Ob={Da:"video",fb:"audio",$:"text",vf:"image",mf:"application"};function Pb(){var a,b,c=new Promise(function(d,e){a=d;b=e});c.resolve=a;c.reject=b;return c}Pb.prototype.resolve=function(){};Pb.prototype.reject=function(){};function Rb(a){this.b=a;this.a=void 0}Rb.prototype.value=function(){void 0==this.a&&(this.a=this.b());return this.a};function Sb(){}function Tb(a){if(!a)return"";a=L(a);239==a[0]&&187==a[1]&&191==a[2]&&(a=a.subarray(3));a=Ub(a);a=escape(a);try{return decodeURIComponent(a)}catch(b){throw new M(2,2,2004);}}function Vb(a,b,c){if(!a)return"";if(!c&&0!=a.byteLength%2)throw new M(2,2,2004);var d=Math.floor(a.byteLength/2);c=new Uint16Array(d);a=ob(a);d=q(gb(d));for(var e=d.next();!e.done;e=d.next())e=e.value,c[e]=a.getUint16(2*e,b);return Ub(c)}
function Wb(a){function b(d){return c.byteLength<=d||32<=c[d]&&126>=c[d]}if(!a)return"";var c=L(a);if(239==c[0]&&187==c[1]&&191==c[2])return Tb(c);if(254==c[0]&&255==c[1])return Vb(c.subarray(2),!1);if(255==c[0]&&254==c[1])return Vb(c.subarray(2),!0);if(0==c[0]&&0==c[2])return Vb(a,!1);if(0==c[1]&&0==c[3])return Vb(a,!0);if(b(0)&&b(1)&&b(2)&&b(3))return Tb(a);throw new M(2,2,2003);}
function Xb(a){a=encodeURIComponent(a);var b=unescape(a);a=new Uint8Array(b.length);b=q(ib(b));for(var c=b.next();!c.done;c=b.next())c=c.value,a[c.Y]=c.item.charCodeAt(0);return mb(a)}function Yb(a,b){for(var c=new ArrayBuffer(2*a.length),d=new DataView(c),e=q(ib(a)),f=e.next();!f.done;f=e.next())f=f.value,d.setUint16(2*f.Y,f.item.charCodeAt(0),b);return c}function Ub(a){return Zb.value()(a)}K("shaka.util.StringUtils",Sb);Sb.resetFromCharCode=function(){Zb.a=void 0};Sb.toUTF16=Yb;Sb.toUTF8=Xb;
Sb.fromBytesAutoDetect=Wb;Sb.fromUTF16=Vb;Sb.fromUTF8=Tb;var Zb=new Rb(function(){function a(c){try{var d=new Uint8Array(c);return 0<String.fromCharCode.apply(null,d).length}catch(e){return!1}}for(var b={Ja:65536};0<b.Ja;b={Ja:b.Ja},b.Ja/=2)if(a(b.Ja))return function(c){return function(d){for(var e="",f=0;f<d.length;f+=c.Ja)e+=String.fromCharCode.apply(null,d.subarray(f,f+c.Ja));return e}}(b);return null});function $b(){}function ac(a){a=Ub(L(a));return btoa(a)}function bc(a,b){b=void 0==b?!0:b;var c=ac(a).replace(/\+/g,"-").replace(/\//g,"_");return b?c:c.replace(/[=]*$/,"")}function cc(a){var b=window.atob(a.replace(/-/g,"+").replace(/_/g,"/"));a=new Uint8Array(b.length);b=q(ib(b));for(var c=b.next();!c.done;c=b.next())c=c.value,a[c.Y]=c.item.charCodeAt(0);return a}
function dc(a){var b=a.length/2,c=new Uint8Array(b);b=q(gb(b));for(var d=b.next();!d.done;d=b.next())d=d.value,c[d]=window.parseInt(a.substr(2*d,2),16);return c}function ec(a){var b=L(a);a="";b=q(b);for(var c=b.next();!c.done;c=b.next())c=c.value,c=c.toString(16),1==c.length&&(c="0"+c),a+=c;return a}
function fc(a){for(var b=[],c=0;c<arguments.length;++c)b[c]=arguments[c];var d=0,e=q(b);for(c=e.next();!c.done;c=e.next())d+=c.value.byteLength;d=new Uint8Array(d);e=0;b=q(b);for(c=b.next();!c.done;c=b.next())c=c.value,d.set(L(c),e),e+=c.byteLength;return d}K("shaka.util.Uint8ArrayUtils",$b);$b.concat=fc;$b.toHex=ec;$b.fromHex=dc;$b.fromBase64=cc;$b.toBase64=bc;$b.toStandardBase64=ac;
$b.equal=function(a,b){Eb("shaka.util.Uint8ArrayUtils.equal","Please use shaka.util.BufferUtils.equal instead.");return kb(a,b)};function gc(){var a=this;this.a=new muxjs.mp4.Transmuxer({keepOriginalTimestamps:!0});this.b=null;this.h=[];this.c=[];this.g=[];this.f=!1;this.a.on("data",function(b){a.c=b.captions;a.g=b.metadata;a.h.push(fc(b.initSegment,b.data))});this.a.on("done",function(){var b={data:fc.apply($b,ia(a.h)),captions:a.c,metadata:a.g};a.b.resolve(b);a.f=!1})}gc.prototype.destroy=function(){this.a.dispose();this.a=null;return Promise.resolve()};
function hc(a,b){if(!window.muxjs||"mp2t"!=a.toLowerCase().split(";")[0].split("/")[1])return!1;if(b)return MediaSource.isTypeSupported(ic(b,a));var c=ic("audio",a),d=ic("video",a);return MediaSource.isTypeSupported(c)||MediaSource.isTypeSupported(d)}
function ic(a,b){var c=b.replace(/mp2t/i,"mp4");"audio"==a&&(c=c.replace("video","audio"));var d=/avc1\.(66|77|100)\.(\d+)/.exec(c);if(d){var e="avc1.",f=d[1],g=Number(d[2]);e=("66"==f?e+"4200":"77"==f?e+"4d00":e+"6400")+(g>>4).toString(16);e+=(g&15).toString(16);c=c.replace(d[0],e)}return c}function jc(a,b){a.f=!0;a.b=new Pb;a.h=[];a.c=[];a.g=[];var c=L(b);a.a.push(c);a.a.flush();a.f&&a.b.reject(new M(2,3,3018));return a.b};function kc(a){this.b=a;this.a=null}kc.prototype.R=function(a){var b=this;this.stop();var c=!0,d=null;this.a=function(){window.clearTimeout(d);c=!1};d=window.setTimeout(function(){c&&b.b()},1E3*a);return this};kc.prototype.stop=function(){this.a&&(this.a(),this.a=null)};function N(a){this.b=a;this.a=null}N.prototype.Qb=function(){this.stop();this.b();return this};N.prototype.R=function(a){var b=this;this.stop();this.a=(new kc(function(){b.b()})).R(a);return this};N.prototype.ra=function(a){var b=this;this.stop();this.a=(new kc(function(){b.a.R(a);b.b()})).R(a);return this};N.prototype.stop=function(){this.a&&(this.a.stop(),this.a=null)};K("shaka.util.Timer",N);N.prototype.stop=N.prototype.stop;N.prototype.tickEvery=N.prototype.ra;N.prototype.tickAfter=N.prototype.R;
N.prototype.tickNow=N.prototype.Qb;function lc(a,b){var c=mc();this.j=null==a.maxAttempts?c.maxAttempts:a.maxAttempts;this.f=null==a.baseDelay?c.baseDelay:a.baseDelay;this.h=null==a.fuzzFactor?c.fuzzFactor:a.fuzzFactor;this.g=null==a.backoffFactor?c.backoffFactor:a.backoffFactor;this.a=0;this.b=this.f;if(this.c=void 0===b?!1:b)this.a=1}
function nc(a){var b,c;return J(function(d){if(1==d.a){if(a.a>=a.j)if(a.c)a.a=1,a.b=a.f;else throw new M(2,7,1010);b=a.a;a.a++;if(0==b)return d["return"]();c=a.b*(1+(2*Math.random()-1)*a.h);return t(d,new Promise(function(e){(new N(e)).R(c/1E3)}),2)}a.b*=a.g;w(d)})}function mc(){return{maxAttempts:2,baseDelay:1E3,backoffFactor:2,fuzzFactor:.5,timeout:0}};function oc(a,b){this.promise=a;this.c=b;this.a=!1}function pc(a){return new oc(Promise.reject(a),function(){return Promise.resolve()})}function qc(){var a=Promise.reject(new M(2,7,7001));a["catch"](function(){});return new oc(a,function(){return Promise.resolve()})}function rc(a){return new oc(Promise.resolve(a),function(){return Promise.resolve()})}function sc(a){return new oc(a,function(){return a["catch"](function(){})})}oc.prototype.abort=function(){this.a=!0;return this.c()};
function tc(a){return new oc(Promise.all(a.map(function(b){return b.promise})),function(){return Promise.all(a.map(function(b){return b.abort()}))})}oc.prototype["finally"]=function(a){this.promise.then(function(){return a(!0)},function(){return a(!1)});return this};
oc.prototype.U=function(a,b){function c(h){return function(k){if(e.a&&h)f.reject(g);else{var l=h?a:b;l?d=uc(l,k,f):(h?f.resolve:f.reject)(k)}}}function d(){f.reject(g);return e.abort()}var e=this,f=new Pb,g=new M(2,7,7001);this.promise.then(c(!0),c(!1));return new oc(f,function(){return d()})};
function uc(a,b,c){try{var d=a(b);if(d&&d.promise&&d.abort)return c.resolve(d.promise),function(){return d.abort()};c.resolve(d);return function(){return Promise.resolve(d).then(function(){},function(){})}}catch(e){return c.reject(e),function(){return Promise.resolve()}}}K("shaka.util.AbortableOperation",oc);oc.prototype.chain=oc.prototype.U;oc.prototype["finally"]=oc.prototype["finally"];oc.all=tc;oc.prototype.abort=oc.prototype.abort;oc.notAbortable=sc;oc.completed=rc;oc.aborted=qc;oc.failed=pc;function Q(a,b){b=void 0===b?{}:b;for(var c in b)Object.defineProperty(this,c,{value:b[c],writable:!0,enumerable:!0});this.defaultPrevented=this.cancelable=this.bubbles=!1;this.timeStamp=window.performance&&window.performance.now?window.performance.now():Date.now();this.type=a;this.isTrusted=!1;this.target=this.currentTarget=null;this.a=!1}Q.prototype.preventDefault=function(){this.cancelable&&(this.defaultPrevented=!0)};Q.prototype.stopImmediatePropagation=function(){this.a=!0};
Q.prototype.stopPropagation=function(){};K("shaka.util.FakeEvent",Q);function vc(){this.a={}}vc.prototype.push=function(a,b){this.a.hasOwnProperty(a)?this.a[a].push(b):this.a[a]=[b]};vc.prototype.get=function(a){return(a=this.a[a])?a.slice():null};vc.prototype.remove=function(a,b){a in this.a&&(this.a[a]=this.a[a].filter(function(c){return c!=b}))};function wc(a,b){for(var c in a.a)b(c,a.a[c])};function xc(){this.Mc=new vc;this.$b=this}xc.prototype.addEventListener=function(a,b){this.Mc.push(a,b)};xc.prototype.removeEventListener=function(a,b){this.Mc.remove(a,b)};xc.prototype.dispatchEvent=function(a){var b=this.Mc.get(a.type)||[];b=q(b);for(var c=b.next();!c.done;c=b.next()){c=c.value;a.target=this.$b;a.currentTarget=this.$b;try{c.handleEvent?c.handleEvent(a):c.call(this,a)}catch(d){}if(a.a)break}return a.defaultPrevented};function yc(a){function b(d){switch(typeof d){case "undefined":case "boolean":case "number":case "string":case "symbol":case "function":return d;default:if(!d||d.buffer&&d.buffer.constructor==ArrayBuffer)return d;if(c.has(d))return null;var e=d.constructor==Array;if(d.constructor!=Object&&!e)return null;c.add(d);var f=e?[]:{},g;for(g in d)f[g]=b(d[g]);e&&(f.length=d.length);return f}}var c=new Set;return b(a)}function zc(a){var b={},c;for(c in a)b[c]=a[c];return b};function Ac(a,b){return"number"===typeof a&&"number"===typeof b&&isNaN(a)&&isNaN(b)?!0:a===b}function Bc(a,b){var c=a.indexOf(b);-1<c&&a.splice(c,1)}function Cc(a,b,c){c||(c=Ac);if(a.length!=b.length)return!1;b=b.slice();var d={};a=q(a);for(var e=a.next();!e.done;d={Ac:d.Ac},e=a.next()){d.Ac=e.value;e=b.findIndex(function(f){return function(g){return c(f.Ac,g)}}(d));if(-1==e)return!1;b[e]=b[b.length-1];b.pop()}return 0==b.length}
function Dc(a,b,c){c||(c=Ac);if(a.length!=b.length)return!1;for(var d=0;d<a.length;d++)if(!c(a[d],b[d]))return!1;return!0};function Ec(){this.a=[]}function Fc(a,b){a.a.push(b["finally"](function(){Bc(a.a,b)}))}Ec.prototype.destroy=function(){for(var a=[],b=q(this.a),c=b.next();!c.done;c=b.next())c=c.value,c.promise["catch"](function(){}),a.push(c.abort());this.a=[];return Promise.all(a)};function Gc(a){xc.call(this);this.f=!1;this.g=new Ec;this.a=new Set;this.b=new Set;this.c=a||null}pa(Gc,xc);function Hc(a,b,c){c=c||Ic;var d=Jc[a];if(!d||c>=d.priority)Jc[a]={priority:c,Ne:b}}p=Gc.prototype;p.Pe=function(a){this.a.add(a)};p.hf=function(a){this.a["delete"](a)};p.ge=function(){this.a.clear()};p.Qe=function(a){this.b.add(a)};p.jf=function(a){this.b["delete"](a)};p.he=function(){this.b.clear()};
function Kc(a,b){return{uris:a,method:"GET",body:null,headers:{},allowCrossSiteCredentials:!1,retryParameters:b,licenseRequestType:null,sessionId:null}}p.destroy=function(){this.f=!0;this.a.clear();this.b.clear();return this.g.destroy()};
p.request=function(a,b){var c=this,d=new Lc;if(this.f){var e=Promise.reject(new M(2,7,7001));e["catch"](function(){});return new Mc(e,function(){return Promise.resolve()},d)}b.method=b.method||"GET";b.headers=b.headers||{};b.retryParameters=b.retryParameters?yc(b.retryParameters):mc();b.uris=yc(b.uris);e=Nc(this,a,b);var f=e.U(function(){return Oc(c,a,b,new lc(b.retryParameters,!1),0,null,d)}),g=f.U(function(n){return Pc(c,a,n)}),h=Date.now(),k=0;e.promise.then(function(){k=Date.now()-h},function(){});
var l=0;f.promise.then(function(){l=Date.now()},function(){});var m=g.U(function(n){var r=Date.now()-l,u=n.response;u.timeMs+=k;u.timeMs+=r;n.Fe||!c.c||u.fromCache||a!=Qc||c.c(u.timeMs,u.data.byteLength);return u},function(n){n&&(n.severity=2);throw n;});e=new Mc(m.promise,function(){return m.abort()},d);Fc(this.g,e);return e};
function Nc(a,b,c){var d=rc(void 0),e={};a=q(a.a);for(var f=a.next();!f.done;e={Ec:e.Ec},f=a.next())e.Ec=f.value,d=d.U(function(g){return function(){c.body&&(c.body=mb(c.body));return g.Ec(b,c)}}(e));return d.U(void 0,function(g){if(g instanceof M&&7001==g.code)throw g;throw new M(2,1,1006,g);})}
function Oc(a,b,c,d,e,f,g){var h=new qb(c.uris[e]),k=h.va,l=!1;k||(k=location.protocol,k=k.slice(0,-1),rb(h,k),c.uris[e]=h.toString());k=k.toLowerCase();var m=(k=Jc[k])?k.Ne:null;if(!m)return pc(new M(2,1,1E3,h));var n;return sc(nc(d)).U(function(){if(a.f)return qc();n=Date.now();return m(c.uris[e],c,b,function(r,u,v){a.c&&b==Qc&&(a.c(r,u),l=!0,g.a=v)})}).U(function(r){void 0==r.timeMs&&(r.timeMs=Date.now()-n);return{response:r,Fe:l}},function(r){if(a.f)return qc();if(r instanceof M){if(7001==r.code)throw r;
if(1010==r.code)throw f;if(1==r.severity){var u=new Q("retry",{error:r});a.dispatchEvent(u);e=(e+1)%c.uris.length;return Oc(a,b,c,d,e,r,g)}}throw r;})}
function Pc(a,b,c){var d=rc(void 0),e={};a=q(a.b);for(var f=a.next();!f.done;e={Fc:e.Fc},f=a.next())e.Fc=f.value,d=d.U(function(g){return function(){var h=c.response;h.data&&(h.data=mb(h.data));return g.Fc(b,h)}}(e));return d.U(function(){return c},function(g){var h=2;if(g instanceof M){if(7001==g.code)throw g;h=g.severity}throw new M(h,1,1007,g);})}K("shaka.net.NetworkingEngine",Gc);Gc.prototype.request=Gc.prototype.request;Gc.prototype.destroy=Gc.prototype.destroy;Gc.makeRequest=Kc;
Gc.defaultRetryParameters=function(){return mc()};Gc.prototype.clearAllResponseFilters=Gc.prototype.he;Gc.prototype.unregisterResponseFilter=Gc.prototype.jf;Gc.prototype.registerResponseFilter=Gc.prototype.Qe;Gc.prototype.clearAllRequestFilters=Gc.prototype.ge;Gc.prototype.unregisterRequestFilter=Gc.prototype.hf;Gc.prototype.registerRequestFilter=Gc.prototype.Pe;Gc.unregisterScheme=function(a){delete Jc[a]};Gc.registerScheme=Hc;function Lc(){this.a=0}Gc.NumBytesRemainingClass=Lc;
function Mc(a,b,c){oc.call(this,a,b);this.b=c}pa(Mc,oc);Gc.PendingRequest=Mc;var Qc=1;Gc.RequestType={MANIFEST:0,SEGMENT:Qc,LICENSE:2,APP:3,TIMING:4};var Ic=3;Gc.PluginPriority={FALLBACK:1,PREFERRED:2,APPLICATION:Ic};var Jc={};function Rc(a){this.a=!1;this.b=new Pb;this.c=a}Rc.prototype.destroy=function(){var a=this;if(this.a)return this.b;this.a=!0;return this.c().then(function(){a.b.resolve()},function(){a.b.resolve()})};function Sc(a,b){if(a.a){if(b instanceof M&&7003==b.code)throw b;throw new M(2,7,7003,b);}};function Tc(){this.a=new vc}p=Tc.prototype;p.release=function(){this.Xa();this.a=null};p.l=function(a,b,c,d){this.a&&(a=new Uc(a,b,c,d),this.a.push(b,a))};p.ha=function(a,b,c,d){function e(g){f.sa(a,b,e);c(g)}var f=this;this.l(a,b,e,d)};p.sa=function(a,b,c){if(this.a){var d=this.a.get(b)||[];d=q(d);for(var e=d.next();!e.done;e=d.next())e=e.value,e.target!=a||c!=e.listener&&c||(e.sa(),this.a.remove(b,e))}};
p.Xa=function(){if(this.a){var a=this.a,b=[],c;for(c in a.a)b.push.apply(b,ia(a.a[c]));a=q(b);for(b=a.next();!b.done;b=a.next())b.value.sa();this.a.a={}}};K("shaka.util.EventManager",Tc);Tc.prototype.removeAll=Tc.prototype.Xa;Tc.prototype.unlisten=Tc.prototype.sa;Tc.prototype.listenOnce=Tc.prototype.ha;Tc.prototype.listen=Tc.prototype.l;Tc.prototype.release=Tc.prototype.release;function Uc(a,b,c,d){this.target=a;this.type=b;this.listener=c;this.a=Vc(a,d);this.target.addEventListener(b,c,this.a)}
Uc.prototype.sa=function(){this.target.removeEventListener(this.type,this.listener,this.a);this.listener=this.target=null;this.a=!1};function Vc(a,b){if(void 0==b)return!1;if("boolean"==typeof b)return b;var c=new Set(["passive","capture"]);Object.keys(b).filter(function(d){return!c.has(d)});return Wc(a)?b:b.capture||!1}
function Wc(a){var b=Xc;if(void 0==b){b=!1;try{var c={},d={get:function(){b=!0;return!1}};Object.defineProperty(c,"passive",d);Object.defineProperty(c,"capture",d);d=function(){};a.addEventListener("test",d,c);a.removeEventListener("test",d,c)}catch(e){b=!1}Xc=b}return b||!1}var Xc=void 0;function Yc(){}function Zc(a){a=Wb(a);return(new qb(a)).ua}function $c(a,b,c){function d(h){ob(f).setUint32(g,h.byteLength,!0);g+=4;f.set(L(h),g);g+=h.byteLength}if(!c||!c.byteLength)throw new M(2,6,6015);var e;"string"==typeof b?e=Yb(b,!0):e=b;a=Wb(a);a=Yb(a,!0);var f=new Uint8Array(12+a.byteLength+e.byteLength+c.byteLength),g=0;d(a);d(e);d(c);return f}K("shaka.util.FairPlayUtils",Yc);Yc.initDataTransform=$c;Yc.defaultGetContentId=Zc;function ad(a){for(var b=new Map,c=q(Object.keys(a)),d=c.next();!d.done;d=c.next())d=d.value,b.set(d,a[d]);return b}function bd(a){var b={};a.forEach(function(c,d){b[d]=c});return b}function cd(a,b){if(a||b){if(a&&!b||b&&!a)return!1}else return!0;if(a.size!=b.size)return!1;for(var c=q(a),d=c.next();!d.done;d=c.next()){var e=q(d.value);d=e.next().value;e=e.next().value;if(!b.has(d))return!1;d=b.get(d);if(d!=e||void 0==d)return!1}return!0};function dd(){}function ed(a,b){var c=a;b&&(c+='; codecs="'+b+'"');return c}function fd(a){var b=[a.mimeType];gd.forEach(function(c,d){var e=a[d];e&&b.push(c+'="'+e+'"')});return b.join(";")}function hd(a){a=a.split(".");var b=a[0];a.pop();return[b,a.join(".")]}var gd=(new Map).set("codecs","codecs").set("frameRate","framerate").set("bandwidth","bitrate").set("width","width").set("height","height").set("channelsCount","channels");function id(){return window.MediaSource&&MediaSource.isTypeSupported?!0:!1}function jd(a){return""!=kd().canPlayType(a)}function ld(){return md("Tizen")}function nd(){return!!navigator.vendor&&navigator.vendor.includes("Apple")&&!ld()}function od(){if(!nd())return null;var a=navigator.userAgent.match(/Version\/(\d+)/);return a?parseInt(a[1],10):(a=navigator.userAgent.match(/OS (\d+)(?:_\d+)?/))?parseInt(a[1],10):null}function md(a){return(navigator.userAgent||"").includes(a)}
function kd(){if(pd)return pd;qd||(qd=new N(function(){pd=null}));(pd=document.getElementsByTagName("video")[0]||document.getElementsByTagName("audio")[0])||(pd=document.createElement("video"));qd.R(1);return pd}var qd=null,pd=null;function rd(a,b){var c=this;b=void 0===b?1:b;this.s=a;this.m=new Set;this.a=this.h=null;this.M=!1;this.H=0;this.c=null;this.b=new Tc;this.f=new Map;this.v=[];this.j=new Pb;this.i=null;this.g=function(d){c.j.reject(d);a.onError(d)};this.ca=new Map;this.T=new Map;this.J=new N(function(){return sd(c)});this.A=!1;this.D=[];this.I=!1;this.W=(new N(function(){td(c)})).ra(b);this.j["catch"](function(){});this.F=new Rc(function(){return ud(c)})}rd.prototype.destroy=function(){return this.F.destroy()};
function ud(a){return J(function(b){switch(b.a){case 1:return a.b.release(),a.b=null,a.j.reject(),a.W.stop(),a.W=null,a.J.stop(),a.J=null,t(b,vd(a),2);case 2:if(!a.a){b.u(3);break}x(b,4);return t(b,a.a.setMediaKeys(null),6);case 6:ua(b,5);break;case 4:C(b);case 5:a.a=null;case 3:a.c=null,a.m.clear(),a.h=null,a.v=[],a.i=null,a.g=function(){},a.s=null,w(b)}})}rd.prototype.configure=function(a){this.i=a};function wd(a,b,c){a.v=[];a.A=c;return xd(a,b)}
function yd(a,b,c){a.v=c;a.A=0<c.length;return xd(a,b)}function zd(a,b,c,d,e,f){var g=new Map;e={audioCapabilities:e,videoCapabilities:f,distinctiveIdentifier:"optional",persistentState:"required",sessionTypes:["persistent-license"],label:b};e.drmInfos=[{keySystem:b,licenseServerUri:c,distinctiveIdentifierRequired:!1,persistentStateRequired:!0,audioRobustness:"",videoRobustness:"",serverCertificate:d,initData:null,keyIds:null}];g.set(b,e);return Ad(a,g)}
function xd(a,b){var c=Bd(a);if(c)for(var d=q(b),e=d.next();!e.done;e=d.next())e=e.value,e.video&&(e.video.drmInfos=[c]),e.audio&&(e.audio.drmInfos=[c]);c=b.some(function(g){return g.video&&g.video.drmInfos.length||g.audio&&g.audio.drmInfos.length?!0:!1});c||(d=ad(a.i.servers),Cd(b,d));d=q(b);for(e=d.next();!e.done;e=d.next()){e=e.value;e=q((e.video?e.video.drmInfos:[]).concat(e.audio?e.audio.drmInfos:[]));for(var f=e.next();!f.done;f=e.next())Dd(f.value,ad(a.i.servers),ad(a.i.advanced||{}))}d=Ed(a,
b);if(!d.size)return a.M=!0,Promise.resolve();d=Ad(a,d);return c?d:d["catch"](function(){})}
rd.prototype.zb=function(a){var b=this,c,d;return J(function(e){if(1==e.a){if(!b.h)return b.b.ha(a,"encrypted",function(){b.g(new M(2,6,6010))}),e["return"]();b.a=a;b.b.ha(b.a,"play",function(){for(var f=q(b.D),g=f.next();!g.done;g=f.next())Fd(b,g.value);b.I=!0;b.D=[]});"webkitCurrentPlaybackTargetIsWireless"in b.a&&b.b.l(b.a,"webkitcurrentplaybacktargetiswirelesschanged",function(){return vd(b)});c=b.a.setMediaKeys(b.h);c=c["catch"](function(f){return Promise.reject(new M(2,6,6003,f.message))});
return t(e,c,2)}Sc(b.F);Gd(b);b.c.initData.length||b.v.length||(d=function(f){return Hd(b,f.initDataType,L(f.initData))},b.b.l(b.a,"encrypted",d));w(e)})};function Id(a){var b;return J(function(c){if(1==c.a){if(!(a.h&&a.c&&a.c.serverCertificate&&a.c.serverCertificate.length))return c.u(0);x(c,3);return t(c,a.h.setServerCertificate(a.c.serverCertificate),5)}if(3!=c.a)return ua(c,0);b=C(c);throw new M(2,6,6004,b.message);})}
function Jd(a,b){var c,d,e;return J(function(f){if(1==f.a)return t(f,Kd(a,b),2);c=f.b;if(!c)return f["return"]();d=[];if(e=a.f.get(c))e.Aa=new Pb,d.push(e.Aa);d.push(c.remove());return t(f,Promise.all(d),0)})}function Gd(a){for(var b=(a.c?a.c.initData:[])||[],c=q(b),d=c.next();!d.done;d=c.next())d=d.value,Hd(a,d.initDataType,d.initData);c=q(a.v);for(d=c.next();!d.done;d=c.next())Kd(a,d.value);b.length||a.v.length||a.j.resolve();return a.j}
function Hd(a,b,c){var d=a.f.values();d=q(d);for(var e=d.next();!e.done;e=d.next())if(kb(c,e.value.initData)&&!md("Tizen 2"))return;Ld(a,b,c)}function Md(a){return a?a.keySystem:""}function Nd(a,b){if(navigator.userAgent.match(/Edge\//))return!0;b=b.toLowerCase();if(ld()&&b.includes('codecs="ac-3"')){var c=b.replace("ac-3","ec-3");return a.m.has(b)||a.m.has(c)}return a.m.has(b)}function Od(a){a=a.f.keys();a=db(a,function(b){return b.sessionId});return Array.from(a)}
rd.prototype.Eb=function(){var a=Infinity,b=this.f.keys();b=q(b);for(var c=b.next();!c.done;c=b.next())c=c.value,isNaN(c.expiration)||(a=Math.min(a,c.expiration));return a};
function Ed(a,b){for(var c=new Set,d=q(b),e=d.next();!e.done;e=d.next()){e=e.value;var f=q((e.video?e.video.drmInfos:[]).concat(e.audio?e.audio.drmInfos:[]));for(e=f.next();!e.done;e=f.next())c.add(e.value)}d=q(c);for(e=d.next();!e.done;e=d.next())Dd(e.value,ad(a.i.servers),ad(a.i.advanced||{}));f=a.A?"required":"optional";var g=a.A?["persistent-license"]:["temporary"];d=new Map;c=q(c);for(e=c.next();!e.done;e=c.next())e=e.value,d.set(e.keySystem,{audioCapabilities:[],videoCapabilities:[],distinctiveIdentifier:"optional",
persistentState:f,sessionTypes:g,label:e.keySystem,drmInfos:[]});c=q(b);for(e=c.next();!e.done;e=c.next())for(e=e.value,f=q([e.audio,e.video]),e=f.next();!e.done;e=f.next())if(g=e.value){var h=Pd(g),k=null;"ac-3"==g.codecs.toLowerCase()&&ld()&&(k=Pd(g,"ec-3"));var l=q(g.drmInfos);for(e=l.next();!e.done;e=l.next()){var m=e.value;e=d.get(m.keySystem);e.drmInfos.push(m);m.distinctiveIdentifierRequired&&(e.distinctiveIdentifier="required");m.persistentStateRequired&&(e.persistentState="required");m="audio"==
g.type?m.audioRobustness:m.videoRobustness;var n={robustness:m||"",contentType:h};"audio"==g.type?e.audioCapabilities.push(n):e.videoCapabilities.push(n);k&&(m={robustness:m||"",contentType:k},"audio"==g.type?e.audioCapabilities.push(m):e.videoCapabilities.push(m))}}return d}function Pd(a,b){var c=ed(a.mimeType,b||a.codecs);return hc(c)?ic(a.type,c):c}
function Ad(a,b){var c,d,e,f,g,h,k,l,m,n,r,u,v,A,y,z,D,B,E,H,G,F;return J(function(I){switch(I.a){case 1:if(1==b.size&&b.has(""))throw new M(2,6,6E3);c=q(b.values());for(d=c.next();!d.done;d=c.next())e=d.value,0==e.audioCapabilities.length&&delete e.audioCapabilities,0==e.videoCapabilities.length&&delete e.videoCapabilities;g=q([!0,!1]);h=g.next();case 2:if(h.done){I.u(4);break}k=h.value;l=q(b.keys());m=l.next();case 5:if(m.done){I.u(7);break}n=m.value;r=b.get(n);u=r.drmInfos.some(function(O){return!!O.licenseServerUri});
if(u!=k){I.u(6);break}x(I,8);return t(I,navigator.requestMediaKeySystemAccess(n,[r]),10);case 10:f=I.b;I.u(7);break;case 8:C(I);case 9:Sc(a.F);case 6:m=l.next();I.u(5);break;case 7:if(f){I.u(4);break}h=g.next();I.u(2);break;case 4:if(!f)throw new M(2,6,6001);Sc(a.F);x(I,11);a.m.clear();v=f.getConfiguration();A=v.audioCapabilities||[];y=v.videoCapabilities||[];z=q(A);for(D=z.next();!D.done;D=z.next())B=D.value,a.m.add(B.contentType.toLowerCase());E=q(y);for(D=E.next();!D.done;D=E.next())H=D.value,
a.m.add(H.contentType.toLowerCase());a.c=Qd(f.keySystem,b.get(f.keySystem));if(!a.c.licenseServerUri)throw new M(2,6,6012,a.c.keySystem);return t(I,f.createMediaKeys(),13);case 13:return G=I.b,Sc(a.F),a.h=G,a.M=!0,t(I,Id(a),14);case 14:Sc(a.F);ua(I,0);break;case 11:F=C(I);Sc(a.F,F);a.c=null;a.m.clear();if(F instanceof M)throw F;throw new M(2,6,6002,F.message);}})}
function Bd(a){a=ad(a.i.clearKeys);if(0==a.size)return null;var b=[],c=[];a.forEach(function(e,f){var g=dc(f),h=dc(e);g={kty:"oct",kid:bc(g,!1),k:bc(h,!1)};b.push(g);c.push(g.kid)});a=JSON.stringify({keys:b});var d=JSON.stringify({kids:c});d=[{initData:L(Xb(d)),initDataType:"keyids"}];return{keySystem:"org.w3.clearkey",licenseServerUri:"data:application/json;base64,"+window.btoa(a),distinctiveIdentifierRequired:!1,persistentStateRequired:!1,audioRobustness:"",videoRobustness:"",serverCertificate:null,
initData:d,keyIds:new Set(c)}}
function Kd(a,b){var c,d,e,f,g;return J(function(h){switch(h.a){case 1:try{c=a.h.createSession("persistent-license")}catch(k){return d=new M(2,6,6005,k.message),a.g(d),h["return"](Promise.reject(d))}a.b.l(c,"message",function(k){a.a&&a.i.delayLicenseRequestUntilPlayed&&a.a.paused&&!a.I?a.D.push(k):Fd(a,k)});a.b.l(c,"keystatuseschange",function(k){return Rd(a,k)});e={initData:null,loaded:!1,bd:Infinity,Aa:null};a.f.set(c,e);x(h,2);return t(h,c.load(b),4);case 4:f=h.b;Sc(a.F);if(!f)return a.f["delete"](c),
a.g(new M(2,6,6013)),h["return"](Promise.resolve());e.loaded=!0;Sd(a)&&a.j.resolve();return h["return"](c);case 2:g=C(h),Sc(a.F,g),a.f["delete"](c),a.g(new M(2,6,6005,g.message));case 3:return h["return"](Promise.resolve())}})}
function Ld(a,b,c){try{var d=a.A?a.h.createSession("persistent-license"):a.h.createSession()}catch(e){a.g(new M(2,6,6005,e.message));return}a.b.l(d,"message",function(e){a.a&&a.i.delayLicenseRequestUntilPlayed&&a.a.paused&&!a.I?a.D.push(e):Fd(a,e)});a.b.l(d,"keystatuseschange",function(e){return Rd(a,e)});a.f.set(d,{initData:c,loaded:!1,bd:Infinity,Aa:null});try{c=a.i.initDataTransform(c,b,a.c)}catch(e){b=e;e instanceof M||(b=new M(2,6,6016,e));a.g(b);return}a.i.logLicenseExchange&&bc(c);d.generateRequest(b,
c)["catch"](function(e){if(!a.F.a){a.f["delete"](d);var f=e.errorCode;if(f&&f.systemCode){var g=f.systemCode;0>g&&(g+=Math.pow(2,32));g="0x"+g.toString(16)}a.g(new M(2,6,6006,e.message,e,g))}})}function Td(a,b,c){"skd"==b&&(b=c.serverCertificate,c=Zc(a),a=$c(a,c,b));return a}
function Fd(a,b){var c,d,e,f,g,h,k,l,m,n,r,u,v,A;J(function(y){switch(y.a){case 1:return c=b.target,a.i.logLicenseExchange&&bc(b.message),d=a.f.get(c),e=a.c.licenseServerUri,f=a.i.advanced[a.c.keySystem],"individualization-request"==b.messageType&&f&&f.individualizationServer&&(e=f.individualizationServer),g=Kc([e],a.i.retryParameters),g.body=b.message,g.method="POST",g.licenseRequestType=b.messageType,g.sessionId=c.sessionId,"com.microsoft.playready"!=a.c.keySystem&&"com.chromecast.playready"!=a.c.keySystem||
Ud(g),h=Date.now(),x(y,2),l=a.s.nb.request(2,g),t(y,l.promise,4);case 4:k=y.b;ua(y,3);break;case 2:return m=C(y),n=new M(2,6,6007,m),a.g(n),d&&d.Aa&&d.Aa.reject(n),y["return"]();case 3:if(a.F.a)return y["return"]();a.H+=(Date.now()-h)/1E3;a.i.logLicenseExchange&&bc(k.data);x(y,5);return t(y,c.update(k.data),7);case 7:ua(y,6);break;case 5:return r=C(y),u=new M(2,6,6008,r.message),a.g(u),d&&d.Aa&&d.Aa.reject(u),y["return"]();case 6:v=new Q("drmsessionupdate"),a.s.onEvent(v),d&&(d.Aa&&d.Aa.resolve(),
A=new N(function(){d.loaded=!0;Sd(a)&&a.j.resolve()}),A.R(Vd)),w(y)}})}
function Ud(a){var b=Vb(a.body,!0,!0);if(b.includes("PlayReadyKeyMessage")){b=(new DOMParser).parseFromString(b,"application/xml");for(var c=q(b.getElementsByTagName("HttpHeader")),d=c.next();!d.done;d=c.next())d=d.value,a.headers[d.getElementsByTagName("name")[0].textContent]=d.getElementsByTagName("value")[0].textContent;a.body=cc(b.getElementsByTagName("Challenge")[0].textContent)}else a.headers["Content-Type"]="text/xml; charset=utf-8"}
function Rd(a,b){var c=b.target,d=a.f.get(c),e=!1;c.keyStatuses.forEach(function(g,h){if("string"==typeof h){var k=h;h=g;g=k}if("com.microsoft.playready"==a.c.keySystem&&16==h.byteLength&&(md("Trident/")||navigator.userAgent.match(/Edge?\//))){k=ob(h);var l=k.getUint32(0,!0),m=k.getUint16(4,!0),n=k.getUint16(6,!0);k.setUint32(0,l,!1);k.setUint16(4,m,!1);k.setUint16(6,n,!1)}"com.microsoft.playready"==a.c.keySystem&&"status-pending"==g&&(g="usable");"status-pending"!=g&&(d.loaded=!0);"expired"==g&&
(e=!0);k=ec(h);a.ca.set(k,g)});var f=c.expiration-Date.now();(0>f||e&&1E3>f)&&d&&!d.Aa&&(a.f["delete"](c),c.close()["catch"](function(){}));Sd(a)&&(a.j.resolve(),a.J.R(Wd))}function sd(a){var b=a.ca,c=a.T;c.clear();b.forEach(function(d,e){return c.set(e,d)});b=Array.from(c.values());b.length&&b.every(function(d){return"expired"==d})&&a.g(new M(2,6,6014));a.s.oc(bd(c))}
function Xd(){var a,b,c,d,e,f,g,h;return J(function(k){return 1==k.a?(a="org.w3.clearkey com.widevine.alpha com.microsoft.playready com.apple.fps.3_0 com.apple.fps.2_0 com.apple.fps.1_0 com.apple.fps com.adobe.primetime".split(" "),b=[{contentType:'video/mp4; codecs="avc1.42E01E"'},{contentType:'video/webm; codecs="vp8"'}],c={videoCapabilities:b},d={videoCapabilities:b,persistentState:"required",sessionTypes:["persistent-license"]},e=[d,c],f=new Map,g=function(l){var m,n,r;return J(function(u){switch(u.a){case 1:return x(u,
2),t(u,navigator.requestMediaKeySystemAccess(l,e),4);case 4:return m=u.b,r=(n=m.getConfiguration().sessionTypes)?n.includes("persistent-license"):!1,md("Tizen 3")&&(r=!1),f.set(l,{persistentState:r}),t(u,m.createMediaKeys(),5);case 5:ua(u,0);break;case 2:C(u),f.set(l,null),w(u)}})},h=a.map(function(l){return g(l)}),t(k,Promise.all(h),2)):k["return"](bd(f))})}
function Yd(a){var b;return J(function(c){if(1==c.a)return b=new Promise(function(d,e){(new N(e)).R(Zd)}),x(c,2),t(c,Promise.race([Promise.all([a.close(),a.closed]),b]),4);if(2!=c.a)return ua(c,0);C(c);w(c)})}function vd(a){var b;return J(function(c){b=Array.from(a.f.keys());a.f.clear();return t(c,Promise.all(b.map(function(d){return J(function(e){if(1==e.a)return x(e,2),t(e,Yd(d),4);if(2!=e.a)return ua(e,0);C(e);w(e)})})),0)})}
function $d(a,b){var c=b.audio,d=b.video;if(c&&c.encrypted){var e=Pd(c);if(!Nd(a,e))return!1}if(d&&d.encrypted&&(e=Pd(d),!Nd(a,e)))return!1;var f=Md(a.c);c=(d?d.drmInfos:[]).concat(c?c.drmInfos:[]);return 0==c.length||c.some(function(g){return g.keySystem==f})}
function ae(a,b){if(!a.length)return b;if(!b.length)return a;for(var c=[],d=q(a),e=d.next();!e.done;e=d.next()){e=e.value;for(var f=q(b),g=f.next();!g.done;g=f.next())if(g=g.value,e.keySystem==g.keySystem){f=[];f=f.concat(e.initData||[]);f=f.concat(g.initData||[]);var h=e.keyIds&&g.keyIds?new Set(ia(e.keyIds).concat(ia(g.keyIds))):e.keyIds||g.keyIds;c.push({keySystem:e.keySystem,licenseServerUri:e.licenseServerUri||g.licenseServerUri,distinctiveIdentifierRequired:e.distinctiveIdentifierRequired||
g.distinctiveIdentifierRequired,persistentStateRequired:e.persistentStateRequired||g.persistentStateRequired,videoRobustness:e.videoRobustness||g.videoRobustness,audioRobustness:e.audioRobustness||g.audioRobustness,serverCertificate:e.serverCertificate||g.serverCertificate,initData:f,keyIds:h});break}}return c}function td(a){a.f.forEach(function(b,c){var d=b.bd,e=c.expiration;isNaN(e)&&(e=Infinity);e!=d&&(a.s.onExpirationUpdated(c.sessionId,e),b.bd=e)})}
function Sd(a){a=a.f.values();return eb(a,function(b){return b.loaded})}function Cd(a,b){var c=[];b.forEach(function(f,g){c.push({keySystem:g,licenseServerUri:f,distinctiveIdentifierRequired:!1,persistentStateRequired:!1,audioRobustness:"",videoRobustness:"",serverCertificate:null,initData:[],keyIds:new Set})});for(var d=q(a),e=d.next();!e.done;e=d.next())e=e.value,e.video&&(e.video.drmInfos=c),e.audio&&(e.audio.drmInfos=c)}
function Qd(a,b){var c=[],d=[],e=[],f=new Set;be(b.drmInfos,c,d,e,f);return{keySystem:a,licenseServerUri:c[0],distinctiveIdentifierRequired:"required"==b.distinctiveIdentifier,persistentStateRequired:"required"==b.persistentState,audioRobustness:(b.audioCapabilities?b.audioCapabilities[0].robustness:"")||"",videoRobustness:(b.videoCapabilities?b.videoCapabilities[0].robustness:"")||"",serverCertificate:d[0],initData:e,keyIds:f}}
function be(a,b,c,d,e){var f={};a=q(a);for(var g=a.next();!g.done;f={na:f.na},g=a.next()){f.na=g.value;b.includes(f.na.licenseServerUri)||b.push(f.na.licenseServerUri);f.na.serverCertificate&&(c.some(function(l){return function(m){return kb(m,l.na.serverCertificate)}}(f))||c.push(f.na.serverCertificate));if(f.na.initData){g={};for(var h=q(f.na.initData),k=h.next();!k.done;g={Ub:g.Ub},k=h.next())g.Ub=k.value,d.some(function(l){return function(m){var n=l.Ub;return m.keyId&&m.keyId==n.keyId?!0:m.initDataType==
n.initDataType&&kb(m.initData,n.initData)}}(g))||d.push(g.Ub)}if(f.na.keyIds)for(g=q(f.na.keyIds),h=g.next();!h.done;h=g.next())e.add(h.value)}}
function Dd(a,b,c){if(a.keySystem&&("org.w3.clearkey"!=a.keySystem||!a.licenseServerUri)){b.size&&(b=b.get(a.keySystem)||"",a.licenseServerUri=b);a.keyIds||(a.keyIds=new Set);if(c=c.get(a.keySystem))a.distinctiveIdentifierRequired||(a.distinctiveIdentifierRequired=c.distinctiveIdentifierRequired),a.persistentStateRequired||(a.persistentStateRequired=c.persistentStateRequired),a.videoRobustness||(a.videoRobustness=c.videoRobustness),a.audioRobustness||(a.audioRobustness=c.audioRobustness),a.serverCertificate||
(a.serverCertificate=c.serverCertificate);window.cast&&window.cast.__platform__&&"com.microsoft.playready"==a.keySystem&&(a.keySystem="com.chromecast.playready")}}var Zd=1,Vd=5,Wd=.5,ce=new Rb(function(){return mb(new Uint8Array([0]))});function de(){this.a=new muxjs.mp4.CaptionParser;this.g=[];this.f={}}de.prototype.init=function(a){var b=muxjs.mp4.probe;a=L(a);this.g=b.videoTrackIds(a);this.f=b.timescale(a);this.a.init()};de.prototype.b=function(a,b){var c=L(a);(c=this.a.parse(c,this.g,this.f))&&c.captions&&b(c.captions);this.a.clearParsedCaptions()};de.prototype.c=function(){this.a.resetCaptionStream()};function ee(){}ee.prototype.init=function(){};ee.prototype.b=function(){};ee.prototype.c=function(){};function fe(a){return!a||1==a.length&&1E-6>a.end(0)-a.start(0)?null:a.length?a.end(a.length-1):null}function ge(a,b,c){c=void 0===c?0:c;return!a||!a.length||1==a.length&&1E-6>a.end(0)-a.start(0)||b>a.end(a.length-1)?!1:b+c>=a.start(0)}function he(a,b){if(!a||!a.length||1==a.length&&1E-6>a.end(0)-a.start(0))return 0;for(var c=0,d=q(ie(a)),e=d.next();!e.done;e=d.next()){var f=e.value;e=f.start;f=f.end;f>b&&(c+=f-Math.max(e,b))}return c}
function je(a,b){if(!a||!a.length||1==a.length&&1E-6>a.end(0)-a.start(0))return null;var c=navigator.userAgent.match(/Edge\//)||md("Trident/")||ld()||md("CrKey")?.5:.1,d=ie(a).findIndex(function(e,f,g){return e.start>b&&(0==f||g[f-1].end-b<=c)});return 0<=d?d:null}function ie(a){if(!a)return[];for(var b=[],c=q(gb(a.length)),d=c.next();!d.done;d=c.next())d=d.value,b.push({start:a.start(d),end:a.end(d)});return b};function ke(a,b,c){this.startTime=a;this.direction=le;this.endTime=b;this.payload=c;this.region=new me;this.position=null;this.positionAlign=ne;this.size=0;this.textAlign=oe;this.writingMode=pe;this.lineInterpretation=qe;this.line=null;this.lineHeight="";this.lineAlign=re;this.displayAlign=se;this.fontSize=this.border=this.backgroundImage=this.backgroundColor=this.color="";this.fontWeight=te;this.fontStyle=ue;this.linePadding=this.letterSpacing=this.fontFamily="";this.opacity=1;this.textDecoration=
[];this.wrapLine=!0;this.id="";this.nestedCues=[];this.spacer=!1;this.cellResolution={columns:32,rows:15}}ke.prototype.clone=function(){var a=new ke(0,0,""),b;for(b in this)a[b]=this[b],a[b]&&a[b].constructor==Array&&(a[b]=a[b].slice());return a};
function ve(a,b){if(a.startTime!=b.startTime||a.endTime!=b.endTime||a.payload!=b.payload)return!1;for(var c in a)if("startTime"!=c&&"endTime"!=c&&"payload"!=c)if("nestedCues"==c){if(!Dc(a.nestedCues,b.nestedCues,ve))return!1}else if("region"==c||"cellResolution"==c)for(var d in a[c]){if(a[c][d]!=b[c][d])return!1}else if(Array.isArray(a[c])){if(!Dc(a[c],b[c]))return!1}else if(a[c]!=b[c])return!1;return!0}K("shaka.text.Cue",ke);var ne="auto";
ke.positionAlign={LEFT:"line-left",RIGHT:"line-right",CENTER:"center",AUTO:ne};var oe="center",we={LEFT:"left",RIGHT:"right",CENTER:oe,START:"start",END:"end"};ke.textAlign=we;var se="after",xe={BEFORE:"before",CENTER:"center",AFTER:se};ke.displayAlign=xe;var le="ltr";ke.direction={HORIZONTAL_LEFT_TO_RIGHT:le,HORIZONTAL_RIGHT_TO_LEFT:"rtl"};var pe="horizontal-tb";ke.writingMode={HORIZONTAL_TOP_TO_BOTTOM:pe,VERTICAL_LEFT_TO_RIGHT:"vertical-lr",VERTICAL_RIGHT_TO_LEFT:"vertical-rl"};var qe=0;
ke.lineInterpretation={LINE_NUMBER:qe,PERCENTAGE:1};var re="start",ye={CENTER:"center",START:re,END:"end"};ke.lineAlign=ye;var te=400;ke.fontWeight={NORMAL:te,BOLD:700};var ue="normal",Ae={NORMAL:ue,ITALIC:"italic",OBLIQUE:"oblique"};ke.fontStyle=Ae;ke.textDecoration={UNDERLINE:"underline",LINE_THROUGH:"lineThrough",OVERLINE:"overline"};
function me(){this.id="";this.regionAnchorY=this.regionAnchorX=this.viewportAnchorY=this.viewportAnchorX=0;this.height=this.width=100;this.viewportAnchorUnits=this.widthUnits=this.heightUnits=Be;this.scroll=Ce}K("shaka.text.CueRegion",me);var Be=1;me.units={PX:0,PERCENTAGE:Be,LINES:2};var Ce="";me.scrollMode={NONE:Ce,UP:"up"};function De(a){this.m=null;this.c=a;this.f=this.v=0;this.g=Infinity;this.b=this.a=null;this.j="";this.h=new Map}function Ee(a){return Fe[a]||window.muxjs&&"application/cea-608"==a?!0:!1}De.prototype.destroy=function(){this.c=this.m=null;this.h.clear();return Promise.resolve()};
function Ge(a,b,c,d){var e,f,g;return J(function(h){if(1==h.a)return t(h,Promise.resolve(),2);if(!a.m||!a.c)return h["return"]();if(null==c||null==d)return a.m.parseInit(L(b)),h["return"]();e={periodStart:a.v,segmentStart:c,segmentEnd:d};f=a.m.parseMedia(L(b),e);g=f.filter(function(k){return k.startTime>=a.f&&k.startTime<a.g});a.c.append(g);null==a.a&&(a.a=Math.max(c,a.f));a.b=Math.min(d,a.g);w(h)})}
De.prototype.remove=function(a,b){var c=this;return J(function(d){if(1==d.a)return t(d,Promise.resolve(),2);!c.c||!c.c.remove(a,b)||null==c.a||b<=c.a||a>=c.b||(a<=c.a&&b>=c.b?c.a=c.b=null:a<=c.a&&b<c.b?c.a=b:a>c.a&&b>=c.b&&(c.b=a));w(d)})};function He(a,b,c){a.f=b;a.g=c}function Ie(a,b,c){a.j=b;if(b=a.h.get(b))for(var d=q(b.keys()),e=d.next();!e.done;e=d.next())(e=b.get(e.value).filter(function(f){return f.endTime<=c}))&&a.c.append(e)}
function Je(a,b,c,d,e){var f=c+" "+d,g=new Map;b=q(b);for(var h=b.next();!h.done;h=b.next()){var k=h.value;h=k.stream;g.has(h)||g.set(h,new Map);g.get(h).has(f)||g.get(h).set(f,[]);k.startTime+=e;k.endTime+=e;k.startTime>=a.f&&k.startTime<a.g&&(k=new ke(k.startTime,k.endTime,k.text),g.get(h).get(f).push(k),h==a.j&&a.c.append([k]))}e=q(g.keys());for(f=e.next();!f.done;f=e.next())for(f=f.value,a.h.has(f)||a.h.set(f,new Map),b=q(g.get(f).keys()),h=b.next();!h.done;h=b.next())h=h.value,k=g.get(f).get(h),
a.h.get(f).set(h,k);a.a=null==a.a?Math.max(c,a.f):Math.min(a.a,Math.max(c,a.f));a.b=Math.max(a.b,Math.min(d,a.g))}K("shaka.text.TextEngine",De);De.prototype.destroy=De.prototype.destroy;De.unregisterParser=function(a){delete Fe[a]};De.registerParser=function(a,b){Fe[a]=b};var Fe={};function Ke(a,b,c,d){var e=this;this.a=a;this.h=c;this.f={};this.c=null;this.H=d||function(){};this.g={};this.b=new Tc;this.m={};this.v=b;this.A=new Pb;this.j=Le(this,this.A);this.F=new Rc(function(){return Me(e)});this.D=""}function Le(a,b){var c=new MediaSource;a.b.ha(c,"sourceopen",function(){URL.revokeObjectURL(a.D);b.resolve()});a.D=Ne(c);a.a.src=a.D;return c}function Oe(a){var b=ed(a.mimeType,a.codecs),c=fd(a);return Ee(b)||MediaSource.isTypeSupported(c)||hc(b,a.type)}p=Ke.prototype;
p.destroy=function(){return this.F.destroy()};
function Me(a){var b,c,d,e,f,g,h,k;return J(function(l){if(1==l.a){b=[];for(c in a.g)for(d=a.g[c],e=d[0],a.g[c]=d.slice(0,1),e&&b.push(e.p["catch"](Jb)),f=q(d.slice(1)),g=f.next();!g.done;g=f.next())h=g.value,h.p.reject(new M(2,7,7003,void 0));a.c&&b.push(a.c.destroy());a.h&&b.push(a.h.destroy());for(k in a.m)b.push(a.m[k].destroy());return t(l,Promise.all(b),2)}a.b&&(a.b.release(),a.b=null);a.a&&(a.a.removeAttribute("src"),a.a.load(),a.a=null);a.j=null;a.c=null;a.h=null;a.f={};a.m={};a.v=null;a.g=
{};w(l)})}
p.init=function(a,b){var c=this,d,e,f,g,h,k,l;return J(function(m){if(1==m.a)return d=Ob,t(m,c.A,2);e={};f=q(a.keys());for(g=f.next();!g.done;e={ma:e.ma},g=f.next())e.ma=g.value,h=a.get(e.ma),k=ed(h.mimeType,h.codecs),e.ma==d.$?Pe(c,k):(!b&&MediaSource.isTypeSupported(k)||!hc(k,e.ma)||(c.m[e.ma]=new gc,k=ic(e.ma,k)),l=c.j.addSourceBuffer(k),c.b.l(l,"error",function(n){return function(){c.g[n.ma][0].p.reject(new M(2,3,3014,c.a.error?c.a.error.code:0))}}(e)),c.b.l(l,"updateend",function(n){return function(){return Qe(c,n.ma)}}(e)),
c.f[e.ma]=l,c.g[e.ma]=[]);w(m)})};function Pe(a,b){a.c||(a.c=new De(a.h));"application/cea-608"!=b&&(a.c.m=Lb(Fe[b]))}function Re(a){return a.j?"ended"==a.j.readyState:!0}function Se(a,b){if("text"==b)var c=a.c.a;else c=Te(a,b),c=!c||1==c.length&&1E-6>c.end(0)-c.start(0)?null:1==c.length&&0>c.start(0)?0:c.length?c.start(0):null;return c}function Ue(a,b){return"text"==b?a.c.b:fe(Te(a,b))}function Ve(a,b,c){if("text"==b)return a=a.c,null==a.b||a.b<c?0:a.b-Math.max(c,a.a);a=Te(a,b);return he(a,c)}
p.ic=function(){var a={total:ie(this.a.buffered),audio:ie(Te(this,"audio")),video:ie(Te(this,"video")),text:[]};if(this.c){var b=this.c.a,c=this.c.b;null!=b&&null!=c&&a.text.push({start:b,end:c})}return a};function Te(a,b){try{return a.f[b].buffered}catch(c){return null}}
function We(a,b,c,d,e,f){var g,h,k,l;return J(function(m){if(1==m.a){g=Ob;if(b==g.$)return t(m,Ge(a.c,c,d,e),0);if(a.m[b])return t(m,jc(a.m[b],c),10);f&&window.muxjs&&(a.c||Pe(a,"text/vtt"),null==d&&null==e?a.v.init(c):a.v.b(c,function(n){n.length&&Je(a.c,n,d,e,a.f[g.Da].timestampOffset)}));return t(m,Xe(a,b,function(){a.f[b].appendBuffer(c)}),0)}h=m.b;a.c||Pe(a,"text/vtt");h.metadata&&(k=a.f[b].timestampOffset,a.H(h.metadata,k,e));h.captions&&h.captions.length&&(l=a.f[g.Da].timestampOffset,Je(a.c,
h.captions,d,e,l));return t(m,Xe(a,b,function(){a.f[b].appendBuffer(h.data)}),0)})}function Ye(a,b){var c=Ue(a,"video")||0;Ie(a.c,b,c)}p.remove=function(a,b,c){var d=this,e;return J(function(f){e=Ob;return a==e.$?t(f,d.c.remove(b,c),0):t(f,Xe(d,a,function(){c<=b?Qe(d,a):d.f[a].remove(b,c)}),0)})};function Ze(a,b){var c;return J(function(d){c=Ob;return b==c.$?a.c?t(d,a.c.remove(0,Infinity),0):d["return"]():t(d,Xe(a,b,function(){var e=a.j.duration;0>=e?Qe(a,b):a.f[b].remove(0,e)}),0)})}
p.flush=function(a){var b=this,c;return J(function(d){c=Ob;return a==c.$?d["return"]():t(d,Xe(b,a,function(){b.a.currentTime-=.001;Qe(b,a)}),0)})};
function $e(a,b,c,d,e){var f;return J(function(g){f=Ob;return b==f.$?(a.c.v=c,He(a.c,d,e),g["return"]()):t(g,Promise.all([Xe(a,b,function(){var h=a.f[b].appendWindowStart,k=a.f[b].appendWindowEnd;a.f[b].abort();a.f[b].appendWindowStart=h;a.f[b].appendWindowEnd=k;Qe(a,b)}),Xe(a,b,function(){var h=c;0>h&&(h+=.001);a.f[b].timestampOffset=h;Qe(a,b)}),Xe(a,b,function(){a.f[b].appendWindowStart=0;a.f[b].appendWindowEnd=e;a.f[b].appendWindowStart=d;Qe(a,b)})]),0)})}
p.endOfStream=function(a){var b=this;return J(function(c){return t(c,af(b,function(){Re(b)||(a?b.j.endOfStream(a):b.j.endOfStream())}),0)})};p.za=function(a){var b=this;return J(function(c){return t(c,af(b,function(){b.j.duration=a}),0)})};p.getDuration=function(){return this.j.duration};function Qe(a,b){var c=a.g[b][0];c&&(c.p.resolve(),bf(a,b))}function Xe(a,b,c){Sc(a.F);c={start:c,p:new Pb};a.g[b].push(c);1==a.g[b].length&&cf(a,b);return c.p}
function af(a,b){var c,d,e,f,g,h;return J(function(k){switch(k.a){case 1:Sc(a.F);c=[];d={};for(e in a.f)d.vb=new Pb,f={start:function(l){return function(){return l.vb.resolve()}}(d),p:d.vb},a.g[e].push(f),c.push(d.vb),1==a.g[e].length&&f.start(),d={vb:d.vb};x(k,2);return t(k,Promise.all(c),4);case 4:ua(k,3);break;case 2:throw g=C(k),g;case 3:try{b()}catch(l){throw new M(2,3,3015,l);}finally{for(h in a.f)bf(a,h)}w(k)}})}function bf(a,b){a.g[b].shift();cf(a,b)}
function cf(a,b){var c=a.g[b][0];if(c)try{c.start()}catch(d){"QuotaExceededError"==d.name?c.p.reject(new M(2,3,3017,b)):c.p.reject(new M(2,3,3015,d)),bf(a,b)}}var Ne=window.URL.createObjectURL;function df(a,b){a=R(a);b=R(b);return a.split("-")[0]==b.split("-")[0]}function ef(a,b){a=R(a);b=R(b);var c=a.split("-"),d=b.split("-");return c[0]==d[0]&&1==c.length&&2==d.length}function ff(a,b){a=R(a);b=R(b);var c=a.split("-"),d=b.split("-");return 2==c.length&&2==d.length&&c[0]==d[0]}function R(a){var b=a.split("-");a=b[0]||"";b=b[1]||"";a=a.toLowerCase();a=gf.get(a)||a;return(b=b.toUpperCase())?a+"-"+b:a}function hf(a,b){a=R(a);b=R(b);return b==a?4:ef(b,a)?3:ff(b,a)?2:ef(a,b)?1:0}
function jf(a){return a.language?R(a.language):a.audio&&a.audio.language?R(a.audio.language):a.video&&a.video.language?R(a.video.language):"und"}
function kf(a,b){for(var c=R(a),d=new Set,e=q(b),f=e.next();!f.done;f=e.next())d.add(R(f.value));e=q(d);for(f=e.next();!f.done;f=e.next())if(f=f.value,f==c)return f;e=q(d);for(f=e.next();!f.done;f=e.next())if(f=f.value,ef(f,c))return f;e=q(d);for(f=e.next();!f.done;f=e.next())if(f=f.value,ff(f,c))return f;d=q(d);for(f=d.next();!f.done;f=d.next())if(f=f.value,ef(c,f))return f;return null}
var gf=new Map([["aar","aa"],["abk","ab"],["afr","af"],["aka","ak"],["alb","sq"],["amh","am"],["ara","ar"],["arg","an"],["arm","hy"],["asm","as"],["ava","av"],["ave","ae"],["aym","ay"],["aze","az"],["bak","ba"],["bam","bm"],["baq","eu"],["bel","be"],["ben","bn"],["bih","bh"],["bis","bi"],["bod","bo"],["bos","bs"],["bre","br"],["bul","bg"],["bur","my"],["cat","ca"],["ces","cs"],["cha","ch"],["che","ce"],["chi","zh"],["chu","cu"],["chv","cv"],["cor","kw"],["cos","co"],["cre","cr"],["cym","cy"],["cze",
"cs"],["dan","da"],["deu","de"],["div","dv"],["dut","nl"],["dzo","dz"],["ell","el"],["eng","en"],["epo","eo"],["est","et"],["eus","eu"],["ewe","ee"],["fao","fo"],["fas","fa"],["fij","fj"],["fin","fi"],["fra","fr"],["fre","fr"],["fry","fy"],["ful","ff"],["geo","ka"],["ger","de"],["gla","gd"],["gle","ga"],["glg","gl"],["glv","gv"],["gre","el"],["grn","gn"],["guj","gu"],["hat","ht"],["hau","ha"],["heb","he"],["her","hz"],["hin","hi"],["hmo","ho"],["hrv","hr"],["hun","hu"],["hye","hy"],["ibo","ig"],["ice",
"is"],["ido","io"],["iii","ii"],["iku","iu"],["ile","ie"],["ina","ia"],["ind","id"],["ipk","ik"],["isl","is"],["ita","it"],["jav","jv"],["jpn","ja"],["kal","kl"],["kan","kn"],["kas","ks"],["kat","ka"],["kau","kr"],["kaz","kk"],["khm","km"],["kik","ki"],["kin","rw"],["kir","ky"],["kom","kv"],["kon","kg"],["kor","ko"],["kua","kj"],["kur","ku"],["lao","lo"],["lat","la"],["lav","lv"],["lim","li"],["lin","ln"],["lit","lt"],["ltz","lb"],["lub","lu"],["lug","lg"],["mac","mk"],["mah","mh"],["mal","ml"],["mao",
"mi"],["mar","mr"],["may","ms"],["mkd","mk"],["mlg","mg"],["mlt","mt"],["mon","mn"],["mri","mi"],["msa","ms"],["mya","my"],["nau","na"],["nav","nv"],["nbl","nr"],["nde","nd"],["ndo","ng"],["nep","ne"],["nld","nl"],["nno","nn"],["nob","nb"],["nor","no"],["nya","ny"],["oci","oc"],["oji","oj"],["ori","or"],["orm","om"],["oss","os"],["pan","pa"],["per","fa"],["pli","pi"],["pol","pl"],["por","pt"],["pus","ps"],["que","qu"],["roh","rm"],["ron","ro"],["rum","ro"],["run","rn"],["rus","ru"],["sag","sg"],["san",
"sa"],["sin","si"],["slk","sk"],["slo","sk"],["slv","sl"],["sme","se"],["smo","sm"],["sna","sn"],["snd","sd"],["som","so"],["sot","st"],["spa","es"],["sqi","sq"],["srd","sc"],["srp","sr"],["ssw","ss"],["sun","su"],["swa","sw"],["swe","sv"],["tah","ty"],["tam","ta"],["tat","tt"],["tel","te"],["tgk","tg"],["tgl","tl"],["tha","th"],["tib","bo"],["tir","ti"],["ton","to"],["tsn","tn"],["tso","ts"],["tuk","tk"],["tur","tr"],["twi","tw"],["uig","ug"],["ukr","uk"],["urd","ur"],["uzb","uz"],["ven","ve"],["vie",
"vi"],["vol","vo"],["wel","cy"],["wln","wa"],["wol","wo"],["xho","xh"],["yid","yi"],["yor","yo"],["zha","za"],["zho","zh"],["zul","zu"]]);function lf(a,b){function c(l){var m="";l.video&&(m=hd(l.video.codecs)[0]);var n="";l.audio&&(n=hd(l.audio.codecs)[0]);return m+"-"+n}var d=mf(a.variants,b),e=new vc;d=q(d);for(var f=d.next();!f.done;f=d.next()){f=f.value;var g=c(f);e.push(g,f)}var h=null,k=Infinity;wc(e,function(l,m){for(var n=0,r=0,u=q(m),v=u.next();!v.done;v=u.next())n+=v.value.bandwidth||0,++r;n/=r;n<k&&(h=l,k=n)});a.variants=a.variants.filter(function(l){return c(l)==h?!0:!1})}
function nf(a,b,c){function d(f,g,h){return f>=g&&f<=h}var e=a.video;return e&&e.width&&e.height&&(!d(e.width,b.minWidth,Math.min(b.maxWidth,c.width))||!d(e.height,b.minHeight,Math.min(b.maxHeight,c.height))||!d(e.width*e.height,b.minPixels,b.maxPixels))||a&&a.video&&a.video.frameRate&&!d(a.video.frameRate,b.minFrameRate,b.maxFrameRate)||!d(a.bandwidth,b.minBandwidth,b.maxBandwidth)?!1:!0}
function of(a,b,c){c.variants=c.variants.filter(function(d){if(a&&a.M&&!$d(a,d))return!1;var e=d.audio;d=d.video;return e&&!Oe(e)||d&&!Oe(d)||e&&b&&b.audio&&!pf(e,b.audio)||d&&b&&b.video&&!pf(d,b.video)?!1:!0});c.textStreams=c.textStreams.filter(function(d){return Ee(ed(d.mimeType,d.codecs))})}function pf(a,b){return a.mimeType!=b.mimeType||a.codecs.split(".")[0]!=b.codecs.split(".")[0]?!1:!0}
function qf(a){var b=a.audio,c=a.video,d=b?b.codecs:null,e=c?c.codecs:null,f=[];e&&f.push(e);d&&f.push(d);var g=[];c&&g.push(c.mimeType);b&&g.push(b.mimeType);g=g[0]||null;var h=[];b&&h.push(b.kind);c&&h.push(c.kind);h=h[0]||null;var k=new Set;if(b)for(var l=q(b.roles),m=l.next();!m.done;m=l.next())k.add(m.value);if(c)for(l=q(c.roles),m=l.next();!m.done;m=l.next())k.add(m.value);a={id:a.id,active:!1,type:"variant",bandwidth:a.bandwidth,language:a.language,label:null,kind:h,width:null,height:null,
frameRate:null,pixelAspectRatio:null,mimeType:g,codecs:f.join(", "),audioCodec:d,videoCodec:e,primary:a.primary,roles:Array.from(k),audioRoles:null,videoId:null,audioId:null,channelsCount:null,audioSamplingRate:null,audioBandwidth:null,videoBandwidth:null,originalVideoId:null,originalAudioId:null,originalTextId:null};c&&(a.videoId=c.id,a.originalVideoId=c.originalId,a.width=c.width||null,a.height=c.height||null,a.frameRate=c.frameRate||null,a.pixelAspectRatio=c.pixelAspectRatio||null,a.videoBandwidth=
c.bandwidth||null);b&&(a.audioId=b.id,a.originalAudioId=b.originalId,a.channelsCount=b.channelsCount,a.audioSamplingRate=b.audioSamplingRate,a.audioBandwidth=b.bandwidth||null,a.label=b.label,a.audioRoles=b.roles);return a}
function rf(a){return{id:a.id,active:!1,type:"text",bandwidth:0,language:a.language,label:a.label,kind:a.kind||null,width:null,height:null,frameRate:null,pixelAspectRatio:null,mimeType:a.mimeType,codecs:a.codecs||null,audioCodec:null,videoCodec:null,primary:a.primary,roles:a.roles,audioRoles:null,videoId:null,audioId:null,channelsCount:null,audioSamplingRate:null,audioBandwidth:null,videoBandwidth:null,originalVideoId:null,originalAudioId:null,originalTextId:a.originalId}}
function sf(a){a.__shaka_id||(a.__shaka_id=tf++);return a.__shaka_id}function uf(a){var b=vf(a);b.active=a.enabled;b.type="variant";b.originalAudioId=a.id;"main"==a.kind&&(b.primary=!0);a.kind&&(b.roles=[a.kind],b.audioRoles=[a.kind]);return b}
function vf(a){return{id:sf(a),active:!1,type:"",bandwidth:0,language:R(a.language),label:a.label,kind:a.kind,width:null,height:null,frameRate:null,pixelAspectRatio:null,mimeType:null,codecs:null,audioCodec:null,videoCodec:null,primary:!1,roles:[],audioRoles:null,videoId:null,audioId:null,channelsCount:null,audioSamplingRate:null,audioBandwidth:null,videoBandwidth:null,originalVideoId:null,originalAudioId:null,originalTextId:null}}
function wf(a){return a.allowedByApplication&&a.allowedByKeySystem}function xf(a){return a.filter(function(b){return wf(b)})}
function mf(a,b){var c=a.filter(function(g){return g.audio&&g.audio.channelsCount}),d=new Map;c=q(c);for(var e=c.next();!e.done;e=c.next()){e=e.value;var f=e.audio.channelsCount;d.has(f)||d.set(f,[]);d.get(f).push(e)}c=Array.from(d.keys());if(0==c.length)return a;e=c.filter(function(g){return g<=b});return e.length?d.get(Math.max.apply(Math,ia(e))):d.get(Math.min.apply(Math,ia(c)))}
function yf(a,b,c){var d=a,e=a.filter(function(h){return h.primary});e.length&&(d=e);var f=d.length?d[0].language:"";d=d.filter(function(h){return h.language==f});if(b){var g=kf(R(b),a.map(function(h){return h.language}));g&&(d=a.filter(function(h){return R(h.language)==g}))}if(c){if(a=zf(d,c),a.length)return a}else if(a=d.filter(function(h){return 0==h.roles.length}),a.length)return a;a=d.map(function(h){return h.roles}).reduce(Ib,[]);return a.length?zf(d,a[0]):d}
function zf(a,b){return a.filter(function(c){return c.roles.includes(b)})}var tf=0;function Af(){this.h=null;this.c=!1;this.a=new Ua;this.b=[];this.g=1;this.j=!1;this.i=this.f=null}p=Af.prototype;p.stop=function(){this.h=null;this.c=!1;this.b=[];this.g=1;this.f=null};p.init=function(a){this.h=a};
p.chooseVariant=function(){var a=Bf(this.i.restrictions,this.b),b=this.a.getBandwidthEstimate(this.i.defaultBandwidthEstimate);this.b.length&&!a.length&&(a=Bf(null,this.b),a=[a[0]]);var c=a[0]||null;a=q(ib(a));for(var d=a.next();!d.done;d=a.next()){var e=d.value;d=e.item;var f=isNaN(this.g)?1:Math.abs(this.g);e=f*(e.next||{bandwidth:Infinity}).bandwidth/this.i.bandwidthUpgradeTarget;b>=f*d.bandwidth/this.i.bandwidthDowngradeTarget&&b<=e&&(c=d)}this.f=Date.now();return c};
p.enable=function(){this.c=!0};p.disable=function(){this.c=!1};p.segmentDownloaded=function(a,b){var c=this.a;if(!(16E3>b)){var d=8E3*b/a,e=a/1E3;c.a+=b;Qa(c.b,e,d);Qa(c.c,e,d)}if(null!=this.f&&this.c)a:{if(!this.j){if(!(128E3<=this.a.a))break a;this.j=!0}else if(Date.now()-this.f<1E3*this.i.switchInterval)break a;c=this.chooseVariant();this.a.getBandwidthEstimate(this.i.defaultBandwidthEstimate);c&&this.h(c)}};p.getBandwidthEstimate=function(){return this.a.getBandwidthEstimate(this.i.defaultBandwidthEstimate)};
p.setVariants=function(a){this.b=a};p.playbackRateChanged=function(a){this.g=a};p.configure=function(a){this.i=a};function Bf(a,b){a&&(b=b.filter(function(c){return nf(c,a,{width:Infinity,height:Infinity})}));return b.sort(function(c,d){return c.bandwidth-d.bandwidth})}K("shaka.abr.SimpleAbrManager",Af);Af.prototype.configure=Af.prototype.configure;Af.prototype.playbackRateChanged=Af.prototype.playbackRateChanged;Af.prototype.setVariants=Af.prototype.setVariants;
Af.prototype.getBandwidthEstimate=Af.prototype.getBandwidthEstimate;Af.prototype.segmentDownloaded=Af.prototype.segmentDownloaded;Af.prototype.disable=Af.prototype.disable;Af.prototype.enable=Af.prototype.enable;Af.prototype.chooseVariant=Af.prototype.chooseVariant;Af.prototype.init=Af.prototype.init;Af.prototype.stop=Af.prototype.stop;function Cf(a,b){this.a=a;this.b=new Set([a]);b=b||[];for(var c=q(b),d=c.next();!d.done;d=c.next())this.add(d.value)}Cf.prototype.add=function(a){return Df(this.a,a)?(this.b.add(a),!0):!1};function Df(a,b){var c;if(!(c=!!a.audio!=!!b.audio||!!a.video!=!!b.video||a.language!=b.language)&&(c=a.audio&&b.audio)){c=a.audio;var d=b.audio;c=!(c.channelsCount==d.channelsCount&&Ef(c,d)&&Ff(c.roles,d.roles))}!c&&(c=a.video&&b.video)&&(c=a.video,d=b.video,c=!(Ef(c,d)&&Ff(c.roles,d.roles)));return c?!1:!0}
Cf.prototype.values=function(){return this.b.values()};function Ef(a,b){if(a.mimeType!=b.mimeType)return!1;var c=a.codecs.split(",").map(function(g){return hd(g)[0]}),d=b.codecs.split(",").map(function(g){return hd(g)[0]});if(c.length!=d.length)return!1;c.sort();d.sort();for(var e=q(gb(c.length)),f=e.next();!f.done;f=e.next())if(f=f.value,c[f]!=d[f])return!1;return!0}
function Ff(a,b){var c=new Set(a),d=new Set(b);c["delete"]("main");d["delete"]("main");if(c.size!=d.size)return!1;c=q(c);for(var e=c.next();!e.done;e=c.next())if(!d.has(e.value))return!1;return!0};function Gf(a){this.a=a;this.b=new Hf(a.language,"",a.audio&&a.audio.channelsCount?a.audio.channelsCount:0,"")}Gf.prototype.create=function(a){var b=this,c=a.filter(function(d){return Df(b.a,d)});return c.length?new Cf(c[0],c):this.b.create(a)};function Hf(a,b,c,d){this.c=a;this.f=b;this.a=c;this.b=void 0===d?"":d}
Hf.prototype.create=function(a){var b=[];b=If(a,this.c);var c=a.filter(function(d){return d.primary});b=b.length?b:c.length?c:a;a=Jf(b,this.f);a.length&&(b=a);this.a&&(a=mf(b,this.a),a.length&&(b=a));this.b&&(a=Kf(b,this.b),a.length&&(b=a));a=new Cf(b[0]);b=q(b);for(c=b.next();!c.done;c=b.next())c=c.value,Df(a.a,c)&&a.add(c);return a};function If(a,b){var c=R(b),d=kf(c,a.map(function(e){return jf(e)}));return d?a.filter(function(e){return d==jf(e)}):[]}
function Jf(a,b){return a.filter(function(c){return c.audio?b?c.audio.roles.includes(b):0==c.audio.roles.length:!1})}function Kf(a,b){return a.filter(function(c){return c.audio?c.audio.label.toLowerCase()==b.toLowerCase():!1})};function Lf(){this.a=Mf;this.b=(new Map).set(Mf,2).set(Nf,1)}function Of(a,b,c){a.b.set(Mf,c).set(Nf,b)}var Nf=0,Mf=1;function Pf(){}function Qf(a,b,c,d){var e,f,g,h;return J(function(k){if(1==k.a){if(d&&(e=Rf[d.toLowerCase()]))return k["return"](e);if(f=Sf(a))if(g=Tf[f])return k["return"](g);return d?k.u(2):t(k,Uf(a,b,c),3)}if(2!=k.a&&(d=k.b)&&(h=Rf[d]))return k["return"](h);throw new M(2,4,4E3,a);})}
function Uf(a,b,c){var d,e,f;return J(function(g){if(1==g.a)return d=Kc([a],c),d.method="HEAD",t(g,b.request(0,d).promise,2);e=g.b;f=e.headers["content-type"];return g["return"](f?f.toLowerCase().split(";").shift():"")})}function Sf(a){a=(new qb(a)).ja.split("/").pop().split(".");return 1==a.length?"":a.pop().toLowerCase()}K("shaka.media.ManifestParser",Pf);Pf.unregisterParserByMime=function(a){delete Rf[a]};Pf.registerParserByMime=function(a,b){Rf[a]=b};
Pf.registerParserByExtension=function(a,b){Tf[a]=b};var Rf={},Tf={};function Vf(a,b,c){this.c=a;this.b=b;this.a=c}Vf.prototype.Hb=function(){return this.b};Vf.prototype.Db=function(){return this.a};function Wf(a,b){return a&&b?a.Hb()==b.Hb()&&a.Db()==b.Db()&&Dc(a.c(),b.c()):a==b}K("shaka.media.InitSegmentReference",Vf);Vf.prototype.getEndByte=Vf.prototype.Db;Vf.prototype.getStartByte=Vf.prototype.Hb;
function Xf(a,b,c,d,e,f,g,h,k){this.startTime=a;this.endTime=b;this.c=c;this.b=d;this.a=e;this.f=f;this.timestampOffset=g;this.appendWindowStart=h;this.appendWindowEnd=k}Xf.prototype.Ae=function(){return this.startTime};Xf.prototype.ne=function(){return this.endTime};Xf.prototype.Hb=function(){return this.b};Xf.prototype.Db=function(){return this.a};K("shaka.media.SegmentReference",Xf);Xf.prototype.getEndByte=Xf.prototype.Db;Xf.prototype.getStartByte=Xf.prototype.Hb;Xf.prototype.getEndTime=Xf.prototype.ne;
Xf.prototype.getStartTime=Xf.prototype.Ae;function S(a,b,c){this.f=a;this.rc=b;this.h=this.g=Infinity;this.a=1;this.b=this.c=null;this.j=0;this.m=!0;this.v=0;this.A=void 0===c?!0:c}p=S.prototype;p.getDuration=function(){return this.g};p.se=function(){return this.a};p.za=function(a){this.g=a};p.ze=function(){return this.f};p.Td=function(a){this.j=a};p.Pb=function(a){this.m=a};p.pd=function(a){this.h=a};p.bf=function(a){this.rc=a};p.me=function(){return this.rc};
p.ob=function(a){if(0!=a.length){var b=a[a.length-1].endTime;this.Zc(a[0].startTime);this.a=a.reduce(function(c,d){return Math.max(c,d.endTime-d.startTime)},this.a);this.b=Math.max(this.b,b);null!=this.f&&this.A&&(this.f=(Date.now()+this.j)/1E3-this.b-this.a)}};p.Zc=function(a){this.c=null==this.c?a:Math.min(this.c,a)};p.Yc=function(a){this.a=Math.max(this.a,a)};p.offset=function(a){null!=this.c&&(this.c+=a);null!=this.b&&(this.b+=a)};p.S=function(){return Infinity==this.g&&!this.m};
p.Ua=function(){return Infinity!=this.g&&!this.m};p.Ra=function(){return Math.max(this.v,this.La()-this.h)};p.Ud=function(a){this.v=a};p.La=function(){return this.S()||this.Ua()?Math.min(Math.max(0,(Date.now()+this.j)/1E3-this.a-this.f),this.g):this.g};p.Gb=function(a){var b=Math.max(this.c,this.v);return Infinity==this.h?b:Math.max(b,Math.min(this.La()-this.h+a,this.Fa()))};p.kb=function(){return this.Gb(0)};p.Fa=function(){return Math.max(0,this.La()-(this.S()||this.Ua()?this.rc:0))};
p.Xd=function(){return null==this.f||null!=this.b&&this.A?!1:!0};K("shaka.media.PresentationTimeline",S);S.prototype.usingPresentationStartTime=S.prototype.Xd;S.prototype.getSeekRangeEnd=S.prototype.Fa;S.prototype.getSeekRangeStart=S.prototype.kb;S.prototype.getSafeSeekRangeStart=S.prototype.Gb;S.prototype.getSegmentAvailabilityEnd=S.prototype.La;S.prototype.setUserSeekStart=S.prototype.Ud;S.prototype.getSegmentAvailabilityStart=S.prototype.Ra;S.prototype.isInProgress=S.prototype.Ua;
S.prototype.isLive=S.prototype.S;S.prototype.offset=S.prototype.offset;S.prototype.notifyMaxSegmentDuration=S.prototype.Yc;S.prototype.notifyMinSegmentStartTime=S.prototype.Zc;S.prototype.notifySegments=S.prototype.ob;S.prototype.getDelay=S.prototype.me;S.prototype.setDelay=S.prototype.bf;S.prototype.setSegmentAvailabilityDuration=S.prototype.pd;S.prototype.setStatic=S.prototype.Pb;S.prototype.setClockOffset=S.prototype.Td;S.prototype.getPresentationStartTime=S.prototype.ze;
S.prototype.setDuration=S.prototype.za;S.prototype.getMaxSegmentDuration=S.prototype.se;S.prototype.getDuration=S.prototype.getDuration;function Yf(a,b){this.g=a;this.h=Zf(a);this.a=a.a.currentTime;this.f=Date.now()/1E3;this.b=!1;this.j=b;this.c=function(){}}Yf.prototype.release=function(){this.g=null;this.c=function(){}};function $f(a,b){a.c=b}function ag(a){this.a=a}function Zf(a){if(a.a.paused||0==a.a.playbackRate||0==a.a.buffered.length)var b=!1;else a:{b=a.a.currentTime;a=q(ie(a.a.buffered));for(var c=a.next();!c.done;c=a.next())if(c=c.value,!(b<c.start-.1||b>c.end-.5)){b=!0;break a}b=!1}return b};function bg(a,b,c,d,e){var f=this;this.a=a;this.A=b;this.i=c;this.v=e;this.b=new Tc;this.j=!1;this.m=a.readyState;this.f=!1;this.c=d;this.h=!1;this.b.l(a,"waiting",function(){return cg(f)});this.g=(new N(function(){cg(f)})).ra(.25)}bg.prototype.release=function(){this.b&&(this.b.release(),this.b=null);null!=this.g&&(this.g.stop(),this.g=null);this.c&&(this.c.release(),this.c=null);this.a=this.A=this.v=null};bg.prototype.cd=function(){this.h=!0;cg(this)};
function cg(a){if(0!=a.a.readyState){if(a.a.seeking){if(!a.j)return}else a.j=!1;if(!a.a.paused){a.a.readyState!=a.m&&(a.f=!1,a.m=a.a.readyState);var b;if(!(b=!a.c)){b=a.c;var c=b.g,d=Zf(c),e=c.a.currentTime,f=Date.now()/1E3;if(b.a!=e||b.h!=d)b.f=f,b.a=e,b.h=d,b.b=!1;e=f-b.f;if(d=e>=b.j&&d&&!b.b)b.c(b.a,e),b.b=!0,b.a=c.a.currentTime;b=!d}if(b){var g=a.i.smallGapLimit;e=a.a.currentTime;b=a.a.buffered;c=je(b,e);if(!(null==c||0==c&&!a.h||(d=b.start(c),d>=a.A.Fa()))){f=d-e;g=f<=g;var h=!1;.001>f||(g||
a.f||(a.f=!0,e=new Q("largegap",{currentTime:e,gapSize:f}),e.cancelable=!0,a.v(e),a.i.jumpLargeGaps&&!e.defaultPrevented&&(h=!0)),!g&&!h)||(0!=c&&b.end(c-1),a.a.currentTime=d)}}}}};function dg(a,b,c,d){b==HTMLMediaElement.HAVE_NOTHING||a.readyState>=b?d():(b=eg.get(b),c.ha(a,b,d))}var eg=new Map([[HTMLMediaElement.HAVE_METADATA,"loadedmetadata"],[HTMLMediaElement.HAVE_CURRENT_DATA,"loadeddata"],[HTMLMediaElement.HAVE_FUTURE_DATA,"canplay"],[HTMLMediaElement.HAVE_ENOUGH_DATA,"canplaythrough"]]);function fg(a,b,c){var d=this;this.a=a;this.g=b;this.f=c;this.h=!1;this.b=new Tc;this.c=new gg(a);dg(this.a,HTMLMediaElement.HAVE_METADATA,this.b,function(){hg(d,d.f)})}fg.prototype.release=function(){this.b&&(this.b.release(),this.b=null);null!=this.c&&(this.c.release(),this.c=null);this.g=function(){};this.a=null};function ig(a){return a.h?a.a.currentTime:a.f}function jg(a,b){0<a.a.readyState?kg(a.c,b):dg(a.a,HTMLMediaElement.HAVE_METADATA,a.b,function(){hg(a,a.f)})}
function hg(a,b){.001>Math.abs(a.a.currentTime-b)?lg(a):(a.b.ha(a.a,"seeking",function(){lg(a)}),kg(a.c,0==a.a.currentTime?b:a.a.currentTime))}function lg(a){a.h=!0;a.b.l(a.a,"seeking",function(){return a.g()})}function gg(a){var b=this;this.b=a;this.h=10;this.g=this.f=this.c=0;this.a=new N(function(){0>=b.c?b.a.stop():b.b.currentTime!=b.f?b.a.stop():(b.b.currentTime=b.g,b.c--)})}gg.prototype.release=function(){this.a&&(this.a.stop(),this.a=null);this.b=null};
function kg(a,b){a.f=a.b.currentTime;a.g=b;a.c=a.h;a.b.currentTime=b;a.a.ra(.1)};function mg(a){function b(){null==c.c?c.f=!0:(c.b.ha(c.a,"seeking",function(){c.f=!0}),c.a.currentTime=Math.max(0,c.a.currentTime+c.c))}var c=this;this.a=a;this.f=!1;this.c=null;this.b=new Tc;dg(this.a,HTMLMediaElement.HAVE_CURRENT_DATA,this.b,function(){b()})}mg.prototype.release=function(){this.b&&(this.b.release(),this.b=null);this.a=null};mg.prototype.m=function(a){this.c=this.f?this.c:a};mg.prototype.g=function(){return(this.f?this.a.currentTime:this.c)||0};mg.prototype.v=function(){};
function ng(a,b,c,d,e,f){var g=this;this.c=a;this.a=b.presentationTimeline;this.D=b.minBufferTime||0;this.i=c;this.A=e;this.j=null;this.f=new bg(a,b.presentationTimeline,c,og(a,c),f);this.b=new fg(a,function(){a:{var h=g.f;h.j=!0;h.h=!1;h.f=!1;var k=ig(g.b);h=pg(g,k);if(.001<Math.abs(h-k)&&(k=Date.now()/1E3,!g.j||g.j<k-1)){g.j=k;jg(g.b,h);h=void 0;break a}g.A();h=void 0}return h},qg(this,d));this.h=(new N(function(){if(0!=g.c.readyState&&!g.c.paused){var h=ig(g.b),k=g.a.kb(),l=g.a.Fa();3>l-k&&(k=
l-3);h<k&&(h=pg(g,h),g.c.currentTime=h)}})).ra(.25)}ng.prototype.release=function(){this.b&&(this.b.release(),this.b=null);this.f&&(this.f.release(),this.f=null);this.h&&(this.h.stop(),this.h=null);this.c=this.b=this.a=this.i=null;this.A=function(){}};ng.prototype.m=function(a){jg(this.b,a)};ng.prototype.g=function(){var a=ig(this.b);return 0<this.c.readyState&&!this.c.paused?rg(this,a):a};
function qg(a,b){null==b?b=Infinity>a.a.getDuration()?a.a.kb():a.a.Fa():0>b&&(b=a.a.Fa()+b);return sg(a,rg(a,b))}ng.prototype.v=function(){this.f.cd()};function sg(a,b){var c=a.a.getDuration();return b>=c?c-a.i.durationBackoff:b}function pg(a,b){var c=Math.max(a.D,a.i.rebufferingGoal),d=a.i.safeSeekOffset,e=a.a.kb(),f=a.a.Fa(),g=a.a.getDuration();3>f-e&&(e=f-3);var h=a.a.Gb(c),k=a.a.Gb(d);c=a.a.Gb(c+d);return b>=g?sg(a,b):b>f?f:b<e?ge(a.c.buffered,k)?k:c:b>=h||ge(a.c.buffered,b)?b:c}
function rg(a,b){var c=a.a.kb();if(b<c)return c;c=a.a.Fa();return b>c?c:b}function og(a,b){if(!b.stallEnabled)return null;var c=b.stallSkip,d=new Yf(new ag(a),b.stallThreshold);$f(d,function(){c?a.currentTime+=c:(a.pause(),a.play())});return d};function T(a){this.a=a;this.b=null;this.c=0;this.f=!1}p=T.prototype;p.destroy=function(){Eb("shaka.media.SegmentIndex","Please use release() instead of destroy().");this.release();return Promise.resolve()};p.release=function(){this.f||(this.a=[],this.b&&this.b.stop(),this.b=null)};p.Ie=function(){this.f=!0};p.find=function(a){for(var b=this.a.length-1;0<=b;--b){var c=this.a[b];if(a>=c.startTime&&a<c.endTime)return b+this.c}return this.a.length&&a<this.a[0].startTime?this.c:null};
p.get=function(a){if(0==this.a.length)return null;a-=this.c;return 0>a||a>=this.a.length?null:this.a[a]};p.offset=function(a){if(!this.f)for(var b=q(this.a),c=b.next();!c.done;c=b.next())c=c.value,c.startTime+=a,c.endTime+=a,c.timestampOffset+=a};p.mb=function(a){if(!this.f){var b=this.a[this.a.length-1],c=[];c=this.a.length?a.filter(function(d){return d.startTime>=b.startTime}):a;b&&c.length&&c[0].startTime==b.startTime&&this.a.pop();this.a.push.apply(this.a,ia(c))}};
p.Pa=function(a){if(!this.f){var b=this.a.length;this.a=this.a.filter(function(c){return c.endTime>a});this.c+=b-this.a.length}};p.Ka=function(a,b){if(!this.f){for(;this.a.length;)if(this.a[this.a.length-1].startTime>=b)this.a.pop();else break;for(;this.a.length;)if(this.a[0].endTime<=a)this.a.shift(),this.c++;else break;if(0!=this.a.length){var c=this.a[this.a.length-1];this.a[this.a.length-1]=new Xf(c.startTime,b,c.c,c.b,c.a,c.f,c.timestampOffset,c.appendWindowStart,c.appendWindowEnd)}}};
p.tc=function(a,b){var c=this;this.f||(this.b&&this.b.stop(),this.b=new N(function(){var d=b();c.a.push.apply(c.a,ia(d));0==c.a.length&&(c.b.stop(),c.b=null)}),this.b.ra(a))};T.prototype[Symbol.iterator]=function(){return this.jb(0)};T.prototype.jb=function(a){return new tg(this,this.find(a)||0)};function ug(a,b,c){return new T([new Xf(a,a+b,function(){return c},0,null,null,a,a,a+b)])}K("shaka.media.SegmentIndex",T);T.forSingleSegment=ug;T.prototype.getIteratorForTime=T.prototype.jb;
T.prototype.updateEvery=T.prototype.tc;T.prototype.fit=T.prototype.Ka;T.prototype.evict=T.prototype.Pa;T.prototype.merge=T.prototype.mb;T.prototype.offset=T.prototype.offset;T.prototype.get=T.prototype.get;T.prototype.find=T.prototype.find;T.prototype.markImmutable=T.prototype.Ie;T.prototype.release=T.prototype.release;T.prototype.destroy=T.prototype.destroy;function tg(a,b){this.b=a;this.a=b}tg.prototype.seek=function(a){this.a=this.b.jb(a).a;return this.next().value};
tg.prototype.current=function(){return this.b.get(this.a-1)};tg.prototype.next=function(){var a=this.b.get(this.a++);return{value:a,done:!a}};K("shaka.media.SegmentIterator",tg);tg.prototype.next=tg.prototype.next;tg.prototype.current=tg.prototype.current;tg.prototype.seek=tg.prototype.seek;function vg(){T.call(this,[]);this.g=[]}pa(vg,T);p=vg.prototype;p.clone=function(){var a=new vg;a.g=this.g.slice();return a};
p.release=function(){for(var a=q(this.g),b=a.next();!b.done;b=a.next())b.value.release();this.g=[]};p.find=function(a){for(var b=0,c=q(this.g),d=c.next();!d.done;d=c.next()){d=d.value;var e=d.find(a);if(null!=e)return e+b;b+=d.c+d.a.length}return null};p.get=function(a){for(var b=0,c=q(this.g),d=c.next();!d.done;d=c.next()){d=d.value;var e=d.get(a-b);if(e)return e;b+=d.c+d.a.length}return null};p.offset=function(){};p.mb=function(){};p.Pa=function(){};p.Ka=function(){};p.tc=function(){};
K("shaka.media.MetaSegmentIndex",vg);vg.prototype.updateEvery=vg.prototype.tc;vg.prototype.fit=vg.prototype.Ka;vg.prototype.evict=vg.prototype.Pa;vg.prototype.merge=vg.prototype.mb;vg.prototype.offset=vg.prototype.offset;vg.prototype.get=vg.prototype.get;vg.prototype.find=vg.prototype.find;vg.prototype.release=vg.prototype.release;function wg(a){var b=this;this.a=a;this.f=!1;this.b=this.a.kc();this.c=new N(function(){b.a.Kd(.25*b.b)})}wg.prototype.release=function(){this.c&&(this.c.stop(),this.c=null);this.a=null};wg.prototype.set=function(a){this.b=a;xg(this)};function xg(a){a.c.stop();var b=a.f?0:a.b;if(0<=b)try{a.a.kc()!=b&&a.a.od(b);return}catch(c){}a.c.ra(.25);0!=a.a.kc()&&a.a.od(0)};function yg(a){var b=this;this.c=a;this.a=new Set;this.b=(new N(function(){zg(b,!1)})).ra(.25)}yg.prototype.release=function(){this.b.stop();for(var a=q(this.a),b=a.next();!b.done;b=a.next())b.value.release();this.a.clear()};
function zg(a,b){for(var c=q(a.a),d=c.next();!d.done;d=c.next()){d=d.value;for(var e=a.c.currentTime,f=b,g=q(d.g.a),h=g.next();!h.done;h=g.next()){h=h.value;var k=d.f.get(h),l=e<h.startTime?Ag:e>h.endTime?Bg:Cg;d.f.set(h,l);for(var m=q(d.h),n=m.next();!n.done;n=m.next())n=n.value,n.bb==k&&n.ab==l&&n.Ta(h,f)}}};function Gg(a){var b=this;this.b=function(){};this.a=new Set;this.f=a;this.c=(new N(function(){for(var c=b.f(),d=q(b.a),e=d.next();!e.done;e=d.next())e=e.value,e.endTime<c.start&&b.a["delete"](e)})).ra(2)}Gg.prototype.release=function(){this.b=function(){};this.a.clear();this.c.stop()};function Hg(a,b){a.b=b};function Ig(a){var b=this;this.g=a;this.f=new Map;this.a=function(){};this.b=function(){};this.c=function(){};this.h=[{bb:null,ab:Cg,Ta:function(c,d){return b.a(c,d)}},{bb:Ag,ab:Cg,Ta:function(c,d){return b.a(c,d)}},{bb:Bg,ab:Cg,Ta:function(c,d){return b.a(c,d)}},{bb:Cg,ab:Ag,Ta:function(c,d){return b.b(c,d)}},{bb:Cg,ab:Bg,Ta:function(c,d){return b.b(c,d)}},{bb:Ag,ab:Bg,Ta:function(c,d){return b.c(c,d)}},{bb:Bg,ab:Ag,Ta:function(c,d){return b.c(c,d)}}]}
Ig.prototype.release=function(){this.g=null;this.f.clear();this.a=function(){};this.b=function(){};this.c=function(){}};function Jg(a,b,c,d){a.a=b;a.b=c;a.c=d}var Ag=1,Cg=2,Bg=3;function V(a,b){this.P=ob(a);this.a=b==Kg;this.C=0}p=V.prototype;p.wa=function(){return this.C<this.P.byteLength};p.ye=function(){return this.C};p.oe=function(){return this.P.byteLength};p.qa=function(){try{var a=this.P.getUint8(this.C);this.C+=1;return a}catch(b){throw Lg();}};p.Mb=function(){try{var a=this.P.getUint16(this.C,this.a);this.C+=2;return a}catch(b){throw Lg();}};p.K=function(){try{var a=this.P.getUint32(this.C,this.a);this.C+=4;return a}catch(b){throw Lg();}};
p.Od=function(){try{var a=this.P.getInt32(this.C,this.a);this.C+=4;return a}catch(b){throw Lg();}};p.rb=function(){try{if(this.a){var a=this.P.getUint32(this.C,!0);var b=this.P.getUint32(this.C+4,!0)}else b=this.P.getUint32(this.C,!1),a=this.P.getUint32(this.C+4,!1)}catch(c){throw Lg();}if(2097151<b)throw new M(2,3,3001);this.C+=8;return b*Math.pow(2,32)+a};p.Wa=function(a){if(this.C+a>this.P.byteLength)throw Lg();var b=L(this.P,this.C,a);this.C+=a;return b};
p.skip=function(a){if(this.C+a>this.P.byteLength)throw Lg();this.C+=a};p.Qd=function(a){if(this.C<a)throw Lg();this.C-=a};p.seek=function(a){if(0>a||a>this.P.byteLength)throw Lg();this.C=a};p.ed=function(){for(var a=this.C;this.wa()&&0!=this.P.getUint8(this.C);)this.C+=1;a=L(this.P,a,this.C-a);this.C+=1;return Tb(a)};function Lg(){return new M(2,3,3E3)}K("shaka.util.DataViewReader",V);V.prototype.readTerminatedString=V.prototype.ed;V.prototype.seek=V.prototype.seek;V.prototype.rewind=V.prototype.Qd;
V.prototype.skip=V.prototype.skip;V.prototype.readBytes=V.prototype.Wa;V.prototype.readUint64=V.prototype.rb;V.prototype.readInt32=V.prototype.Od;V.prototype.readUint32=V.prototype.K;V.prototype.readUint16=V.prototype.Mb;V.prototype.readUint8=V.prototype.qa;V.prototype.getLength=V.prototype.oe;V.prototype.getPosition=V.prototype.ye;V.prototype.hasMoreData=V.prototype.wa;var Kg=1;V.Endianness={BIG_ENDIAN:0,LITTLE_ENDIAN:Kg};function Mg(){this.c=[];this.b=[];this.a=!1}p=Mg.prototype;p.box=function(a,b){var c=Ng(a);this.c[c]=Og;this.b[c]=b;return this};p.ea=function(a,b){var c=Ng(a);this.c[c]=Pg;this.b[c]=b;return this};p.stop=function(){this.a=!0};p.parse=function(a,b){var c=new V(a,0);for(this.a=!1;c.wa()&&!this.a;)this.qc(0,c,b)};
p.qc=function(a,b,c){var d=b.C,e=b.K(),f=b.K();switch(e){case 0:e=b.P.byteLength-d;break;case 1:e=b.rb()}var g=this.b[f];if(g){var h=null,k=null;this.c[f]==Pg&&(k=b.K(),h=k>>>24,k&=16777215);f=d+e;c&&f>b.P.byteLength&&(f=b.P.byteLength);f-=b.C;b=0<f?b.Wa(f):new Uint8Array(0);b=new V(b,0);g({parser:this,partialOkay:c||!1,version:h,flags:k,reader:b,size:e,start:d+a})}else b.skip(Math.min(d+e-b.C,b.P.byteLength-b.C))};
function Qg(a){for(var b=null!=a.flags?12:8;a.reader.wa()&&!a.parser.a;)a.parser.qc(a.start+b,a.reader,a.partialOkay)}function Rg(a){var b=null!=a.flags?12:8,c=a.reader.K();c=q(gb(c));for(var d=c.next();!d.done&&(a.parser.qc(a.start+b,a.reader,a.partialOkay),!a.parser.a);d=c.next());}function Sg(a){return function(b){a(b.reader.Wa(b.reader.P.byteLength-b.reader.C))}}function Ng(a){var b=0;a=q(a);for(var c=a.next();!c.done;c=a.next())b=b<<8|c.value.charCodeAt(0);return b}
function Tg(a){return String.fromCharCode(a>>24&255,a>>16&255,a>>8&255,a&255)}K("shaka.util.Mp4Parser",Mg);Mg.typeToString=Tg;Mg.allData=Sg;Mg.sampleDescription=Rg;Mg.children=Qg;Mg.prototype.parseNext=Mg.prototype.qc;Mg.prototype.parse=Mg.prototype.parse;Mg.prototype.stop=Mg.prototype.stop;Mg.prototype.fullBox=Mg.prototype.ea;Mg.prototype.box=Mg.prototype.box;var Og=0,Pg=1;function Ug(a,b,c,d){a=Kc(a,d);if(0!=b||null!=c)a.headers.Range=c?"bytes="+b+"-"+c:"bytes="+b+"-";return a};function Vg(a,b){var c=this;this.s=b;this.o=a;this.i=null;this.f=1;this.c=this.b=null;this.a=new Map;this.h=!1;this.j=null;this.g=!1;this.F=new Rc(function(){return Wg(c)})}Vg.prototype.destroy=function(){return this.F.destroy()};function Wg(a){var b,c,d,e;return J(function(f){if(1==f.a){b=[];c=q(a.a.values());for(d=c.next();!d.done;d=c.next())e=d.value,Xg(e),b.push(Yg(e));return t(f,Promise.all(b),2)}a.a.clear();a.s=null;a.o=null;a.i=null;w(f)})}
Vg.prototype.configure=function(a){this.i=a;this.j=new lc({maxAttempts:Math.max(a.retryParameters.maxAttempts,2),baseDelay:a.retryParameters.baseDelay,backoffFactor:a.retryParameters.backoffFactor,fuzzFactor:a.retryParameters.fuzzFactor,timeout:0},!0)};Vg.prototype.start=function(){var a=this;return J(function(b){if(1==b.a)return t(b,Zg(a),2);Sc(a.F);a.h=!0;w(b)})};
function $g(a,b){var c,d,e,f,g,h;J(function(k){switch(k.a){case 1:return c=Ob,x(k,2),t(k,Ze(a.s.L,c.$),4);case 4:ua(k,3);break;case 2:if(d=C(k),a.s)a.s.onError(d);case 3:e=ed(b.mimeType,b.codecs);Pe(a.s.L,e);f=a.s.L.h;if(g=f.isTextVisible()||a.i.alwaysStreamText)h=ah(b),a.a.set(c.$,h),bh(a,h,0);w(k)}})}function ch(a){var b=a.a.get("text");b&&(Xg(b),Yg(b)["catch"](function(){}),a.a["delete"]("text"));a.c=null}
function dh(a,b){var c=a.a.get("video");if(c){var d=c.stream;if(d)if(b){var e=d.trickModeVideo;e&&!c.Ya&&(eh(a,e,!1,0,!1),c.Ya=d)}else if(d=c.Ya)c.Ya=null,eh(a,d,!0,0,!1)}}function fh(a,b,c,d){c=void 0===c?!1:c;d=void 0===d?0:d;a.b=b;a.h&&(b.video&&eh(a,b.video,c,d,!1),b.audio&&eh(a,b.audio,c,d,!1))}function gh(a,b){a.c=b;a.h&&eh(a,b,!0,0,!1)}
function eh(a,b,c,d,e){var f=a.a.get(b.type);f||"text"!=b.type?f&&(f.Ya&&(b.trickModeVideo?(f.Ya=b,b=b.trickModeVideo):f.Ya=null),f.stream!=b||e)&&("text"==b.type&&Pe(a.s.L,ed(b.mimeType,b.codecs)),f.stream=b,f.la=null,c&&(f.Ab?f.wc=!0:f.Ma?(f.$a=!0,f.fc=d,f.wc=!0):(Xg(f),hh(a,f,!0,d)["catch"](function(g){if(a.s)a.s.onError(g)}))),ih(a,f)["catch"](function(g){if(a.s)a.s.onError(g)})):$g(a,b)}
function ih(a,b){var c,d;return J(function(e){if(1==e.a){if(!b.ia)return e["return"]();c=b.stream;d=b.ia;return c.segmentIndex?e.u(2):t(e,c.createSegmentIndex(),2)}if(b.ia!=d||b.stream!=c)return e["return"]();var f=a.s.jc();var g=Ue(a.s.L,b.type),h=b.stream.segmentIndex.find(b.pa?b.pa.endTime:f),k=null==h?null:b.stream.segmentIndex.get(h);h=k?k.a?k.a-k.b:null:null;k&&!h&&(h=(k.endTime-k.startTime)*(b.stream.bandwidth||0)/8);h?((k=k.f)&&(h+=(k.a?k.a-k.b:null)||0),k=a.s.getBandwidthEstimate(),f=8*h/
k<(g||0)-f-Math.max(a.o.minBufferTime||0,a.i.rebufferingGoal)||b.ia.b.a>h?!0:!1):f=!1;f&&b.ia.abort();w(e)})}function jh(a,b){b.Ab||b.$a||(b.Ma?(b.$a=!0,b.fc=0):null==Se(a.s.L,b.type)?null==b.Ia&&bh(a,b,0):(Xg(b),hh(a,b,!1,0)["catch"](function(c){if(a.s)a.s.onError(c)})))}
function Zg(a){var b,c,d,e,f,g,h,k,l,m;return J(function(n){if(1==n.a){b=Ob;if(!a.b)throw new M(2,5,5006);c=new Map;d=new Set;a.b.audio&&(c.set(b.fb,a.b.audio),d.add(a.b.audio));a.b.video&&(c.set(b.Da,a.b.video),d.add(a.b.video));a.c&&(c.set(b.$,a.c),d.add(a.c));e=a.s.L;f=a.i.forceTransmuxTS;return t(n,e.init(c,f),2)}Sc(a.F);var r=a.o.presentationTimeline.getDuration();Infinity>r?a.s.L.za(r):a.s.L.za(Math.pow(2,32));g=q(c.keys());for(h=g.next();!h.done;h=g.next())k=h.value,l=c.get(k),a.a.has(k)||
(m=ah(l),a.a.set(k,m),bh(a,m,0));w(n)})}function ah(a){return{stream:a,type:a.type,la:null,pa:null,mc:null,Wc:null,Vc:null,Uc:null,Ya:null,endOfStream:!1,Ma:!1,Ia:null,$a:!1,fc:0,wc:!1,Ab:!1,gd:!1,Ib:!1,ia:null}}
Vg.prototype.Kb=function(a){var b=this,c,d,e,f;return J(function(g){switch(g.a){case 1:Sc(b.F);if(a.Ma||null==a.Ia||a.Ab)return g["return"]();a.Ia=null;if(!a.$a){g.u(2);break}return t(g,hh(b,a,a.wc,a.fc),3);case 3:return g["return"]();case 2:if(a.stream.segmentIndex){g.u(4);break}c=a.stream;return t(g,a.stream.createSegmentIndex(),5);case 5:if(c!=a.stream)return null==a.Ia&&bh(b,a,0),g["return"]();case 4:try{d=kh(b,a),null!=d&&(bh(b,a,d),a.Ib=!1)}catch(h){return lh(b,h),g["return"]()}e=Array.from(b.a.values());
if(!b.h||!e.every(function(h){return h.endOfStream})){g.u(0);break}return t(g,b.s.L.endOfStream(),7);case 7:Sc(b.F),f=b.s.L.getDuration(),0!=f&&f<b.o.presentationTimeline.getDuration()&&b.o.presentationTimeline.za(f),w(g)}})};
function kh(a,b){if(mh(b))return Ye(a.s.L,b.stream.originalId||""),null;var c=a.s.jc(),d=b.pa?b.pa.endTime:c,e=Ve(a.s.L,b.type,c),f=Math.max(a.o.minBufferTime||0,a.i.rebufferingGoal,a.i.bufferingGoal)*a.f;if(d>=a.o.presentationTimeline.getDuration())return b.endOfStream=!0,"video"==b.type&&(c=a.a.get("text"))&&mh(c)&&(c.endOfStream=!0),null;b.endOfStream=!1;if(e>=f)return.5;e=Ue(a.s.L,b.type);e=nh(a,b,c,e);if(!e||!oh(a,e))return 1;f=Infinity;var g=Array.from(a.a.values());g=q(g);for(var h=g.next();!h.done;h=
g.next())h=h.value,mh(h)||(f=Math.min(f,h.pa?h.pa.endTime:c));if(d>=f+a.o.presentationTimeline.a)return 1;ph(a,b,c,e)["catch"](function(){});return null}function nh(a,b,c,d){if(b.la)return b.la.current();if(b.pa||d)return b.la=b.stream.segmentIndex.jb(b.pa?b.pa.endTime:d),b.la.next().value;b.la=b.stream.segmentIndex.jb(Math.max(c-a.i.inaccurateManifestTolerance,0));d=b.la.next().value;d&&oh(a,d)||(b.la=b.stream.segmentIndex.jb(c),d=b.la.next().value);return d}
function oh(a,b){var c=a.o.presentationTimeline,d=c.La();return b.endTime<c.Ra()||b.startTime>d?!1:!0}
function ph(a,b,c,d){var e,f,g,h,k,l,m,n,r;return J(function(u){switch(u.a){case 1:return e=Ob,f=b.stream,g=b.la,b.Ma=!0,h=qh(a,b,d),k=rh(a,b,d),x(u,2),t(u,Promise.all([h,k]),4);case 4:return l=u.b,Sc(a.F),a.g?u["return"]():b.$a?(b.Ma=!1,bh(a,b,0),u["return"]()):t(u,sh(a,b,c,f,d,l[1]),5);case 5:Sc(a.F);if(a.g)return u["return"]();b.pa=d;g.next();b.Ma=!1;b.gd=!1;m=a.s.L.ic();n=m[b.type];JSON.stringify(n);b.$a||a.s.cd();bh(a,b,0);ua(u,0);break;case 2:r=C(u);Sc(a.F,r);if(a.g)return u["return"]();b.Ma=
!1;b.type==e.$&&a.i.ignoreTextStreamFailures?a.a["delete"](e.$):7001==r.code?(b.Ma=!1,b.Ia=null,bh(a,b,0)):3017==r.code?th(a,b,r):(b.Ib=!0,r.severity=2,lh(a,r));w(u)}})}function th(a,b,c){if(!Array.from(a.a.values()).some(function(e){return e!=b&&e.gd})){var d=Math.round(100*a.f);if(20<d)a.f-=.2;else if(4<d)a.f-=.04;else{b.Ib=!0;a.g=!0;a.s.onError(c);return}b.gd=!0}bh(a,b,4)}
function qh(a,b,c){var d,e,f,g,h,k,l;return J(function(m){d=[];e=Math.max(0,c.appendWindowStart-.1);f=c.appendWindowEnd+.01;g=c.timestampOffset;if(g!=b.Wc||e!=b.Vc||f!=b.Uc)h=function(){var n;return J(function(r){if(1==r.a)return x(r,2),b.Vc=e,b.Uc=f,b.Wc=g,t(r,$e(a.s.L,b.type,g,e,f),4);if(2!=r.a)return ua(r,0);n=C(r);b.Vc=null;b.Uc=null;b.Wc=null;throw n;})},d.push(h());!Wf(c.f,b.mc)&&(b.mc=c.f)&&(k=rh(a,b,c.f),l=function(){var n,r,u;return J(function(v){switch(v.a){case 1:return x(v,2),t(v,k,4);
case 4:return n=v.b,Sc(a.F),r=b.stream.closedCaptions&&0<b.stream.closedCaptions.size,t(v,We(a.s.L,b.type,n,null,null,r),5);case 5:ua(v,0);break;case 2:throw u=C(v),b.mc=null,u;}})},d.push(l()));return t(m,Promise.all(d),0)})}
function sh(a,b,c,d,e,f){var g;return J(function(h){if(1==h.a)return g=d.closedCaptions&&0<d.closedCaptions.size,null!=d.emsgSchemeIdUris&&0<d.emsgSchemeIdUris.length&&(new Mg).ea("emsg",function(k){var l=d.emsgSchemeIdUris,m=k.reader.ed(),n=k.reader.ed(),r=k.reader.K(),u=k.reader.K(),v=k.reader.K(),A=k.reader.K();k=k.reader.Wa(k.reader.P.byteLength-k.reader.C);var y=e.startTime+u/r;l.includes(m)&&("urn:mpeg:dash:event:2012"==m?a.s.Me():(l=new Q(uh,{detail:{startTime:y,endTime:y+v/r,schemeIdUri:m,
value:n,timescale:r,presentationTimeDelta:u,eventDuration:v,id:A,messageData:k}}),a.s.onEvent(l)))}).parse(f),t(h,vh(a,b,c),2);if(3!=h.a)return Sc(a.F),t(h,We(a.s.L,b.type,f,e.startTime,e.endTime,g),3);Sc(a.F);w(h)})}function vh(a,b,c){var d,e,f,g;return J(function(h){if(1==h.a){d=Math.max(a.i.bufferBehind,a.o.presentationTimeline.a);e=Se(a.s.L,b.type);if(null==e)return h["return"]();f=c-e;g=f-d;return.01>=g?h["return"]():t(h,a.s.L.remove(b.type,e,e+g),2)}Sc(a.F);w(h)})}
function mh(a){return a&&"text"==a.type&&"application/cea-608"==a.stream.mimeType}function rh(a,b,c){var d,e,f,g;return J(function(h){if(1==h.a)return d=Qc,e=Ug(c.c(),c.b,c.a,a.i.retryParameters),f=a.s.nb.request(d,e),b.ia=f,t(h,f.promise,2);g=h.b;b.ia=null;return h["return"](g.data)})}
function hh(a,b,c,d){var e,f;return J(function(g){if(1==g.a)return b.$a=!1,b.wc=!1,b.fc=0,b.Ab=!0,b.pa=null,b.mc=null,b.la=null,d?(e=a.s.jc(),f=a.s.L.getDuration(),t(g,a.s.L.remove(b.type,e+d,f),3)):t(g,Ze(a.s.L,b.type),4);if(3!=g.a)return Sc(a.F),c?t(g,a.s.L.flush(b.type),3):g.u(3);Sc(a.F);b.Ab=!1;b.endOfStream=!1;bh(a,b,0);w(g)})}
function bh(a,b,c){var d=b.type;if("text"!=d||a.a.has(d))b.Ia=(new kc(function(){var e;return J(function(f){if(1==f.a)return x(f,2),t(f,a.Kb(b),4);if(2!=f.a)return ua(f,0);e=C(f);if(a.s)a.s.onError(e);w(f)})})).R(c)}function Xg(a){null!=a.Ia&&(a.Ia.stop(),a.Ia=null)}function Yg(a){return J(function(b){return a.ia?t(b,a.ia.abort(),0):b.u(0)})}function lh(a,b){J(function(c){if(1==c.a)return t(c,nc(a.j),2);Sc(a.F);a.s.onError(b);b.handled||a.i.failureCallback(b);w(c)})};function wh(a,b){var c=xh(),d=this;this.h=b;this.c=a;this.f=c;this.j=null;this.g=[];this.b=this.a=null;this.m=Promise.resolve().then(function(){return yh(d)});this.F=new Rc(function(){return zh(d)})}wh.prototype.destroy=function(){return this.F.destroy()};function zh(a){var b,c,d;return J(function(e){if(1==e.a)return a.b&&a.b.abort(),Ah(a),t(e,a.m,2);a.a&&a.a.xa.Va();b=q(a.g);for(c=b.next();!c.done;c=b.next())d=c.value,d.xa.Va();a.a=null;a.g=[];a.h=null;w(e)})}
function Bh(a,b){var c={pb:function(){},nc:function(){},Va:function(){},onError:function(){},pc:function(){},Qf:function(){}};a.g.push({create:b,xa:c});a.b&&a.b.abort();Ah(a);return c}
function yh(a){return J(function(b){if(a.F.a)b=b.u(0);else{if(0==a.g.length||a.a&&!a.a.Sa)var c=!1;else{a.a&&(a.a.xa.Va(),a.a=null);c=a.g.shift();var d=c.create(a.f);d?(c.xa.pb(),a.a={node:d.node,payload:d.payload,Sa:d.Sa,xa:c.xa}):c.xa.pc();c=!0}c?c=Promise.resolve():a.a?c=Ch(a):(a.h.Le(a.c),a.j=new Pb,c=a.j);b=t(b,c,1)}return b})}
function Ch(a){var b,c;return J(function(d){switch(d.a){case 1:return a.c=a.h.ue(a.c,a.f,a.a.node,a.a.payload),x(d,2),a.b=a.h.je(a.c,a.f,a.a.payload),t(d,a.b.promise,4);case 4:a.b=null;a.c==a.a.node&&(a.a.xa.nc(),a.a=null);ua(d,0);break;case 2:b=C(d);if(7001==b.code)a.a.xa.Va();else a.a.xa.onError(b);a.a=null;a.b=null;c=a;return t(d,a.h.handleError(a.f,b),5);case 5:c.c=d.b,w(d)}})}function Ah(a){a.j&&(a.j.resolve(),a.j=null)};function Dh(a){this.a=null;for(var b=q(Array.from(a.textTracks)),c=b.next();!c.done;c=b.next())c=c.value,c.mode="disabled","Shaka Player TextTrack"==c.label&&(this.a=c);this.a||(this.a=a.addTextTrack("subtitles","Shaka Player TextTrack"));this.a.mode="hidden"}p=Dh.prototype;p.remove=function(a,b){if(!this.a)return!1;Eh(this.a,function(c){return c.startTime<b&&c.endTime>a});return!0};
p.append=function(a){function b(g){return g.spacer?"\n":g.nestedCues.length?g.nestedCues.map(b).join(""):g.payload}var c=a.map(function(g){if(g.nestedCues.length){var h=g.clone();h.nestedCues=[];h.payload=b(g);return h}return g}),d=[];a=this.a.cues?Array.from(this.a.cues):[];var e={};c=q(c);for(var f=c.next();!f.done;e={cb:e.cb},f=c.next())e.cb=f.value,a.some(function(g){return function(h){return h.startTime==g.cb.startTime&&h.endTime==g.cb.endTime&&h.text==g.cb.payload?!0:!1}}(e))||(f=Fh(e.cb))&&
d.push(f);a=d.slice().sort(function(g,h){return g.startTime!=h.startTime?g.startTime-h.startTime:g.endTime!=h.endTime?g.endTime-h.startTime:"line"in VTTCue.prototype?d.indexOf(h)-d.indexOf(g):d.indexOf(g)-d.indexOf(h)});a=q(a);for(e=a.next();!e.done;e=a.next())this.a.addCue(e.value)};p.destroy=function(){this.a&&(Eh(this.a,function(){return!0}),this.a.mode="disabled");this.a=null;return Promise.resolve()};p.isTextVisible=function(){return"showing"==this.a.mode};
p.setTextVisibility=function(a){this.a.mode=a?"showing":"hidden"};
function Fh(a){if(a.startTime>=a.endTime)return null;var b=new VTTCue(a.startTime,a.endTime,a.payload);b.lineAlign=a.lineAlign;b.positionAlign=a.positionAlign;a.size&&(b.size=a.size);try{b.align=a.textAlign}catch(c){}"center"==a.textAlign&&"center"!=b.align&&(b.align="middle");"vertical-lr"==a.writingMode?b.vertical="lr":"vertical-rl"==a.writingMode&&(b.vertical="rl");1==a.lineInterpretation&&(b.snapToLines=!1);null!=a.line&&(b.line=a.line);null!=a.position&&(b.position=a.position);return b}
function Eh(a,b){var c=a.mode;a.mode="showing"==c?"showing":"hidden";for(var d=q(Array.from(a.cues)),e=d.next();!e.done;e=d.next())(e=e.value)&&b(e)&&a.removeCue(e);a.mode=c}K("shaka.text.SimpleTextDisplayer",Dh);Dh.prototype.setTextVisibility=Dh.prototype.setTextVisibility;Dh.prototype.isTextVisible=Dh.prototype.isTextVisible;Dh.prototype.destroy=Dh.prototype.destroy;Dh.prototype.append=Dh.prototype.append;Dh.prototype.remove=Dh.prototype.remove;function Gh(){}function Hh(a){for(;a.firstChild;)a.removeChild(a.firstChild)}K("shaka.util.Dom",Gh);Gh.removeAllChildren=Hh;function Ih(a,b){var c=this;this.h=!1;this.f=[];this.a=a;this.g=b;this.b=document.createElement("div");this.b.classList.add("shaka-text-container");this.b.style.textAlign="center";this.b.style.display="flex";this.b.style.flexDirection="column";this.b.style.alignItems="center";this.b.style.justifyContent="flex-end";this.g.appendChild(this.b);this.j=(new N(function(){Jh(c)})).ra(.25);this.c=new Map}p=Ih.prototype;
p.append=function(a){var b=ia(this.f).concat(),c={};a=q(a);for(var d=a.next();!d.done;c={Sb:c.Sb},d=a.next())c.Sb=d.value,b.some(function(e){return function(f){return ve(f,e.Sb)}}(c))||this.f.push(c.Sb);Jh(this)};p.destroy=function(){this.g.removeChild(this.b);this.b=null;this.h=!1;this.f=[];this.j&&this.j.stop();this.c.clear()};p.remove=function(a,b){if(!this.b)return!1;this.f=this.f.filter(function(c){return c.startTime<a||c.endTime>=b});Jh(this);return!0};p.isTextVisible=function(){return this.h};
p.setTextVisibility=function(a){this.h=a};
function Jh(a){function b(g){return a.f.includes(g)&&a.h&&g.startTime<=c&&g.endTime>=c}for(var c=a.a.currentTime,d=q(a.c.keys()),e=d.next();!e.done;e=d.next())if(e=e.value,!b(e)){var f=a.c.get(e);a.b.removeChild(f);a.c["delete"](e)}d=new Set(a.c.values());e=q(Array.from(a.b.childNodes));for(f=e.next();!f.done;f=e.next())f=f.value,d.has(f)||a.b.removeChild(f);d=a.f.filter(function(g){return b(g)&&!a.c.has(g)}).sort(function(g,h){return g.startTime!=h.startTime?g.startTime-h.startTime:g.endTime-h.endTime});
d=q(d);for(e=d.next();!e.done;e=d.next())Kh(a,a.b,e.value)}function Lh(a,b,c,d){var e=document.createElement("span");d&&e.classList.add("shaka-nested-cue");Mh(a,e,c,!0);b.appendChild(e);return e}function Kh(a,b,c){if(c.nestedCues.length){var d=document.createElement("p");d.style.width="100%";Mh(a,d,c,!1);for(var e=0;e<c.nestedCues.length;e++)Lh(a,d,c.nestedCues[e],!0);b.appendChild(d);a.c.set(c,d)}else a.c.set(c,Lh(a,b,c,!1))}
function Mh(a,b,c,d){var e=b.style,f=0==c.nestedCues.length;c.spacer?(e.flexBasis="100%",e.height="0"):(e.whiteSpace="pre-line",b.textContent=c.payload,f&&(e.backgroundColor=c.backgroundColor),e.border=c.border,e.color=c.color,e.direction=c.direction,e.opacity=c.opacity,e.paddingLeft=Nh(c.linePadding,c,a.g),e.paddingRight=Nh(c.linePadding,c,a.g),c.backgroundImage&&(e.backgroundImage="url('"+c.backgroundImage+"')",e.backgroundRepeat="no-repeat",e.backgroundSize="contain",e.backgroundPosition="center",
""==c.backgroundColor&&(e.backgroundColor="transparent")),c.backgroundImage&&c.region&&(b=c.region.widthUnits==Be?"%":"px",e.height=c.region.height+(c.region.heightUnits==Be?"%":"px"),e.width=c.region.width+b),e.justifyContent="before"==c.displayAlign?"flex-start":"center"==c.displayAlign?"center":"flex-end",f?e.display="inline-block":(e.display="flex",e.flexDirection="row",e.flexWrap="wrap",e.margin="0",e.alignItems=e.justifyContent,e.justifyContent="center"),d&&(e.maxWidth="100%"),e.fontFamily=
c.fontFamily,e.fontWeight=c.fontWeight.toString(),e.fontStyle=c.fontStyle,e.letterSpacing=c.letterSpacing,e.fontSize=Nh(c.fontSize,c,a.g),c.line?1==c.lineInterpretation&&(e.position="absolute",c.writingMode==pe?c.lineAlign==re?e.top=c.line+"%":"end"==c.lineAlign&&(e.bottom=c.line+"%"):"vertical-lr"==c.writingMode?c.lineAlign==re?e.left=c.line+"%":"end"==c.lineAlign&&(e.right=c.line+"%"):c.lineAlign==re?e.right=c.line+"%":"end"==c.lineAlign&&(e.left=c.line+"%")):c.region&&c.region.id&&!f&&(a=c.region.widthUnits==
Be?"%":"px",d=c.region.viewportAnchorUnits==Be?"%":"px",e.height=c.region.height+(c.region.heightUnits==Be?"%":"px"),e.width=c.region.width+a,e.position="absolute",e.top=c.region.viewportAnchorY+d,e.left=c.region.viewportAnchorX+d),e.lineHeight=c.lineHeight,c.position&&(c.writingMode==pe?e.paddingLeft=c.position:e.paddingTop=c.position),"line-left"==c.positionAlign?e.cssFloat="left":"line-right"==c.positionAlign&&(e.cssFloat="right"),e.textAlign=c.textAlign,e.textDecoration=c.textDecoration.join(" "),
e.writingMode=c.writingMode,c.size&&(c.writingMode==pe?e.width=c.size+"%":e.height=c.size+"%"))}function Nh(a,b,c){var d=(d=(new RegExp(/(\d*\.?\d+)([a-z]+|%+)/)).exec(a))?{value:Number(d[1]),gf:d[2]}:null;if(!d)return a;var e=d.value;switch(d.gf){case "%":return e/100*c.clientHeight/b.cellResolution.rows+"px";case "c":return c.clientHeight*e/b.cellResolution.rows+"px";default:return a}}K("shaka.text.UITextDisplayer",Ih);Ih.prototype.setTextVisibility=Ih.prototype.setTextVisibility;
Ih.prototype.isTextVisible=Ih.prototype.isTextVisible;Ih.prototype.remove=Ih.prototype.remove;Ih.prototype.destroy=Ih.prototype.destroy;Ih.prototype.append=Ih.prototype.append;function Oh(){}
function Ph(a,b,c,d,e){var f=e in d,g=!0,h;for(h in b){var k=e+"."+h,l=f?d[e]:c[h];f||h in c?void 0===b[h]?void 0===l||f?delete a[h]:a[h]=yc(l):l.constructor==Object&&b[h]&&b[h].constructor==Object?(a[h]||(a[h]=yc(l)),k=Ph(a[h],b[h],l,d,k),g=g&&k):typeof b[h]!=typeof l||null==b[h]||"function"!=typeof b[h]&&b[h].constructor!=l.constructor?(Wa("Invalid config, wrong type for "+k),g=!1):("function"==typeof c[h]&&c[h].length!=b[h].length&&Xa("Unexpected number of arguments for "+k),a[h]=b[h]):(Wa("Invalid config, unrecognized key "+
k),g=!1)}return g}function Qh(a,b){for(var c={},d=c,e=0,f=0;;){e=a.indexOf(".",e);if(0>e)break;if(0==e||"\\"!=a[e-1])f=a.substring(f,e).replace(/\\\./g,"."),d[f]={},d=d[f],f=e+1;e+=1}d[a.substring(f).replace(/\\\./g,".")]=b;return c}K("shaka.util.ConfigUtils",Oh);Oh.convertToConfigObject=Qh;Oh.mergeConfigObjects=Ph;function Rh(){}
function Sh(){var a=1E6,b=Infinity;navigator.connection&&(navigator.connection.downlink&&(a=1E6*navigator.connection.downlink),navigator.connection.saveData&&(b=360));var c={retryParameters:mc(),servers:{},clearKeys:{},advanced:{},delayLicenseRequestUntilPlayed:!1,initDataTransform:Td,logLicenseExchange:!1,updateExpirationTime:1},d={retryParameters:mc(),availabilityWindowOverride:NaN,disableAudio:!1,disableVideo:!1,disableText:!1,defaultPresentationDelay:0,dash:{clockSyncUri:"",ignoreDrmInfo:!1,xlinkFailGracefully:!1,
ignoreMinBufferTime:!1,autoCorrectDrift:!0,initialSegmentLimit:1E3,ignoreSuggestedPresentationDelay:!1,ignoreEmptyAdaptationSet:!1},hls:{ignoreTextStreamFailures:!1,useFullSegmentsForStartTime:!1}},e={retryParameters:mc(),failureCallback:function(h){return[h]},rebufferingGoal:2,bufferingGoal:10,bufferBehind:30,ignoreTextStreamFailures:!1,alwaysStreamText:!1,startAtSegmentBoundary:!1,smallGapLimit:.5,jumpLargeGaps:!1,durationBackoff:1,forceTransmuxTS:!1,safeSeekOffset:5,stallEnabled:!0,stallThreshold:1,
stallSkip:.1,useNativeHlsOnSafari:!0,inaccurateManifestTolerance:2};if(md("Web0S")||ld()||md("CrKey"))e.stallSkip=0;var f={trackSelectionCallback:function(h){return J(function(k){return k["return"](h)})},progressCallback:function(h,k){return[h,k]},usePersistentLicense:!0},g={drm:c,manifest:d,streaming:e,offline:f,abrFactory:function(){return new Af},abr:{enabled:!0,defaultBandwidthEstimate:a,switchInterval:8,bandwidthUpgradeTarget:.85,bandwidthDowngradeTarget:.95,restrictions:{minWidth:0,maxWidth:Infinity,
minHeight:0,maxHeight:b,minPixels:0,maxPixels:Infinity,minFrameRate:0,maxFrameRate:Infinity,minBandwidth:0,maxBandwidth:Infinity}},preferredAudioLanguage:"",preferredTextLanguage:"",preferredVariantRole:"",preferredTextRole:"",preferredAudioChannelCount:2,restrictions:{minWidth:0,maxWidth:Infinity,minHeight:0,maxHeight:Infinity,minPixels:0,maxPixels:Infinity,minFrameRate:0,maxFrameRate:Infinity,minBandwidth:0,maxBandwidth:Infinity},playRangeStart:0,playRangeEnd:Infinity,textDisplayFactory:function(){return null}};
f.trackSelectionCallback=function(h){return J(function(k){return k["return"](Th(h,g.preferredAudioLanguage))})};return g}function Uh(a,b,c){var d={".drm.servers":"",".drm.clearKeys":"",".drm.advanced":{distinctiveIdentifierRequired:!1,persistentStateRequired:!1,videoRobustness:"",audioRobustness:"",serverCertificate:new Uint8Array(0),individualizationServer:""}};return Ph(a,b,c||Sh(),d,"")}
function Th(a,b){var c=a.filter(function(h){return"variant"==h.type}),d=[],e=kf(b,c.map(function(h){return h.language}));e&&(d=c.filter(function(h){return R(h.language)==e}));0==d.length&&(d=c.filter(function(h){return h.primary}));0==d.length&&(c.map(function(h){return h.language}),d=c);var f=d.filter(function(h){return h.height&&480>=h.height});f.length&&(f.sort(function(h,k){return k.height-h.height}),d=f.filter(function(h){return h.height==f[0].height}));c=[];if(d.length){var g=Math.floor(d.length/
2);d.sort(function(h,k){return h.bandwidth-k.bandwidth});c.push(d[g])}d=q(a);for(g=d.next();!g.done;g=d.next())g=g.value,"text"==g.type&&c.push(g);return c}K("shaka.util.PlayerConfiguration",Rh);Rh.mergeConfigObjects=Uh;function Vh(){this.a=null;this.b=[]}function Wh(a,b){if(null==a.a)a.a={timestamp:Date.now()/1E3,state:b,duration:0};else{var c=Date.now()/1E3;a.a.duration=c-a.a.timestamp;a.a.state!=b&&(a.b.push(a.a),a.a={timestamp:c,state:b,duration:0})}}function Xh(a,b){var c=0;a.a&&a.a.state==b&&(c+=a.a.duration);for(var d=q(a.b),e=d.next();!e.done;e=d.next())e=e.value,c+=e.state==b?e.duration:0;return c}
function Yh(a){function b(f){return{timestamp:f.timestamp,state:f.state,duration:f.duration}}for(var c=[],d=q(a.b),e=d.next();!e.done;e=d.next())c.push(b(e.value));a.a&&c.push(b(a.a));return c};function Zh(){this.b=this.c=null;this.a=[]}function $h(a,b,c){a.c!=b&&(a.c=b,a.a.push({timestamp:Date.now()/1E3,id:b.id,type:"variant",fromAdaptation:c,bandwidth:b.bandwidth}))}function ai(a,b,c){a.b!=b&&(a.b=b,a.a.push({timestamp:Date.now()/1E3,id:b.id,type:"text",fromAdaptation:c,bandwidth:null}))};function bi(){this.g=this.h=this.A=this.m=this.D=this.c=this.v=this.f=this.H=this.I=this.J=this.j=this.M=NaN;this.b=new Vh;this.a=new Zh};function W(a,b){xc.call(this);var c=this;this.g=ci;this.cc=this.a=null;this.T=!1;this.b=new Tc;this.Ic=this.j=this.xb=this.o=this.ac=this.m=this.c=this.bc=this.D=this.Yb=this.A=this.Ba=this.v=this.H=this.h=this.N=null;this.vd=1E9;this.i=di(this);this.xc={width:Infinity,height:Infinity};this.f=null;this.yb=new Hf(this.i.preferredAudioLanguage,this.i.preferredVariantRole,this.i.preferredAudioChannelCount);this.ca=this.i.preferredTextLanguage;this.Zb=this.i.preferredTextRole;this.Jc=[];b&&b(this);this.N=
ei(this);this.I=null;fi&&(this.I=Lb(fi));this.b.l(window,"online",function(){c.hd()});this.da={name:"detach"};this.Ea={name:"attach"};this.M={name:"unload"};this.Oc={name:"manifest-parser"};this.Nc={name:"manifest"};this.ta={name:"media-source"};this.Kc={name:"drm-engine"};this.J={name:"load"};this.Pc={name:"src-equals-drm-engine"};this.Ca={name:"src-equals"};var d=new Map;d.set(this.Ea,function(e,f){return sc(gi(c,e,f))});d.set(this.da,function(e){e.B&&(c.b.sa(e.B,"error"),e.B=null);c.a=null;e=Promise.resolve();
return sc(e)});d.set(this.M,function(e){return sc(hi(c,e))});d.set(this.ta,function(e){e=ii(c,e);return sc(e)});d.set(this.Oc,function(e,f){var g=ji(c,e,f);return sc(g)});d.set(this.Nc,function(e){return ki(c,e)});d.set(this.Kc,function(){var e=li(c);return sc(e)});d.set(this.J,function(e,f){return sc(mi(c,e,f))});d.set(this.Pc,function(e){e=ni(c,e);return sc(e)});d.set(this.Ca,function(e,f){return oi(c,e,f)});this.W=new wh(this.da,{ue:function(e,f,g,h){var k=null;e==c.da&&(k=g==c.da?c.da:c.Ea);e==
c.Ea&&(k=g==c.da||f.B!=h.B?c.da:g==c.Ea?c.Ea:g==c.ta||g==c.J?c.ta:g==c.Ca?c.Pc:null);e==c.ta&&(k=g==c.J&&f.B==h.B?c.Oc:c.M);e==c.Oc&&(k=pi(c.J,c.Nc,c.M,g,f,h));e==c.Nc&&(k=pi(c.J,c.Kc,c.M,g,f,h));e==c.Kc&&(k=pi(c.J,c.J,c.M,g,f,h));e==c.Pc&&(k=g==c.Ca&&f.B==h.B?c.Ca:c.M);if(e==c.J||e==c.Ca)k=c.M;e==c.M&&(k=h.B&&f.B==h.B?c.Ea:c.da);return k},je:function(e,f,g){c.dispatchEvent(qi(ri,{state:e.name}));return d.get(e)(f,g)},handleError:function(e){return J(function(f){return 1==f.a?t(f,hi(c,e),2):f["return"](e.B?
c.Ea:c.da)})},Le:function(e){c.dispatchEvent(qi(si,{state:e.name}))}});a&&this.zb(a,!0)}pa(W,xc);function qi(a,b){return new Q(a,b)}p=W.prototype;
p.destroy=function(){var a=this,b;return J(function(c){switch(c.a){case 1:if(a.g==ti)return c["return"]();a.g=ti;b=Bh(a.W,function(){return{node:a.da,payload:xh(),Sa:!1}});return t(c,new Promise(function(d){b.pb=function(){};b.nc=function(){d()};b.Va=function(){d()};b.onError=function(){d()};b.pc=function(){d()}}),2);case 2:return t(c,a.W.destroy(),3);case 3:a.b&&(a.b.release(),a.b=null);a.Ic=null;a.j=null;a.i=null;a.f=null;a.cc=null;if(!a.N){c.u(0);break}return t(c,a.N.destroy(),5);case 5:a.N=null,
w(c)}})};p.zb=function(a,b){b=void 0===b?!0:b;if(this.g==ti)return Promise.reject(ui());var c=xh();c.B=a;id()||(b=!1);var d=b?this.ta:this.Ea,e=Bh(this.W,function(){return{node:d,payload:c,Sa:!1}});e.pb=function(){};return vi(e)};p.detach=function(){var a=this;if(this.g==ti)return Promise.reject(ui());var b=Bh(this.W,function(){return{node:a.da,payload:xh(),Sa:!1}});b.pb=function(){};return vi(b)};
p.td=function(a){var b=this;a=void 0===a?!0:a;if(this.g==ti)return Promise.reject(ui());id()||(a=!1);var c=xh(),d=Bh(this.W,function(e){var f=e.B&&a?b.ta:e.B?b.Ea:b.da;c.B=e.B;return{node:f,payload:c,Sa:!1}});d.pb=function(){};return vi(d)};
p.load=function(a,b,c){var d=this;if(this.g==ti)return Promise.reject(ui());this.dispatchEvent(qi(wi));var e=xh();e.uri=a;e.qd=Date.now()/1E3;c&&(e.mimeType=c);void 0!==b&&(e.startTime=b);var f=xi(this,e)?this.Ca:this.J,g=Bh(this.W,function(h){if(null==h.B)return null;e.B=h.B;return{node:f,payload:e,Sa:!0}});this.f=new bi;g.pb=function(){};return new Promise(function(h,k){g.pc=function(){return k(new M(2,7,7002))};g.nc=function(){h();d.dispatchEvent(qi(yi))};g.Va=function(){return k(ui())};g.onError=
function(l){return k(l)}})};
function xi(a,b){if(!id())return!0;var c=b.mimeType,d=b.uri||"";c||(c={mp4:"video/mp4",m4v:"video/mp4",m4a:"audio/mp4",webm:"video/webm",weba:"audio/webm",mkv:"video/webm",ts:"video/mp2t",ogv:"video/ogg",ogg:"audio/ogg",mpg:"video/mpeg",mpeg:"video/mpeg",m3u8:"application/x-mpegurl",mp3:"audio/mpeg",aac:"audio/aac",flac:"audio/flac",wav:"audio/wav"}[Sf(d)]);return c?""==(b.B||kd()).canPlayType(c)?!1:id()&&(c in Rf||Sf(d)in Tf)?nd()&&a.i.streaming.useNativeHlsOnSafari:!0:!1}
function gi(a,b,c){null==b.B&&(b.B=c.B,a.b.l(b.B,"error",function(){var d=zi(a);d&&Ai(a,d)}));a.a=b.B;return Promise.resolve()}
function hi(a,b){var c,d,e,f,g,h,k,l,m;return J(function(n){switch(n.a){case 1:return a.g!=ti&&(a.g=ci),c=a.Jc.map(function(r){return r()}),a.Jc=[],t(n,Promise.all(c),2);case 2:a.dispatchEvent(qi(Bi));b.mimeType=null;b.startTime=null;b.uri=null;b.B&&(a.b.sa(b.B,"loadedmetadata"),a.b.sa(b.B,"playing"),a.b.sa(b.B,"pause"),a.b.sa(b.B,"ended"),a.b.sa(b.B,"ratechange"));a.Ba&&(a.Ba.release(),a.Ba=null);a.Yb&&(a.Yb.stop(),a.Yb=null);if(!a.m){n.u(3);break}return t(n,a.m.stop(),4);case 4:a.m=null,a.ac=null;
case 3:if(!a.j){n.u(5);break}return t(n,a.j.stop(),5);case 5:if(!a.c){n.u(7);break}return t(n,a.c.destroy(),8);case 8:a.c=null;case 7:a.A&&(a.A.release(),a.A=null);a.v&&(a.v.release(),a.v=null);if(!a.H){n.u(9);break}return t(n,a.H.destroy(),10);case 10:a.H=null;case 9:if(a.I)a.I.onAssetUnload();if(!b.B||!b.B.src){n.u(11);break}return t(n,new Promise(function(r){return(new N(r)).R(.1)}),12);case 12:b.B.removeAttribute("src"),b.B.load();case 11:if(!a.h){n.u(13);break}return t(n,a.h.destroy(),14);case 14:a.h=
null;case 13:a.xb=null;a.D=null;if(a.o){d=q(a.o.variants);for(e=d.next();!e.done;e=d.next())for(f=e.value,g=q([f.audio,f.video]),h=g.next();!h.done;h=g.next())(k=h.value)&&k.segmentIndex&&k.segmentIndex.release();l=q(a.o.textStreams);for(h=l.next();!h.done;h=l.next())m=h.value,m.segmentIndex&&m.segmentIndex.release()}a.o=null;a.f=new bi;a.Lc=null;Ci(a);w(n)}})}
function ii(a,b){var c,d,e,f;return J(function(g){if(1==g.a)return c=window.muxjs?new de:new ee,d=a.i.textDisplayFactory,e=Lb(d),a.Lc=d,f=Di(b.B,c,e,function(h,k,l){h=q(h);for(var m=h.next();!m.done;m=h.next())if(m=m.value,m.data&&m.cueTime&&m.frames){for(var n=m.cueTime+k,r=l,u=q(m.frames),v=u.next();!v.done;v=u.next())Ei(a,n,r,"ID3",v.value);if(a.I)a.I.onHlsTimedMetadata(m,n)}}),t(g,f.A,2);a.H=f;w(g)})}
function ji(a,b,c){var d,e,f,g;return J(function(h){if(1==h.a)return b.mimeType=c.mimeType,b.uri=c.uri,d=b.uri,e=a.N,a.xb=d,f=a,t(h,Qf(d,e,a.i.manifest.retryParameters,b.mimeType),2);f.ac=h.b;a.m=Lb(a.ac);g=yc(a.i.manifest);c.B&&"AUDIO"===c.B.nodeName&&(g.disableVideo=!0);a.m.configure(g);w(h)})}
function ki(a,b){var c=b.uri,d=a.N;a.bc=new Gg(function(){return a.jd()});Hg(a.bc,function(g){Fi(a,Gi,g);if(a.I)a.I.onDashTimedMetadata(g)});var e={networkingEngine:d,filter:function(g){return J(function(h){return h["return"](a.gb(g))})},makeTextStreamsForClosedCaptions:function(g){return Hi(a,g)},onTimelineRegionAdded:function(g){var h=a.bc;a:{var k=q(h.a);for(var l=k.next();!l.done;l=k.next())if(l=l.value,l.schemeIdUri==g.schemeIdUri&&l.id==g.id&&l.startTime==g.startTime&&l.endTime==g.endTime){k=
l;break a}k=null}null==k&&(h.a.add(g),h.b(g))},onEvent:function(g){return a.dispatchEvent(g)},onError:function(g){return Ai(a,g)}},f=Date.now()/1E3;return new oc(function(){var g,h,k,l;return J(function(m){if(1==m.a)return g=a,t(m,a.m.start(c,e),2);g.o=m.b;h=qi(Ii);a.dispatchEvent(h);if(0==a.o.variants.length)throw new M(2,4,4036);Ji(a.o);k=Date.now()/1E3;l=k-f;a.f.v=l;w(m)})}(),function(){return a.m.stop()})}
function li(a){var b,c;return J(function(d){if(1==d.a)return b=Date.now()/1E3,c=!0,a.h=Ki(a,{nb:a.N,onError:function(e){Ai(a,e)},oc:function(e){Li(a,e)},onExpirationUpdated:function(e,f){Mi(a,e,f)},onEvent:function(e){a.dispatchEvent(e);e.type==Ni&&c&&(c=!1,a.f.c=Date.now()/1E3-b)}}),a.h.configure(a.i.drm),t(d,yd(a.h,a.o.variants,a.o.offlineSessionIds),2);a.gb(a.o);w(d)})}
function mi(a,b,c){var d,e,f,g,h,k,l,m,n,r;return J(function(u){switch(u.a){case 1:return b.startTime=c.startTime,d=b.B,e=b.uri,a.xb=e,a.A=new wg({kc:function(){return b.B.playbackRate},od:function(v){b.B.playbackRate=v},Kd:function(v){b.B.currentTime+=v}}),f=function(){return Oi(a)},g=function(){return Pi(a)},a.b.l(d,"playing",f),a.b.l(d,"pause",f),a.b.l(d,"ended",f),a.b.l(d,"ratechange",g),h=a.i.abrFactory,a.j&&a.Ic==h||(a.Ic=h,a.j=Lb(h),"function"!=typeof a.j.playbackRateChanged&&(Eb("AbrManager",
"Please use an AbrManager with playbackRateChanged function."),a.j.playbackRateChanged=function(){}),a.j.configure(a.i.abr)),a.yb=new Hf(a.i.preferredAudioLanguage,a.i.preferredVariantRole,a.i.preferredAudioChannelCount),a.ca=a.i.preferredTextLanguage,Qi(a.o.presentationTimeline,a.i.playRangeStart,a.i.playRangeEnd),t(u,a.h.zb(d),2);case 2:a.j.init(function(v,A,y){A=void 0===A?!1:A;y=void 0===y?0:y;a.c&&v!=a.c.b&&($h(a.f.a,v,!0),fh(a.c,v,A,y),Ri(a))});a.v=Si(a,b.startTime);a.Ba=Ti(a);k=Math.max(a.o.minBufferTime,
a.i.streaming.rebufferingGoal);Ui(a,k);lf(a.o,a.i.preferredAudioChannelCount);a.c=Vi(a);a.c.configure(a.i.streaming);a.g=Wi;a.dispatchEvent(qi(Xi));l=Yi(a)?a.j.chooseVariant():null;$h(a.f.a,l,!0);fh(a.c,l,!1,0);(m=yf(a.o.textStreams,a.ca,a.Zb)[0]||null)&&ai(a.f.a,m,!0);m?(l.audio&&Zi(a,l.audio,m)&&(a.T=!0),a.T&&a.H.h.setTextVisibility(!0),$i(a)):a.T=!1;m&&(a.i.streaming.alwaysStreamText||a.Tc())&&gh(a.c,m);if(!a.i.streaming.startAtSegmentBoundary){u.u(3);break}n=a.v.g();return t(u,aj(l,n),4);case 4:r=
u.b,a.v.m(r);case 3:return t(u,a.c.start(),5);case 5:a.i.abr.enabled&&(a.j.enable(),bj(a)),a.gb(a.o),cj(a),Ri(a),Yi(a),a.o.variants.some(function(v){return v.primary}),a.b.ha(d,"loadedmetadata",function(){a.f.f=Date.now()/1E3-c.qd}),w(u)}})}
function ni(a,b){var c,d,e,f;return J(function(g){return 1==g.a?(c=Ob,d=Date.now()/1E3,e=!0,a.h=Ki(a,{nb:a.N,onError:function(h){Ai(a,h)},oc:function(h){Li(a,h)},onExpirationUpdated:function(h,k){Mi(a,h,k)},onEvent:function(h){a.dispatchEvent(h);h.type==Ni&&e&&(e=!1,a.f.c=Date.now()/1E3-d)}}),a.h.configure(a.i.drm),f={id:0,language:"und",primary:!1,audio:null,video:{id:0,originalId:null,createSegmentIndex:function(){return Promise.resolve()},segmentIndex:null,mimeType:"video/mp4",codecs:"",encrypted:!0,
drmInfos:[],keyIds:new Set,language:"und",label:null,type:c.Da,primary:!1,trickModeVideo:null,emsgSchemeIdUris:null,roles:[],channelsCount:null,audioSamplingRate:null,closedCaptions:null},bandwidth:100,allowedByApplication:!0,allowedByKeySystem:!0},t(g,yd(a.h,[f],[]),2)):t(g,a.h.zb(b.B),0)})}
function oi(a,b,c){function d(){return Oi(a)}b.uri=c.uri;b.startTime=c.startTime;a.xb=b.uri;a.v=new mg(b.B);null!=b.startTime&&a.v.m(b.startTime);a.A=new wg({kc:function(){return b.B.playbackRate},od:function(g){b.B.playbackRate=g},Kd:function(g){b.B.currentTime+=g}});Ui(a,a.i.streaming.rebufferingGoal);a.b.l(b.B,"playing",d);a.b.l(b.B,"pause",d);a.b.l(b.B,"ended",d);a.b.l(b.B,"ratechange",function(){return Pi(a)});"none"!=a.a.preload&&a.b.ha(a.a,"loadedmetadata",function(){a.f.f=Date.now()/1E3-c.qd});
a.a.audioTracks&&(a.b.l(a.a.audioTracks,"addtrack",function(){return cj(a)}),a.b.l(a.a.audioTracks,"removetrack",function(){return cj(a)}),a.b.l(a.a.audioTracks,"change",function(){return cj(a)}));a.a.textTracks&&(a.b.l(a.a.textTracks,"addtrack",function(g){cj(a);dj(a,g)}),a.b.l(a.a.textTracks,"removetrack",function(){return cj(a)}),a.b.l(a.a.textTracks,"change",function(){return cj(a)}));b.B.src=b.uri;(ld()||md("Web0S"))&&b.B.load();a.g=ej;a.dispatchEvent(qi(Xi));var e=new Pb;dg(a.a,HTMLMediaElement.HAVE_METADATA,
a.b,function(){e.resolve()});var f=!1;a.Jc.push(function(){f=!0});dg(a.a,HTMLMediaElement.HAVE_CURRENT_DATA,a.b,function(){var g;return J(function(h){if(1==h.a){if(f)return h["return"]();fj(a);g=gj(a);return g.find(function(k){return"disabled"!=k.mode})?h.u(2):t(h,new Promise(function(k){a.b.ha(a.a.textTracks,"change",k);(new N(k)).R(1)}),2)}if(f)return h["return"]();hj(a);w(h)})});a.a.error?e.reject(zi(a)):"none"==a.a.preload&&(Xa('With <video preload="none">, the browser will not load anything until play() is called. We are unable to measure load latency in a meaningful way, and we cannot provide track info yet. Please do not use preload="none" with Shaka Player.'),
e.resolve());a.b.ha(a.a,"error",function(){e.reject(zi(a))});return new oc(e,function(){e.reject(new M(2,7,7001));return Promise.resolve()})}function fj(a){var b=a.i.preferredAudioLanguage;if(""!=b){a.kd(b);var c=a.i.preferredVariantRole;""!=c&&a.kd(b,c)}}function hj(a){var b=a.i.preferredTextLanguage;if(""!=b){a.ld(b);var c=a.i.preferredTextRole;""!=c&&a.ld(b,c)}}
function dj(a,b){var c=b.track;"metadata"==c.kind&&(c.mode="hidden",a.b.l(c,"cuechange",function(){if(c.activeCues)for(var d=q(c.activeCues),e=d.next();!e.done;e=d.next())if(e=e.value,Ei(a,e.startTime,e.endTime,e.type,e.value),a.I)a.I.onCueMetadataChange(e.value)}),(new N(function(){var d=ij(a);d=q(d);for(var e=d.next();!e.done;e=d.next())e.value.mode="hidden"})).Qb().R(.5))}function Ei(a,b,c,d,e){a.dispatchEvent(qi(jj,{startTime:b,endTime:c,Of:d,payload:e}))}
function Ji(a){function b(c){return c.video&&c.audio||c.video&&c.video.codecs.includes(",")}a.variants.some(b)&&(a.variants=a.variants.filter(b))}function Ki(a,b){return new rd(b,a.i.drm.updateExpirationTime)}function ei(a){return new Gc(function(b,c){a.j&&a.j.segmentDownloaded(b,c)})}
function Si(a,b){return new ng(a.a,a.o,a.i.streaming,b,function(){a.Ba&&zg(a.Ba,!0);if(a.c)for(var c=a.c,d=c.s.jc(),e=c.i.smallGapLimit,f=q(c.a.keys()),g=f.next();!g.done;g=f.next()){g=g.value;var h=c.a.get(g);h.la=null;var k=c.s.L;"text"==g?(k=k.c,k=null==k.a||null==k.b?!1:d>=k.a&&d<k.b):(k=Te(k,g),k=ge(k,d,e));k||(null!=Ue(c.s.L,g)&&jh(c,h),h.ia&&(h.ia.abort(),h.ia=null),"text"===g&&c.s.L.v.c())}a.D&&kj(a)},function(c){return a.dispatchEvent(c)})}
function Ti(a){var b=new Ig(a.bc);Jg(b,function(d){Fi(a,lj,d)},function(d){Fi(a,mj,d)},function(d,e){e||(Fi(a,lj,d),Fi(a,mj,d))});var c=new yg(a.a);c.a.add(b);return c}function Ui(a,b){a.D=new Lf;a.D.a=Nf;Of(a.D,b,Math.min(.5,b/2));Ci(a);a.Yb=(new N(function(){kj(a)})).ra(.25)}
function kj(a){switch(a.g){case ej:if(a.a.ended)var b=!0;else{var c=fe(a.a.buffered);b=null!=c&&c>=a.a.duration-1}break;case Wi:a:if(a.a.ended||Re(a.H))b=!0;else{if(a.o.presentationTimeline.S()){c=a.o.presentationTimeline.La();var d=fe(a.a.buffered);if(null!=d&&d>=c){b=!0;break a}}b=!1}break;default:b=!1}d=he(a.a.buffered,a.a.currentTime);c=a.D;var e=b,f=c.b.get(c.a);b=c.a;d=e||d>=f?Mf:Nf;c.a=d;b!=d&&Ci(a)}function Di(a,b,c,d){return new Ke(a,b,c,d)}
function Vi(a){return new Vg(a.o,{jc:function(){return a.v.g()},getBandwidthEstimate:function(){return a.j.getBandwidthEstimate()},L:a.H,nb:a.N,onError:function(b){return Ai(a,b)},onEvent:function(b){return a.dispatchEvent(b)},Me:function(){a.m&&a.m.update&&a.m.update()},cd:function(){a.v&&a.v.v();kj(a)}})}
p.configure=function(a,b){2==arguments.length&&"string"==typeof a&&(a=Qh(a,b));a.manifest&&a.manifest.dash&&"defaultPresentationDelay"in a.manifest.dash&&(Eb("manifest.dash.defaultPresentationDelay configuration","Please Use manifest.defaultPresentationDelay instead."),a.manifest.defaultPresentationDelay=a.manifest.dash.defaultPresentationDelay,delete a.manifest.dash.defaultPresentationDelay);var c=Uh(this.i,a,di(this));nj(this);return c};
function nj(a){if(a.m){var b=yc(a.i.manifest);a.a&&"AUDIO"===a.a.nodeName&&(b.disableVideo=!0);a.m.configure(b)}a.h&&a.h.configure(a.i.drm);if(a.c){a.c.configure(a.i.streaming);try{a.gb(a.o)}catch(f){Ai(a,f)}a.j&&Yi(a);b=a.c.b;!b||b.allowedByApplication&&b.allowedByKeySystem||oj(a)}if(a.H&&(b=a.i.textDisplayFactory,a.Lc!=b)){var c=Lb(b),d=a.H,e=d.h;d.h=c;e&&(c.setTextVisibility(e.isTextVisible()),e.destroy());d.c&&(d.c.c=c);a.Lc=b;a.c&&(b=a.c,(c=b.a.get("text"))&&eh(b,c.stream,!0,0,!0))}a.j&&(a.j.configure(a.i.abr),
a.i.abr.enabled?a.j.enable():a.j.disable(),bj(a));a.D&&(b=a.i.streaming.rebufferingGoal,a.o&&(b=Math.max(b,a.o.minBufferTime)),Of(a.D,b,Math.min(.5,b/2)))}p.getConfiguration=function(){var a=di(this);Uh(a,this.i,di(this));return a};p.Ve=function(){for(var a in this.i)delete this.i[a];Uh(this.i,di(this),di(this));nj(this)};p.pe=function(){return this.g};p.te=function(){return this.a};p.Fb=function(){return this.N};p.Qc=function(){return this.xb};
p.Dd=function(){Ya("getAdManager","Shaka Player's ad features are currently in BETA and are NOT yet covered by semantic versioning compatibility guarantees.  The API may change at any time!");return this.I};p.S=function(){return this.o?this.o.presentationTimeline.S():this.a&&this.a.src?Infinity==this.a.duration:!1};p.Ua=function(){return this.o?this.o.presentationTimeline.Ua():!1};
p.Ge=function(){if(this.o){var a=this.o.variants;return a.length?!a[0].video:!1}return this.a&&this.a.src?this.a.videoTracks?0==this.a.videoTracks.length:0==this.a.videoHeight:!1};p.jd=function(){if(this.o){var a=this.o.presentationTimeline;return{start:a.kb(),end:a.Fa()}}return this.a&&this.a.src&&(a=this.a.seekable,a.length)?{start:a.start(0),end:a.end(a.length-1)}:{start:0,end:0}};p.keySystem=function(){return Md(this.drmInfo())};p.drmInfo=function(){return this.h?this.h.c:null};
p.Eb=function(){return this.h?this.h.Eb():Infinity};p.Sc=function(){return this.D?this.D.a==Nf:!1};p.ve=function(){return this.a?this.A?this.A.b:1:0};p.ff=function(a){0==a?Xa("A trick play rate of 0 is unsupported!"):(this.a.paused&&this.a.play(),this.A.set(a),this.g==Wi&&(this.j.playbackRateChanged(a),dh(this.c,1<Math.abs(a))))};p.ee=function(){this.g==ej&&this.A.set(1);this.g==Wi&&(this.A.set(1),this.j.playbackRateChanged(1),dh(this.c,!1))};
p.Rc=function(){if(this.o){for(var a=this.c?this.c.b:null,b=[],c=q(this.o.variants),d=c.next();!d.done;d=c.next())if(d=d.value,wf(d)){var e=qf(d);e.active=d==a;b.push(e)}return b}return this.a&&this.a.audioTracks?Array.from(this.a.audioTracks).map(function(f){return uf(f)}):[]};
p.lc=function(){if(this.o){for(var a=this.c?this.c.c:null,b=[],c=q(this.o.textStreams),d=c.next();!d.done;d=c.next()){d=d.value;var e=rf(d);e.active=d==a;b.push(e)}return b}return this.a&&this.a.src&&this.a.textTracks?gj(this).map(function(f){var g=vf(f);g.active="disabled"!=f.mode;g.type="text";g.originalTextId=f.id;"captions"==f.kind&&(g.mimeType="application/cea-608");f.kind&&(g.roles=[f.kind]);return g}):[]};
p.Sd=function(a){if(this.o&&this.c){var b=this.o.textStreams.find(function(d){return d.id==a.id});b&&b!=this.c.c&&(ai(this.f.a,b,!1),gh(this.c,b),pj(this),this.ca=b.language)}else if(this.a&&this.a.src&&this.a.textTracks){b=gj(this);b=q(b);for(var c=b.next();!c.done;c=b.next())c=c.value,sf(c)==a.id?c.mode=this.T?"showing":"hidden":c.mode="disabled";pj(this)}};
p.We=function(a,b,c){b=void 0===b?!1:b;c=void 0===c?0:c;if(this.o&&this.c){this.i.abr.enabled&&Xa("Changing tracks while abr manager is enabled will likely result in the selected track being overriden. Consider disabling abr before calling selectVariantTrack().");var d=this.o.variants.find(function(e){return e.id==a.id});d&&wf(d)&&d!=this.c.b&&($h(this.f.a,d,!1),fh(this.c,d,b,c),qj(this),this.yb=new Gf(d),Yi(this))}else if(this.a&&this.a.audioTracks){b=Array.from(this.a.audioTracks);b=q(b);for(c=
b.next();!c.done;c=b.next())c=c.value,sf(c)==a.id&&(c.enabled=!0);qj(this)}};p.le=function(){return rj(this.Rc())};p.De=function(){return rj(this.lc())};p.ke=function(){return Array.from(sj(this.Rc()))};p.Ce=function(){return Array.from(sj(this.lc()))};
p.kd=function(a,b){if(this.o&&this.v)this.yb=new Hf(a,b||"",0,""),oj(this);else if(this.a&&this.a.audioTracks){var c=Array.from(this.a.audioTracks),d=R(a),e=null,f=null;c=q(c);for(var g=c.next();!g.done;g=c.next()){g=g.value;var h=uf(g);R(h.language)==d&&(e=g,b?h.roles.includes(b)&&(f=g):0==h.roles.length&&(f=g))}f?(f.enabled=!0,qj(this)):e&&(e.enabled=!0,qj(this))}};
p.ld=function(a,b){if(this.o&&this.v){this.ca=a;this.Zb=b||"";var c=yf(this.o.textStreams,this.ca,this.Zb)[0]||null;c&&c!=this.c.c&&(ai(this.f.a,c,!1),this.i.streaming.alwaysStreamText||this.Tc())&&(gh(this.c,c),pj(this))}else{var d=R(a);(c=this.lc().find(function(e){return R(e.language)==d&&(!b||e.roles.includes(b))}))&&this.Sd(c)}};
p.Xe=function(a){if(this.o&&this.v){for(var b=null,c=q(this.o.variants),d=c.next();!d.done;d=c.next())if(d=d.value,d.audio.label==a){b=d;break}null!=b&&(this.yb=new Hf(b.language,"",0,a),oj(this))}};p.Tc=function(){var a=this.T;return this.H?this.H.h.isTextVisible():this.a&&this.a.src&&this.a.textTracks?gj(this).some(function(b){return"showing"==b.mode}):a};
function gj(a){return Array.from(a.a.textTracks).filter(function(b){return"metadata"!=b.kind&&"chapters"!=b.kind&&"Shaka Player TextTrack"!=b.label})}function ij(a){return Array.from(a.a.textTracks).filter(function(b){return"metadata"==b.kind})}
p.cf=function(a){a=!!a;if(this.T!=a){this.T=a;if(this.g==Wi)this.H.h.setTextVisibility(a),this.i.streaming.alwaysStreamText||(a?this.c.c||(a=yf(this.o.textStreams,this.ca,this.Zb),0<a.length&&(gh(this.c,a[0]),pj(this))):ch(this.c));else if(this.a&&this.a.src&&this.a.textTracks){var b=gj(this);b=q(b);for(var c=b.next();!c.done;c=b.next())c=c.value,"disabled"!=c.mode&&(c.mode=a?"showing":"hidden")}$i(this)}};
p.xe=function(){if(!this.S())return null;var a=this.W.f,b=0;if(this.v)b=this.v.g();else if(a){if(null==a.startTime)return new Date;b=a.startTime}return this.o?new Date(1E3*(this.o.presentationTimeline.f+b)):this.a&&this.a.getStartDate?(a=this.a.getStartDate(),isNaN(a.getTime())?null:new Date(a.getTime()+1E3*b)):null};
p.Ed=function(){if(!this.S())return null;if(this.o)return new Date(1E3*this.o.presentationTimeline.f);if(this.a&&this.a.getStartDate){var a=this.a.getStartDate();return isNaN(a.getTime())?null:a}return null};p.ic=function(){if(this.g==Wi)return this.H.ic();var a={total:[],audio:[],video:[],text:[]};this.g==ej&&(a.total=ie(this.a.buffered));return a};
p.getStats=function(){if(this.g!=Wi&&this.g!=ej)return{width:NaN,height:NaN,streamBandwidth:NaN,decodedFrames:NaN,droppedFrames:NaN,corruptedFrames:NaN,estimatedBandwidth:NaN,loadLatency:NaN,manifestTimeSeconds:NaN,drmTimeSeconds:NaN,playTime:NaN,pauseTime:NaN,bufferingTime:NaN,licenseTime:NaN,liveLatency:NaN,maxSegmentDuration:NaN,switchHistory:[],stateHistory:[]};Oi(this);var a=this.a;if(a.getVideoPlaybackQuality){a=a.getVideoPlaybackQuality();var b=this.f,c=Number(a.totalVideoFrames);b.J=Number(a.droppedVideoFrames);
b.I=c;this.f.H=Number(a.corruptedVideoFrames)}this.h?(a=this.h,a=a.H?a.H:NaN):a=NaN;this.f.D=a;if(this.g==Wi){if(a=this.c.b)this.f.h=(this.A?this.A.b:1)*a.bandwidth;a&&a.video&&(b=this.f,c=a.video.height||NaN,b.M=a.video.width||NaN,b.j=c);this.S()&&(a=this.Ed().valueOf()+1E3*this.jd().end,this.f.m=(Date.now()-a)/1E3);this.o&&this.o.presentationTimeline&&(this.f.A=this.o.presentationTimeline.a);a=this.j.getBandwidthEstimate();this.f.g=a}var d=this.f;a=d.M;b=d.j;c=d.h;var e=d.I,f=d.J,g=d.H,h=d.g,k=
d.f,l=d.v,m=d.c,n=Xh(d.b,"playing"),r=Xh(d.b,"paused"),u=Xh(d.b,"buffering"),v=d.D,A=d.m,y=d.A,z=Yh(d.b),D=[];d=q(d.a.a);for(var B=d.next();!B.done;B=d.next())B=B.value,D.push({timestamp:B.timestamp,id:B.id,type:B.type,fromAdaptation:B.fromAdaptation,bandwidth:B.bandwidth});return{width:a,height:b,streamBandwidth:c,decodedFrames:e,droppedFrames:f,corruptedFrames:g,estimatedBandwidth:h,loadLatency:k,manifestTimeSeconds:l,drmTimeSeconds:m,playTime:n,pauseTime:r,bufferingTime:u,licenseTime:v,liveLatency:A,
maxSegmentDuration:y,stateHistory:z,switchHistory:D}};
p.addTextTrack=function(a,b,c,d,e,f){if(this.g==ej)throw Error("State error!");if(this.g!=Wi)throw Error("State error!");var g=this.o.presentationTimeline.getDuration();if(Infinity==g)throw new M(1,4,4033);a={id:this.vd++,originalId:null,createSegmentIndex:function(){return Promise.resolve()},segmentIndex:ug(0,g,[a]),mimeType:d,codecs:e||"",kind:c,encrypted:!1,drmInfos:[],keyIds:new Set,language:b,label:f||null,type:"text",primary:!1,trickModeVideo:null,emsgSchemeIdUris:null,roles:[],channelsCount:null,
audioSamplingRate:null,closedCaptions:null};this.o.textStreams.push(a);cj(this);return rf(a)};p.nd=function(a,b){this.xc.width=a;this.xc.height=b};p.hd=function(){if(this.g==Wi){var a=this.c;if(a.F.a)a=!1;else if(a.g)a=!1;else{for(var b=q(a.a.values()),c=b.next();!c.done;c=b.next())c=c.value,c.Ib&&(c.Ib=!1,bh(a,c,.1));a=!0}}else a=!1;return a};
p.qe=function(){Xa("Shaka Player's internal Manifest structure is NOT covered by semantic versioning compatibility guarantees.  It may change at any time!  Please consider filing a feature request for whatever you use getManifest() for.");return this.o};p.re=function(){return this.ac};
function di(a){var b=Sh();b.streaming.failureCallback=function(c){var d=[1001,1002,1003];a.S()&&d.includes(c.code)&&(c.severity=1,a.hd())};b.textDisplayFactory=function(){return a.cc?new Ih(a.a,a.cc):new Dh(a.a)};return b}p.Vd=function(a){this.cc=a};
function Hi(a,b){for(var c=new Set,d=q(b.textStreams),e=d.next();!e.done;e=d.next())e=e.value,"application/cea-608"==e.mimeType&&c.add(e.originalId);d=q(b.variants);for(e=d.next();!e.done;e=d.next())if((e=e.value.video)&&e.closedCaptions)for(var f=q(e.closedCaptions.keys()),g=f.next();!g.done;g=f.next())if(g=g.value,!c.has(g)){var h=new vg;h={id:a.vd++,originalId:g,createSegmentIndex:function(){return Promise.resolve()},segmentIndex:h,mimeType:"application/cea-608",codecs:"",kind:"caption",encrypted:!1,
drmInfos:[],keyIds:new Set,language:e.closedCaptions.get(g),label:null,type:"text",primary:!1,trickModeVideo:null,emsgSchemeIdUris:null,roles:e.roles,channelsCount:null,audioSamplingRate:null,closedCaptions:null};b.textStreams.push(h);c.add(g)}}
p.gb=function(a){of(this.h,this.c?this.c.b:null,a);if(!a.variants.some(wf))throw new M(2,4,4032);for(var b=this.i.restrictions,c=this.xc,d=!1,e=q(a.variants),f=e.next();!f.done;f=e.next()){f=f.value;var g=f.allowedByApplication;f.allowedByApplication=nf(f,b,c);g!=f.allowedByApplication&&(d=!0)}d&&this.c&&cj(this);if(b=this.h?this.h.c:null)for(c=q(a.variants),d=c.next();!d.done;d=c.next())for(d=d.value,d=q((d.video?d.video.drmInfos:[]).concat(d.audio?d.audio.drmInfos:[])),e=d.next();!e.done;e=d.next())if(e=
e.value,e.keySystem==b.keySystem)for(e=q(e.initData||[]),f=e.next();!f.done;f=e.next())f=f.value,Hd(this.h,f.initDataType,f.initData);tj(this,a)};
function aj(a,b){var c,d,e,f,g;return J(function(h){if(1==h.a)return c=a.audio,d=a.video,e=function(k,l){var m,n;return J(function(r){if(1==r.a)return k?t(r,k.createSegmentIndex(),2):r["return"](null);m=k.segmentIndex[Symbol.iterator]().seek(l);if(!m)return r["return"](null);n=m.startTime;return r["return"](n)})},t(h,e(c,b),2);if(3!=h.a)return f=h.b,t(h,e(d,b),3);g=h.b;return null!=g&&null!=f?h["return"](Math.max(g,f)):null!=g?h["return"](g):null!=f?h["return"](f):h["return"](b)})}
function Ci(a){var b=a.Sc();if(a.f&&a.D&&a.v){var c=a.A;c.f=b;xg(c);Oi(a)}a.dispatchEvent(qi(uj,{buffering:b}))}function Pi(a){var b=a.a.playbackRate;0!=b&&(a.A&&a.A.set(b),b=qi(vj),a.dispatchEvent(b))}function Oi(a){if(a.f&&a.D){var b=a.f.b;a.D.a==Nf?Wh(b,"buffering"):a.a.paused?Wh(b,"paused"):a.a.ended?Wh(b,"ended"):Wh(b,"playing")}}
function Yi(a){try{tj(a,a.o)}catch(c){return Ai(a,c),!1}var b=a.o.variants.filter(function(c){return wf(c)});b=a.yb.create(b);a.j.setVariants(Array.from(b.values()));return!0}function oj(a){var b;if(b=Yi(a)?a.j.chooseVariant():null){if(b==a.c.b)return;$h(a.f.a,b,!0);fh(a.c,b,!0,0);qj(a)}Ri(a)}function Zi(a,b,c){a=R(a.i.preferredTextLanguage);b=R(b.language);c=R(c.language);return df(c,a)&&!df(b,c)}function Ri(a){var b=qi(wj);xj(a,b)}function cj(a){var b=qi(yj);xj(a,b)}
function qj(a){var b=qi(zj);xj(a,b)}function pj(a){var b=qi(Aj);xj(a,b)}function $i(a){var b=qi(Bj);xj(a,b)}function bj(a){var b=qi(Cj,{Pf:a.i.abr.enabled});xj(a,b)}function Ai(a,b){if(a.g!=ti){var c=qi(Dj,{detail:b});a.dispatchEvent(c);c.defaultPrevented&&(b.handled=!0)}}function Fi(a,b,c){a.dispatchEvent(qi(b,{detail:{schemeIdUri:c.schemeIdUri,value:c.value,startTime:c.startTime,endTime:c.endTime,id:c.id,eventElement:c.eventElement}}))}
function zi(a){if(!a.a.error)return null;var b=a.a.error.code;if(1==b)return null;var c=a.a.error.msExtendedCode;c&&(0>c&&(c+=Math.pow(2,32)),c=c.toString(16));return new M(2,3,3016,b,c,a.a.error.message)}
function Li(a,b){if(a.c){var c=Object.keys(b),d=1==c.length&&"00"==c[0],e=!1;if(c.length){c=q(a.o.variants);for(var f=c.next();!f.done;f=c.next()){f=f.value;var g=[];f.audio&&g.push(f.audio);f.video&&g.push(f.video);g=q(g);for(var h=g.next();!h.done;h=g.next()){var k=h.value;h=f.allowedByKeySystem;if(k.keyIds.size){f.allowedByKeySystem=!0;k=q(k.keyIds);for(var l=k.next();!l.done;l=k.next())l=l.value,l=b[d?"00":l],f.allowedByKeySystem=f.allowedByKeySystem&&!!l&&!Ej.includes(l)}h!=f.allowedByKeySystem&&
(e=!0)}}}e&&Yi(a);(d=a.c.b)&&!d.allowedByKeySystem&&oj(a);e&&cj(a)}}function Mi(a,b,c){if(a.m&&a.m.onExpirationUpdated)a.m.onExpirationUpdated(b,c);b=qi(Fj);a.dispatchEvent(b)}function Qi(a,b,c){0<b&&(a.S()||a.Ud(b));b=a.getDuration();c<b&&(a.S()||a.za(c))}
function tj(a,b){var c=a.h?bd(a.h.T):{},d=Object.keys(c);d=d.length&&"00"==d[0];for(var e=!1,f=!1,g=new Set,h=new Set,k=q(b.variants),l=k.next();!l.done;l=k.next()){l=l.value;var m=[];l.audio&&m.push(l.audio);l.video&&m.push(l.video);m=q(m);for(var n=m.next();!n.done;n=m.next())if(n=n.value,n.keyIds.size){n=q(n.keyIds);for(var r=n.next();!r.done;r=n.next()){r=r.value;var u=c[d?"00":r];u?Ej.includes(u)&&h.add(u):g.add(r)}}l.allowedByApplication?l.allowedByKeySystem&&(e=!0):f=!0}if(!e)throw c={hasAppRestrictions:f,
missingKeys:Array.from(g),restrictedKeyStatuses:Array.from(h)},new M(2,4,4012,c);}function xj(a,b){J(function(c){if(1==c.a)return t(c,Promise.resolve(),2);a.g!=ti&&a.dispatchEvent(b);w(c)})}function sj(a){var b=new Set;a=q(a);for(var c=a.next();!c.done;c=a.next())c=c.value,c.language?b.add(R(c.language)):b.add("und");return b}
function rj(a){var b=new Map;a=q(a);for(var c=a.next();!c.done;c=a.next()){var d=c.value;c="und";var e=[];d.language&&(c=R(d.language));"variant"==d.type?e=d.audioRoles:e=d.roles;e&&e.length||(e=[""]);b.has(c)||b.set(c,new Set);d=q(e);for(e=d.next();!e.done;e=d.next())e=e.value,b.get(c).add(e)}var f=[];b.forEach(function(g,h){for(var k=q(g),l=k.next();!l.done;l=k.next())f.push({language:h,role:l.value})});return f}function ui(){return new M(2,7,7E3)}
function pi(a,b,c,d,e,f){return d==a&&e.B==f.B&&e.uri==f.uri&&e.mimeType==f.mimeType?b:c}function xh(){return{B:null,mimeType:null,startTime:null,qd:NaN,uri:null}}function vi(a){return new Promise(function(b,c){a.Va=function(){return c(ui())};a.nc=function(){return b()};a.onError=function(d){return c(d)};a.pc=function(){return c(ui())}})}K("shaka.Player",W);W.prototype.setVideoContainer=W.prototype.Vd;W.prototype.getManifestParserFactory=W.prototype.re;W.prototype.getManifest=W.prototype.qe;
W.prototype.retryStreaming=W.prototype.hd;W.prototype.setMaxHardwareResolution=W.prototype.nd;W.prototype.addTextTrack=W.prototype.addTextTrack;W.prototype.getStats=W.prototype.getStats;W.prototype.getBufferedInfo=W.prototype.ic;W.prototype.getPresentationStartTimeAsDate=W.prototype.Ed;W.prototype.getPlayheadTimeAsDate=W.prototype.xe;W.prototype.setTextTrackVisibility=W.prototype.cf;W.prototype.isTextTrackVisible=W.prototype.Tc;W.prototype.selectVariantsByLabel=W.prototype.Xe;
W.prototype.selectTextLanguage=W.prototype.ld;W.prototype.selectAudioLanguage=W.prototype.kd;W.prototype.getTextLanguages=W.prototype.Ce;W.prototype.getAudioLanguages=W.prototype.ke;W.prototype.getTextLanguagesAndRoles=W.prototype.De;W.prototype.getAudioLanguagesAndRoles=W.prototype.le;W.prototype.selectVariantTrack=W.prototype.We;W.prototype.selectTextTrack=W.prototype.Sd;W.prototype.getTextTracks=W.prototype.lc;W.prototype.getVariantTracks=W.prototype.Rc;W.prototype.cancelTrickPlay=W.prototype.ee;
W.prototype.trickPlay=W.prototype.ff;W.prototype.getPlaybackRate=W.prototype.ve;W.prototype.isBuffering=W.prototype.Sc;W.prototype.getExpiration=W.prototype.Eb;W.prototype.drmInfo=W.prototype.drmInfo;W.prototype.keySystem=W.prototype.keySystem;W.prototype.seekRange=W.prototype.jd;W.prototype.isAudioOnly=W.prototype.Ge;W.prototype.isInProgress=W.prototype.Ua;W.prototype.isLive=W.prototype.S;W.prototype.getAdManager=W.prototype.Dd;W.prototype.getAssetUri=W.prototype.Qc;
W.prototype.getNetworkingEngine=W.prototype.Fb;W.prototype.getMediaElement=W.prototype.te;W.prototype.getLoadMode=W.prototype.pe;W.prototype.resetConfiguration=W.prototype.Ve;W.prototype.getConfiguration=W.prototype.getConfiguration;W.prototype.configure=W.prototype.configure;W.prototype.load=W.prototype.load;W.prototype.unload=W.prototype.td;W.prototype.detach=W.prototype.detach;W.prototype.attach=W.prototype.zb;
W.probeSupport=function(){var a,b,c,d,e,f;return J(function(g){if(1==g.a)return t(g,Xd(),2);a=g.b;var h={};if(id()){for(var k in Rf)h[k]=!0;for(var l in Tf)h[l]=!0}k={mpd:"application/dash+xml",m3u8:"application/x-mpegurl",ism:"application/vnd.ms-sstr+xml"};l=q(["application/dash+xml","application/x-mpegurl","application/vnd.apple.mpegurl","application/vnd.ms-sstr+xml"]);for(var m=l.next();!m.done;m=l.next())m=m.value,h[m]=id()?!!Rf[m]:jd(m);for(var n in k)h[n]=id()?!!Tf[n]:jd(k[n]);b=h;h={};n=q('video/mp4; codecs="avc1.42E01E",video/mp4; codecs="avc3.42E01E",video/mp4; codecs="hev1.1.6.L93.90",video/mp4; codecs="hvc1.1.6.L93.90",video/mp4; codecs="hev1.2.4.L153.B0"; eotf="smpte2084",video/mp4; codecs="hvc1.2.4.L153.B0"; eotf="smpte2084",video/mp4; codecs="vp9",video/mp4; codecs="vp09.00.10.08",video/mp4; codecs="av01.0.01M.08",audio/mp4; codecs="mp4a.40.2",audio/mp4; codecs="ac-3",audio/mp4; codecs="ec-3",audio/mp4; codecs="opus",audio/mp4; codecs="flac",video/webm; codecs="vp8",video/webm; codecs="vp9",video/webm; codecs="vp09.00.10.08",audio/webm; codecs="vorbis",audio/webm; codecs="opus",video/mp2t; codecs="avc1.42E01E",video/mp2t; codecs="avc3.42E01E",video/mp2t; codecs="hvc1.1.6.L93.90",video/mp2t; codecs="mp4a.40.2",video/mp2t; codecs="ac-3",video/mp2t; codecs="ec-3",text/vtt,application/mp4; codecs="wvtt",application/ttml+xml,application/mp4; codecs="stpp"'.split(","));
for(k=n.next();!k.done;k=n.next())k=k.value,h[k]=id()?Ee(k)?!0:MediaSource.isTypeSupported(k)||hc(k):jd(k),l=k.split(";")[0],h[l]=h[l]||h[k];c=h;d={manifest:b,media:c,drm:a};e=Gj;for(f in e)d[f]=e[f]();return g["return"](d)})};
W.isBrowserSupported=function(){if(!(window.Promise&&window.Uint8Array&&Array.prototype.forEach))return!1;var a=od();return a&&12>a||!(window.MediaKeys&&window.navigator&&window.navigator.requestMediaKeySystemAccess&&window.MediaKeySystemAccess&&window.MediaKeySystemAccess.prototype.getConfiguration)?!1:id()?!0:jd("application/x-mpegurl")};W.setAdManagerFactory=function(a){fi=a};W.registerSupportPlugin=function(a,b){Gj[a]=b};W.prototype.destroy=W.prototype.destroy;
var Cj="abrstatuschanged",wj="adaptation",uj="buffering",Ni="drmsessionupdate",uh="emsg",Dj="error",Fj="expirationupdated",yi="loaded",wi="loading",Ii="manifestparsed",jj="metadata",ri="onstatechange",si="onstateidle",vj="ratechange",Xi="streaming",Aj="textchanged",Bj="texttrackvisibility",Gi="timelineregionadded",lj="timelineregionenter",mj="timelineregionexit",yj="trackschanged",Bi="unloading",zj="variantchanged",Hj={nf:Cj,pf:wj,qf:uj,rf:Ni,tf:uh,Error:Dj,uf:Fj,wf:"largegap",xf:yi,yf:wi,zf:Ii,Metadata:jj,
Af:ri,Bf:si,Cf:vj,Df:Xi,Ef:Aj,Ff:Bj,Gf:Gi,Hf:lj,If:mj,Jf:yj,Kf:Bi,Lf:zj},ti=0,ci=1,Wi=2,ej=3;W.LoadMode={DESTROYED:ti,NOT_LOADED:ci,MEDIA_SOURCE:Wi,SRC_EQUALS:ej};W.version="v3.0.7";var Ij=["3","0"];Fb=new function(a){this.a=a;this.c=Gb;this.b=Hb}(new Db(Number(Ij[0]),Number(Ij[1])));var Ej=["output-restricted","internal-error"],Gj={},fi=null;function Jj(){this.a=[];this.f=this.b=this.c=0};function X(a,b){var c=this;this.c=a;this.a=b;this.f=!1;this.g=this.a.getVolume();this.b=new Tc;this.b.l(this.a,google.ima.AdEvent.Type.PAUSED,function(){c.f=!0});this.b.l(this.a,google.ima.AdEvent.Type.RESUMED,function(){c.f=!1})}p=X.prototype;p.getDuration=function(){return this.c.getDuration()};p.getRemainingTime=function(){return this.a.getRemainingTime()};p.isPaused=function(){return this.f};p.isSkippable=function(){return 0<=this.c.getSkipTimeOffset()};
p.getTimeUntilSkippable=function(){var a=this.c.getSkipTimeOffset();a=this.getRemainingTime()-a;return Math.max(a,0)};p.canSkipNow=function(){return this.a.getAdSkippableState()};p.skip=function(){return this.a.skip()};p.pause=function(){return this.a.pause()};p.play=function(){return this.a.resume()};p.getVolume=function(){return this.a.getVolume()};p.setVolume=function(a){return this.a.setVolume(a)};p.isMuted=function(){return 0==this.a.getVolume()};
p.resize=function(a,b){this.a.resize(a,b,document.fullscreenElement?google.ima.ViewMode.FULLSCREEN:google.ima.ViewMode.NORMAL)};p.setMuted=function(a){a?(this.g=this.getVolume(),this.setVolume(0)):this.setVolume(this.g)};p.getSequenceLength=function(){var a=this.c.getAdPodInfo();return null==a?1:a.getTotalAds()};p.getPositionInSequence=function(){var a=this.c.getAdPodInfo();return null==a?1:a.getAdPosition()};p.release=function(){this.a=this.c=null};K("shaka.ads.ClientSideAd",X);
X.prototype.release=X.prototype.release;X.prototype.getPositionInSequence=X.prototype.getPositionInSequence;X.prototype.getSequenceLength=X.prototype.getSequenceLength;X.prototype.setMuted=X.prototype.setMuted;X.prototype.resize=X.prototype.resize;X.prototype.isMuted=X.prototype.isMuted;X.prototype.setVolume=X.prototype.setVolume;X.prototype.getVolume=X.prototype.getVolume;X.prototype.play=X.prototype.play;X.prototype.pause=X.prototype.pause;X.prototype.skip=X.prototype.skip;
X.prototype.canSkipNow=X.prototype.canSkipNow;X.prototype.getTimeUntilSkippable=X.prototype.getTimeUntilSkippable;X.prototype.isSkippable=X.prototype.isSkippable;X.prototype.isPaused=X.prototype.isPaused;X.prototype.getRemainingTime=X.prototype.getRemainingTime;X.prototype.getDuration=X.prototype.getDuration;function Kj(a,b,c,d){var e=this;this.h=a;this.a=b;this.m=NaN;this.f=d;this.j=null;this.b=new Tc;google.ima.settings.setLocale(c);a=new google.ima.AdDisplayContainer(this.h,this.a);a.initialize();this.g=new google.ima.AdsLoader(a);this.g.getSettings().setPlayerType("shaka-player");this.g.getSettings().setPlayerVersion("v3.0.7");this.c=null;this.b.ha(this.g,google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,function(f){Lj(e,f)});this.b.l(this.g,google.ima.AdEvent.Type.AD_ERROR,function(f){Mj(e,
f)});this.a.onended=function(){e.g.contentComplete()}}Kj.prototype.stop=function(){this.c&&this.c.stop();this.h&&Hh(this.h)};function Mj(a,b){b.getError();Nj(a,null);a.f(new Q("ad-cue-points-changed",{cuepoints:[]}))}
function Lj(a,b){a.f(new Q("ads-loaded",{loadTime:Date.now()/1E3-a.m}));a.c=b.getAdsManager(a.a);a.f(new Q("ima-ad-manager-loaded",{imaAdsManager:a.c}));var c=a.c.getCuePoints();if(c.length){var d=[];c=q(c);for(var e=c.next();!e.done;e=c.next())d.push(new Oj(e.value));a.f(new Q("ad-cue-points-changed",{cuepoints:d}))}Pj(a);try{a.c.init(a.a.offsetWidth,a.a.offsetHeight,document.fullscreenElement?google.ima.ViewMode.FULLSCREEN:google.ima.ViewMode.NORMAL),a.b.l(a.a,"loadeddata",function(){a.c.resize(a.a.offsetWidth,
a.a.offsetHeight,document.fullscreenElement?google.ima.ViewMode.FULLSCREEN:google.ima.ViewMode.NORMAL)}),a.c.start()}catch(f){Nj(a,null)}}
function Pj(a){a.b.l(a.c,google.ima.AdErrorEvent.Type.AD_ERROR,function(b){Mj(a,b)});a.b.l(a.c,google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED,function(b){Qj(a,b)});a.b.l(a.c,google.ima.AdEvent.Type.STARTED,function(b){Qj(a,b)});a.b.l(a.c,google.ima.AdEvent.Type.FIRST_QUARTILE,function(b){a.f(new Q("ad-first-quartile",{originalEvent:b}))});a.b.l(a.c,google.ima.AdEvent.Type.MIDPOINT,function(b){a.f(new Q("ad-midpoint",{originalEvent:b}))});a.b.l(a.c,google.ima.AdEvent.Type.THIRD_QUARTILE,function(b){a.f(new Q("ad-third-quartile",
{originalEvent:b}))});a.b.l(a.c,google.ima.AdEvent.Type.COMPLETE,function(b){a.f(new Q("ad-complete",{originalEvent:b}))});a.b.l(a.c,google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED,function(b){Nj(a,b)});a.b.l(a.c,google.ima.AdEvent.Type.ALL_ADS_COMPLETED,function(b){Nj(a,b)});a.b.l(a.c,google.ima.AdEvent.Type.SKIPPED,function(b){a.f(new Q("ad-skipped",{originalEvent:b}))});a.b.l(a.c,google.ima.AdEvent.Type.VOLUME_CHANGED,function(b){a.f(new Q("ad-volume-changed",{originalEvent:b}))});a.b.l(a.c,google.ima.AdEvent.Type.VOLUME_MUTED,
function(b){a.f(new Q("ad-muted",{originalEvent:b}))});a.b.l(a.c,google.ima.AdEvent.Type.PAUSED,function(b){a.j.f=!0;a.f(new Q("ad-paused",{originalEvent:b}))});a.b.l(a.c,google.ima.AdEvent.Type.RESUMED,function(b){a.j.f=!1;a.f(new Q("ad-resumed",{originalEvent:b}))});a.b.l(a.c,google.ima.AdEvent.Type.SKIPPABLE_STATE_CHANGED,function(b){a.f(new Q("ad-skip-state-changed",{originalEvent:b}))});a.b.l(a.c,google.ima.AdEvent.Type.CLICK,function(){a.f(new Q("ad-clicked"))});a.b.l(a.c,google.ima.AdEvent.Type.AD_PROGRESS,
function(b){a.f(new Q("ad-progress",{originalEvent:b}))});a.b.l(a.c,google.ima.AdEvent.Type.AD_BUFFERING,function(b){a.f(new Q("ad-buffering",{originalEvent:b}))});a.b.l(a.c,google.ima.AdEvent.Type.IMPRESSION,function(b){a.f(new Q("ad-impression",{originalEvent:b}))});a.b.l(a.c,google.ima.AdEvent.Type.DURATION_CHANGE,function(b){a.f(new Q("ad-duration-changed",{originalEvent:b}))});a.b.l(a.c,google.ima.AdEvent.Type.USER_CLOSE,function(b){a.f(new Q("ad-closed",{originalEvent:b}))});a.b.l(a.c,google.ima.AdEvent.Type.LOADED,
function(b){a.f(new Q("ad-loaded",{originalEvent:b}))});a.b.l(a.c,google.ima.AdEvent.Type.ALL_ADS_COMPLETED,function(b){a.f(new Q("all-ads-completed",{originalEvent:b}))});a.b.l(a.c,google.ima.AdEvent.Type.LINEAR_CHANGED,function(b){a.f(new Q("ad-linear-changed",{originalEvent:b}))});a.b.l(a.c,google.ima.AdEvent.Type.AD_METADATA,function(b){a.f(new Q("ad-metadata",{originalEvent:b}))});a.b.l(a.c,google.ima.AdEvent.Type.LOG,function(b){a.f(new Q("ad-recoverable-error",{originalEvent:b}))});a.b.l(a.c,
google.ima.AdEvent.Type.AD_BREAK_READY,function(b){a.f(new Q("ad-break-ready",{originalEvent:b}))});a.b.l(a.c,google.ima.AdEvent.Type.INTERACTION,function(b){a.f(new Q("ad-interaction",{originalEvent:b}))})}function Qj(a,b){var c=b.getAd();a.j=new X(c,a.c);a.f(new Q("ad-started",{ad:a.j,sdkAdObject:c,originalEvent:b}));a.h.setAttribute("ad-active","true");a.a.pause()}function Nj(a,b){a.f(new Q("ad-stopped",{originalEvent:b}));a.h.removeAttribute("ad-active");a.a.play()};function Y(a,b){this.c=a;this.b=null;this.a=b}p=Y.prototype;p.getDuration=function(){return this.b?this.b.duration:-1};p.getRemainingTime=function(){return this.b?this.b.duration-this.b.currentTime:-1};p.isPaused=function(){return this.a.paused};p.isSkippable=function(){return this.c.isSkippable()};p.getTimeUntilSkippable=function(){var a=this.c.getSkipTimeOffset();a=this.getRemainingTime()-a;return Math.max(a,0)};p.canSkipNow=function(){return 0==this.getTimeUntilSkippable()};
p.skip=function(){this.a.currentTime+=this.getRemainingTime()};p.pause=function(){return this.a.pause()};p.play=function(){return this.a.play()};p.getVolume=function(){return this.a.volume};p.setVolume=function(a){this.a.volume=a};p.isMuted=function(){return this.a.muted};p.resize=function(){};p.setMuted=function(a){this.a.muted=a};p.getSequenceLength=function(){var a=this.c.getAdPodInfo();return null==a?1:a.getTotalAds()};
p.getPositionInSequence=function(){var a=this.c.getAdPodInfo();return null==a?1:a.getAdPosition()};p.release=function(){this.a=this.b=this.c=null};K("shaka.ads.ServerSideAd",Y);Y.prototype.release=Y.prototype.release;Y.prototype.getPositionInSequence=Y.prototype.getPositionInSequence;Y.prototype.getSequenceLength=Y.prototype.getSequenceLength;Y.prototype.setMuted=Y.prototype.setMuted;Y.prototype.resize=Y.prototype.resize;Y.prototype.isMuted=Y.prototype.isMuted;Y.prototype.setVolume=Y.prototype.setVolume;
Y.prototype.getVolume=Y.prototype.getVolume;Y.prototype.play=Y.prototype.play;Y.prototype.pause=Y.prototype.pause;Y.prototype.skip=Y.prototype.skip;Y.prototype.canSkipNow=Y.prototype.canSkipNow;Y.prototype.getTimeUntilSkippable=Y.prototype.getTimeUntilSkippable;Y.prototype.isSkippable=Y.prototype.isSkippable;Y.prototype.isPaused=Y.prototype.isPaused;Y.prototype.getRemainingTime=Y.prototype.getRemainingTime;Y.prototype.getDuration=Y.prototype.getDuration;function Rj(a,b,c,d){var e=this;this.v=a;this.a=b;this.g=null;this.H=NaN;this.f=d;this.D=!1;this.A=this.h=this.j=null;this.m="";this.b=new Tc;a=new google.ima.dai.api.UiSettings;a.setLocale(c);this.c=new google.ima.dai.api.StreamManager(this.a,this.v,a);this.b.l(this.c,google.ima.dai.api.StreamEvent.Type.LOADED,function(f){Sj(e,f)});this.b.l(this.c,google.ima.dai.api.StreamEvent.Type.ERROR,function(){e.m.length?e.g.resolve(e.m):e.g.reject("IMA Stream request returned an error and there was no backup asset uri provided.");
e.g=null});this.b.l(this.c,google.ima.dai.api.StreamEvent.Type.AD_BREAK_STARTED,function(){});this.b.l(this.c,google.ima.dai.api.StreamEvent.Type.STARTED,function(f){f=f.getAd();e.h=new Y(f,e.a);e.A&&(e.h.b=e.A);e.f(new Q("ad-started",{ad:e.h}));e.v.setAttribute("ad-active","true")});this.b.l(this.c,google.ima.dai.api.StreamEvent.Type.AD_BREAK_ENDED,function(){e.v.removeAttribute("ad-active");var f=e.a.currentTime;e.j&&e.j>f&&(e.a.currentTime=e.j,e.j=null)});this.b.l(this.c,google.ima.dai.api.StreamEvent.Type.AD_PROGRESS,
function(f){e.A=f.getStreamData().adProgressData;e.h&&(e.h.b=e.A)});this.b.l(this.c,google.ima.dai.api.StreamEvent.Type.FIRST_QUARTILE,function(){e.f(new Q("ad-first-quartile"))});this.b.l(this.c,google.ima.dai.api.StreamEvent.Type.MIDPOINT,function(){e.f(new Q("ad-midpoint"))});this.b.l(this.c,google.ima.dai.api.StreamEvent.Type.THIRD_QUARTILE,function(){e.f(new Q("ad-third-quartile"))});this.b.l(this.c,google.ima.dai.api.StreamEvent.Type.COMPLETE,function(){e.f(new Q("ad-complete"));e.f(new Q("ad-stopped"));
e.v.removeAttribute("ad-active");e.h=null});this.b.l(this.c,google.ima.dai.api.StreamEvent.Type.SKIPPED,function(){e.f(new Q("ad-skipped"));e.f(new Q("ad-stopped"))});this.b.l(this.c,google.ima.dai.api.StreamEvent.Type.CUEPOINTS_CHANGED,function(f){var g=f.getStreamData();f=[];g=q(g.cuepoints);for(var h=g.next();!h.done;h=g.next())h=h.value,f.push(new Oj(h.start,h.end));e.f(new Q("ad-cue-points-changed",{cuepoints:f}))})}Rj.prototype.stop=function(){this.c.reset();this.m="";this.j=null};
Rj.prototype.onCueMetadataChange=function(a){if(a.key&&a.data){var b={};b[a.key]=a.data;this.c.onTimedMetadata(b)}};function Sj(a,b){a.f(new Q("ads-loaded",{loadTime:Date.now()/1E3-a.H}));var c=b.getStreamData().url;a.g.resolve(c);a.g=null;a.D||a.b.l(a.a,"seeked",function(){var d=a.a.currentTime;if(0!=d){a.c.streamTimeForContentTime(d);var e=a.c.previousCuePointForStreamTime(d);e&&!e.played&&(a.j=d,a.a.currentTime=e.start)}})};function Z(){xc.call(this);this.a=this.b=null;this.f=new Jj;this.c=navigator.language}pa(Z,xc);p=Z.prototype;p.setLocale=function(a){this.c=a};p.initClientSide=function(a,b){var c=this;if(!window.google||!google.ima||!google.ima.AdsLoader)throw new M(2,10,1E4);this.b=new Kj(a,b,this.c,function(d){if(d&&d.type)switch(d.type){case "ads-loaded":c.f.a.push(d.loadTime);break;case "ad-started":c.f.c++;break;case "ad-complete":c.f.b++;break;case "ad-skipped":c.f.f++}c.dispatchEvent(d)})};
p.onAssetUnload=function(){this.b&&this.b.stop();this.dispatchEvent(new Q("ad-stopped"));this.f=new Jj};p.requestClientSideAds=function(a){if(!this.b)throw new M(1,10,10001);var b=this.b;b.m=Date.now()/1E3;b.g.requestAds(a)};
p.initServerSide=function(a,b){var c=this;if(!window.google||!google.ima||!google.ima.dai)throw new M(2,10,10002);this.a=new Rj(a,b,this.c,function(d){if(d&&d.type)switch(d.type){case "ads-loaded":c.f.a.push(d.loadTime);break;case "ad-started":c.f.c++;break;case "ad-complete":c.f.b++;break;case "ad-skipped":c.f.f++}c.dispatchEvent(d)})};
p.requestServerSideStream=function(a,b){b=void 0===b?"":b;if(!this.a)throw new M(1,10,10003);a.adTagParameters||(a.adTagParameters={});var c=a.adTagParameters;(c.mpt||c.mpv)&&Xa('You have attempted to set "mpt" and/or "mpv" parameters of the ad tag. Please note that those parameters are used for Shaka adoption tracking and will be overriden.');a.adTagParameters.mpt="Shaka Player";a.adTagParameters.mpv="v3.0.7";c=this.a;var d=b;c.g?c=Promise.reject(new M(1,10,10004)):(a instanceof google.ima.dai.api.LiveStreamRequest&&
(c.D=!0),c.g=new Pb,c.c.requestStream(a),c.m=d||"",c.H=Date.now()/1E3,c=c.g);return c};p.replaceServerSideAdTagParameters=function(a){if(!this.a)throw new M(1,10,10003);(a.mpt||a.mpv)&&Xa('You have attempted to set "mpt" and/or "mpv" parameters of the ad tag. Please note that those parameters are used for Shaka adoption tracking and will be overriden.');a.mpt="Shaka Player";a.mpv="v3.0.7";this.a.c.replaceAdTagParameters(a)};
p.getStats=function(){var a=this.f;return{loadTimes:a.a,started:a.c,playedCompletely:a.b,skipped:a.f}};p.onDashTimedMetadata=function(a){if(this.a&&"urn:google:dai:2018"==a.schemeIdUri){var b=a.schemeIdUri,c=a.eventElement?a.eventElement.getAttribute("messageData"):null;this.a.c.processMetadata(b,c,a.startTime)}};p.onHlsTimedMetadata=function(a,b){this.a&&this.a.c.processMetadata("ID3",a.data,b)};p.onCueMetadataChange=function(a){if(this.a)this.a.onCueMetadataChange(a)};K("shaka.ads.AdManager",Z);
Z.prototype.onCueMetadataChange=Z.prototype.onCueMetadataChange;Z.prototype.onHlsTimedMetadata=Z.prototype.onHlsTimedMetadata;Z.prototype.onDashTimedMetadata=Z.prototype.onDashTimedMetadata;Z.prototype.getStats=Z.prototype.getStats;Z.prototype.replaceServerSideAdTagParameters=Z.prototype.replaceServerSideAdTagParameters;Z.prototype.requestServerSideStream=Z.prototype.requestServerSideStream;Z.prototype.initServerSide=Z.prototype.initServerSide;Z.prototype.requestClientSideAds=Z.prototype.requestClientSideAds;
Z.prototype.onAssetUnload=Z.prototype.onAssetUnload;Z.prototype.initClientSide=Z.prototype.initClientSide;Z.prototype.setLocale=Z.prototype.setLocale;function Oj(a,b){this.start=a;this.end=void 0===b?null:b}Z.ADS_LOADED="ads-loaded";Z.AD_STARTED="ad-started";Z.AD_FIRST_QUARTILE="ad-first-quartile";Z.AD_MIDPOINT="ad-midpoint";Z.AD_THIRD_QUARTILE="ad-third-quartile";Z.AD_COMPLETE="ad-complete";Z.AD_STOPPED="ad-stopped";Z.AD_SKIPPED="ad-skipped";Z.AD_VOLUME_CHANGED="ad-volume-changed";Z.AD_MUTED="ad-muted";
Z.AD_PAUSED="ad-paused";Z.AD_RESUMED="ad-resumed";Z.AD_SKIP_STATE_CHANGED="ad-skip-state-changed";Z.CUEPOINTS_CHANGED="ad-cue-points-changed";Z.IMA_AD_MANAGER_LOADED="ima-ad-manager-loaded";Z.AD_CLICKED="ad-clicked";Z.AD_PROGRESS="ad-progress";Z.AD_BUFFERING="ad-buffering";Z.AD_IMPRESSION="ad-impression";Z.AD_DURATION_CHANGED="ad-duration-changed";Z.AD_CLOSED="ad-closed";Z.AD_LOADED="ad-loaded";Z.ALL_ADS_COMPLETED="all-ads-completed";Z.AD_LINEAR_CHANGED="ad-linear-changed";Z.AD_METADATA="ad-metadata";
Z.AD_RECOVERABLE_ERROR="ad-recoverable-error";Z.AD_BREAK_READY="ad-break-ready";Z.AD_INTERACTION="ad-interaction";fi=function(){return new Z};function Tj(a){return JSON.stringify(a,function(b,c){if("function"!=typeof c){if(c instanceof Event||c instanceof Q){var d={};for(f in c){var e=c[f];e&&"object"==typeof e?"detail"==f&&(d[f]=e):f in Event||(d[f]=e)}return d}if(c instanceof Error){var f=new Set(["name","message","stack"]);for(d in c)f.add(d);e=q(Object.getOwnPropertyNames(c));for(d=e.next();!d.done;d=e.next())f.add(d.value);e={};f=q(f);for(d=f.next();!d.done;d=f.next())d=d.value,e[d]=c[d];f={__type__:"Error",contents:e}}else if(c instanceof
TimeRanges)for(f={__type__:"TimeRanges",length:c.length,start:[],end:[]},d=q(ie(c)),e=d.next();!e.done;e=d.next()){e=e.value;var g=e.end;f.start.push(e.start);f.end.push(g)}else f=c instanceof Uint8Array?{__type__:"Uint8Array",entries:Array.from(c)}:"number"==typeof c?isNaN(c)?"NaN":isFinite(c)?c:0>c?"-Infinity":"Infinity":c;return f}})}
function Uj(a){return JSON.parse(a,function(b,c){if("NaN"==c)var d=NaN;else if("-Infinity"==c)d=-Infinity;else if("Infinity"==c)d=Infinity;else if(c&&"object"==typeof c&&"TimeRanges"==c.__type__)d=Vj(c);else if(c&&"object"==typeof c&&"Uint8Array"==c.__type__)d=new Uint8Array(c.entries);else if(c&&"object"==typeof c&&"Error"==c.__type__){d=c.contents;var e=Error(d.message),f;for(f in d)e[f]=d[f];d=e}else d=c;return d})}
function Vj(a){return{length:a.length,start:function(b){return a.start[b]},end:function(b){return a.end[b]}}}
var Wj="ended play playing pause pausing ratechange seeked seeking timeupdate volumechange".split(" "),Xj="buffered currentTime duration ended loop muted paused playbackRate seeking videoHeight videoWidth volume".split(" "),Yj=["loop","playbackRate"],Zj=["pause","play"],ak={getAssetUri:2,getAudioLanguages:2,getAudioLanguagesAndRoles:2,getBufferedInfo:2,getConfiguration:2,getExpiration:2,getPlaybackRate:2,getTextLanguages:2,getTextLanguagesAndRoles:2,getTextTracks:2,getStats:5,getVariantTracks:2,isAudioOnly:10,
isBuffering:1,isInProgress:1,isLive:10,isTextTrackVisible:1,keySystem:10,seekRange:1,getLoadMode:10},bk={getPlayheadTimeAsDate:1,getPresentationStartTimeAsDate:20},ck=[["getConfiguration","configure"]],dk=[["isTextTrackVisible","setTextTrackVisibility"]],ek="addTextTrack cancelTrickPlay configure resetConfiguration retryStreaming selectAudioLanguage selectTextLanguage selectTextTrack selectVariantTrack selectVariantsByLabel setTextTrackVisibility trickPlay".split(" "),fk=["attach","detach","load",
"unload"];function gk(a,b,c,d,e,f){var g=this;this.T=a;this.f=new N(b);this.W=c;this.m=!1;this.D=d;this.M=e;this.I=f;this.b=this.h=!1;this.J="";this.j=null;this.v=function(){return hk(g)};this.A=function(h,k){var l=Uj(k);switch(l.type){case "event":var m=l.targetName;l=l.event;l=new Q(l.type,l);g.D(m,l);break;case "update":m=l.update;for(var n in m){l=g.a[n]||{};for(var r in m[n])l[r]=m[n][r]}g.m&&(g.W(),g.m=!1);break;case "asyncComplete":if(n=l.id,l=l.error,r=g.c[n],delete g.c[n],r)if(l){n=new M(l.severity,
l.category,l.code);for(m in l)n[m]=l[m];r.reject(n)}else r.resolve()}};this.a={video:{},player:{}};this.H=0;this.c={};this.g=null;ik.add(this)}p=gk.prototype;p.destroy=function(){ik["delete"](this);jk(this);kk&&lk(this);this.f&&(this.f.stop(),this.f=null);this.M=this.D=null;this.b=this.h=!1;this.A=this.v=this.g=this.c=this.a=this.j=null;return Promise.resolve()};p.fa=function(){return this.b};p.fd=function(){return this.J};
p.init=function(){if(window.chrome&&chrome.cast&&chrome.cast.isAvailable&&this.T.length){this.h=!0;this.f.Qb();var a=new chrome.cast.SessionRequest(this.T);a=new chrome.cast.ApiConfig(a,function(b){for(var c=q(ik),d=c.next();!d.done;d=c.next())mk(d.value,b)},function(b){for(var c=q(ik),d=c.next();!d.done;d=c.next())d=d.value,nk="available"==b,d.f.Qb()},"origin_scoped");chrome.cast.initialize(a,function(){},function(){});nk&&this.f.R(ok);(a=kk)&&a.status!=chrome.cast.SessionStatus.STOPPED?mk(this,
a):kk=null}};p.md=function(a){this.j=a;this.b&&pk(this,{type:"appData",appData:this.j})};p.cast=function(a){var b=this;return J(function(c){if(!b.h)throw new M(1,8,8E3);if(!nk)throw new M(1,8,8001);if(b.b)throw new M(1,8,8002);b.g=new Pb;chrome.cast.requestSession(function(d){return qk(b,a,d)},function(d){return rk(b,d)});return t(c,b.g,0)})};function sk(a){if(a.b){var b=a.I();chrome.cast.requestSession(function(c){return qk(a,b,c)},function(c){return rk(a,c)})}}
p.hb=function(){if(this.b){jk(this);if(kk){lk(this);try{kk.stop(function(){},function(){})}catch(a){}kk=null}hk(this)}};
p.get=function(a,b){var c=this;if("video"==a){if(Zj.includes(b))return function(d){for(var e=[],f=0;f<arguments.length;++f)e[f]=arguments[f];return c.Pd.apply(c,[a,b].concat(ia(e)))}}else if("player"==a){if(bk[b]&&!this.get("player","isLive")())return function(){};if(ek.includes(b))return function(d){for(var e=[],f=0;f<arguments.length;++f)e[f]=arguments[f];return c.Pd.apply(c,[a,b].concat(ia(e)))};if(fk.includes(b))return function(d){for(var e=[],f=0;f<arguments.length;++f)e[f]=arguments[f];return c.Se.apply(c,
[a,b].concat(ia(e)))};if(ak[b])return function(){return c.a[a][b]}}return this.a[a][b]};p.set=function(a,b,c){this.a[a][b]=c;pk(this,{type:"set",targetName:a,property:b,value:c})};function qk(a,b,c){kk=c;c.addUpdateListener(a.v);c.addMessageListener("urn:x-cast:com.google.shaka.v2",a.A);hk(a);pk(a,{type:"init",initState:b,appData:a.j});a.g.resolve()}
function rk(a,b){var c=8003;switch(b.code){case "cancel":c=8004;break;case "timeout":c=8005;break;case "receiver_unavailable":c=8006}a.g.reject(new M(2,8,c,b))}p.Pd=function(a,b,c){for(var d=[],e=2;e<arguments.length;++e)d[e-2]=arguments[e];pk(this,{type:"call",targetName:a,methodName:b,args:d})};p.Se=function(a,b,c){for(var d=[],e=2;e<arguments.length;++e)d[e-2]=arguments[e];e=new Pb;var f=this.H.toString();this.H++;this.c[f]=e;try{pk(this,{type:"asyncCall",targetName:a,methodName:b,args:d,id:f})}catch(g){e.reject(g)}return e};
function mk(a,b){var c=a.I();a.g=new Pb;a.m=!0;qk(a,c,b)}function lk(a){var b=kk;b.removeUpdateListener(a.v);b.removeMessageListener("urn:x-cast:com.google.shaka.v2",a.A)}function hk(a){var b=kk?"connected"==kk.status:!1;if(a.b&&!b){a.M();for(var c in a.a)a.a[c]={};jk(a)}a.b=b;a.J=b?kk.receiver.friendlyName:"";a.f.Qb()}function jk(a){for(var b in a.c){var c=a.c[b];delete a.c[b];c.reject(new M(1,7,7E3))}}
function pk(a,b){var c=Tj(b),d=kk;try{d.sendMessage("urn:x-cast:com.google.shaka.v2",c,function(){},$a)}catch(e){throw c=new M(2,8,8005,e),d=new Q("error",{detail:c}),a.D("player",d),a.hb(),c;}}var ok=.02,nk=!1,kk=null,ik=new Set;window.__onGCastApiAvailable=function(a){if(a){a=q(ik);for(var b=a.next();!b.done;b=a.next())b.value.init()}};function tk(a,b,c){xc.call(this);var d=this;this.f=a;this.c=b;this.b=this.j=this.g=this.m=this.h=null;this.A=c;this.v=new Map;this.a=new gk(c,function(){return uk(d)},function(){return vk(d)},function(e,f){return wk(d,e,f)},function(){return xk(d)},function(){return yk(d)});zk(this)}pa(tk,xc);p=tk.prototype;
p.destroy=function(a){a&&this.a.hb();this.b&&(this.b.release(),this.b=null);a=[];this.c&&(a.push(this.c.destroy()),this.c=null);this.a&&(a.push(this.a.destroy()),this.a=null);this.m=this.h=this.f=null;return Promise.all(a)};p.Ee=function(){return this.h};p.we=function(){return this.m};p.de=function(){return this.a.h&&nk};p.fa=function(){return this.a.fa()};p.fd=function(){return this.a.fd()};
p.cast=function(){var a=this,b;return J(function(c){return 1==c.a?(b=yk(a),t(c,a.a.cast(b),2)):a.c?t(c,a.c.td(),0):c["return"]()})};p.md=function(a){this.a.md(a)};p.df=function(){sk(this.a)};p.hb=function(){this.a.hb()};
p.fe=function(a){var b=this;return J(function(c){if(1==c.a){if(a==b.A)return c["return"]();b.A=a;b.a.hb();return t(c,b.a.destroy(),2)}b.a=null;b.a=new gk(a,function(){return uk(b)},function(){return vk(b)},function(d,e){return wk(b,d,e)},function(){return xk(b)},function(){return yk(b)});b.a.init();w(c)})};
function zk(a){a.a.init();a.b=new Tc;for(var b=q(Wj),c=b.next();!c.done;c=b.next())a.b.l(a.f,c.value,function(f){a.a.fa()||(f=new Q(f.type,f),a.g.dispatchEvent(f))});for(var d in Hj)a.b.l(a.c,Hj[d],function(f){a.a.fa()||a.j.dispatchEvent(f)});a.h={};b={};for(var e in a.f)b.tb=e,Object.defineProperty(a.h,b.tb,{configurable:!1,enumerable:!0,get:function(f){return function(){return Ak(a,f.tb)}}(b),set:function(f){return function(g){var h=f.tb;a.a.fa()?a.a.set("video",h,g):a.f[h]=g}}(b)}),b={tb:b.tb};
a.m={};Bk(a,function(f){Object.defineProperty(a.m,f,{configurable:!1,enumerable:!0,get:function(){return Ck(a,f)}})});Dk(a);a.g=new xc;a.g.$b=a.h;a.j=new xc;a.j.$b=a.m}function Dk(a){var b=new Map;Bk(a,function(c,d){if(b.has(d)){var e=b.get(d);c.length<e.length?a.v.set(c,e):a.v.set(e,c)}else b.set(d,c)})}
function Bk(a,b){function c(l){return"constructor"==l||"function"!=typeof d[l]?!1:!e.has(l)}var d=a.c,e=new Set;for(f in d)c(f)&&(e.add(f),b(f,d[f]));var f=Object.getPrototypeOf(d);for(var g=Object.getPrototypeOf({});f&&f!=g;){for(var h=q(Object.getOwnPropertyNames(f)),k=h.next();!k.done;k=h.next())k=k.value,c(k)&&(e.add(k),b(k,d[k]));f=Object.getPrototypeOf(f)}}
function yk(a){var b={video:{},player:{},playerAfterLoad:{},manifest:a.c.Qc(),startTime:null};a.f.pause();for(var c=q(Yj),d=c.next();!d.done;d=c.next())d=d.value,b.video[d]=a.f[d];a.f.ended||(b.startTime=a.f.currentTime);c=q(ck);for(d=c.next();!d.done;d=c.next()){var e=d.value;d=e[1];e=a.c[e[0]]();b.player[d]=e}c=q(dk);for(d=c.next();!d.done;d=c.next())e=d.value,d=e[1],e=a.c[e[0]](),b.playerAfterLoad[d]=e;return b}function uk(a){var b=new Q("caststatuschanged");a.dispatchEvent(b)}
function vk(a){var b=new Q(a.h.paused?"pause":"play");a.g.dispatchEvent(b)}
function xk(a){for(var b=q(ck),c=b.next();!c.done;c=b.next()){var d=c.value;c=d[1];d=a.a.get("player",d[0])();a.c[c](d)}var e=a.a.get("player","getAssetUri")();c=a.a.get("video","ended");b=Promise.resolve();var f=a.f.autoplay;d=null;c||(d=a.a.get("video","currentTime"));e&&(a.f.autoplay=!1,b=a.c.load(e,d));var g={};c=q(Yj);for(d=c.next();!d.done;d=c.next())d=d.value,g[d]=a.a.get("video",d);b.then(function(){if(a.f){for(var h=q(Yj),k=h.next();!k.done;k=h.next())k=k.value,a.f[k]=g[k];h=q(dk);for(k=
h.next();!k.done;k=h.next()){var l=k.value;k=l[1];l=a.a.get("player",l[0])();a.c[k](l)}a.f.autoplay=f;e&&a.f.play()}},function(h){h=new Q(Dj,{detail:h});a.c.dispatchEvent(h)})}
function Ak(a,b){if("addEventListener"==b)return function(d,e,f){return a.g.addEventListener(d,e,f)};if("removeEventListener"==b)return function(d,e,f){return a.g.removeEventListener(d,e,f)};if(a.a.fa()&&0==Object.keys(a.a.a.video).length){var c=a.f[b];if("function"!=typeof c)return c}return a.a.fa()?a.a.get("video",b):(c=a.f[b],"function"==typeof c&&(c=c.bind(a.f)),c)}
function Ck(a,b){a.v.has(b)&&(b=a.v.get(b));if("addEventListener"==b)return function(c,d,e){return a.j.addEventListener(c,d,e)};if("removeEventListener"==b)return function(c,d,e){return a.j.removeEventListener(c,d,e)};if("getMediaElement"==b)return function(){return a.h};if("getSharedConfiguration"==b)return a.a.get("player","getConfiguration");if("getNetworkingEngine"==b)return function(){return a.c.Fb()};if("getAdManager"==b)return function(){return a.c.Dd()};if("setVideoContainer"==b)return function(c){return a.c.Vd(c)};
if(a.a.fa()){if("getManifest"==b||"drmInfo"==b)return function(){Xa(b+"() does not work while casting!");return null};if("attach"==b||"detach"==b)return function(){Xa(b+"() does not work while casting!");return Promise.resolve()}}return a.a.fa()&&0==Object.keys(a.a.a.video).length&&ak[b]||!a.a.fa()?a.c[b].bind(a.c):a.a.get("player",b)}function wk(a,b,c){a.a.fa()&&("video"==b?a.g.dispatchEvent(c):"player"==b&&a.j.dispatchEvent(c))}K("shaka.cast.CastProxy",tk);tk.prototype.changeReceiverId=tk.prototype.fe;
tk.prototype.forceDisconnect=tk.prototype.hb;tk.prototype.suggestDisconnect=tk.prototype.df;tk.prototype.setAppData=tk.prototype.md;tk.prototype.cast=tk.prototype.cast;tk.prototype.receiverName=tk.prototype.fd;tk.prototype.isCasting=tk.prototype.fa;tk.prototype.canCast=tk.prototype.de;tk.prototype.getPlayer=tk.prototype.we;tk.prototype.getVideo=tk.prototype.Ee;tk.prototype.destroy=tk.prototype.destroy;function Ek(a,b,c,d){xc.call(this);var e=this;this.a=a;this.c=b;this.b=new Tc;this.J={video:a,player:b};this.D=c||function(){};this.M=d||function(f){return f};this.f=null;this.H=!1;this.j=!0;this.h=0;this.A=!1;this.v=!0;this.m=this.g=null;this.I=new N(function(){Fk(e)});Gk(this)}pa(Ek,xc);p=Ek.prototype;p.isConnected=function(){return this.H};p.He=function(){return this.j};p.$e=function(a){this.f=a};p.ie=function(){this.f=null};
p.af=function(a){this.f||(this.f={metadataType:cast.receiver.media.MetadataType.GENERIC});this.f.title=a};p.Ze=function(a){this.f||(this.f={metadataType:cast.receiver.media.MetadataType.GENERIC});this.f.images=[{url:a}]};p.Ye=function(a){this.f||(this.f={});this.f.artist=a;this.f.metadataType=cast.receiver.media.MetadataType.MUSIC_TRACK};
p.destroy=function(){var a=this,b,c;return J(function(d){if(1==d.a)return a.b&&(a.b.release(),a.b=null),b=[],a.c&&(b.push(a.c.destroy()),a.c=null),a.I&&(a.I.stop(),a.I=null),a.a=null,a.J=null,a.D=null,a.H=!1,a.j=!0,a.g=null,a.m=null,t(d,Promise.all(b),2);c=cast.receiver.CastReceiverManager.getInstance();c.stop();w(d)})};
function Gk(a){var b=cast.receiver.CastReceiverManager.getInstance();b.onSenderConnected=function(){return Hk(a)};b.onSenderDisconnected=function(){return Hk(a)};b.onSystemVolumeChanged=function(){var e=cast.receiver.CastReceiverManager.getInstance().getSystemVolume();e&&Ik(a,{type:"update",update:{video:{volume:e.level,muted:e.muted}}},a.g);Ik(a,{type:"event",targetName:"video",event:{type:"volumechange"}},a.g)};a.m=b.getCastMessageBus("urn:x-cast:com.google.cast.media");a.m.onMessage=function(e){return Jk(a,
e)};a.g=b.getCastMessageBus("urn:x-cast:com.google.shaka.v2");a.g.onMessage=function(e){return Kk(a,e)};b.start();b=q(Wj);for(var c=b.next();!c.done;c=b.next())a.b.l(a.a,c.value,function(e){return Lk(a,"video",e)});for(var d in Hj)a.b.l(a.c,Hj[d],function(e){return Lk(a,"player",e)});cast.__platform__&&cast.__platform__.canDisplayType('video/mp4; codecs="avc1.640028"; width=3840; height=2160')?a.c.nd(3840,2160):a.c.nd(1920,1080);a.b.l(a.a,"loadeddata",function(){a.A=!0});a.b.l(a.c,"loading",function(){a.j=
!1;Mk(a)});a.b.l(a.a,"playing",function(){a.j=!1;Mk(a)});a.b.l(a.a,"pause",function(){Mk(a)});a.b.l(a.c,"unloading",function(){a.j=!0;Mk(a)});a.b.l(a.a,"ended",function(){(new N(function(){a.a&&a.a.ended&&(a.j=!0,Mk(a))})).R(Nk)})}function Hk(a){a.h=0;a.v=!0;a.H=0!=cast.receiver.CastReceiverManager.getInstance().getSenders().length;Mk(a)}
function Mk(a){var b;J(function(c){if(1==c.a)return t(c,Promise.resolve(),2);if(!a.c)return c["return"]();b=new Q("caststatuschanged");a.dispatchEvent(b);Ok(a)||Pk(a);w(c)})}
function Qk(a,b,c){var d,e,f,g,h,k,l,m,n,r;J(function(u){switch(u.a){case 1:for(d in b.player)e=b.player[d],a.c[d](e);a.D(c);f=a.a.autoplay;return b.manifest?(a.a.autoplay=!1,x(u,5),t(u,a.c.load(b.manifest,b.startTime),7)):t(u,Promise.resolve(),3);case 7:ua(u,3);break;case 5:return g=C(u),h=Dj,k=new Q(h,{detail:g}),a.c.dispatchEvent(k),u["return"]();case 3:if(!a.c)return u["return"]();for(l in b.video)m=b.video[l],a.a[l]=m;for(n in b.playerAfterLoad)r=b.playerAfterLoad[n],a.c[n](r);a.a.autoplay=f;
b.manifest&&(a.a.play(),Pk(a));w(u)}})}function Lk(a,b,c){a.c&&(Fk(a),Ik(a,{type:"event",targetName:b,event:c},a.g))}
function Fk(a){a.I.R(Rk);for(var b={video:{},player:{}},c=q(Xj),d=c.next();!d.done;d=c.next())d=d.value,b.video[d]=a.a[d];if(a.c.S())for(var e in bk)0==a.h%bk[e]&&(b.player[e]=a.c[e]());for(var f in ak)0==a.h%ak[f]&&(b.player[f]=a.c[f]());if(c=cast.receiver.CastReceiverManager.getInstance().getSystemVolume())b.video.volume=c.level,b.video.muted=c.muted;a.A&&(a.h+=1);Ik(a,{type:"update",update:b},a.g);Ok(a)}function Ok(a){return a.v&&(a.a.duration||a.c.S())?(Sk(a),a.v=!1,!0):!1}
function Sk(a,b){var c={contentId:a.c.Qc(),streamType:a.c.S()?"LIVE":"BUFFERED",contentType:""};a.c.S()||(c.duration=a.a.duration);a.f&&(c.metadata=a.f);Pk(a,void 0===b?0:b,c)}
function Kk(a,b){var c=Uj(b.data);switch(c.type){case "init":a.h=0;a.A=!1;a.v=!0;Qk(a,c.initState,c.appData);Fk(a);break;case "appData":a.D(c.appData);break;case "set":var d=c.targetName,e=c.property;c=c.value;if("video"==d){var f=cast.receiver.CastReceiverManager.getInstance();if("volume"==e){f.setSystemVolumeLevel(c);break}else if("muted"==e){f.setSystemVolumeMuted(c);break}}a.J[d][e]=c;break;case "call":d=a.J[c.targetName];d[c.methodName].apply(d,c.args);break;case "asyncCall":d=c.targetName;e=
c.methodName;"player"==d&&"load"==e&&(a.h=0,a.A=!1);var g=c.id,h=b.senderId;f=a.J[d];c=f[e].apply(f,c.args);"player"==d&&"load"==e&&(c=c.then(function(){a.v=!0}));c.then(function(){return Tk(a,h,g,null)},function(k){return Tk(a,h,g,k)})}}
function Jk(a,b){var c=Uj(b.data);switch(c.type){case "PLAY":a.a.play();Pk(a);break;case "PAUSE":a.a.pause();Pk(a);break;case "SEEK":var d=c.currentTime,e=c.resumeState;null!=d&&(a.a.currentTime=Number(d));e&&"PLAYBACK_START"==e?(a.a.play(),Pk(a)):e&&"PLAYBACK_PAUSE"==e&&(a.a.pause(),Pk(a));break;case "STOP":a.c.td().then(function(){a.c&&Pk(a)});break;case "GET_STATUS":Sk(a,Number(c.requestId));break;case "VOLUME":e=c.volume;d=e.level;e=e.muted;var f=a.a.volume,g=a.a.muted;null!=d&&(a.a.volume=Number(d));
null!=e&&(a.a.muted=e);f==a.a.volume&&g==a.a.muted||Pk(a);break;case "LOAD":a.h=0;a.A=!1;a.v=!1;d=c.media;e=c.currentTime;f=a.M(d.contentId);g=c.autoplay||!0;a.D(d.customData);g&&(a.a.autoplay=!0);a.c.load(f,e).then(function(){a.c&&Sk(a)})["catch"](function(h){var k="LOAD_FAILED";7==h.category&&7E3==h.code&&(k="LOAD_CANCELLED");Ik(a,{requestId:Number(c.requestId),type:k},a.m)});break;default:Ik(a,{requestId:Number(c.requestId),type:"INVALID_REQUEST",reason:"INVALID_COMMAND"},a.m)}}
function Tk(a,b,c,d){a.c&&Ik(a,{type:"asyncComplete",id:c,error:d},a.g,b)}function Ik(a,b,c,d){a.H&&(a=Tj(b),d?c.getCastChannel(d).send(a):c.broadcast(a))}function Pk(a,b,c){c=void 0===c?null:c;var d={mediaSessionId:0,playbackRate:a.a.playbackRate,playerState:a.j?Uk:a.c.Sc()?Vk:a.a.paused?Wk:Xk,currentTime:a.a.currentTime,supportedMediaCommands:63,volume:{level:a.a.volume,muted:a.a.muted}};c&&(d.media=c);Ik(a,{requestId:void 0===b?0:b,type:"MEDIA_STATUS",status:[d]},a.m)}
K("shaka.cast.CastReceiver",Ek);Ek.prototype.destroy=Ek.prototype.destroy;Ek.prototype.setContentArtist=Ek.prototype.Ye;Ek.prototype.setContentImage=Ek.prototype.Ze;Ek.prototype.setContentTitle=Ek.prototype.af;Ek.prototype.clearContentMetadata=Ek.prototype.ie;Ek.prototype.setContentMetadata=Ek.prototype.$e;Ek.prototype.isIdle=Ek.prototype.He;Ek.prototype.isConnected=Ek.prototype.isConnected;var Rk=.5,Nk=5,Uk="IDLE",Xk="PLAYING",Vk="BUFFERING",Wk="PAUSED";function Yk(a){var b=this;this.a=[];this.b=[];this.data=[];(new Mg).box("moov",Qg).ea("pssh",function(c){if(!(1<c.version)){var d=L(c.reader.P,-12,c.size);b.data.push(d);b.a.push(ec(c.reader.Wa(16)));if(0<c.version){d=c.reader.K();d=q(gb(d));for(var e=d.next();!e.done;e=d.next())e=ec(c.reader.Wa(16)),b.b.push(e)}}}).parse(a)}
function Zk(a){if(!a)return a;var b=new Yk(a);if(1>=b.data.length)return a;a=[];var c={};b=q(b.data);for(var d=b.next();!d.done;c={Tb:c.Tb},d=b.next())c.Tb=d.value,a.some(function(e){return function(f){return kb(f,e.Tb)}}(c))||a.push(c.Tb);return fc.apply($b,ia(a))};function $k(a,b){var c=al(a,b);return 1!=c.length?null:c[0]}function bl(a,b,c){a=cl(a,b,c);return 1!=a.length?null:a[0]}function al(a,b){return Array.from(a.childNodes).filter(function(c){return c instanceof Element&&c.tagName==b})}function cl(a,b,c){return Array.from(a.childNodes).filter(function(d){return d instanceof Element&&d.localName==c&&d.namespaceURI==b})}function dl(a,b,c){return a.hasAttributeNS(b,c)?a.getAttributeNS(b,c):null}
function kl(a){return Array.from(a.childNodes).every(function(b){return b.nodeType==Node.TEXT_NODE||b.nodeType==Node.CDATA_SECTION_NODE})?a.textContent.trim():null}function ll(a,b,c,d){d=void 0===d?null:d;var e=null;a=a.getAttribute(b);null!=a&&(e=c(a));return null==e?d:e}function ml(a){if(!a)return null;/^\d+-\d+-\d+T\d+:\d+:\d+(\.\d+)?$/.test(a)&&(a+="Z");a=Date.parse(a);return isNaN(a)?null:Math.floor(a/1E3)}
function nl(a){if(!a)return null;a=/^P(?:([0-9]*)Y)?(?:([0-9]*)M)?(?:([0-9]*)D)?(?:T(?:([0-9]*)H)?(?:([0-9]*)M)?(?:([0-9.]*)S)?)?$/.exec(a);if(!a)return null;a=31536E3*Number(a[1]||null)+2592E3*Number(a[2]||null)+86400*Number(a[3]||null)+3600*Number(a[4]||null)+60*Number(a[5]||null)+Number(a[6]||null);return isFinite(a)?a:null}function ol(a){var b=/([0-9]+)-([0-9]+)/.exec(a);if(!b)return null;a=Number(b[1]);if(!isFinite(a))return null;b=Number(b[2]);return isFinite(b)?{start:a,end:b}:null}
function pl(a){a=Number(a);return 0===a%1?a:null}function ql(a){a=Number(a);return 0===a%1&&0<a?a:null}function rl(a){a=Number(a);return 0===a%1&&0<=a?a:null}function sl(a){var b;a=(b=a.match(/^(\d+)\/(\d+)$/))?Number(b[1])/Number(b[2]):Number(a);return isNaN(a)?null:a}function tl(a,b){var c=new DOMParser,d=null,e=null;try{e=c.parseFromString(a,"text/xml")}catch(f){}e&&e.documentElement.tagName==b&&(d=e.documentElement);return d&&0<d.getElementsByTagName("parsererror").length?null:d}
function ul(a,b){try{var c=Tb(a);return tl(c,b)}catch(d){return null}};function vl(a,b){var c=wl(a),d=null,e=[],f=[],g=new Set(c.map(function(k){return k.keyId}));g["delete"](null);if(1<g.size)throw new M(2,4,4010);b||(f=c.filter(function(k){return"urn:mpeg:dash:mp4protection:2011"==k.Rd?(d=k.init||d,!1):!0}),f.length&&(e=xl(d,f),0==e.length&&(e=[Nb("",d)])));if(c.length&&(b||!f.length))for(e=[],c=q(yl.values()),f=c.next();!f.done;f=c.next())f=f.value,"org.w3.clearkey"!=f&&e.push(Nb(f,d));if(g=Array.from(g)[0]||null)for(c=q(e),f=c.next();!f.done;f=c.next()){f=q(f.value.initData);
for(var h=f.next();!h.done;h=f.next())h.value.keyId=g}return{yd:g,Mf:d,drmInfos:e,Cd:!0}}function zl(a,b,c){var d=vl(a,c);if(b.Cd){a=1==b.drmInfos.length&&!b.drmInfos[0].keySystem;c=0==d.drmInfos.length;if(0==b.drmInfos.length||a&&!c)b.drmInfos=d.drmInfos;b.Cd=!1}else if(0<d.drmInfos.length&&(b.drmInfos=b.drmInfos.filter(function(e){return d.drmInfos.some(function(f){return f.keySystem==e.keySystem})}),0==b.drmInfos.length))throw new M(2,4,4008);return d.yd||b.yd}
function Al(a){var b=0,c=ob(a),d=c.getUint32(b,!0);if(d!=a.byteLength)return[];a:{a=b+4+2;for(b=[];a<c.byteLength-1;){d=c.getUint16(a,!0);a+=2;var e=c.getUint16(a,!0);a+=2;if(0!=(e&1)||e+a>c.byteLength){c=[];break a}var f=L(c,a,e);b.push({type:d,value:f});a+=e}c=b}return c}
function Bl(a){a=q(a.getElementsByTagName("DATA"));for(var b=a.next();!b.done;b=a.next()){b=q(b.value.childNodes);for(var c=b.next();!c.done;c=b.next())if(c=c.value,c instanceof Element&&"LA_URL"==c.tagName)return c.textContent}return""}
function xl(a,b){for(var c=[],d=q(b),e=d.next();!e.done;e=d.next()){e=e.value;var f=yl.get(e.Rd);if(f){var g;if(g=bl(e.node,"urn:microsoft:playready","pro")){g=cc(g.textContent);var h=new Uint8Array([154,4,240,121,152,64,66,134,171,146,230,91,224,136,95,149]),k=g.length,l=h.length+16+k,m=new Uint8Array(l),n=ob(m),r=0;n.setUint32(r,l);r+=4;n.setUint32(r,1886614376);r+=4;n.setUint32(r,0);r+=4;m.set(h,r);r+=h.length;n.setUint32(r,k);r+=4;m.set(g,r);g=[{initData:m,initDataType:"cenc",keyId:e.keyId}]}else g=
null;g=Nb(f,e.init||a||g);if(f=Cl.get(f))g.licenseServerUri=f(e);c.push(g)}}return c}function wl(a){var b=[];a=q(a);for(var c=a.next();!c.done;c=a.next())(c=Dl(c.value))&&b.push(c);return b}
function Dl(a){var b=a.getAttribute("schemeIdUri"),c=dl(a,"urn:mpeg:cenc:2013","default_KID"),d=cl(a,"urn:mpeg:cenc:2013","pssh").map(kl);if(!b)return null;b=b.toLowerCase();if(c&&(c=c.replace(/-/g,"").toLowerCase(),c.includes(" ")))throw new M(2,4,4009);var e=[];try{e=d.map(function(f){return{initDataType:"cenc",initData:cc(f),keyId:null}})}catch(f){throw new M(2,4,4007);}return{node:a,Rd:b,keyId:c,init:0<e.length?e:null}}
var yl=(new Map).set("urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","org.w3.clearkey").set("urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","com.widevine.alpha").set("urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","com.microsoft.playready").set("urn:uuid:79f0049a-4098-8642-ab92-e65be0885f95","com.microsoft.playready").set("urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","com.adobe.primetime"),Cl=(new Map).set("com.widevine.alpha",function(a){return(a=bl(a.node,"urn:microsoft","laurl"))?a.getAttribute("licenseUrl")||
"":""}).set("com.microsoft.playready",function(a){a=bl(a.node,"urn:microsoft:playready","pro");if(!a)return"";a=cc(a.textContent);a=Al(a).filter(function(b){return 1===b.type})[0];if(!a)return"";a=Vb(a.value,!0);return(a=tl(a,"WRMHEADER"))?Bl(a):""});function El(a,b,c,d,e){var f={RepresentationID:b,Number:c,Bandwidth:d,Time:e};return a.replace(/\$(RepresentationID|Number|Bandwidth|Time)?(?:%0([0-9]+)([diouxX]))?\$/g,function(g,h,k,l){if("$$"==g)return"$";var m=f[h];if(null==m)return g;"RepresentationID"==h&&k&&(k=void 0);"Time"==h&&(m=Math.round(m));switch(l){case void 0:case "d":case "i":case "u":g=m.toString();break;case "o":g=m.toString(8);break;case "x":g=m.toString(16);break;case "X":g=m.toString(16).toUpperCase();break;default:g=m.toString()}k=
window.parseInt(k,10)||1;return Array(Math.max(0,k-g.length)+1).join("0")+g})}
function Fl(a,b){var c=Gl(a,b,"timescale"),d=1;c&&(d=ql(c)||1);c=Gl(a,b,"duration");(c=ql(c||""))&&(c/=d);var e=Gl(a,b,"startNumber"),f=Number(Gl(a,b,"presentationTimeOffset"))||0,g=rl(e||"");if(null==e||null==g)g=1;var h=Hl(a,b,"SegmentTimeline");e=null;if(h){e=d;var k=a.O.duration||Infinity,l=al(h,"S");h=[];var m=-f;l=q(ib(l));for(var n=l.next();!n.done;n=l.next()){n=n.value;var r=n.item,u=n.next,v=ll(r,"t",rl);n=ll(r,"d",rl);var A=ll(r,"r",pl);null!=v&&(v-=f);if(!n)break;r=null!=v?v:m;v=A||0;if(0>
v)if(u){u=ll(u,"t",rl);if(null==u)break;else if(r>=u)break;v=Math.ceil((u-r)/n)-1}else{if(Infinity==k)break;else if(r/e>=k)break;v=Math.ceil((k*e-r)/n)-1}0<h.length&&r!=m&&(h[h.length-1].end=r/e);u=q(gb(v+1));for(v=u.next();!v.done;v=u.next())m=r+n,h.push({start:r/e,end:m/e,kf:r}),r=m}e=h}return{timescale:d,Z:c,sb:g,Ha:f/d||0,ud:f,timeline:e}}function Gl(a,b,c){return[b(a.G),b(a.aa),b(a.ka)].filter(Kb).map(function(d){return d.getAttribute(c)}).reduce(function(d,e){return d||e})}
function Hl(a,b,c){return[b(a.G),b(a.aa),b(a.ka)].filter(Kb).map(function(d){return $k(d,c)}).reduce(function(d,e){return d||e})}
function Il(a,b,c,d,e,f){for(var g=dl(a,"http://www.w3.org/1999/xlink","href"),h=dl(a,"http://www.w3.org/1999/xlink","actuate")||"onRequest",k=q(Array.from(a.attributes)),l=k.next();!l.done;l=k.next())l=l.value,"http://www.w3.org/1999/xlink"==l.namespaceURI&&a.removeAttributeNS(l.namespaceURI,l.localName);if(5<=f)return pc(new M(2,4,4028));if("onLoad"!=h)return pc(new M(2,4,4027));var m=Mb([d],[g]);return e.request(0,Kc(m,b)).U(function(n){n=ul(n.data,a.tagName);if(!n)return pc(new M(2,4,4001,g));
for(;a.childNodes.length;)a.removeChild(a.childNodes[0]);for(;n.childNodes.length;){var r=n.childNodes[0];n.removeChild(r);a.appendChild(r)}n=q(Array.from(n.attributes));for(r=n.next();!r.done;r=n.next())a.setAttributeNode(r.value.cloneNode(!1));return Jl(a,b,c,m[0],e,f+1)})}
function Jl(a,b,c,d,e,f){f=void 0===f?0:f;if(dl(a,"http://www.w3.org/1999/xlink","href")){var g=Il(a,b,c,d,e,f);c&&(g=g.U(void 0,function(){return Jl(a,b,c,d,e,f)}));return g}g=[];for(var h=q(Array.from(a.childNodes)),k=h.next();!k.done;k=h.next())k=k.value,k instanceof Element&&("urn:mpeg:dash:resolve-to-zero:2013"==dl(k,"http://www.w3.org/1999/xlink","href")?a.removeChild(k):"SegmentTimeline"!=k.tagName&&g.push(Jl(k,b,c,d,e,f)));return tc(g).U(function(){return a})};function Kl(a,b,c,d,e,f,g){var h,k=(new Mg).ea("sidx",function(l){h=Ll(b,d,e,f,g,c,l)});a&&k.parse(a);if(h)return h;throw new M(2,3,3004);}
function Ll(a,b,c,d,e,f,g){var h=[];g.reader.skip(4);var k=g.reader.K();if(0==k)throw new M(2,3,3005);if(0==g.version){var l=g.reader.K();var m=g.reader.K()}else l=g.reader.rb(),m=g.reader.rb();g.reader.skip(2);var n=g.reader.Mb();a=a+g.size+m;n=q(gb(n));for(m=n.next();!m.done;m=n.next()){var r=g.reader.K();m=(r&2147483648)>>>31;r&=2147483647;var u=g.reader.K();g.reader.skip(4);if(1==m)throw new M(2,3,3006);h.push(new Xf(l/k+c,(l+u)/k+c,function(){return f},a,a+r-1,b,c,d,e));l+=u;a+=r}g.parser.stop();
return h};function Ml(a){this.b=ob(a);this.a=new V(this.b,0)}Ml.prototype.wa=function(){return this.a.wa()};
function Nl(a){var b=Ol(a);if(7<b.length)throw new M(2,3,3002);var c=0;b=q(b);for(var d=b.next();!d.done;d=b.next())c=256*c+d.value;b=Ol(a);a:{d=q(Pl);for(var e=d.next();!e.done;e=d.next())if(kb(b,new Uint8Array(e.value))){d=!0;break a}d=!1}if(d)b=a.b.byteLength-a.a.C;else{if(8==b.length&&b[1]&224)throw new M(2,3,3001);d=0;e=q(ib(b));for(var f=e.next();!f.done;f=e.next()){f=f.value;var g=f.item;d=0==f.Y?g&(1<<8-b.length)-1:256*d+g}b=d}b=a.a.C+b<=a.b.byteLength?b:a.b.byteLength-a.a.C;d=ob(a.b,a.a.C,
b);a.a.skip(b);return new Ql(c,d)}function Ol(a){var b=a.a.C,c=a.a.qa();if(0==c)throw new M(2,3,3002);c=8-Math.floor(Math.log2(c));a.a.skip(c-1);return L(a.b,b,c)}var Pl=[[255],[127,255],[63,255,255],[31,255,255,255],[15,255,255,255,255],[7,255,255,255,255,255],[3,255,255,255,255,255,255],[1,255,255,255,255,255,255,255]];function Ql(a,b){this.id=a;this.a=b}
function Rl(a){if(8<a.a.byteLength)throw new M(2,3,3002);if(8==a.a.byteLength&&a.a.getUint8(0)&224)throw new M(2,3,3001);for(var b=0,c=q(gb(a.a.byteLength)),d=c.next();!d.done;d=c.next())d=a.a.getUint8(d.value),b=256*b+d;return b};function Sl(a,b,c,d,e,f,g,h,k){function l(){return e}var m=[];a=new Ml(a.a);for(var n=null,r=null;a.wa();){var u=Nl(a);if(187==u.id){var v=Tl(u);v&&(u=c*v.lf,v=b+v.Re,null!=n&&m.push(new Xf(n+g,u+g,l,r,v-1,f,g,h,k)),n=u,r=v)}}null!=n&&m.push(new Xf(n+g,d+g,l,r,null,f,g,h,k));return m}
function Tl(a){var b=new Ml(a.a);a=Nl(b);if(179!=a.id)throw new M(2,3,3013);a=Rl(a);b=Nl(b);if(183!=b.id)throw new M(2,3,3012);b=new Ml(b.a);for(var c=0;b.wa();){var d=Nl(b);if(241==d.id){c=Rl(d);break}}return{lf:a,Re:c}};function Ul(a,b){var c=Hl(a,b,"Initialization");if(!c)return null;var d=a.G.oa,e=c.getAttribute("sourceURL");e&&(d=Mb(a.G.oa,[e]));e=0;var f=null;if(c=ll(c,"range",ol))e=c.start,f=c.end;return new Vf(function(){return d},e,f)}
function Vl(a,b){var c=Number(Gl(a,Wl,"presentationTimeOffset"))||0,d=Gl(a,Wl,"timescale"),e=1;d&&(e=ql(d)||1);var f=c/e||0,g=Ul(a,Wl);Xl(a,g);var h=zc(a);return{ib:function(){var k=Hl(h,Wl,"RepresentationIndex"),l=h.G.oa;k&&(k=k.getAttribute("sourceURL"))&&(l=Mb(h.G.oa,[k]));k=Yl(h);return Zl(h,b,g,l,k.start,k.end,f)}}}
function Zl(a,b,c,d,e,f,g){var h,k,l,m,n,r,u,v,A,y,z,D,B,E,H;return J(function(G){var F;if(1==G.a)return h=a.presentationTimeline,k=!a.Oa||!a.O.Hd,l=a.O.start,m=a.O.duration,n=a.G.mimeType.split("/")[1],r=b,u=null,v=[r(d,e,f),"webm"==n?r(c.c(),c.b,c.a):null],r=null,t(G,Promise.all(v),2);A=G.b;y=A[0];z=A[1]||null;D=null;B=l-g;E=l;H=m?l+m:Infinity;if("mp4"==n)var I=Kl(y,e,d,c,B,E,H);else{I=new Ml(z);if(440786851!=Nl(I).id)throw new M(2,3,3008);var O=Nl(I);if(408125543!=O.id)throw new M(2,3,3009);I=
O.a.byteOffset;O=new Ml(O.a);for(F=null;O.wa();){var U=Nl(O);if(357149030==U.id){F=U;break}}if(!F)throw new M(2,3,3010);F=new Ml(F.a);U=1E6;for(O=null;F.wa();){var P=Nl(F);if(2807729==P.id)U=Rl(P);else if(17545==P.id)if(4==P.a.byteLength)O=P.a.getFloat32(0);else if(8==P.a.byteLength)O=P.a.getFloat64(0);else throw new M(2,3,3003);}if(null==O)throw new M(2,3,3011);F=U/1E9;F={ef:F,duration:O*F};O=F.ef;F=F.duration;U=Nl(new Ml(y));if(475249515!=U.id)throw new M(2,3,3007);I=Sl(U,I,O,F,d,c,B,E,H)}D=I;h.ob(D);
u=new T(D);k&&u.Ka(E,H);return G["return"](u)})}function Wl(a){return a.Nb}function Yl(a){var b=Hl(a,Wl,"RepresentationIndex");a=Gl(a,Wl,"indexRange");a=ol(a||"");b&&(a=ll(b,"range",ol,a));return a}function Xl(a,b){$l(a,b);if(!Yl(a))throw new M(2,4,4002);}function $l(a,b){var c=a.G.mimeType.split("/")[1];if("text"!=a.G.contentType&&"mp4"!=c&&"webm"!=c)throw new M(2,4,4006);if("webm"==c&&!b)throw new M(2,4,4005);};function am(a,b){var c=Ul(a,bm),d=cm(a);if(!d.Z&&!d.timeline&&1<d.lb.length)throw new M(2,4,4002);if(!d.Z&&!a.O.duration&&!d.timeline&&1==d.lb.length)throw new M(2,4,4002);if(d.timeline&&0==d.timeline.length)throw new M(2,4,4002);var e=null,f=null;a.ka.id&&a.G.id&&(f=a.ka.id+","+a.G.id,e=b[f]);c=dm(a.O.start,a.O.duration,a.G.oa,d,c);e?(e.mb(c),e.Pa(a.presentationTimeline.Ra())):(a.presentationTimeline.ob(c),e=new T(c),f&&a.Oa&&(b[f]=e));a.Oa&&a.O.Hd||e.Ka(a.O.start,a.O.duration?a.O.start+a.O.duration:
Infinity);return{ib:function(){return Promise.resolve(e)}}}function bm(a){return a.Na}function cm(a){var b=em(a);a=Fl(a,bm);var c=a.sb;0==c&&(c=1);var d=0;a.Z?d=a.Z*(c-1):a.timeline&&0<a.timeline.length&&(d=a.timeline[0].start);return{Z:a.Z,startTime:d,sb:c,Ha:a.Ha,timeline:a.timeline,lb:b}}
function dm(a,b,c,d,e){var f=d.lb.length;d.timeline&&d.timeline.length!=d.lb.length&&(f=Math.min(d.timeline.length,d.lb.length));var g=a-d.Ha,h=b?a+b:Infinity,k=[],l=d.startTime,m={};f=q(gb(f));for(var n=f.next();!n.done;m={Cc:m.Cc},n=f.next()){n=n.value;var r=d.lb[n];m.Cc=Mb(c,[r.Ke]);var u=void 0;u=null!=d.Z?l+d.Z:d.timeline?d.timeline[n].end:l+b;k.push(new Xf(a+l,a+u,function(v){return function(){return v.Cc}}(m),r.start,r.end,e,g,a,h));l=u}return k}
function em(a){return[a.G.Na,a.aa.Na,a.ka.Na].filter(Kb).map(function(b){return al(b,"SegmentURL")}).reduce(function(b,c){return 0<b.length?b:c}).map(function(b){b.getAttribute("indexRange")&&!a.Fd&&(a.Fd=!0);var c=b.getAttribute("media");b=ll(b,"mediaRange",ol,{start:0,end:null});return{Ke:c,start:b.start,end:b.end}})};function fm(a,b,c,d,e){var f=gm(a),g=hm(a);im(g);var h=zc(a);if(g.Jb)return $l(a,f),{ib:function(){var u=El(g.Jb,h.G.id,null,h.bandwidth||null,null);u=Mb(h.G.oa,[u]);return Zl(h,b,f,u,0,null,g.Ha)}};if(g.Z)return d||(a.presentationTimeline.Yc(g.Z),a.presentationTimeline.Zc(a.O.start)),{ib:function(){return jm(h,g,e,f)}};var k=null;d=null;a.ka.id&&a.G.id&&(d=a.ka.id+","+a.G.id,k=c[d]);var l=km(h,g,f),m=a.O.start,n=a.O.duration?a.O.start+a.O.duration:Infinity,r=Infinity!=n;k?(r&&(new T(l)).Ka(m,n),
k.mb(l),k.Pa(a.presentationTimeline.Ra())):(a.presentationTimeline.ob(l),k=new T(l),d&&a.Oa&&(c[d]=k));r&&k.Ka(m,n);return{ib:function(){return Promise.resolve(k)}}}function lm(a){return a.Ob}function hm(a){var b=Fl(a,lm),c=Gl(a,lm,"media");a=Gl(a,lm,"index");return{Z:b.Z,timescale:b.timescale,sb:b.sb,Ha:b.Ha,ud:b.ud,timeline:b.timeline,Xc:c,Jb:a}}
function im(a){var b=a.Jb?1:0;b+=a.timeline?1:0;b+=a.Z?1:0;if(0==b)throw new M(2,4,4002);1!=b&&(a.Jb&&(a.timeline=null),a.Z=null);if(!a.Jb&&!a.Xc)throw new M(2,4,4002);}
function jm(a,b,c,d){function e(G){var F=(G-n)*m,I=F+b.Ha;F+=h;return new Xf(F,Math.min(F+m,l),function(){var O=El(u,A,G,v,I*r);return Mb(y,[O])},0,null,d,z,h,l)}function f(){var G=[Math.max(g.Ra(),h),Math.min(g.La(),l)].map(function(F){return F-h});return[Math.ceil(G[0]/m),Math.ceil(G[1]/m)-1].map(function(F){return F+n})}var g=a.presentationTimeline,h=a.O.start,k=a.O.duration,l=k?h+k:Infinity,m=b.Z,n=b.sb,r=b.timescale,u=b.Xc,v=a.bandwidth||null,A=a.G.id,y=a.G.oa,z=h-b.Ha,D=f();k=D[1];var B=[];
for(a=a.Oa?Math.max(D[0],D[1]-c+1):D[0];a<=k;++a)c=e(a),B.push(c);var E=new T(B);if(g.La()<l){var H=k+1;E.tc(m,function(){E.Pa(g.Ra());var G=q(f());G.next();G=G.next().value;for(var F=[];H<=G;){var I=e(H);F.push(I);H++}return F})}return Promise.resolve(E)}
function km(a,b,c){var d=a.O.start,e=a.O.duration,f=d-b.Ha;e=e?d+e:Infinity;for(var g=[],h={},k=q(ib(b.timeline)),l=k.next();!l.done;h={Bc:h.Bc,Dc:h.Dc,Gc:h.Gc,yc:h.yc,Hc:h.Hc,zc:h.zc},l=k.next()){l=l.value;var m=l.item,n=m.start,r=m.kf;m=m.end;h.Gc=l.Y+b.sb;h.Hc=r+b.ud;h.Dc=a.G.id;h.yc=a.bandwidth||null;h.Bc=b.Xc;h.zc=a.G.oa;g.push(new Xf(d+n,d+m,function(u){return function(){var v=El(u.Bc,u.Dc,u.Gc,u.yc||null,u.Hc);return Mb(u.zc,[v]).map(function(A){return A.toString()})}}(h),0,null,c,f,d,e))}return g}
function gm(a){var b=Gl(a,lm,"initialization");if(!b)return null;var c=a.G.id,d=a.bandwidth||null,e=a.G.oa;return new Vf(function(){var f=El(b,c,null,d,null);return Mb(e,[f])},0,null)};function mm(){this.f=[];this.a=[];this.b=[];this.c=[];this.g=new Set}mm.prototype.release=function(){for(var a=q(this.a.concat(this.b,this.c)),b=a.next();!b.done;b=a.next())b=b.value,b.segmentIndex&&b.segmentIndex.release();this.a=[];this.b=[];this.c=[];this.f=[]};
function nm(a,b,c){var d,e,f,g,h,k,l,m,n,r,u,v,A,y,z,D,B,E,H,G,F,I,O,U,P,Ga,aa,Ca,ya,Ra;return J(function(Ha){switch(Ha.a){case 1:d=Ob;om(b);pm(b);qm(b);if(!c&&1==b.length){e=b[0];a.a=e.dc;a.b=e.vc;a.c=e.textStreams;Ha.u(2);break}f=-1;g=q(ib(b));for(h=g.next();!h.done;h=g.next())l=k=h.value,m=l.Y,n=l.item,a.g.has(n.id)||(a.g.add(n.id),-1==f&&(f=m));if(-1==f)return Ha["return"]();r=b.map(function(Aa){return Aa.dc});u=b.map(function(Aa){return Aa.vc});v=b.map(function(Aa){return Aa.textStreams});A=
q(v);for(y=A.next();!y.done;y=A.next())z=y.value,z.push(rm());return t(Ha,sm(a.a,r,f,tm,um),3);case 3:return t(Ha,sm(a.b,u,f,tm,um),4);case 4:return t(Ha,sm(a.c,v,f,tm,um),2);case 2:D=0;B=[];if(a.b.length&&a.a.length)for(O=q(a.a),U=O.next();!U.done;U=O.next())for(P=U.value,Ga=q(a.b),aa=Ga.next();!aa.done;aa=Ga.next())Ca=aa.value,ya=ae(P.drmInfos,Ca.drmInfos),P.drmInfos.length&&Ca.drmInfos.length&&!ya.length||(Ra=D++,B.push({id:Ra,language:P.language,primary:P.primary,audio:P,video:Ca,bandwidth:(P.bandwidth||
0)+(Ca.bandwidth||0),drmInfos:ya,allowedByApplication:!0,allowedByKeySystem:!0}));else for(E=a.b.concat(a.a),H=q(E),G=H.next();!G.done;G=H.next())F=G.value,I=D++,B.push({id:I,language:F.language,primary:F.primary,audio:F.type==d.fb?F:null,video:F.type==d.Da?F:null,bandwidth:F.bandwidth||0,drmInfos:F.drmInfos,allowedByApplication:!0,allowedByKeySystem:!0});a.f=B;w(Ha)}})}
function om(a){a=q(a);for(var b=a.next();!b.done;b=a.next()){b=b.value;for(var c=[],d=q(b.dc),e=d.next();!e.done;e=d.next()){e=e.value;for(var f=!1,g=q(c),h=g.next();!h.done;h=g.next())h=h.value,e.id!=h.id&&e.channelsCount==h.channelsCount&&e.language==h.language&&e.bandwidth==h.bandwidth&&e.label==h.label&&e.codecs==h.codecs&&e.mimeType==h.mimeType&&Cc(e.roles,h.roles)&&e.audioSamplingRate==h.audioSamplingRate&&e.primary==h.primary&&(f=!0);f||c.push(e)}b.dc=c}}
function qm(a){a=q(a);for(var b=a.next();!b.done;b=a.next()){b=b.value;for(var c=[],d=q(b.textStreams),e=d.next();!e.done;e=d.next()){e=e.value;for(var f=!1,g=q(c),h=g.next();!h.done;h=g.next())h=h.value,e.id!=h.id&&e.language==h.language&&e.label==h.label&&e.codecs==h.codecs&&e.mimeType==h.mimeType&&Cc(e.roles,h.roles)&&(f=!0);f||c.push(e)}b.textStreams=c}}
function pm(a){a=q(a);for(var b=a.next();!b.done;b=a.next()){b=b.value;for(var c=[],d=q(b.vc),e=d.next();!e.done;e=d.next()){e=e.value;for(var f=!1,g=q(c),h=g.next();!h.done;h=g.next())h=h.value,e.id!=h.id&&e.width==h.width&&e.frameRate==h.frameRate&&e.codecs==h.codecs&&e.mimeType==h.mimeType&&e.label==h.label&&Cc(e.roles,h.roles)&&cd(e.closedCaptions,h.closedCaptions)&&e.bandwidth==h.bandwidth&&(f=!0);f||c.push(e)}b.vc=c}}
function vm(a){var b,c,d,e,f,g,h,k,l,m,n,r,u,v,A,y,z,D,B,E,H,G;return J(function(F){switch(F.a){case 1:b=Ob;if(1==a.length)return F["return"](a[0]);c=a.map(function(I){return I.filter(function(O){return O.type==b.fb})});d=a.map(function(I){return I.filter(function(O){return O.type==b.Da})});e=a.map(function(I){return I.filter(function(O){return O.type==b.$})});f=q(e);for(g=f.next();!g.done;g=f.next())h=g.value,h.push({id:0,originalId:"",primary:!1,type:"text",mimeType:"",codecs:"",language:"",label:null,
width:null,height:null,encrypted:!1,keyIds:new Set,segments:[],variantIds:[],roles:[],channelsCount:null,audioSamplingRate:null,closedCaptions:null});return t(F,sm([],c,0,wm,xm),2);case 2:return k=F.b,t(F,sm([],d,0,wm,xm),3);case 3:return l=F.b,t(F,sm([],e,0,wm,xm),4);case 4:m=F.b;n=0;if(l.length&&k.length)for(y=q(k),z=y.next();!z.done;z=y.next())for(D=z.value,B=q(l),E=B.next();!E.done;E=B.next())H=E.value,G=n++,H.variantIds.push(G),D.variantIds.push(G);else for(r=l.concat(k),u=q(r),v=u.next();!v.done;v=
u.next())A=v.value,A.variantIds=[n++];return F["return"](l.concat(k,m))}})}
function sm(a,b,c,d,e){var f,g,h,k,l,m,n,r,u,v,A,y,z,D,B,E,H,G,F,I,O,U,P,Ga;return J(function(aa){switch(aa.a){case 1:f=Ob;g=[];h=q(ib(b));for(k=h.next();!k.done;k=h.next())m=l=k.value,n=m.Y,r=m.item,n>=c?g.push(new Set(r)):g.push(new Set);u=q(a);v=u.next();case 2:if(v.done){aa.u(4);break}A=v.value;return t(aa,ym(A,b,c,e,g),5);case 5:y=aa.b;if(!y)throw new M(2,4,4037);v=u.next();aa.u(2);break;case 4:z=q(g),D=z.next();case 6:if(D.done){aa.u(8);break}B=D.value;E=q(B);H=E.next();case 9:if(H.done){D=
z.next();aa.u(6);break}G=H.value;return t(aa,zm(G,b,d,e,g),12);case 12:(F=aa.b)&&a.push(F);H=E.next();aa.u(9);break;case 8:I=q(g);for(D=I.next();!D.done;D=I.next())for(O=D.value,U={},P=q(O),H=P.next();!H.done;U={eb:U.eb},H=P.next())if(U.eb=H.value,U.eb.type!=f.$||U.eb.language)if(Ga=a.some(function(Ca){return function(ya){return ya.mimeType==Ca.eb.mimeType&&hd(ya.codecs)[0]==hd(Ca.eb.codecs)[0]}}(U)))throw new M(2,4,4037);return aa["return"](a)}})}
function ym(a,b,c,d,e){var f;return J(function(g){if(1==g.a)return(f=Am(b,a))?t(g,Promise.all(f.map(function(h){return h.createSegmentIndex()})),2):g["return"](!1);Bm(a,f,c,d,e);return g["return"](!0)})}function zm(a,b,c,d,e){var f,g;return J(function(h){if(1==h.a)return f=c(a),(g=Am(b,f))?f.createSegmentIndex?t(h,Promise.all(g.map(function(k){return k.createSegmentIndex()})),2):h.u(2):h["return"](null);Bm(f,g,0,d,e);return h["return"](f)})}
function Bm(a,b,c,d,e){b=q(ib(b));for(var f=b.next();!f.done;f=b.next()){var g=f.value;f=g.Y;g=g.item;if(f>=c){d(a,g);var h=!0;"audio"==a.type&&0==hf(a.language,g.language)&&(h=!1);h&&e[f]["delete"](g)}}}function tm(a){a=Object.assign({},a);a.originalId=null;a.createSegmentIndex=function(){return Promise.resolve()};a.segmentIndex=new vg;a.emsgSchemeIdUris=[];a.keyIds=new Set;a.closedCaptions=null;a.trickModeVideo=null;return a}
function wm(a){a=Object.assign({},a);a.keyIds=new Set;a.segments=[];a.variantIds=[];a.closedCaptions=null;return a}
function um(a,b){a.roles=Array.from(new Set(a.roles.concat(b.roles)));b.emsgSchemeIdUris&&(a.emsgSchemeIdUris=Array.from(new Set(a.emsgSchemeIdUris.concat(b.emsgSchemeIdUris))));var c=b.keyIds;c=new Set(ia(a.keyIds).concat(ia(c)));a.keyIds=c;null==a.originalId?a.originalId=b.originalId:a.originalId+=","+(b.originalId||"");c=ae(a.drmInfos,b.drmInfos);if(b.drmInfos.length&&a.drmInfos.length&&!c.length)throw new M(2,4,4038);a.drmInfos=c;a.encrypted=a.encrypted||b.encrypted;if(b.closedCaptions){a.closedCaptions||
(a.closedCaptions=new Map);c=q(b.closedCaptions);for(var d=c.next();!d.done;d=c.next()){var e=q(d.value);d=e.next().value;e=e.next().value;a.closedCaptions.set(d,e)}}a.segmentIndex.g.push(b.segmentIndex);b.trickModeVideo?(a.trickModeVideo||(a.trickModeVideo=tm(b.trickModeVideo),a.trickModeVideo.segmentIndex=a.segmentIndex.clone()),um(a.trickModeVideo,b.trickModeVideo)):a.trickModeVideo&&um(a.trickModeVideo,b)}
function xm(a,b){a.roles=Array.from(new Set(a.roles.concat(b.roles)));var c=b.keyIds;c=new Set(ia(a.keyIds).concat(ia(c)));a.keyIds=c;a.encrypted=a.encrypted&&b.encrypted;a.segments.push.apply(a.segments,ia(b.segments));if(b.closedCaptions){a.closedCaptions||(a.closedCaptions=new Map);c=q(b.closedCaptions);for(var d=c.next();!d.done;d=c.next()){var e=q(d.value);d=e.next().value;e=e.next().value;a.closedCaptions.set(d,e)}}}
function Am(a,b){for(var c=[],d=q(a),e=d.next();!e.done;e=d.next()){var f=b,g={audio:Cm,video:Cm,text:Dm}[f.type],h={audio:Em,video:Fm,text:Gm}[f.type],k=null;e=q(e.value);for(var l=e.next();!l.done;l=e.next())l=l.value,!g(f,l)||k&&!h(f,k,l)||(k=l);f=k;if(!f)return null;c.push(f)}return c}function Cm(a,b){var c;if(!(c=b.mimeType!=a.mimeType||hd(b.codecs)[0]!=hd(a.codecs)[0])&&(c=a.drmInfos)){c=a.drmInfos;var d=b.drmInfos;c=!(c.length&&d.length?0<ae(c,d).length:1)}return c?!1:!0}
function Dm(a,b){return a.language?b.language?0==hf(a.language,b.language)||b.kind!=a.kind?!1:!0:!0:!1}
function Em(a,b,c){if(a.id==c.id)return!0;var d=hf(a.language,b.language),e=hf(a.language,c.language);if(e>d)return!0;if(e<d)return!1;if(!b.primary&&c.primary)return!0;if(b.primary&&!c.primary)return!1;if(a.roles.length)return d=b.roles.filter(function(f){return a.roles.includes(f)}),e=c.roles.filter(function(f){return a.roles.includes(f)}),e.length>d.length?!0:e.length<d.length?!1:c.roles.length<b.roles.length;if(!c.roles.length&&b.roles.length)return!0;if(c.roles.length&&!b.roles.length)return!1;
d=Hm(a.channelsCount,b.channelsCount,c.channelsCount);if(d==Im)return!0;if(d==Jm)return!1;d=Hm(a.audioSamplingRate,b.audioSamplingRate,c.audioSamplingRate);return d==Im?!0:d==Jm?!1:a.bandwidth&&Km(a.bandwidth,b.bandwidth,c.bandwidth)==Im?!0:!1}
function Fm(a,b,c){if(a.id==c.id)return!0;var d=Hm(a.width*a.height,b.width*b.height,c.width*c.height);if(d==Im)return!0;if(d==Jm)return!1;if(a.frameRate){d=Hm(a.frameRate,b.frameRate,c.frameRate);if(d==Im)return!0;if(d==Jm)return!1}return a.bandwidth&&Km(a.bandwidth,b.bandwidth,c.bandwidth)==Im?!0:!1}
function Gm(a,b,c){if(a.id==c.id)return!0;var d=hf(a.language,b.language),e=hf(a.language,c.language);if(e>d)return!0;if(e<d)return!1;if(!b.primary&&c.primary)return!0;if(b.primary&&!c.primary)return!1;if(a.roles.length){d=b.roles.filter(function(f){return a.roles.includes(f)});e=c.roles.filter(function(f){return a.roles.includes(f)});if(e.length>d.length)return!0;if(e.length<d.length)return!1}else{if(!c.roles.length&&b.roles.length)return!0;if(c.roles.length&&!b.roles.length)return!1}return c.mimeType!=
a.mimeType||c.codecs!=a.codecs||b.mimeType==a.mimeType&&b.codecs==a.codecs?!1:!0}function rm(){return{id:0,originalId:"",createSegmentIndex:function(){return Promise.resolve()},segmentIndex:new T([]),mimeType:"",codecs:"",encrypted:!1,drmInfos:[],keyIds:new Set,language:"",label:null,type:"text",primary:!1,trickModeVideo:null,emsgSchemeIdUris:null,roles:[],channelsCount:null,audioSamplingRate:null,closedCaptions:null}}
function Hm(a,b,c){if(b==a&&a!=c)return Jm;if(c==a&&a!=b)return Im;if(b>a){if(c<=a||c-a<b-a)return Im;if(c-a>b-a)return Jm}else{if(c>a)return Jm;if(a-c<a-b)return Im;if(a-c>a-b)return Jm}return Lm}function Km(a,b,c){b=Math.abs(a-b);a=Math.abs(a-c);return a<b?Im:b<a?Jm:Lm}var Im=1,Lm=0,Jm=-1;function Mm(){var a=this;this.s=this.i=null;this.b=[];this.o=null;this.m=1;this.f={};this.a=new mm;this.h=0;this.j=new Pa(5);this.g=new N(function(){a.Kb()});this.c=new Ec}p=Mm.prototype;p.configure=function(a){this.i=a};p.start=function(a,b){var c=this,d;return J(function(e){if(1==e.a)return c.b=[a],c.s=b,t(e,Nm(c),2);d=e.b;c.s&&Om(c,d);if(!c.s)throw new M(2,7,7001);return e["return"](c.o)})};
p.stop=function(){for(var a=q(Object.values(this.f)),b=a.next();!b.done;b=a.next())b.value.release();this.a&&this.a.release();this.i=this.s=null;this.b=[];this.o=null;this.f={};this.a=null;null!=this.g&&(this.g.stop(),this.g=null);return this.c.destroy()};p.update=function(){var a=this,b;return J(function(c){if(1==c.a)return x(c,2),t(c,Nm(a),4);if(2!=c.a)return ua(c,0);b=C(c);if(!a.s||!b)return c["return"]();a.s.onError(b);w(c)})};p.onExpirationUpdated=function(){};
function Nm(a){var b,c,d,e,f,g,h;return J(function(k){if(1==k.a)return b=Kc(a.b,a.i.retryParameters),c=a.s.networkingEngine,d=Date.now(),e=c.request(0,b),Fc(a.c,e),t(k,e.promise,2);if(3!=k.a){f=k.b;if(!a.s)return k["return"](0);f.uri&&!a.b.includes(f.uri)&&a.b.unshift(f.uri);return t(k,Pm(a,f.data,f.uri),3)}g=Date.now();h=(g-d)/1E3;Qa(a.j,1,h);return k["return"](h)})}
function Pm(a,b,c){var d,e,f,g;return J(function(h){if(1==h.a){d=ul(b,"MPD");if(!d)throw new M(2,4,4001,c);e=a.i.dash.xlinkFailGracefully;f=Jl(d,a.i.retryParameters,e,c,a.s.networkingEngine);Fc(a.c,f);return t(h,f.promise,2)}g=h.b;return h["return"](Qm(a,g,c))})}
function Qm(a,b,c){var d,e,f,g,h,k,l,m,n,r,u,v,A,y,z,D,B,E,H,G,F,I,O;return J(function(U){switch(U.a){case 1:d=[c];e=al(b,"Location").map(kl).filter(Kb);0<e.length&&(f=Mb(d,e),d=a.b=f);g=al(b,"BaseURL").map(kl);h=Mb(d,g);k=a.i.dash.ignoreMinBufferTime;l=0;k||(l=ll(b,"minBufferTime",nl)||0);a.h=ll(b,"minimumUpdatePeriod",nl,-1);m=ll(b,"availabilityStartTime",ml);n=ll(b,"timeShiftBufferDepth",nl);r=a.i.dash.ignoreSuggestedPresentationDelay;u=null;r||(u=ll(b,"suggestedPresentationDelay",nl));v=ll(b,
"maxSegmentDuration",nl);A=b.getAttribute("type")||"static";a.o?y=a.o.presentationTimeline:(z=a.i.defaultPresentationDelay||1.5*l,D=null!=u?u:z,y=new S(m,D,a.i.dash.autoCorrectDrift));B={Oa:"static"!=A,presentationTimeline:y,ka:null,O:null,aa:null,G:null,bandwidth:0,Fd:!1};var P=ll(b,"mediaPresentationDuration",nl),Ga=[],aa=0,Ca=al(b,"Period");Ca=q(ib(Ca));for(var ya=Ca.next();!ya.done;ya=Ca.next()){var Ra=ya.value;ya=Ra.item;Ra=Ra.next;aa=ll(ya,"start",nl,aa);var Ha=ll(ya,"duration",nl),Aa=null;
if(Ra){var Qb=ll(Ra,"start",nl);null!=Qb&&(Aa=Qb-aa)}else null!=P&&(Aa=P-aa);null==Aa&&(Aa=Ha);ya=Rm(a,B,h,{start:aa,duration:Aa,node:ya,Hd:null==Aa||!Ra});Ga.push(ya);if(null==Aa){aa=null;break}aa+=Aa}E=null!=P?{periods:Ga,duration:P,zd:!1}:{periods:Ga,duration:aa,zd:!0};H=E.duration;G=E.periods;y.Pb("static"==A);"static"!=A&&E.zd||y.za(H||Infinity);(F=y.S())&&!isNaN(a.i.availabilityWindowOverride)&&(n=a.i.availabilityWindowOverride);null==n&&(n=Infinity);y.pd(n);y.Yc(v||1);return t(U,nm(a.a,G,B.Oa),
2);case 2:if(a.o){a.o.variants=a.a.f;a.o.textStreams=a.a.c;U.u(3);break}a.o={presentationTimeline:y,variants:a.a.f,textStreams:a.a.c,offlineSessionIds:[],minBufferTime:l||0};if(!y.Xd()){U.u(3);break}I=al(b,"UTCTiming");return t(U,Sm(a,h,I),5);case 5:O=U.b;if(!a.s)return U["return"]();y.Td(O);case 3:return a.s.makeTextStreamsForClosedCaptions(a.o),t(U,a.s.filter(a.o),0)}})}
function Rm(a,b,c,d){b.ka=Tm(d.node,null,c);b.O=d;b.ka.id||(b.ka.id="__shaka_period_"+d.start);c=al(d.node,"EventStream");c=q(c);for(var e=c.next();!e.done;e=c.next())Um(a,d.start,d.duration,e.value);c=al(d.node,"AdaptationSet").map(function(m){return Vm(a,b,m)}).filter(Kb);if(b.Oa){d=[];e=q(c);for(var f=e.next();!f.done;f=e.next()){f=q(f.value.Ue);for(var g=f.next();!g.done;g=f.next())d.push(g.value)}if(d.length!=(new Set(d)).size)throw new M(2,4,4018);}d=c.filter(function(m){return!m.sd});c=c.filter(function(m){return m.sd});
c=q(c);for(e=c.next();!e.done;e=c.next()){e=e.value;f=e.sd.split(" ");g=q(d);for(var h=g.next();!h.done;h=g.next()){var k=h.value;if(f.includes(k.id)){h={};k=q(k.streams);for(var l=k.next();!l.done;h={Rb:h.Rb,Xb:h.Xb},l=k.next())h.Xb=l.value,h.Rb=dd,h.Xb.trickModeVideo=e.streams.find(function(m){return function(n){return m.Rb.a(m.Xb.codecs)==m.Rb.a(n.codecs)}}(h))}}}e=a.i.disableAudio?[]:Wm(d,"audio");f=a.i.disableVideo?[]:Wm(d,"video");c=a.i.disableText?[]:Wm(d,"text");if(!f.length&&!e.length)throw new M(2,
4,4004);d=[];e=q(e);for(g=e.next();!g.done;g=e.next())d.push.apply(d,ia(g.value.streams));e=[];f=q(f);for(g=f.next();!g.done;g=f.next())e.push.apply(e,ia(g.value.streams));f=[];c=q(c);for(g=c.next();!g.done;g=c.next())f.push.apply(f,ia(g.value.streams));return{id:b.ka.id,dc:d,vc:e,textStreams:f}}function Wm(a,b){return a.filter(function(c){return c.contentType==b})}
function Vm(a,b,c){b.aa=Tm(c,b.ka,null);if("image"==b.aa.contentType)return null;var d=!1,e=al(c,"Role"),f=e.map(function(B){return B.getAttribute("value")}).filter(Kb),g=void 0,h="text"==b.aa.contentType;h&&(g="subtitle");e=q(e);for(var k=e.next();!k.done;k=e.next()){k=k.value;var l=k.getAttribute("schemeIdUri");if(null==l||"urn:mpeg:dash:role:2011"==l)switch(k=k.getAttribute("value"),k){case "main":d=!0;break;case "caption":case "subtitle":g=k}}l=al(c,"EssentialProperty");e=null;k=!1;l=q(l);for(var m=
l.next();!m.done;m=l.next())m=m.value,"http://dashif.org/guidelines/trickmode"==m.getAttribute("schemeIdUri")?e=m.getAttribute("value"):k=!0;l=al(c,"Accessibility");var n=new Map;l=q(l);for(m=l.next();!m.done;m=l.next()){var r=m.value;m=r.getAttribute("schemeIdUri");r=r.getAttribute("value");if("urn:scte:dash:cc:cea-608:2015"==m||"urn:scte:dash:cc:cea-708:2015"==m)if(m=1,null!=r){r=q(r.split(";"));for(var u=r.next();!u.done;u=r.next()){var v=u.value,A=u=void 0;v.includes("=")?(v=v.split("="),u=v[0].startsWith("CC")?
v[0]:"CC"+v[0],A=v[1].split(",")[0].split(":").pop()):(u="CC"+m,m+=2,A=v);n.set(u,R(A))}}else n.set("CC1","und");else"urn:mpeg:dash:role:2011"==m&&null!=r&&(f.push(r),"captions"==r&&(g="caption"))}if(k)return null;k=al(c,"ContentProtection");var y=vl(k,a.i.dash.ignoreDrmInfo),z=R(c.getAttribute("lang")||"und"),D=c.getAttribute("label");(k=al(c,"Label"))&&k.length&&(k=k[0],k.textContent&&(D=k.textContent));k=al(c,"Representation");c=k.map(function(B){return Xm(a,b,y,g,z,D,d,f,n,B)}).filter(function(B){return!!B});
if(0==c.length){if(a.i.dash.ignoreEmptyAdaptationSet||h)return null;throw new M(2,4,4003);}if(!b.aa.contentType||"application"==b.aa.contentType)for(b.aa.contentType=Ym(c[0].mimeType,c[0].codecs),h=q(c),l=h.next();!l.done;l=h.next())l.value.type=b.aa.contentType;h=q(c);for(l=h.next();!l.done;l=h.next())for(l=l.value,m=q(y.drmInfos),r=m.next();!r.done;r=m.next())r=r.value,r.keyIds=r.keyIds&&l.keyIds?new Set(ia(r.keyIds).concat(ia(l.keyIds))):r.keyIds||l.keyIds;h=k.map(function(B){return B.getAttribute("id")}).filter(Kb);
return{id:b.aa.id||"__fake__"+a.m++,contentType:b.aa.contentType,language:z,Nf:d,streams:c,drmInfos:y.drmInfos,sd:e,Ue:h}}
function Xm(a,b,c,d,e,f,g,h,k,l){b.G=Tm(l,b.aa,null);if(!Zm(b.G))return null;var m=b.O.start;b.bandwidth=ll(l,"bandwidth",ql)||0;var n=b.G.contentType;n="text"==n||"application"==n;try{var r=function(z,D,B){return $m(a,z,D,B)};if(b.G.Nb)var u=Vl(b,r);else if(b.G.Na)u=am(b,a.f);else if(b.G.Ob)u=fm(b,r,a.f,!!a.o,a.i.dash.initialSegmentLimit);else{var v=b.G.oa,A=b.O.duration||0;u={ib:function(){return Promise.resolve(ug(m,A,v))}}}}catch(z){if(n&&4002==z.code)return null;throw z;}n=al(l,"ContentProtection");
n=zl(n,c,a.i.dash.ignoreDrmInfo);n=new Set(n?[n]:[]);al(l,"SupplementalProperty").some(function(z){return"tag:dolby.com,2018:dash:EC3_ExtensionType:2018"==z.getAttribute("schemeIdUri")&&"JOC"==z.getAttribute("value")})&&(b.G.mimeType="audio/eac3-joc");var y={id:a.m++,originalId:b.G.id,createSegmentIndex:function(){var z;return J(function(D){if(1==D.a){if(y.segmentIndex)return D.u(0);z=y;return t(D,u.ib(),3)}z.segmentIndex=D.b;w(D)})},segmentIndex:null,mimeType:b.G.mimeType,codecs:b.G.codecs,frameRate:b.G.frameRate,
pixelAspectRatio:b.G.pixelAspectRatio,bandwidth:b.bandwidth,width:b.G.width,height:b.G.height,kind:d,encrypted:0<c.drmInfos.length,drmInfos:c.drmInfos,keyIds:n,language:e,label:f,type:b.aa.contentType,primary:g,trickModeVideo:null,emsgSchemeIdUris:b.G.emsgSchemeIdUris,roles:h,channelsCount:b.G.$c,audioSamplingRate:b.G.audioSamplingRate,closedCaptions:k};return y}
p.Kb=function(){var a=this,b,c;return J(function(d){switch(d.a){case 1:return b=0,x(d,2),t(d,Nm(a),4);case 4:b=d.b;ua(d,3);break;case 2:c=C(d),a.s&&(c.severity=1,a.s.onError(c));case 3:if(!a.s)return d["return"]();Om(a,b);w(d)}})};function Om(a,b){0>a.h||a.g.R(Math.max(3,a.h-b,Ta(a.j)))}
function Tm(a,b,c){b=b||{contentType:"",mimeType:"",codecs:"",emsgSchemeIdUris:[],frameRate:void 0,pixelAspectRatio:void 0,$c:null,audioSamplingRate:null};c=c||b.oa;var d=al(a,"BaseURL").map(kl),e=a.getAttribute("contentType")||b.contentType,f=a.getAttribute("mimeType")||b.mimeType,g=a.getAttribute("codecs")||b.codecs,h=ll(a,"frameRate",sl)||b.frameRate,k=a.getAttribute("sar")||b.pixelAspectRatio,l=al(a,"InbandEventStream"),m=b.emsgSchemeIdUris.slice();l=q(l);for(var n=l.next();!n.done;n=l.next())n=
n.value.getAttribute("schemeIdUri"),m.includes(n)||m.push(n);l=al(a,"AudioChannelConfiguration");l=an(l)||b.$c;n=ll(a,"audioSamplingRate",rl)||b.audioSamplingRate;e||(e=Ym(f,g));return{oa:Mb(c,d),Nb:$k(a,"SegmentBase")||b.Nb,Na:$k(a,"SegmentList")||b.Na,Ob:$k(a,"SegmentTemplate")||b.Ob,width:ll(a,"width",rl)||b.width,height:ll(a,"height",rl)||b.height,contentType:e,mimeType:f,codecs:g,frameRate:h,pixelAspectRatio:k,emsgSchemeIdUris:m,id:a.getAttribute("id"),$c:l,audioSamplingRate:n}}
function an(a){a=q(a);for(var b=a.next();!b.done;b=a.next()){var c=b.value;if(b=c.getAttribute("schemeIdUri"))if(c=c.getAttribute("value"))switch(b){case "urn:mpeg:dash:outputChannelPositionList:2012":return c.trim().split(/ +/).length;case "urn:mpeg:dash:23003:3:audio_channel_configuration:2011":case "urn:dts:dash:audio_channel_configuration:2012":b=parseInt(c,10);if(!b)continue;return b;case "tag:dolby.com,2014:dash:audio_channel_configuration:2011":case "urn:dolby:dash:audio_channel_configuration:2011":if(b=
parseInt(c,16)){for(a=0;b;)b&1&&++a,b>>=1;return a}}}return null}function Zm(a){var b=a.Nb?1:0;b+=a.Na?1:0;b+=a.Ob?1:0;if(0==b)return"text"==a.contentType||"application"==a.contentType?!0:!1;1!=b&&(a.Nb&&(a.Na=null),a.Ob=null);return!0}
function bn(a,b,c,d){var e,f,g,h,k,l;return J(function(m){if(1==m.a)return e=Mb(b,[c]),f=Kc(e,a.i.retryParameters),f.method=d,g=a.s.networkingEngine.request(4,f),Fc(a.c,g),t(m,g.promise,2);h=m.b;if("HEAD"==d){if(!h.headers||!h.headers.date)return m["return"](0);k=h.headers.date}else k=Tb(h.data);l=Date.parse(k);return isNaN(l)?m["return"](0):m["return"](l-Date.now())})}
function Sm(a,b,c){var d,e,f,g,h,k,l,m;return J(function(n){switch(n.a){case 1:d=c.map(function(r){return{scheme:r.getAttribute("schemeIdUri"),value:r.getAttribute("value")}}),e=a.i.dash.clockSyncUri,!d.length&&e&&d.push({scheme:"urn:mpeg:dash:utc:http-head:2014",value:e}),f=q(d),g=f.next();case 2:if(g.done){n.u(4);break}h=g.value;x(n,5);k=h.scheme;l=h.value;switch(k){case "urn:mpeg:dash:utc:http-head:2014":case "urn:mpeg:dash:utc:http-head:2012":return n.u(7);case "urn:mpeg:dash:utc:http-xsdate:2014":case "urn:mpeg:dash:utc:http-iso:2014":case "urn:mpeg:dash:utc:http-xsdate:2012":case "urn:mpeg:dash:utc:http-iso:2012":return n.u(8);
case "urn:mpeg:dash:utc:direct:2014":case "urn:mpeg:dash:utc:direct:2012":return m=Date.parse(l),n["return"](isNaN(m)?0:m-Date.now());case "urn:mpeg:dash:utc:http-ntp:2014":case "urn:mpeg:dash:utc:ntp:2014":case "urn:mpeg:dash:utc:sntp:2014":Xa("NTP UTCTiming scheme is not supported");break;default:Xa("Unrecognized scheme in UTCTiming element",k)}n.u(9);break;case 7:return t(n,bn(a,b,l,"HEAD"),10);case 10:return n["return"](n.b);case 8:return t(n,bn(a,b,l,"GET"),11);case 11:return n["return"](n.b);
case 9:ua(n,3);break;case 5:C(n);case 3:g=f.next();n.u(2);break;case 4:return Xa("A UTCTiming element should always be given in live manifests! This content may not play on clients with bad clocks!"),n["return"](0)}})}
function Um(a,b,c,d){var e=d.getAttribute("schemeIdUri")||"",f=d.getAttribute("value")||"",g=ll(d,"timescale",rl)||1;d=q(al(d,"Event"));for(var h=d.next();!h.done;h=d.next()){h=h.value;var k=ll(h,"presentationTime",rl)||0,l=ll(h,"duration",rl)||0;k=k/g+b;l=k+l/g;null!=c&&(k=Math.min(k,b+c),l=Math.min(l,b+c));h={schemeIdUri:e,value:f,startTime:k,endTime:l,id:h.getAttribute("id")||"",eventElement:h};a.s.onTimelineRegionAdded(h)}}
function $m(a,b,c,d){var e,f,g,h,k;return J(function(l){if(1==l.a)return e=Qc,f=Ug(b,c,d,a.i.retryParameters),g=a.s.networkingEngine,h=g.request(e,f),Fc(a.c,h),t(l,h.promise,2);k=l.b;return l["return"](k.data)})}function Ym(a,b){return Ee(ed(a,b))?"text":a.split("/")[0]}K("shaka.dash.DashParser",Mm);Tf.mpd=function(){return new Mm};Rf["application/dash+xml"]=function(){return new Mm};Rf["video/vnd.mpeg.dash.mpd"]=function(){return new Mm};function cn(a,b,c,d){this.a=a;this.type=b;this.V=c;this.segments=d||null}function dn(a,b,c,d){this.id=a;this.name=b;this.a=c;this.value=void 0===d?null:d}dn.prototype.toString=function(){function a(d){return d.name+"="+(isNaN(Number(d.value))?'"'+d.value+'"':d.value)}var b="#"+this.name,c=this.a?this.a.map(a):[];this.value&&c.unshift(this.value);0<c.length&&(b+=":"+c.join(","));return b};
dn.prototype.getAttribute=function(a){var b=this.a.filter(function(c){return c.name==a});return b.length?b[0]:null};function en(a,b,c){return(a=a.getAttribute(b))?a.value:c||null}function fn(a,b){var c=a.getAttribute(b);if(!c)throw new M(2,4,4023,b);return c.value}function gn(a,b){this.V=b;this.a=a}function hn(a,b){this.name=a;this.value=b};function jn(a,b){return a.filter(function(c){return c.name==b})}function kn(a,b){return a.filter(function(c){return fn(c,"TYPE")==b})}function ln(a,b){var c=jn(a,b);return c.length?c[0]:null}function mn(a,b,c){c=void 0===c?0:c;return(a=ln(a,b))?Number(a.value):c};function nn(a){this.b=a;this.a=0}function on(a){pn(a,/[ \t]+/gm)}function pn(a,b){b.lastIndex=a.a;var c=b.exec(a.b);c=null==c?null:{position:c.index,length:c[0].length,results:c};if(a.a==a.b.length||null==c||c.position!=a.a)return null;a.a+=c.length;return c.results}function qn(a){return a.a==a.b.length?null:(a=pn(a,/[^ \t\n]*/gm))?a[0]:null};function rn(){this.a=0}
function sn(a,b,c){b=Tb(b);b=b.replace(/\r\n|\r(?=[^\n]|$)/gm,"\n").trim();var d=b.split(/\n+/m);if(!/^#EXTM3U($|[ \t\n])/m.test(d[0]))throw new M(2,4,4015);b=0;for(var e=!0,f=q(d),g=f.next();!g.done;g=f.next())if(g=g.value,/^#(?!EXT)/m.test(g)||e)e=!1;else if(g=tn(a.a++,g),--a.a,un.includes(g.name)){b=1;break}else"EXT-X-STREAM-INF"==g.name&&(e=!0);f=[];e=!0;g=q(ib(d));for(var h=g.next();!h.done;h=g.next()){var k=h.value;h=k.Y;var l=k.item;k=k.next;if(/^#(?!EXT)/m.test(l)||e)e=!1;else{l=tn(a.a++,
l);if(vn.includes(l.name)){if(1!=b)throw new M(2,4,4017);l=d.splice(h,d.length-h);d=c;e=[];g=[];h=null;l=q(l);for(k=l.next();!k.done;k=l.next())k=k.value,/^(#EXT)/.test(k)?(k=tn(a.a++,k),un.includes(k.name)?f.push(k):"EXT-X-MAP"==k.name?h=k:g.push(k)):/^#(?!EXT)/m.test(k)||(k=Mb([d],[k.trim()])[0],h&&g.push(h),e.push(new gn(k,g)),g=[]);return new cn(c,b,f,e)}f.push(l);"EXT-X-STREAM-INF"==l.name&&(l.a.push(new hn("URI",k)),e=!0)}}return new cn(c,b,f)}
function tn(a,b){var c=b.match(/^#(EXT[^:]*)(?::(.*))?$/);if(!c)throw new M(2,4,4016,b);var d=c[1],e=c[2];c=[];var f;if(e){e=new nn(e);var g;(g=pn(e,/^([^,=]+)(?:,|$)/g))&&(f=g[1]);for(var h=/([^=]+)=(?:"([^"]*)"|([^",]*))(?:,|$)/g;g=pn(e,h);)c.push(new hn(g[1],g[2]||g[3]))}return new dn(a,d,c,f)}var un="EXT-X-TARGETDURATION EXT-X-MEDIA-SEQUENCE EXT-X-DISCONTINUITY-SEQUENCE EXT-X-PLAYLIST-TYPE EXT-X-I-FRAMES-ONLY EXT-X-ENDLIST".split(" "),vn="EXTINF EXT-X-BYTERANGE EXT-X-DISCONTINUITY EXT-X-PROGRAM-DATE-TIME EXT-X-KEY EXT-X-DATERANGE EXT-X-MAP".split(" ");function wn(){}function xn(a){try{var b=yn(a);return rc({uri:a,Nd:a,data:b.data,headers:{"content-type":b.contentType}})}catch(c){return pc(c)}}function yn(a){var b=a.split(":");if(2>b.length||"data"!=b[0])throw new M(2,1,1004,a);b=b.slice(1).join(":").split(",");if(2>b.length)throw new M(2,1,1004,a);var c=b[0];a=window.decodeURIComponent(b.slice(1).join(","));b=c.split(";");c=b[0];var d=!1;1<b.length&&"base64"==b[b.length-1]&&(d=!0,b.pop());var e;d?e=cc(a):e=Xb(a);return{data:e,contentType:c}}
K("shaka.net.DataUriPlugin",wn);wn.parse=xn;Hc("data",xn);function zn(){var a=this;this.i=this.s=null;this.Ca=1;this.j=new Map;this.g=new Map;this.ta=new Set;this.a=new Map;this.b=null;this.J="";this.H=new rn;this.ca=0;this.h=new N(function(){a.Kb()});this.c=An;this.o=null;this.M=0;this.T=Infinity;this.m=new Ec;this.W=[];this.A=new Map;this.Ba=!1;this.f=new Map;this.D=null;this.I=new Map;this.v=new Map}p=zn.prototype;p.configure=function(a){this.i=a};
p.start=function(a,b){var c=this,d,e;return J(function(f){if(1==f.a)return c.s=b,t(f,Bn(c,Kc([a],c.i.retryParameters),0),2);if(3!=f.a)return d=f.b,c.J=d.uri,t(f,Cn(c,d.data),3);e=c.ca;0<e&&c.h.R(e);return f["return"](c.o)})};p.stop=function(){this.h&&(this.h.stop(),this.h=null);var a=[];this.m&&(a.push(this.m.destroy()),this.m=null);this.i=this.s=null;this.ta.clear();this.o=null;this.a.clear();this.g.clear();this.f.clear();this.j.clear();return Promise.all(a)};
p.update=function(){var a=this,b,c,d;return J(function(e){if(1==e.a){if(a.c==An)return e["return"]();b=[];a.D=null;c=Array.from(a.a.values());return c.length?t(e,Dn(a,c[0]),2):e.u(2)}for(d=1;d<c.length;d++)b.push(Dn(a,c[d]));return t(e,Promise.all(b),0)})};
function Dn(a,b){var c,d,e,f,g,h,k,l,m,n;return J(function(r){if(1==r.a)return c=En,d=b.be,t(r,Bn(a,Kc([d],a.i.retryParameters),0),2);if(3!=r.a){e=r.b;f=sn(a.H,e.data,e.uri);if(1!=f.type)throw new M(2,4,4017);g=jn(f.V,"EXT-X-DEFINE");h=Fn(a,g);k=b.stream;return t(r,Gn(a,b.uc,f,k.mimeType,b.Id,h),3)}l=r.b;k.segmentIndex.mb(l);l.length&&k.segmentIndex.Pa(l[0].startTime);m=l[l.length-1];if(n=ln(f.V,"EXT-X-ENDLIST"))Hn(a,c.$d),a.b.za(m.endTime);w(r)})}p.onExpirationUpdated=function(){};
function Cn(a,b){var c,d,e,f,g,h,k,l,m,n,r,u,v,A,y;return J(function(z){switch(z.a){case 1:c=sn(a.H,b,a.J);if(0!=c.type)throw new M(2,4,4022);d=jn(c.V,"EXT-X-DEFINE");for(var D=q(d),B=D.next();!B.done;B=D.next()){var E=B.value;B=en(E,"NAME");E=en(E,"VALUE");B&&E&&(a.j.has(B)||a.j.set(B,E))}e=jn(c.V,"EXT-X-MEDIA");f=jn(c.V,"EXT-X-STREAM-INF");D=q(f);for(B=D.next();!B.done;B=D.next()){var H=B.value;E=en(H,"AUDIO");B=en(H,"VIDEO");var G=en(H,"SUBTITLES");H=In(a,H);if(G){var F=Jn("text",H);a.f.set(G,
F);Bc(H,F)}E&&(G=Kn("audio",H),a.f.set(E,G));B&&(E=Kn("video",H),a.f.set(B,E))}return t(z,Ln(a,e),2);case 2:D=kn(e,"CLOSED-CAPTIONS");D=q(D);for(B=D.next();!B.done;B=D.next())G=B.value,B=Mn(G),E=fn(G,"GROUP-ID"),G=fn(G,"INSTREAM-ID"),a.A.get(E)||a.A.set(E,new Map),a.A.get(E).set(G,B);return t(z,Nn(a,f),3);case 3:return g=z.b,t(z,On(a,e),4);case 4:h=z.b;if(!a.s)throw new M(2,7,7001);if(a.Ba&&0==g.length)throw new M(2,4,4034);l=k=Infinity;m=q(a.a.values());for(n=m.next();!n.done;n=m.next())r=n.value,
k=Math.min(k,r.Jd),"text"!=r.stream.type&&(l=Math.min(l,r.Je-r.Jd));a.c!=An?(a.b=new S(0,a.i.defaultPresentationDelay||3*a.M),a.b.Pb(!1)):(a.b=new S(null,0),a.b.Pb(!0));Pn(a);if(a.c!=An)a.ca=a.T,u=En,a.c==u.Zd&&(v=a.b.rc,isNaN(a.i.availabilityWindowOverride)||(v=a.i.availabilityWindowOverride),a.b.pd(v));else for(a.b.za(l),a.b.offset(-k),A=q(a.a.values()),n=A.next();!n.done;n=A.next())y=n.value,y.stream.segmentIndex.offset(-k),y.stream.segmentIndex.Ka(0,l);a.o={presentationTimeline:a.b,variants:g,
textStreams:h,offlineSessionIds:[],minBufferTime:0};a.s.makeTextStreamsForClosedCaptions(a.o);return t(z,a.s.filter(a.o),0)}})}function Fn(a,b){for(var c=new Map,d=q(b),e=d.next();!e.done;e=d.next()){var f=e.value;e=en(f,"NAME");var g=en(f,"VALUE");f=en(f,"IMPORT");e&&g&&c.set(e,g);f&&(e=a.j.get(f))&&c.set(f,e)}return c}
function On(a,b){var c,d,e,f,g,h,k,l,m,n,r,u;return J(function(v){if(1==v.a)return c=kn(b,"SUBTITLES"),d=c.map(function(A){var y,z,D;return J(function(B){if(1==B.a){if(y=a.i.disableText)return B["return"](null);x(B,2);return t(B,Qn(a,A),4)}if(2!=B.a)return z=B.b,B["return"](z.stream);D=C(B);if(a.i.hls.ignoreTextStreamFailures)return B["return"](null);throw D;})}),t(v,Promise.all(d),2);e=v.b;f=q(c);for(g=f.next();!g.done;g=f.next())if(h=g.value,k=fn(h,"GROUP-ID"),l=a.f.get(k))if(m=a.g.get(k))for(n=
q(m),r=n.next();!r.done;r=n.next())u=r.value,u.stream.codecs=l;return v["return"](e.filter(function(A){return A}))})}function Ln(a,b){var c;return J(function(d){if(1==d.a)return b=b.filter(function(e){var f=en(e,"URI")||"";return"SUBTITLES"!=en(e,"TYPE")&&""!=f}),b.length?t(d,Qn(a,b[0]),2):d.u(2);c=b.slice(1).map(function(e){return Qn(a,e)});return t(d,Promise.all(c),0)})}
function Nn(a,b){var c,d,e;return J(function(f){if(1==f.a)return c=b.map(function(g){var h,k,l,m,n,r,u;return J(function(v){return 1==v.a?(h=en(g,"FRAME-RATE"),k=Number(fn(g,"BANDWIDTH")),l=en(g,"RESOLUTION"),m=q(l?l.split("x"):[null,null]),n=m.next().value,r=m.next().value,t(v,Rn(a,g,l,h),2)):(u=v.b)?v["return"](Sn(a,u.audio,u.video,k,n,r,h)):v["return"]([])})}),t(f,Promise.all(c),2);d=f.b;e=d.reduce(Ib,[]);e=e.filter(function(g){return null!=g});return f["return"](e)})}
function Rn(a,b,c,d){var e,f,g,h,k,l,m,n,r,u,v,A,y,z;return J(function(D){if(1==D.a)return e=Ob,f=In(a,b),g=en(b,"AUDIO"),h=en(b,"VIDEO"),l=(k=g||h)&&a.g.has(k)?a.g.get(k):[],m={audio:g?l:[],video:h?l:[]},r=!1,u=fn(b,"URI"),v=m.audio.find(function(B){return B&&B.uc==u}),A=Jn(e.Da,f),y=c||d||A,1!=f.length||y?!l.length&&1<f.length?(n=e.Da,f=[f.join(",")]):m.audio.length&&v?(n=e.fb,r=!0):n=m.video.length?e.fb:e.Da:n=e.fb,r?D.u(2):t(D,Tn(a,b,f,n),3);2!=D.a&&(z=D.b);if(z)m[z.stream.type]=[z];else if(null===
z)return D["return"](null);Un(m);return D["return"](m)})}function In(a,b){var c=[];a.i.disableVideo||c.push("avc1.42E01E");a.i.disableAudio||c.push("mp4a.40.2");var d=en(b,"CODECS",c.join(",")).split(/\s*,\s*/);c=new Set;var e=[];d=q(d);for(var f=d.next();!f.done;f=d.next()){f=f.value;var g=hd(f)[0];c.has(g)||(e.push(f),c.add(g))}return e}function Mn(a){a=en(a,"LANGUAGE")||"und";return R(a)}
function Un(a){a=q(a.audio.concat(a.video));for(var b=a.next();!b.done;b=a.next())if(b=b.value){var c=b.stream.codecs.split(",");c=c.filter(function(d){return"mp4a.40.34"!=d});b.stream.codecs=c.join(",")}}
function Sn(a,b,c,d,e,f,g){for(var h=q(c),k=h.next();!k.done;k=h.next()){k=k.value.stream;var l=f,m=g;k&&(k.width=Number(e)||void 0,k.height=Number(l)||void 0,k.frameRate=Number(m)||void 0)}e=a.i.disableAudio;if(!b.length||e)b=[null];e=a.i.disableVideo;if(!c.length||e)c=[null];e=[];b=q(b);for(f=b.next();!f.done;f=b.next())for(f=f.value,g=q(c),h=g.next();!h.done;h=g.next()){var n=h.value;h=f?f.stream:null;k=n?n.stream:null;l=f?f.stream.drmInfos:null;m=n?n.stream.drmInfos:null;n=(n?n.uc:"")+" - "+(f?
f.uc:"");h&&k&&!(l.length&&m.length?0<ae(l,m).length:1)||a.ta.has(n)||(h={id:a.Ca++,language:h?h.language:"und",primary:!!h&&h.primary||!!k&&k.primary,audio:h,video:k,bandwidth:d,allowedByApplication:!0,allowedByKeySystem:!0},e.push(h),a.ta.add(n))}return e}
function Qn(a,b){var c,d,e,f,g,h,k,l,m,n,r;return J(function(u){if(1==u.a){c=fn(b,"GROUP-ID");d="";var v=fn(b,"TYPE").toLowerCase();"subtitles"==v&&(v="text");e=v;"text"!=e&&c&&a.f.has(c)&&(d=a.f.get(c));f=Vn(fn(b,"URI"),a.j);if(a.a.has(f))return u["return"](a.a.get(f));g=Mn(b);h=en(b,"NAME");k=b.getAttribute("DEFAULT");l="YES"==k;v="audio"==e?(v=en(b,"CHANNELS"))?parseInt(v.split("/")[0],10):null:null;m=v;n=en(b,"CHARACTERISTICS");return t(u,Wn(a,f,d,e,g,l,h,m,null,n),2)}r=u.b;a.g.has(c)?a.g.get(c).push(r):
a.g.set(c,[r]);if(null==r)return u["return"](null);if(a.a.has(f))return u["return"](a.a.get(f));a.a.set(f,r);return u["return"](r)})}
function Tn(a,b,c,d){var e,f,g,h;return J(function(k){if(1==k.a){e=Vn(fn(b,"URI"),a.j);if(a.a.has(e))return k["return"](a.a.get(e));var l=en(b,"CLOSED-CAPTIONS");f="video"==d&&l&&"NONE"!=l?a.A.get(l):null;g=Kn(d,c);return t(k,Wn(a,e,g,d,"und",!1,null,null,f,null),2)}h=k.b;if(null==h)return k["return"](null);if(a.a.has(e))return k["return"](a.a.get(e));a.a.set(e,h);return k["return"](h)})}
function Wn(a,b,c,d,e,f,g,h,k,l){var m,n,r,u,v,A,y,z,D,B,E,H,G,F,I,O,U,P,Ga,aa,Ca,ya,Ra,Ha,Aa,Qb,Dg,el,fl,gl,hl,Eg,Fg,ze,il,jl;return J(function(Sa){switch(Sa.a){case 1:return m=Mb([a.J],[b])[0],t(Sa,Bn(a,Kc([m],a.i.retryParameters),0),2);case 2:n=Sa.b;m=n.uri;r=sn(a.H,n.data,m);if(1!=r.type)throw new M(2,4,4017);u=[];if(r.segments)for(v=q(r.segments),A=v.next();!A.done;A=v.next())y=A.value,z=jn(y.V,"EXT-X-KEY"),u.push.apply(u,ia(z));D=!1;B=[];E=new Set;H=q(u);for(G=H.next();!G.done;G=H.next())if(F=
G.value,I=fn(F,"METHOD"),"NONE"!=I){D=!0;if("AES-128"==I)return a.Ba=!0,Sa["return"](null);O=fn(F,"KEYFORMAT");if(P=(U=Xn[O])?U(F):null){if(P.keyIds)for(Ga=q(P.keyIds),aa=Ga.next();!aa.done;aa=Ga.next())Ca=aa.value,E.add(Ca);B.push(P)}}if(D&&!B.length)throw new M(2,4,4026);ya=jn(r.V,"EXT-X-DEFINE");Ra=Fn(a,ya);Yn(a,r);return t(Sa,Zn(a,d,c,r,Ra),3);case 3:return Ha=Sa.b,$n.includes(Ha)&&(c=""),Aa=new Map,x(Sa,4),t(Sa,Gn(a,b,r,Ha,Aa,Ra),6);case 6:Qb=Sa.b;ua(Sa,5);break;case 4:Dg=C(Sa);if(4035==Dg.code)return Xa("Skipping unsupported HLS stream",
Ha,b),Sa["return"](null);throw Dg;case 5:el=Qb[0].startTime;fl=Qb[Qb.length-1].endTime;gl=new T(Qb);hl="text"==d?"subtitle":void 0;Eg=[];if(l)for(Fg=q(l.split(",")),ze=Fg.next();!ze.done;ze=Fg.next())il=ze.value,Eg.push(il);jl={id:a.Ca++,originalId:g,createSegmentIndex:function(){return Promise.resolve()},segmentIndex:gl,mimeType:Ha,codecs:c,kind:hl,encrypted:D,drmInfos:B,keyIds:E,language:e,label:g,type:d,primary:f,trickModeVideo:null,emsgSchemeIdUris:null,frameRate:void 0,pixelAspectRatio:void 0,
width:void 0,height:void 0,bandwidth:void 0,roles:Eg,channelsCount:h,audioSamplingRate:null,closedCaptions:k};return Sa["return"]({stream:jl,uc:b,be:m,Jd:el,Je:fl,Id:Aa})}})}function Yn(a,b){var c=ln(b.V,"EXT-X-PLAYLIST-TYPE"),d=ln(b.V,"EXT-X-ENDLIST");d=c&&"VOD"==c.value||d;c=c&&"EVENT"==c.value&&!d;c=!d&&!c;d?Hn(a,An):(c?Hn(a,ao):Hn(a,bo),d=co(b.V,"EXT-X-TARGETDURATION"),d=Number(d.value),a.M=Math.max(d,a.M),a.T=Math.min(d,a.T))}
function eo(a,b,c,d){c=ln(c,"EXT-X-MAP");if(!c)return null;var e=fn(c,"URI");d=Vn(Mb([b],[e])[0],d);b=[d,en(c,"BYTERANGE","")].join("-");a.I.has(b)||(c=fo(d,c),a.I.set(b,c));return a.I.get(b)}function fo(a,b){var c=0,d=null,e=en(b,"BYTERANGE");e&&(c=e.split("@"),d=Number(c[0]),c=Number(c[1]),d=c+d-1);return new Vf(function(){return[a]},c,d)}
function go(a,b,c,d,e,f){var g=c.V,h=Vn(c.a,f);c=co(g,"EXTINF").value.split(",");c=d+Number(c[0]);f=0;var k=null;if(g=ln(g,"EXT-X-BYTERANGE"))f=g.value.split("@"),g=Number(f[0]),f=f[1]?Number(f[1]):b.a+1,k=f+g-1;return new Xf(d,c,function(){return[h]},f,k,a,e,0,Infinity)}function Pn(a){if(a.b){for(var b=q(a.W),c=b.next();!c.done;c=b.next())a.b.ob(c.value);a.W=[]}}
function Gn(a,b,c,d,e,f){var g,h,k,l,m,n,r,u,v,A,y,z,D,B,E,H,G,F,I,O,U;return J(function(P){switch(P.a){case 1:g=c.segments;k=mn(c.V,"EXT-X-MEDIA-SEQUENCE",0);if(a.c!=An&&e.has(k)){l=e.get(k);P.u(2);break}if(null!=a.D){P.u(3);break}h=eo(a,c.a,g[0].V,f);m=a;return t(P,ho(a,b,h,d,k,!1,g[0],f),4);case 4:m.D=P.b;case 3:l=a.D;case 2:n=g[0].a,ab(n.split("/").pop()),r=mn(c.V,"EXT-X-DISCONTINUITY-SEQUENCE"),u=a.v.get(r)||0,v=[],A=function(Ga){return ib(Ga)},y=q(A(g)),z=y.next();case 5:if(z.done){P.u(7);break}B=
D=z.value;E=B.Y;H=B.item;G=v[v.length-1];F=0==E?l:G.endTime;I=k+E;e.set(I,F);h=eo(a,c.a,H.V,f);O=ln(H.V,"EXT-X-DISCONTINUITY");if(!O){P.u(8);break}r++;return t(P,io(a,r,b,h,d,I,H,f,F),9);case 9:u=P.b;case 8:U=go(h,G,H,F,u,f);v.push(U);z=y.next();P.u(5);break;case 7:return a.W.push(v),Pn(a),P["return"](v)}})}
function io(a,b,c,d,e,f,g,h,k){var l,m;return J(function(n){if(1==n.a)return l=0,a.v.has(b)?(l=a.v.get(b),n.u(2)):t(n,ho(a,c,d,e,f,!0,g,h),3);2!=n.a&&(m=n.b,l=k-m,a.v.set(b,l));return n["return"](l)})}
function jo(a,b){var c,d,e,f,g,h;return J(function(k){switch(k.a){case 1:c=Qc;d=Ug(b.c(),b.b,b.a,a.i.retryParameters);if(a.i.hls.useFullSegmentsForStartTime)return k["return"](Bn(a,d,c));e=Ug(b.c(),b.b,b.b+2048-1,a.i.retryParameters);x(k,2);return t(k,Bn(a,e,c),4);case 4:return f=k.b,k["return"](f);case 2:g=C(k);if(7001==g.code)throw g;Xa("Unable to fetch a partial HLS segment! Falling back to a full segment request, which is expensive!  Your server should support Range requests and CORS preflights.",
e.uris[0]);return t(k,Bn(a,d,c),5);case 5:return h=k.b,k["return"](h)}})}
function ho(a,b,c,d,e,f,g,h){var k,l,m,n,r,u,v,A;return J(function(y){switch(y.a){case 1:k=go(c,null,g,0,0,h);if(a.o&&!f&&(l=a.a.get(b),m=l.Id.get(e),void 0!=m))return y["return"](m);d=d.toLowerCase();if($n.includes(d))throw Xa("Raw formats are not yet supported.  Skipping "+d),new M(1,4,4035);if("video/webm"==d)throw Xa("WebM in HLS is not yet supported.  Skipping."),new M(1,4,4035);if("video/mp4"!=d&&"audio/mp4"!=d){y.u(2);break}n=[jo(a,k)];c&&n.push(jo(a,c));return t(y,Promise.all(n),3);case 3:return r=
y.b,u=r[0],v=r[1]||r[0],y["return"](ko(b,u.uri,u.data,v.data));case 2:if("video/mp2t"!=d){y.u(4);break}return t(y,jo(a,k),5);case 5:return A=y.b,y["return"](lo(b,A.uri,A.data));case 4:throw new M(2,4,4030,b);}})}
function ko(a,b,c,d){var e=0;(new Mg).box("moov",Qg).box("trak",Qg).box("mdia",Qg).ea("mdhd",function(h){h.reader.skip(0==h.version?8:16);e=h.reader.K();h.parser.stop()}).parse(d,!0);if(!e)throw new M(2,4,4030,a,b);var f=0,g=!1;(new Mg).box("moof",Qg).box("traf",Qg).ea("tfdt",function(h){f=(0==h.version?h.reader.K():h.reader.rb())/e;g=!0;h.parser.stop()}).parse(c,!0);if(!g)throw new M(2,4,4030,a,b);return f}
function lo(a,b,c){function d(){f.seek(g+188);h=f.qa();71!=h&&(f.seek(g+192),h=f.qa());71!=h&&(f.seek(g+204),h=f.qa());71!=h&&e();f.Qd(1)}function e(){throw new M(2,4,4030,a,b);}for(var f=new V(c,0),g=0,h=0;;)if(g=f.C,h=f.qa(),71!=h&&e(),c=f.Mb(),8191==(c&8191))d();else if(c&16384)if(c=(f.qa()&48)>>4,0!=c&&2!=c||e(),3==c&&(c=f.qa(),f.skip(c)),1!=f.K()>>8)d();else{f.skip(3);c=f.qa()>>6;0!=c&&1!=c||e();0==f.qa()&&e();c=f.qa();var k=f.Mb(),l=f.Mb();return(1073741824*((c&14)>>1)+((k&65534)<<14|(l&65534)>>
1))/9E4}else d()}function Kn(a,b){if(1==b.length)return b[0];var c=Jn(a,b);if(null!=c)return c;throw new M(2,4,4025,b);}function Jn(a,b){for(var c=q(mo[a]),d=c.next();!d.done;d=c.next()){d=d.value;for(var e=q(b),f=e.next();!f.done;f=e.next())if(f=f.value,d.test(f.trim()))return f.trim()}return"text"==a?"":null}
function Vn(a,b){var c=String(a).replace(/%7B/g,"{").replace(/%7D/g,"}"),d=c.match(/{\$\w*}/g);if(d){d=q(d);for(var e=d.next();!e.done;e=d.next()){e=e.value;var f=e.slice(2,e.length-1),g=b.get(f);if(g)c=c.replace(e,g);else throw new M(2,4,4039,f);}}return c}
function Zn(a,b,c,d,e){var f,g,h,k,l,m,n,r,u,v;return J(function(A){if(1==A.a){f=Ob;g=Qc;h=Vn(d.segments[0].a,e);k=new qb(h);l=k.ja.split(".").pop();m=no[b];if(n=m[l])return A["return"](n);if(b==f.$)return c&&"vtt"!=c&&"wvtt"!=c?A["return"]("application/mp4"):A["return"]("text/vtt");r=Kc([h],a.i.retryParameters);r.method="HEAD";return t(A,Bn(a,r,g),2)}u=A.b;v=u.headers["content-type"];if(!v)throw new M(2,4,4021,l);return A["return"](v.split(";")[0])})}
function co(a,b){var c=ln(a,b);if(!c)throw new M(2,4,4024,b);return c}p.Kb=function(){var a=this,b,c;return J(function(d){if(1==d.a){if(!a.s)return d["return"]();x(d,2);return t(d,a.update(),4)}if(2!=d.a)return b=a.ca,a.h.R(b),ua(d,0);c=C(d);if(!a.s)return d["return"]();c.severity=1;a.s.onError(c);a.h.R(.1);w(d)})};function Hn(a,b){a.c=b;a.b&&a.b.Pb(a.c==An);a.c!=An||a.h.stop()}function Bn(a,b,c){if(!a.m)throw new M(2,7,7001);b=a.s.networkingEngine.request(c,b);Fc(a.m,b);return b.promise}
K("shaka.hls.HlsParser",zn);
var mo={audio:[/^vorbis$/,/^opus$/,/^flac$/,/^mp4a/,/^[ae]c-3$/],video:[/^avc/,/^hev/,/^hvc/,/^vp0?[89]/,/^av1$/],text:[/^vtt$/,/^wvtt/,/^stpp/]},$n=["audio/aac","audio/ac3","audio/ec3","audio/mpeg"],no={audio:{mp4:"audio/mp4",mp4a:"audio/mp4",m4s:"audio/mp4",m4i:"audio/mp4",m4a:"audio/mp4",cmfa:"audio/mp4",ts:"video/mp2t",aac:"audio/aac",ac3:"audio/ac3",ec3:"audio/ec3",mp3:"audio/mpeg"},video:{mp4:"video/mp4",mp4v:"video/mp4",m4s:"video/mp4",m4i:"video/mp4",m4v:"video/mp4",cmfv:"video/mp4",ts:"video/mp2t"},
text:{mp4:"application/mp4",m4s:"application/mp4",m4i:"application/mp4",cmft:"application/mp4",vtt:"text/vtt",ttml:"application/ttml+xml"}},Xn={"urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed":function(a){var b=fn(a,"METHOD");if(!["SAMPLE-AES","SAMPLE-AES-CTR"].includes(b))return null;b=fn(a,"URI");b=yn(b);b=L(b.data);b=Nb("com.widevine.alpha",[{initDataType:"cenc",initData:b}]);if(a=en(a,"KEYID"))b.keyIds=new Set([a.toLowerCase().substr(2)]);return b}},An="VOD",bo="EVENT",ao="LIVE",En={$d:An,sf:bo,
Zd:ao};Tf.m3u8=function(){return new zn};Rf["application/x-mpegurl"]=function(){return new zn};Rf["application/vnd.apple.mpegurl"]=function(){return new zn};function oo(a,b,c,d,e,f){if(200<=c&&299>=c&&202!=c)return{uri:e||d,Nd:d,data:b,headers:a,fromCache:!!a["x-shaka-from-cache"]};e=null;try{e=Wb(b)}catch(g){}throw new M(401==c||403==c?2:1,1,1001,d,c,e,a,f);};function po(){}function qo(a,b,c,d){var e=new ro;ad(b.headers).forEach(function(k,l){e.append(l,k)});var f=new so,g={wd:!1,Wd:!1};a=to(a,c,{body:b.body||void 0,headers:e,method:b.method,signal:f.signal,credentials:b.allowCrossSiteCredentials?"include":void 0},g,d);a=new oc(a,function(){g.wd=!0;f.abort();return Promise.resolve()});if(b=b.retryParameters.timeout){var h=new N(function(){g.Wd=!0;f.abort()});h.R(b/1E3);a["finally"](function(){h.stop()})}return a}
function to(a,b,c,d,e){var f,g,h,k,l,m,n,r,u,v,A,y,z,D;return J(function(B){switch(B.a){case 1:return f=uo,g=vo,m=l=0,n=Date.now(),x(B,2),t(B,f(a,c),4);case 4:return h=B.b,r=h.clone().body.getReader(),v=(u=h.headers.get("Content-Length"))?parseInt(u,10):0,A=function(E){function H(){var G,F;return J(function(I){switch(I.a){case 1:return x(I,2),t(I,r.read(),4);case 4:G=I.b;ua(I,3);break;case 2:return C(I),I["return"]();case 3:G.done||(l+=G.value.byteLength);F=Date.now();if(100<F-n||G.done)e(F-n,l-m,
v-l),m=l,n=F;G.done?E.close():(E.enqueue(G.value),H());w(I)}})}H()},new g({start:A}),t(B,h.arrayBuffer(),5);case 5:k=B.b;ua(B,3);break;case 2:y=C(B);if(d.wd)throw new M(1,1,7001,a,b);if(d.Wd)throw new M(1,1,1003,a,b);throw new M(1,1,1002,a,y,b);case 3:return z={},D=h.headers,D.forEach(function(E,H){z[H.trim()]=E}),B["return"](oo(z,k,h.status,a,h.url,b))}})}
function wo(){if(window.ReadableStream)try{new ReadableStream({})}catch(a){return!1}else return!1;return!(!window.fetch||!window.AbortController)}K("shaka.net.HttpFetchPlugin",po);po.isSupported=wo;po.parse=qo;var uo=window.fetch,so=window.AbortController,vo=window.ReadableStream,ro=window.Headers;wo()&&(Hc("http",qo,2),Hc("https",qo,2));function xo(){}
function yo(a,b,c,d){var e=new zo,f=Date.now(),g=0,h=new Promise(function(k,l){e.open(b.method,a,!0);e.responseType="arraybuffer";e.timeout=b.retryParameters.timeout;e.withCredentials=b.allowCrossSiteCredentials;e.onabort=function(){l(new M(1,1,7001,a,c))};e.onload=function(n){n=n.target;var r=n.getAllResponseHeaders().trim().split("\r\n"),u={};r=q(r);for(var v=r.next();!v.done;v=r.next())v=v.value.split(": "),u[v[0].toLowerCase()]=v.slice(1).join(": ");try{var A=oo(u,n.response,n.status,a,n.responseURL,
c);k(A)}catch(y){l(y)}};e.onerror=function(n){l(new M(1,1,1002,a,n,c))};e.ontimeout=function(){l(new M(1,1,1003,a,c))};e.onprogress=function(n){var r=Date.now();if(100<r-f||n.lengthComputable&&n.loaded==n.total)d(r-f,n.loaded-g,n.total-n.loaded),g=n.loaded,f=r};for(var m in b.headers)e.setRequestHeader(m.toLowerCase(),b.headers[m]);e.send(b.body)});return new oc(h,function(){e.abort();return Promise.resolve()})}K("shaka.net.HttpXHRPlugin",xo);xo.parse=yo;var zo=window.XMLHttpRequest;
Hc("http",yo,1);Hc("https",yo,1);function Ao(){this.a=this.f=this.b=0;this.c=new Map;this.g=0}function Bo(a,b){a.b+=b;var c=a.g;a.g++;a.c.set(c,b);return c}Ao.prototype.close=function(a,b){if(this.c.has(a)){var c=this.c.get(a);this.c["delete"](a);this.f+=c;this.a+=b}};function Co(a){var b=this;this.N=a;this.a=new Map;this.F=new Rc(function(){var c=Array.from(b.a.values());return Promise.all(c.map(function(d){return d["catch"](function(){})}))});this.b=[];this.Md=function(){};this.Ld=function(){};this.Cb=new Ao}Co.prototype.destroy=function(){return this.F.destroy()};function Do(a,b,c){a.Md=b;a.Ld=c}function Eo(a){var b=a.b.map(function(c){return c()});a.b=[];return Promise.all(b)}
function Fo(a,b,c,d,e,f){Sc(a.F);var g=Bo(a.Cb,d);d=(a.a.get(b)||Promise.resolve()).then(function(){var h,k,l,m,n,r,u;return J(function(v){if(1==v.a)return t(v,Go(a,c),2);h=v.b;if(a.F.a)throw new M(2,9,7001);if(e)for(m in k=L(h),l=new Yk(k),l.data)n=Number(m),r=l.data[n],u=l.a[n],a.Ld(r,u);a.Cb.close(g,h.byteLength);var A=a.Cb;a.Md(0==A.b?0:A.f/A.b,a.Cb.a);return v["return"](f(h))})});a.a.set(b,d);return d}
function Ho(a,b,c){Sc(a.F);var d=(a.a.get(b)||Promise.resolve()).then(function(){return J(function(e){return t(e,c(),0)})});a.a.set(b,d)}function Io(a){return J(function(b){return 1==b.a?t(b,Promise.all(a.a.values()),2):b["return"](a.Cb.a)})}function Go(a,b){var c,d,e,f;return J(function(g){if(1==g.a)return c=Qc,d=a.N.request(c,b),e=function(){return d.abort()},a.b.push(e),t(g,d.promise,2);f=g.b;Bc(a.b,e);return g["return"](f.data)})};function Jo(a,b){var c=this;this.c=a;this.b=a.objectStore(b);this.a=new Pb;a.onabort=function(d){d.preventDefault();c.a.reject()};a.onerror=function(d){d.preventDefault();c.a.reject()};a.oncomplete=function(){c.a.resolve()}}Jo.prototype.abort=function(){var a=this;return J(function(b){if(1==b.a){try{a.c.abort()}catch(c){}x(b,2);return t(b,a.a,4)}if(2!=b.a)return ua(b,0);C(b);w(b)})};
function Ko(a,b){return new Promise(function(c,d){var e=a.b.openCursor();e.onerror=d;e.onsuccess=function(){var f;return J(function(g){if(1==g.a){if(null==e.result)return c(),g["return"]();f=e.result;return t(g,b(f.key,f.value,f),2)}f["continue"]();w(g)})}})}Jo.prototype.store=function(){return this.b};Jo.prototype.promise=function(){return this.a};function Lo(a){this.b=a;this.a=[]}Lo.prototype.destroy=function(){return Promise.all(this.a.map(function(a){return a.abort()}))};function Mo(a,b){return No(a,b,"readwrite")}function No(a,b,c){c=a.b.transaction([b],c);var d=new Jo(c,b);a.a.push(d);d.promise().then(function(){Bc(a.a,d)},function(){Bc(a.a,d)});return d};function Oo(a,b,c){this.b=new Lo(a);this.c=b;this.a=c}p=Oo.prototype;p.destroy=function(){return this.b.destroy()};p.hasFixedKeySpace=function(){return!0};p.addSegments=function(){return Po(this.c)};p.removeSegments=function(a,b){return Qo(this,this.c,a,b)};p.getSegments=function(a){var b=this,c;return J(function(d){if(1==d.a)return t(d,Ro(b,b.c,a),2);c=d.b;return d["return"](c.map(function(e){return b.xd(e)}))})};p.addManifests=function(){return Po(this.a)};
p.updateManifestExpiration=function(a,b){var c=Mo(this.b,this.a),d=c.store();d.get(a).onsuccess=function(e){if(e=e.target.result)e.expiration=b,d.put(e,a)};return c.promise()};p.removeManifests=function(a,b){return Qo(this,this.a,a,b)};p.getManifests=function(a){var b=this,c;return J(function(d){if(1==d.a)return t(d,Ro(b,b.a,a),2);c=d.b;return d["return"](Promise.all(c.map(function(e){return b.Bb(e)})))})};
p.getAllManifests=function(){var a=this,b,c;return J(function(d){return 1==d.a?(b=No(a.b,a.a,"readonly"),c=new Map,t(d,Ko(b,function(e,f){var g;return J(function(h){if(1==h.a)return t(h,a.Bb(f),2);g=h.b;c.set(e,g);w(h)})}),2)):3!=d.a?t(d,b.promise(),3):d["return"](c)})};p.xd=function(a){return a};p.Bb=function(a){return Promise.resolve(a)};function Po(a){return Promise.reject(new M(2,9,9011,"Cannot add new value to "+a))}
p.add=function(a,b){var c=this,d,e,f,g,h,k,l;return J(function(m){if(1==m.a){d=Mo(c.b,a);e=d.store();f=[];g={};h=q(b);for(k=h.next();!k.done;g={Wb:g.Wb},k=h.next())l=k.value,g.Wb=e.add(l),g.Wb.onsuccess=function(n){return function(){f.push(n.Wb.result)}}(g);return t(m,d.promise(),2)}return m["return"](f)})};
function Qo(a,b,c,d){a=Mo(a.b,b);b=a.store();var e={};c=q(c);for(var f=c.next();!f.done;e={Vb:e.Vb},f=c.next())e.Vb=f.value,b["delete"](e.Vb).onsuccess=function(g){return function(){return d(g.Vb)}}(e);return a.promise()}
function Ro(a,b,c){var d,e,f,g,h,k,l;return J(function(m){if(1==m.a){d=No(a.b,b,"readonly");e=d.store();f={};g=[];h={};k=q(c);for(l=k.next();!l.done;h={wb:h.wb,ub:h.ub},l=k.next())h.ub=l.value,h.wb=e.get(h.ub),h.wb.onsuccess=function(n){return function(){void 0==n.wb.result&&g.push(n.ub);f[n.ub]=n.wb.result}}(h);return t(m,d.promise(),2)}if(g.length)throw new M(2,9,9012,"Could not find values for "+g);return m["return"](c.map(function(n){return f[n]}))})};function So(a){this.a=new Lo(a)}So.prototype.destroy=function(){return this.a.destroy()};So.prototype.getAll=function(){var a=this,b,c;return J(function(d){return 1==d.a?(b=No(a.a,"session-ids","readonly"),c=[],t(d,Ko(b,function(e,f){c.push(f)}),2)):3!=d.a?t(d,b.promise(),3):d["return"](c)})};So.prototype.add=function(a){var b=Mo(this.a,"session-ids"),c=b.store();a=q(a);for(var d=a.next();!d.done;d=a.next())c.add(d.value);return b.promise()};
So.prototype.remove=function(a){var b=this,c;return J(function(d){return 1==d.a?(c=Mo(b.a,"session-ids"),t(d,Ko(c,function(e,f,g){a.includes(f.sessionId)&&g["delete"]()}),2)):t(d,c.promise(),0)})};function To(){this.a=new Map}To.prototype.destroy=function(){for(var a=[],b=q(this.a.values()),c=b.next();!c.done;c=b.next())a.push(c.value.destroy());this.a.clear();return Promise.all(a)};To.prototype.init=function(){var a=this;Uo.forEach(function(e,f){var g=e();g&&a.a.set(f,g)});for(var b=[],c=q(this.a.values()),d=c.next();!d.done;d=c.next())b.push(d.value.init());return Promise.all(b)};
function Vo(a){var b=null;a.a.forEach(function(c,d){c.getCells().forEach(function(e,f){e.hasFixedKeySpace()||b||(b={path:{ya:d,ba:f},ba:e})})});if(b)return b;throw new M(2,9,9013,"Could not find a cell that supports add-operations");}function Wo(a,b){a.a.forEach(function(c,d){c.getCells().forEach(function(e,f){b({ya:d,ba:f},e)})})}
function Xo(a,b,c){a=a.a.get(b);if(!a)throw new M(2,9,9013,"Could not find mechanism with name "+b);b=a.getCells().get(c);if(!b)throw new M(2,9,9013,"Could not find cell with name "+c);return b}function Yo(a,b){a.a.forEach(function(c){b(c.getEmeSessionCell())})}function Zo(a){var b=Array.from(a.a.keys());if(!b.length)throw new M(2,9,9E3,"No supported storage mechanisms found");return a.a.get(b[0]).getEmeSessionCell()}
function $o(a){var b,c,d;return J(function(e){return 1==e.a?(b=Array.from(a.a.values()),c=0<b.length,c||(d=Uo,d.forEach(function(f){(f=f())&&b.push(f)})),t(e,Promise.all(b.map(function(f){return f.erase()})),2)):c?e.u(0):t(e,Promise.all(b.map(function(f){return f.destroy()})),0)})}function ap(a,b){Uo.set(a,b)}K("shaka.offline.StorageMuxer",To);To.unregister=function(a){Uo["delete"](a)};To.register=ap;To.prototype.destroy=To.prototype.destroy;var Uo=new Map;function bp(){Oo.apply(this,arguments)}pa(bp,Oo);bp.prototype.updateManifestExpiration=function(a,b){var c=this,d,e,f;return J(function(g){d=Mo(c.b,c.a);e=d.store();f=new Pb;e.get(a).onsuccess=function(h){(h=h.target.result)?(h.expiration=b,e.put(h),f.resolve()):f.reject(new M(2,9,9012,"Could not find values for "+a))};return t(g,Promise.all([d.promise(),f]),0)})};
bp.prototype.Bb=function(a){var b,c,d,e,f,g;return J(function(h){if(1==h.a){b=[];for(c=0;c<a.periods.length;++c)d=c==a.periods.length-1?a.duration:a.periods[c+1].startTime,e=d-a.periods[c].startTime,f=cp(a.periods[c],e),b.push(f);return t(h,vm(b),2)}g=h.b;return h["return"]({creationTime:0,originalManifestUri:a.originalManifestUri,duration:a.duration,size:a.size,expiration:null==a.expiration?Infinity:a.expiration,streams:g,sessionIds:a.sessionIds,drmInfo:a.drmInfo,appMetadata:a.appMetadata})})};
function cp(a,b){dp(a);for(var c=q(a.streams),d=c.next();!d.done;d=c.next());return a.streams.map(function(e){return ep(e,a.startTime,b)})}
function ep(a,b,c){var d=a.initSegmentUri?fp(a.initSegmentUri):null,e=b+a.presentationTimeOffset,f=b+c;return{id:a.id,originalId:null,primary:a.primary,type:a.contentType,mimeType:a.mimeType,codecs:a.codecs,frameRate:a.frameRate,pixelAspectRatio:void 0,kind:a.kind,language:a.language,label:a.label,width:a.width,height:a.height,initSegmentKey:d,encrypted:a.encrypted,keyIds:new Set([a.keyId]),segments:a.segments.map(function(g){var h=fp(g.uri);return{startTime:b+g.startTime,endTime:b+g.endTime,dataKey:h,
initSegmentKey:d,appendWindowStart:b,appendWindowEnd:f,timestampOffset:e}}),variantIds:a.variantIds,roles:[],audioSamplingRate:null,channelsCount:null,closedCaptions:null}}bp.prototype.xd=function(a){return{data:a.data}};function fp(a){var b;if((b=/^offline:[0-9]+\/[0-9]+\/([0-9]+)$/.exec(a))||(b=/^offline:segment\/([0-9]+)$/.exec(a)))return Number(b[1]);throw new M(2,9,9004,"Could not parse uri "+a);}
function dp(a){var b=a.streams.filter(function(h){return"audio"==h.contentType});a=a.streams.filter(function(h){return"video"==h.contentType});if(!b.every(function(h){return h.variantIds})||!a.every(function(h){return h.variantIds})){for(var c=q(b),d=c.next();!d.done;d=c.next())d.value.variantIds=[];c=q(a);for(d=c.next();!d.done;d=c.next())d.value.variantIds=[];c=0;if(a.length&&!b.length){var e=c++,f=q(a);for(d=f.next();!d.done;d=f.next())d.value.variantIds.push(e)}if(!a.length&&b.length)for(e=c++,
f=q(b),d=f.next();!d.done;d=f.next())d.value.variantIds.push(e);if(a.length&&b.length)for(b=q(b),d=b.next();!d.done;d=b.next())for(d=d.value,e=q(a),f=e.next();!f.done;f=e.next()){f=f.value;var g=c++;d.variantIds.push(g);f.variantIds.push(g)}}};function gp(){Oo.apply(this,arguments)}pa(gp,Oo);
gp.prototype.Bb=function(a){var b,c,d,e,f,g;return J(function(h){if(1==h.a){b=[];for(c=0;c<a.periods.length;++c){d=c==a.periods.length-1?a.duration:a.periods[c+1].startTime;e=d-a.periods[c].startTime;for(var k=a.periods[c],l=[],m=q(k.streams),n=m.next();!n.done;n=m.next())n=n.value,0!=n.variantIds.length&&l.push(hp(n,k.startTime,k.startTime+e));f=l;b.push(f)}return t(h,vm(b),2)}g=h.b;return h["return"]({appMetadata:a.appMetadata,creationTime:0,drmInfo:a.drmInfo,duration:a.duration,expiration:null==
a.expiration?Infinity:a.expiration,originalManifestUri:a.originalManifestUri,sessionIds:a.sessionIds,size:a.size,streams:g})})};
function hp(a,b,c){return{id:a.id,originalId:a.originalId,primary:a.primary,type:a.contentType,mimeType:a.mimeType,codecs:a.codecs,frameRate:a.frameRate,pixelAspectRatio:a.pixelAspectRatio,kind:a.kind,language:a.language,label:a.label,width:a.width,height:a.height,encrypted:a.encrypted,keyIds:new Set([a.keyId]),segments:a.segments.map(function(d){return{startTime:b+d.startTime,endTime:b+d.endTime,initSegmentKey:a.initSegmentKey,appendWindowStart:b,appendWindowEnd:c,timestampOffset:b-a.presentationTimeOffset,
dataKey:d.dataKey}}),variantIds:a.variantIds,roles:[],audioSamplingRate:null,channelsCount:null,closedCaptions:null}};function ip(){Oo.apply(this,arguments)}pa(ip,Oo);ip.prototype.hasFixedKeySpace=function(){return!1};ip.prototype.addSegments=function(a){return this.add(this.c,a)};ip.prototype.addManifests=function(a){return this.add(this.a,a)};ip.prototype.Bb=function(a){null==a.expiration&&(a.expiration=Infinity);return Promise.resolve(a)};function jp(){this.h=this.f=this.c=this.b=this.a=this.g=null}p=jp.prototype;
p.init=function(){var a=this,b=new Pb,c=window.indexedDB.open("shaka_offline_db",5);c.onsuccess=function(){var d=c.result;a.g=d;var e=d.objectStoreNames;e=e.contains("manifest")&&e.contains("segment")?new bp(d,"segment","manifest"):null;a.a=e;e=d.objectStoreNames;e=e.contains("manifest-v2")&&e.contains("segment-v2")?new gp(d,"segment-v2","manifest-v2"):null;a.b=e;e=d.objectStoreNames;e=e.contains("manifest-v3")&&e.contains("segment-v3")?new gp(d,"segment-v3","manifest-v3"):null;a.c=e;e=d.objectStoreNames;
e=e.contains("manifest-v5")&&e.contains("segment-v5")?new ip(d,"segment-v5","manifest-v5"):null;a.f=e;d=d.objectStoreNames.contains("session-ids")?new So(d):null;a.h=d;b.resolve()};c.onupgradeneeded=function(){for(var d=c.result,e=q(["segment-v5","manifest-v5","session-ids"]),f=e.next();!f.done;f=e.next())f=f.value,d.objectStoreNames.contains(f)||d.createObjectStore(f,{autoIncrement:!0})};c.onerror=function(d){b.reject(new M(2,9,9001,c.error));d.preventDefault()};return b};
p.destroy=function(){var a=this;return J(function(b){switch(b.a){case 1:if(!a.a){b.u(2);break}return t(b,a.a.destroy(),2);case 2:if(!a.b){b.u(4);break}return t(b,a.b.destroy(),4);case 4:if(!a.c){b.u(6);break}return t(b,a.c.destroy(),6);case 6:if(!a.f){b.u(8);break}return t(b,a.f.destroy(),8);case 8:if(!a.h){b.u(10);break}return t(b,a.h.destroy(),10);case 10:a.g&&a.g.close(),w(b)}})};
p.getCells=function(){var a=new Map;this.a&&a.set("v1",this.a);this.b&&a.set("v2",this.b);this.c&&a.set("v3",this.c);this.f&&a.set("v5",this.f);return a};p.getEmeSessionCell=function(){return this.h};
p.erase=function(){var a=this;return J(function(b){switch(b.a){case 1:if(!a.a){b.u(2);break}return t(b,a.a.destroy(),2);case 2:if(!a.b){b.u(4);break}return t(b,a.b.destroy(),4);case 4:if(!a.c){b.u(6);break}return t(b,a.c.destroy(),6);case 6:if(!a.f){b.u(8);break}return t(b,a.f.destroy(),8);case 8:return a.g&&a.g.close(),t(b,kp(),10);case 10:return a.g=null,a.a=null,a.b=null,a.c=null,a.f=null,t(b,a.init(),0)}})};
function kp(){var a=new Pb,b=window.indexedDB.deleteDatabase("shaka_offline_db");b.onblocked=function(){};b.onsuccess=function(){a.resolve()};b.onerror=function(c){a.reject(new M(2,9,9001,b.error));c.preventDefault()};return a}ap("idb",function(){return md("CrKey")||!window.indexedDB?null:new jp});function lp(a,b,c,d){this.a=a;this.g=b;this.f=c;this.c=d;this.b=["offline:",a,"/",b,"/",c,"/",d].join("")}lp.prototype.ya=function(){return this.g};lp.prototype.ba=function(){return this.f};lp.prototype.key=function(){return this.c};lp.prototype.toString=function(){return this.b};
function mp(a){a=/^offline:([a-z]+)\/([^/]+)\/([^/]+)\/([0-9]+)$/.exec(a);if(null==a)return null;var b=a[1];if("manifest"!=b&&"segment"!=b)return null;var c=a[2];if(!c)return null;var d=a[3];return d&&null!=b?new lp(b,c,d,Number(a[4])):null};function np(a,b){this.b=a;this.a=b}
function op(a,b){var c=new S(null,0);c.za(b.duration);var d=b.streams.filter(function(k){return"audio"==k.type}),e=b.streams.filter(function(k){return"video"==k.type});d=pp(a,d,e,c);e=b.streams.filter(function(k){return"text"==k.type}).map(function(k){return qp(a,k,c)});var f=b.drmInfo?[b.drmInfo]:[];if(b.drmInfo)for(var g=q(d.values()),h=g.next();!h.done;h=g.next())h=h.value,h.audio&&h.audio.encrypted&&(h.audio.drmInfos=f),h.video&&h.video.encrypted&&(h.video.drmInfos=f);return{presentationTimeline:c,
minBufferTime:2,offlineSessionIds:b.sessionIds,variants:Array.from(d.values()),textStreams:e}}
function pp(a,b,c,d){for(var e=new Set,f=q(b),g=f.next();!g.done;g=f.next()){var h=q(g.value.variantIds);for(g=h.next();!g.done;g=h.next())e.add(g.value)}f=q(c);for(g=f.next();!g.done;g=f.next())for(h=q(g.value.variantIds),g=h.next();!g.done;g=h.next())e.add(g.value);f=new Map;e=q(e);for(g=e.next();!g.done;g=e.next())g=g.value,f.set(g,{id:g,language:"",primary:!1,audio:null,video:null,bandwidth:0,allowedByApplication:!0,allowedByKeySystem:!0});b=q(b);for(e=b.next();!e.done;e=b.next())for(e=e.value,
g=qp(a,e,d),h=q(e.variantIds),e=h.next();!e.done;e=h.next())e=f.get(e.value),e.language=g.language,e.primary=e.primary||g.primary,e.audio=g;c=q(c);for(b=c.next();!b.done;b=c.next())for(e=b.value,b=qp(a,e,d),g=q(e.variantIds),e=g.next();!e.done;e=g.next())e=f.get(e.value),e.primary=e.primary||b.primary,e.video=b;return f}
function qp(a,b,c){var d=b.segments.map(function(e){return rp(a,e)});c.ob(d);return{id:b.id,originalId:b.originalId,createSegmentIndex:function(){return Promise.resolve()},segmentIndex:new T(d),mimeType:b.mimeType,codecs:b.codecs,width:b.width||void 0,height:b.height||void 0,frameRate:b.frameRate,pixelAspectRatio:b.pixelAspectRatio,kind:b.kind,encrypted:b.encrypted,drmInfos:[],keyIds:b.keyIds,language:b.language,label:b.label,type:b.type,primary:b.primary,trickModeVideo:null,emsgSchemeIdUris:null,
roles:b.roles,channelsCount:b.channelsCount,audioSamplingRate:b.audioSamplingRate,closedCaptions:b.closedCaptions}}function rp(a,b){var c=new lp("segment",a.b,a.a,b.dataKey);return new Xf(b.startTime,b.endTime,function(){return[c.toString()]},0,null,null!=b.initSegmentKey?sp(a,b.initSegmentKey):null,b.timestampOffset,b.appendWindowStart,b.appendWindowEnd)}function sp(a,b){var c=new lp("segment",a.b,a.a,b);return new Vf(function(){return[c.toString()]},0,null)};function tp(){this.a=null}p=tp.prototype;p.configure=function(){};
p.start=function(a,b){var c=this,d,e,f,g,h,k,l;return J(function(m){switch(m.a){case 1:d=mp(a);c.a=d;if(null==d||"manifest"!=d.a)throw new M(2,1,9004,a);e=new To;ta(m);return t(m,e.init(),4);case 4:return t(m,Xo(e,d.ya(),d.ba()),5);case 5:return f=m.b,t(m,f.getManifests([d.key()]),6);case 6:return g=m.b,h=g[0],k=new np(d.ya(),d.ba()),l=op(k,h),b.makeTextStreamsForClosedCaptions(l),m["return"](l);case 2:return va(m),t(m,e.destroy(),7);case 7:wa(m,0)}})};p.stop=function(){return Promise.resolve()};
p.update=function(){};p.onExpirationUpdated=function(a,b){var c=this,d,e,f,g,h,k,l;return J(function(m){switch(m.a){case 1:return d=c.a,e=new To,x(m,2,3),t(m,e.init(),5);case 5:return t(m,Xo(e,d.ya(),d.ba()),6);case 6:return f=m.b,t(m,f.getManifests([d.key()]),7);case 7:g=m.b;h=g[0];k=h.sessionIds.includes(a);l=void 0==h.expiration||h.expiration>b;if(!k||!l){m.u(3);break}return t(m,f.updateManifestExpiration(d.key(),b),3);case 3:return va(m),t(m,e.destroy(),10);case 10:wa(m,0);break;case 2:C(m),m.u(3)}})};
Rf["application/x-offline-manifest"]=function(){return new tp};function up(){}function vp(a){var b=mp(a);b&&"manifest"==b.a?(a={uri:a,Nd:a,data:new ArrayBuffer(0),headers:{"content-type":"application/x-offline-manifest"}},a=rc(a)):a=b&&"segment"==b.a?wp(b.key(),b):pc(new M(2,1,9004,a));return a}
function wp(a,b){var c=new To;return rc(void 0).U(function(){return c.init()}).U(function(){return Xo(c,b.ya(),b.ba())}).U(function(d){return d.getSegments([b.key()])}).U(function(d){return{uri:b,data:d[0].data,headers:{}}})["finally"](function(){return c.destroy()})}K("shaka.offline.OfflineScheme",up);up.plugin=vp;Hc("offline",vp);function xp(a,b,c){var d,e,f,g,h,k;return J(function(l){switch(l.a){case 1:d=[];for(var m=[],n=q(c),r=n.next();!r.done;r=n.next()){r=r.value;for(var u=!1,v=q(m),A=v.next();!A.done;A=v.next())if(A=A.value,yp(A.info,r)){A.sessionIds.push(r.sessionId);u=!0;break}u||m.push({info:r,sessionIds:[r.sessionId]})}e=q(m);f=e.next();case 2:if(f.done){l.u(4);break}g=f.value;h=zp(a,b,g);return t(l,h,5);case 5:k=l.b;d=d.concat(k);f=e.next();l.u(2);break;case 4:return l["return"](d)}})}
function zp(a,b,c){var d,e;return J(function(f){switch(f.a){case 1:return d=new rd({nb:b,onError:function(){},oc:function(){},onExpirationUpdated:function(){},onEvent:function(){}}),x(f,2),d.configure(a),t(f,zd(d,c.info.keySystem,c.info.licenseUri,c.info.serverCertificate,c.info.audioCapabilities,c.info.videoCapabilities),4);case 4:ua(f,3);break;case 2:return C(f),t(f,d.destroy(),5);case 5:return f["return"]([]);case 3:return x(f,6),t(f,Id(d),8);case 8:ua(f,7);break;case 6:return C(f),t(f,d.destroy(),
9);case 9:return f["return"]([]);case 7:return e=[],t(f,Promise.all(c.sessionIds.map(function(g){return J(function(h){if(1==h.a)return x(h,2),t(h,Jd(d,g),4);if(2!=h.a)return e.push(g),ua(h,0);C(h);w(h)})})),10);case 10:return t(f,d.destroy(),11);case 11:return f["return"](e)}})}
function yp(a,b){function c(d,e){return d.robustness==e.robustness&&d.contentType==e.contentType}return a.keySystem==b.keySystem&&a.licenseUri==b.licenseUri&&Cc(a.audioCapabilities,b.audioCapabilities,c)&&Cc(a.videoCapabilities,b.videoCapabilities,c)};function Ap(a,b,c){var d=b.presentationTimeline.getDuration();b=Bp(b);return{offlineUri:null,originalManifestUri:a,duration:d,size:0,expiration:Infinity,tracks:b,appMetadata:c}}function Cp(a,b){var c=op(new np(a.ya(),a.ba()),b),d=b.appMetadata||{};c=Bp(c);return{offlineUri:a.toString(),originalManifestUri:b.originalManifestUri,duration:b.duration,size:b.size,expiration:b.expiration,tracks:c,appMetadata:d}}
function Bp(a){var b=[],c=xf(a.variants);c=q(c);for(var d=c.next();!d.done;d=c.next())b.push(qf(d.value));a=q(a.textStreams);for(c=a.next();!c.done;c=a.next())b.push(rf(c.value));return b};function Dp(){this.a={}}function Ep(a,b,c){c=c.endTime-c.startTime;return Fp(a,b)*c}function Fp(a,b){var c=a.a[b];null==c&&(c=0);return c};function Gp(a,b,c){a.variants=a.variants.filter(function(d){return nf(d,b,c)})}function Hp(a){a.variants=a.variants.filter(function(b){var c=!0;b.audio&&(c=c&&Oe(b.audio));b.video&&(c=c&&Oe(b.video));return c})}function Ip(a,b){a.variants=a.variants.filter(function(c){return $d(b,c)})};function Jp(a){var b=this;if(a&&a.constructor!=W)throw new M(2,9,9008);this.N=this.i=null;a?(this.i=a.i,this.N=a.Fb()):(this.i=Sh(),this.N=new Gc);this.sc=[];this.Lb=[];this.dd=[];this.a=new Map;this.a.set(null,Promise.resolve(null));this.b=new Map;var c=!a;this.F=new Rc(function(){var d,e,f,g,h;return J(function(k){switch(k.a){case 1:return t(k,Promise.all(b.dd.map(function(l){return Eo(l)})),2);case 2:d=function(){};e=[];f=q(b.Lb);for(g=f.next();!g.done;g=f.next())h=g.value,e.push(h.then(d,d));
return t(k,Promise.all(e),3);case 3:if(!c){k.u(4);break}return t(k,b.N.destroy(),4);case 4:b.i=null,b.N=null,w(k)}})})}function Kp(){if(id())a:{var a=q(Uo.values());for(var b=a.next();!b.done;b=a.next())if(b=b.value,b=b()){b.destroy();a=!0;break a}a=!1}else a=!1;return a}p=Jp.prototype;p.destroy=function(){return this.F.destroy()};
p.configure=function(a,b){2==arguments.length&&"string"==typeof a&&(a=Qh(a,b));a.manifest&&a.manifest.dash&&"defaultPresentationDelay"in a.manifest.dash&&(Eb("manifest.dash.defaultPresentationDelay configuration","Please Use manifest.defaultPresentationDelay instead."),a.manifest.defaultPresentationDelay=a.manifest.dash.defaultPresentationDelay,delete a.manifest.dash.defaultPresentationDelay);return Uh(this.i,a)};p.getConfiguration=function(){var a=Sh();Uh(a,this.i,Sh());return a};p.Fb=function(){return this.N};
p.store=function(a,b,c){var d=this,e=this.getConfiguration(),f=new Co(this.N);this.dd.push(f);b=Lp(this,a,b||{},function(){var h;return J(function(k){if(1==k.a)return t(k,Qf(a,d.N,e.manifest.retryParameters,c||null),2);h=k.b;return k["return"](Lb(h))})},e,f);var g=new oc(b,function(){return Eo(f)});g["finally"](function(){Bc(d.dd,f)});g.then=function(h){Eb("shaka.offline.Storage.store.then","Storage operations now return a shaka.util.AbortableOperation, rather than a promise.  Please update to conform to this new API; you can use the |chain| method instead.");
return g.promise.then(h)};return Mp(this,g)};p.Be=function(){Eb("shaka.offline.Storage.getStoreInProgress","Multiple concurrent downloads are now supported.");return!1};
function Lp(a,b,c,d,e,f){var g,h,k,l,m,n,r,u,v,A,y;return J(function(z){switch(z.a){case 1:return Np(),h=g=null,k=new To,m=l=null,x(z,2,3),t(z,d(),5);case 5:return g=z.b,t(z,Op(a,b,g,e),6);case 6:n=z.b;Pp(a);r=!n.presentationTimeline.S()&&!n.presentationTimeline.Ua();if(!r)throw new M(2,9,9005,b);return t(z,Qp(a,n,function(D){m=m||D},e),7);case 7:h=z.b;Pp(a);if(m)throw m;return t(z,a.gb(n,h,e),8);case 8:return t(z,k.init(),9);case 9:return Pp(a),t(z,Vo(k),10);case 10:return l=z.b,Pp(a),t(z,Rp(a,l.ba,
h,n,b,c,e,f),11);case 11:u=z.b;Pp(a);if(m)throw m;return t(z,l.ba.addManifests([u]),12);case 12:return v=z.b,Pp(a),A=new lp("manifest",l.path.ya,l.path.ba,v[0]),z["return"](Cp(A,u));case 3:return va(z),a.sc=[],t(z,k.destroy(),13);case 13:if(!g){z.u(14);break}return t(z,g.stop(),14);case 14:if(!h){z.u(16);break}return t(z,h.destroy(),16);case 16:wa(z,0);break;case 2:y=C(z);if(!l){z.u(18);break}return t(z,l.ba.removeSegments(a.sc,function(){}),18);case 18:throw m||y;}})}
p.gb=function(a,b,c){var d,e,f,g,h,k,l,m,n,r,u,v,A,y,z;return J(function(D){if(1==D.a){d={width:Infinity,height:Infinity};Gp(a,c.restrictions,d);Hp(a);Ip(a,b);e=[];f=c.preferredAudioChannelCount;lf(a,f);g=q(a.variants);for(h=g.next();!h.done;h=g.next())k=h.value,e.push(qf(k));l=q(a.textStreams);for(m=l.next();!m.done;m=l.next())n=m.value,e.push(rf(n));return t(D,c.offline.trackSelectionCallback(e),2)}r=D.b;u=new Set;v=new Set;A=q(r);for(y=A.next();!y.done;y=A.next())z=y.value,"variant"==z.type&&u.add(z.id),
"text"==z.type&&v.add(z.id);a.variants=a.variants.filter(function(B){return u.has(B.id)});a.textStreams=a.textStreams.filter(function(B){return v.has(B.id)});Sp(a);w(D)})};
function Rp(a,b,c,d,e,f,g,h){var k,l,m,n,r,u,v,A,y,z,D,B;return J(function(E){switch(E.a){case 1:return k=Ap(e,d,f),l=g.offline.progressCallback,m=function(H,G){k.size=G;l(k,H)},n=function(H,G){v&&g.offline.usePersistentLicense&&A==G&&Hd(c,"cenc",H)},Do(h,m,n),r=d.variants.some(function(H){var G=H.audio&&H.audio.encrypted;return H.video&&H.video.encrypted||G}),u=d.variants.some(function(H){return(H.video?H.video.drmInfos:[]).concat(H.audio?H.audio.drmInfos:[]).some(function(G){return G.initData&&
G.initData.length})}),v=r&&!u,A=null,v&&(y=c.c,A=Tp.get(y.keySystem)),ta(E),D=z=Up(a,h,b,c,d,e,f,g),t(E,Io(h),4);case 4:D.size=E.b;z.expiration=c.Eb();B=Od(c);z.sessionIds=g.offline.usePersistentLicense?B:[];if(r&&g.offline.usePersistentLicense&&!B.length)throw new M(2,9,9007);return E["return"](z);case 2:return va(E),t(E,h.destroy(),5);case 5:wa(E,0)}})}p.remove=function(a){return Vp(this,Wp(this,a))};
function Wp(a,b){var c,d,e,f,g,h;return J(function(k){switch(k.a){case 1:Np();c=mp(b);if(null==c||"manifest"!=c.a)throw new M(2,9,9004,b);d=c;e=new To;ta(k);return t(k,e.init(),4);case 4:return t(k,Xo(e,d.ya(),d.ba()),5);case 5:return f=k.b,t(k,f.getManifests([d.key()]),6);case 6:return g=k.b,h=g[0],t(k,Promise.all([Xp(a,h,e),Yp(f,d,h)]),2);case 2:return va(k),t(k,e.destroy(),8);case 8:wa(k,0)}})}
function Zp(a,b){for(var c=[],d=q(a.streams),e=d.next();!e.done;e=d.next())e=e.value,b&&"video"==e.type?c.push({contentType:ed(e.mimeType,e.codecs),robustness:a.drmInfo.videoRobustness}):b||"audio"!=e.type||c.push({contentType:ed(e.mimeType,e.codecs),robustness:a.drmInfo.audioRobustness});return c}function Xp(a,b,c){return J(function(d){return t(d,$p(a.N,a.i.drm,c,b),0)})}
function Yp(a,b,c){function d(){}var e=aq(c);Cp(b,c);return Promise.all([a.removeSegments(e,d),a.removeManifests([b.key()],d)])}p.Te=function(){return Vp(this,bq(this))};
function bq(a){var b,c,d,e,f,g,h,k,l,m;return J(function(n){switch(n.a){case 1:return Np(),b=a.N,c=a.i.drm,d=new To,e=!1,ta(n),t(n,d.init(),4);case 4:f=[],Yo(d,function(r){return f.push(r)}),g=q(f),h=g.next();case 5:if(h.done){n.u(2);break}k=h.value;return t(n,k.getAll(),8);case 8:return l=n.b,t(n,xp(c,b,l),9);case 9:return m=n.b,t(n,k.remove(m),10);case 10:m.length!=l.length&&(e=!0);h=g.next();n.u(5);break;case 2:return va(n),t(n,d.destroy(),11);case 11:wa(n,3);break;case 3:return n["return"](!e)}})}
p.list=function(){return Vp(this,cq())};function cq(){var a,b,c;return J(function(d){switch(d.a){case 1:return Np(),a=[],b=new To,ta(d),t(d,b.init(),4);case 4:return c=Promise.resolve(),Wo(b,function(e,f){c=c.then(function(){var g;return J(function(h){if(1==h.a)return t(h,f.getAllManifests(),2);g=h.b;g.forEach(function(k,l){var m=Cp(new lp("manifest",e.ya,e.ba,l),k);a.push(m)});w(h)})})}),t(d,c,2);case 2:return va(d),t(d,b.destroy(),6);case 6:wa(d,3);break;case 3:return d["return"](a)}})}
function Op(a,b,c,d){var e,f,g,h,k;return J(function(l){if(1==l.a)return e=null,f=a.N,g={networkingEngine:f,filter:function(){return Promise.resolve()},makeTextStreamsForClosedCaptions:function(){},onTimelineRegionAdded:function(){},onEvent:function(){},onError:function(m){e=m}},c.configure(d.manifest),Pp(a),t(l,c.start(b,g),2);if(3!=l.a)return h=l.b,Pp(a),k=dq(h),t(l,Promise.all(db(k,function(m){return m.createSegmentIndex()})),3);Pp(a);if(e)throw e;return l["return"](h)})}
function Qp(a,b,c,d){var e;return J(function(f){switch(f.a){case 1:return e=new rd({nb:a.N,onError:c,oc:function(){},onExpirationUpdated:function(){},onEvent:function(){}}),e.configure(d.drm),t(f,wd(e,b.variants,d.offline.usePersistentLicense),2);case 2:return t(f,Id(e),3);case 3:return t(f,Gd(e),4);case 4:return f["return"](e)}})}
function Up(a,b,c,d,e,f,g,h){for(var k=new Dp,l=q(e.variants),m=l.next();!m.done;m=l.next()){var n=k;m=m.value;var r=m.audio,u=m.video;r&&!u&&(n.a[r.id]=r.bandwidth||m.bandwidth);!r&&u&&(n.a[u.id]=u.bandwidth||m.bandwidth);if(r&&u){var v=r.bandwidth||393216,A=u.bandwidth||m.bandwidth-v;0>=A&&(A=m.bandwidth);n.a[r.id]=v;n.a[u.id]=A}}l=q(e.textStreams);for(n=l.next();!n.done;n=l.next())k.a[n.value.id]=52;n=dq(e);l=new Map;n=q(n);for(m=n.next();!m.done;m=n.next())m=m.value,r=eq(a,b,c,k,e,m,h),l.set(m.id,
r);a=q(e.variants);for(m=a.next();!m.done;m=a.next())b=m.value,b.audio&&l.get(b.audio.id).variantIds.push(b.id),b.video&&l.get(b.video.id).variantIds.push(b.id);a=Array.from(l.values());h=h.offline.usePersistentLicense;(b=d.c)&&h&&(b.initData=[]);return{creationTime:Date.now(),originalManifestUri:f,duration:e.presentationTimeline.getDuration(),size:0,expiration:d.Eb(),streams:a,sessionIds:h?Od(d):[],drmInfo:b,appMetadata:g}}
function eq(a,b,c,d,e,f,g){var h={id:f.id,originalId:f.originalId,primary:f.primary,type:f.type,mimeType:f.mimeType,codecs:f.codecs,frameRate:f.frameRate,pixelAspectRatio:f.pixelAspectRatio,kind:f.kind,language:f.language,label:f.label,width:f.width||null,height:f.height||null,encrypted:f.encrypted,keyIds:f.keyIds,segments:[],variantIds:[],roles:f.roles,channelsCount:f.channelsCount,audioSamplingRate:f.audioSamplingRate,closedCaptions:f.closedCaptions},k=f.id;fq(f,e.presentationTimeline.Ra(),function(l){var m=
gq(a,b,k,f.id,c,d,l.f,g),n=hq(a,b,k,f.id,c,d,l,g);Ho(b,k,function(){var r,u;return J(function(v){if(1==v.a)return t(v,m,2);if(3!=v.a)return r=v.b,t(v,n,3);u=v.b;h.segments.push({initSegmentKey:r,startTime:l.startTime,endTime:l.endTime,appendWindowStart:l.appendWindowStart,appendWindowEnd:l.appendWindowEnd,timestampOffset:l.timestampOffset,dataKey:u});w(v)})})});return h}
function gq(a,b,c,d,e,f,g,h){if(a.a.has(g))return a.a.get(g);h=Ug(g.c(),g.b,g.a,h.streaming.retryParameters);b=Fo(b,c,h,.5*Fp(f,d),!0,function(k){var l;return J(function(m){if(1==m.a)return t(m,e.addSegments([{data:k}]),2);l=m.b;a.sc.push(l[0]);return m["return"](l[0])})});a.a.set(g,b);return b}
function hq(a,b,c,d,e,f,g,h){var k=[g.c()[0],g.b,g.a].join("-");if(a.b.has(k))return a.b.get(k);h=Ug(g.c(),g.b,g.a,h.streaming.retryParameters);b=Fo(b,c,h,Ep(f,d,g),!1,function(l){var m;return J(function(n){if(1==n.a)return t(n,e.addSegments([{data:l}]),2);m=n.b;a.sc.push(m[0]);return n["return"](m[0])})});a.b.set(k,b);return b}function fq(a,b,c){b=a.segmentIndex.find(b);if(null!=b)for(var d=a.segmentIndex.get(b);d;)c(d),d=a.segmentIndex.get(++b)}function Pp(a){if(a.F.a)throw new M(2,9,7001);}
function Np(){if(!Kp())throw new M(2,9,9E3);}function Vp(a,b){return J(function(c){if(1==c.a)return a.Lb.push(b),ta(c),t(c,b,4);if(2!=c.a)return c["return"](c.b);va(c);Bc(a.Lb,b);return wa(c,0)})}function Mp(a,b){var c=b.promise;a.Lb.push(c);return b["finally"](function(){Bc(a.Lb,c)})}
function aq(a){var b=[];a=q(a.streams);for(var c=a.next();!c.done;c=a.next()){c=q(c.value.segments);for(var d=c.next();!d.done;d=c.next())d=d.value,null!=d.initSegmentKey&&b.push(d.initSegmentKey),b.push(d.dataKey)}return b}
function $p(a,b,c,d){var e,f,g;return J(function(h){if(1==h.a){if(!d.drmInfo)return h["return"]();e=Zo(c);f=d.sessionIds.map(function(k){return{sessionId:k,keySystem:d.drmInfo.keySystem,licenseUri:d.drmInfo.licenseServerUri,serverCertificate:d.drmInfo.serverCertificate,audioCapabilities:Zp(d,!1),videoCapabilities:Zp(d,!0)}});return t(h,xp(b,a,f),2)}return 3!=h.a?(g=h.b,t(h,e.remove(g),3)):t(h,e.add(f.filter(function(k){return!g.includes(k.sessionId)})),0)})}
function dq(a){for(var b=new Set,c=q(a.textStreams),d=c.next();!d.done;d=c.next())b.add(d.value);a=q(a.variants);for(c=a.next();!c.done;c=a.next())c=c.value,c.audio&&b.add(c.audio),c.video&&b.add(c.video);return b}
function Sp(a){a.variants.map(function(f){return f.video});var b=new Set(a.variants.map(function(f){return f.audio}));a=a.textStreams;for(var c=q(b),d=c.next();!d.done;d=c.next()){d=q(b);for(var e=d.next();!e.done;e=d.next());}b=q(a);for(c=b.next();!c.done;c=b.next())for(c=q(a),d=c.next();!d.done;d=c.next());}K("shaka.offline.Storage",Jp);Jp.deleteAll=function(){var a;return J(function(b){return 1==b.a?(a=new To,ta(b),t(b,$o(a),2)):5!=b.a?(va(b),t(b,a.destroy(),5)):wa(b,0)})};Jp.prototype.list=Jp.prototype.list;
Jp.prototype.removeEmeSessions=Jp.prototype.Te;Jp.prototype.remove=Jp.prototype.remove;Jp.prototype.getStoreInProgress=Jp.prototype.Be;Jp.prototype.store=Jp.prototype.store;Jp.prototype.getNetworkingEngine=Jp.prototype.Fb;Jp.prototype.getConfiguration=Jp.prototype.getConfiguration;Jp.prototype.configure=Jp.prototype.configure;Jp.prototype.destroy=Jp.prototype.destroy;Jp.support=Kp;
var Tp=(new Map).set("org.w3.clearkey","1077efecc0b24d02ace33c1e52e2fb4b").set("com.widevine.alpha","edef8ba979d64acea3c827dcd51d21ed").set("com.microsoft.playready","9a04f07998404286ab92e65be0885f95").set("com.adobe.primetime","f239e769efa348509c16a903c6932efb");Gj.offline=Kp;function iq(){}function jq(a,b){for(var c={priority:b||0,ce:a},d=q(ib(kq)),e=d.next();!e.done;e=d.next()){e=e.value;var f=e.Y;if(e.item.priority<c.priority){kq.splice(f,0,c);return}}kq.push(c)}K("shaka.polyfill",iq);iq.register=jq;iq.installAll=function(){for(var a=q(kq),b=a.next();!b.done;b=a.next()){b=b.value;try{b.ce()}catch(c){Xa("Error installing polyfill!",c)}}};var kq=[];jq(function(){lq()},-1);function mq(a){var b=a.type.replace(/^(webkit|moz|MS)/,"").toLowerCase();if("function"===typeof Event)var c=new Event(b,a);else c=document.createEvent("Event"),c.initEvent(b,a.bubbles,a.cancelable);a.target.dispatchEvent(c)}
jq(function(){if(window.Document){var a=Element.prototype;a.requestFullscreen=a.requestFullscreen||a.mozRequestFullScreen||a.msRequestFullscreen||a.webkitRequestFullscreen;a=Document.prototype;a.exitFullscreen=a.exitFullscreen||a.mozCancelFullScreen||a.msExitFullscreen||a.webkitCancelFullScreen;"fullscreenElement"in document||(Object.defineProperty(document,"fullscreenElement",{get:function(){return document.mozFullScreenElement||document.msFullscreenElement||document.webkitCurrentFullScreenElement||
document.webkitFullscreenElement}}),Object.defineProperty(document,"fullscreenEnabled",{get:function(){return document.mozFullScreenEnabled||document.msFullscreenEnabled||document.webkitFullscreenEnabled}}));document.addEventListener("webkitfullscreenchange",mq);document.addEventListener("webkitfullscreenerror",mq);document.addEventListener("mozfullscreenchange",mq);document.addEventListener("mozfullscreenerror",mq);document.addEventListener("MSFullscreenChange",mq);document.addEventListener("MSFullscreenError",
mq)}});function nq(a,b,c){if("input"==a)switch(this.type){case "range":a="change"}HTMLInputElement.prototype.originalAddEventListener.call(this,a,b,c)}jq(function(){md("Trident/")&&!HTMLInputElement.prototype.originalAddEventListener&&(HTMLInputElement.prototype.originalAddEventListener=HTMLInputElement.prototype.addEventListener,HTMLInputElement.prototype.addEventListener=nq)});jq(function(){navigator.languages||Object.defineProperty(navigator,"languages",{get:function(){return navigator.language?[navigator.language]:["en"]}})});jq(function(){});function oq(){var a=MediaSource.prototype.addSourceBuffer;MediaSource.prototype.addSourceBuffer=function(b){for(var c=[],d=0;d<arguments.length;++d)c[d]=arguments[d];c=a.apply(this,c);c.abort=function(){};return c}}function pq(){var a=SourceBuffer.prototype.remove;SourceBuffer.prototype.remove=function(b,c){return a.call(this,b,c-.001)}}function qq(){var a=MediaSource.isTypeSupported;MediaSource.isTypeSupported=function(b){return"mp2t"==b.split(/ *; */)[0].split("/")[1].toLowerCase()?!1:a(b)}}
function rq(){var a=MediaSource.isTypeSupported;MediaSource.isTypeSupported=function(b){return"opus"!=hd(b)[0]&&a(b)}}function sq(){var a=MediaSource.isTypeSupported;MediaSource.isTypeSupported=function(b){var c=b.split(/ *; */);c.shift();return c.some(function(d){return d.startsWith("codecs=")})?cast.__platform__.canDisplayType(b):a(b)}}
jq(function(){var a=od();window.MediaSource&&(window.cast&&cast.__platform__&&cast.__platform__.canDisplayType?sq():a?(qq(),12>=a?(oq(),pq()):oq()):(md("Tizen 2")||md("Tizen 3")||md("Tizen 4"))&&rq())});function tq(a,b){try{var c=new uq(a,b);return Promise.resolve(c)}catch(d){return Promise.reject(d)}}function vq(a){var b=this.mediaKeys;b&&b!=a&&wq(b,null);delete this.mediaKeys;return(this.mediaKeys=a)?wq(a,this):Promise.resolve()}function xq(a){a=L(a.initData);if(ob(a).getUint32(0,!0)+4!=a.byteLength)throw new RangeError("Malformed FairPlay init data");a=Vb(a.subarray(4),!0);a=Xb(a);var b=new Event("encrypted");b.initDataType="skd";b.initData=mb(a);this.dispatchEvent(b)}
function uq(a,b){this.keySystem=a;if(a.startsWith("com.apple.fps"))for(var c=q(b),d=c.next();!d.done;d=c.next()){var e=d.value;if("required"==e.persistentState)d=null;else{d={audioCapabilities:[],videoCapabilities:[],persistentState:"optional",distinctiveIdentifier:"optional",initDataTypes:e.initDataTypes,sessionTypes:["temporary"],label:e.label};var f=!1,g=!1;if(e.audioCapabilities)for(var h=q(e.audioCapabilities),k=h.next();!k.done;k=h.next())k=k.value,k.contentType&&(f=!0,WebKitMediaKeys.isTypeSupported(this.keySystem,
k.contentType.split(";")[0])&&(d.audioCapabilities.push(k),g=!0));if(e.videoCapabilities)for(e=q(e.videoCapabilities),k=e.next();!k.done;k=e.next())h=k.value,h.contentType&&(f=!0,WebKitMediaKeys.isTypeSupported(this.keySystem,h.contentType.split(";")[0])&&(d.videoCapabilities.push(h),g=!0));f||(g=WebKitMediaKeys.isTypeSupported(this.keySystem,"video/mp4"));d=g?d:null}if(d){this.a=d;return}}c=Error("Unsupported keySystem");c.name="NotSupportedError";c.code=DOMException.NOT_SUPPORTED_ERR;throw c;}
uq.prototype.createMediaKeys=function(){var a=new yq(this.keySystem);return Promise.resolve(a)};uq.prototype.getConfiguration=function(){return this.a};function yq(a){this.a=new WebKitMediaKeys(a);this.b=new Tc}yq.prototype.createSession=function(a){a=a||"temporary";if("temporary"!=a)throw new TypeError("Session type "+a+" is unsupported on this platform.");return new zq(this.a,a)};yq.prototype.setServerCertificate=function(){return Promise.resolve(!1)};
function wq(a,b){a.b.Xa();if(!b)return Promise.resolve();a.b.l(b,"webkitneedkey",xq);try{return dg(b,HTMLMediaElement.HAVE_METADATA,a.b,function(){b.webkitSetMediaKeys(a.a)}),Promise.resolve()}catch(c){return Promise.reject(c)}}function zq(a){xc.call(this);this.f=null;this.g=a;this.c=this.a=null;this.b=new Tc;this.sessionId="";this.expiration=NaN;this.closed=new Pb;this.keyStatuses=new Aq}pa(zq,xc);p=zq.prototype;
p.generateRequest=function(a,b){var c=this;this.a=new Pb;try{var d=this.g.createSession("video/mp4",L(b));this.f=d;this.sessionId=d.sessionId||"";this.b.l(this.f,"webkitkeymessage",function(e){c.a&&(c.a.resolve(),c.a=null);e=new Q("message",{messageType:void 0==c.keyStatuses.a?"license-request":"license-renewal",message:mb(e.message)});c.dispatchEvent(e)});this.b.l(d,"webkitkeyadded",function(){c.c&&(Bq(c,"usable"),c.c.resolve(),c.c=null)});this.b.l(d,"webkitkeyerror",function(){var e=Error("EME PatchedMediaKeysApple key error");
e.errorCode=c.f.error;if(null!=c.a)c.a.reject(e),c.a=null;else if(null!=c.c)c.c.reject(e),c.c=null;else switch(c.f.error.code){case WebKitMediaKeyError.MEDIA_KEYERR_OUTPUT:case WebKitMediaKeyError.MEDIA_KEYERR_HARDWARECHANGE:Bq(c,"output-not-allowed");break;default:Bq(c,"internal-error")}});Bq(this,"status-pending")}catch(e){this.a.reject(e)}return this.a};p.load=function(){return Promise.reject(Error("MediaKeySession.load not yet supported"))};p.update=function(a){this.c=new Pb;try{this.f.update(L(a))}catch(b){this.c.reject(b)}return this.c};
p.close=function(){try{this.f.close(),this.closed.resolve(),this.b.Xa()}catch(a){this.closed.reject(a)}return this.closed};p.remove=function(){return Promise.reject(Error("MediaKeySession.remove is only applicable for persistent licenses, which are not supported on this platform"))};function Bq(a,b){var c=a.keyStatuses;c.size=void 0==b?0:1;c.a=b;c=new Q("keystatuseschange");a.dispatchEvent(c)}function Aq(){this.size=0;this.a=void 0}p=Aq.prototype;p.forEach=function(a){this.a&&a(this.a,ce.value())};
p.get=function(a){if(this.has(a))return this.a};p.has=function(a){var b=ce.value();return this.a&&kb(a,b)?!0:!1};p.entries=function(){};p.keys=function(){};p.values=function(){};jq(function(){window.HTMLVideoElement&&window.WebKitMediaKeys&&(delete HTMLMediaElement.prototype.mediaKeys,HTMLMediaElement.prototype.mediaKeys=null,HTMLMediaElement.prototype.setMediaKeys=vq,window.MediaKeys=yq,window.MediaKeySystemAccess=uq,navigator.requestMediaKeySystemAccess=tq)});function Cq(a,b){try{var c=new Dq(a,b);return Promise.resolve(c)}catch(d){return Promise.reject(d)}}function Eq(a){if(a.initData){var b=document.createEvent("CustomEvent");b.initCustomEvent("encrypted",!1,!1,null);b.initDataType="cenc";b.initData=mb(Zk(a.initData));this.dispatchEvent(b)}}
function Dq(a,b){this.keySystem=a;for(var c=!1,d=q(b),e=d.next();!e.done;e=d.next()){e=e.value;var f={audioCapabilities:[],videoCapabilities:[],persistentState:"optional",distinctiveIdentifier:"optional",initDataTypes:e.initDataTypes,sessionTypes:["temporary"],label:e.label},g=!1;if(e.audioCapabilities)for(var h=q(e.audioCapabilities),k=h.next();!k.done;k=h.next())k=k.value,k.contentType&&(g=!0,MSMediaKeys.isTypeSupported(this.keySystem,k.contentType.split(";")[0])&&(f.audioCapabilities.push(k),c=
!0));if(e.videoCapabilities)for(h=q(e.videoCapabilities),k=h.next();!k.done;k=h.next())k=k.value,k.contentType&&(g=!0,MSMediaKeys.isTypeSupported(this.keySystem,k.contentType.split(";")[0])&&(f.videoCapabilities.push(k),c=!0));g||(c=MSMediaKeys.isTypeSupported(this.keySystem,"video/mp4"));"required"==e.persistentState&&(c=!1);if(c){this.a=f;return}}c=Error("Unsupported keySystem");c.name="NotSupportedError";c.code=DOMException.NOT_SUPPORTED_ERR;throw c;}
Dq.prototype.createMediaKeys=function(){var a=new Fq(this.keySystem);return Promise.resolve(a)};Dq.prototype.getConfiguration=function(){return this.a};function Gq(a){var b=this.mediaKeys;b&&b!=a&&Hq(b,null);delete this.mediaKeys;return(this.mediaKeys=a)?Hq(a,this):Promise.resolve()}function Fq(a){this.a=new MSMediaKeys(a);this.b=new Tc}
Fq.prototype.createSession=function(a){a=a||"temporary";if("temporary"!=a)throw new TypeError("Session type "+a+" is unsupported on this platform.");return new Iq(this.a,a)};Fq.prototype.setServerCertificate=function(){return Promise.resolve(!1)};function Hq(a,b){a.b.Xa();if(!b)return Promise.resolve();a.b.l(b,"msneedkey",Eq);try{return dg(b,HTMLMediaElement.HAVE_METADATA,a.b,function(){b.msSetMediaKeys(a.a)}),Promise.resolve()}catch(c){return Promise.reject(c)}}
function Iq(a){xc.call(this);this.f=null;this.g=a;this.c=this.a=null;this.b=new Tc;this.sessionId="";this.expiration=NaN;this.closed=new Pb;this.keyStatuses=new Jq}pa(Iq,xc);p=Iq.prototype;
p.generateRequest=function(a,b){var c=this;this.a=new Pb;try{this.f=this.g.createSession("video/mp4",L(b),null),this.b.l(this.f,"mskeymessage",function(d){c.a&&(c.a.resolve(),c.a=null);d=new Q("message",{messageType:void 0==c.keyStatuses.a?"license-request":"license-renewal",message:mb(d.message)});c.dispatchEvent(d)}),this.b.l(this.f,"mskeyadded",function(){c.a?(Kq(c,"usable"),c.a.resolve(),c.a=null):c.c&&(Kq(c,"usable"),c.c.resolve(),c.c=null)}),this.b.l(this.f,"mskeyerror",function(){var d=Error("EME PatchedMediaKeysMs key error");
d.errorCode=c.f.error;if(null!=c.a)c.a.reject(d),c.a=null;else if(null!=c.c)c.c.reject(d),c.c=null;else switch(c.f.error.code){case MSMediaKeyError.MS_MEDIA_KEYERR_OUTPUT:case MSMediaKeyError.MS_MEDIA_KEYERR_HARDWARECHANGE:Kq(c,"output-not-allowed");break;default:Kq(c,"internal-error")}}),Kq(this,"status-pending")}catch(d){this.a.reject(d)}return this.a};p.load=function(){return Promise.reject(Error("MediaKeySession.load not yet supported"))};p.update=function(a){this.c=new Pb;try{this.f.update(L(a))}catch(b){this.c.reject(b)}return this.c};
p.close=function(){try{this.f.close(),this.closed.resolve(),this.b.Xa()}catch(a){this.closed.reject(a)}return this.closed};p.remove=function(){return Promise.reject(Error("MediaKeySession.remove is only applicable for persistent licenses, which are not supported on this platform"))};function Kq(a,b){var c=a.keyStatuses;c.size=void 0==b?0:1;c.a=b;c=new Q("keystatuseschange");a.dispatchEvent(c)}function Jq(){this.size=0;this.a=void 0}p=Jq.prototype;p.forEach=function(a){this.a&&a(this.a,ce.value())};
p.get=function(a){if(this.has(a))return this.a};p.has=function(a){var b=ce.value();return this.a&&kb(a,b)?!0:!1};p.entries=function(){};p.keys=function(){};p.values=function(){};
jq(function(){!window.HTMLVideoElement||!window.MSMediaKeys||navigator.requestMediaKeySystemAccess&&MediaKeySystemAccess.prototype.getConfiguration||(delete HTMLMediaElement.prototype.mediaKeys,HTMLMediaElement.prototype.mediaKeys=null,window.MediaKeys=Fq,window.MediaKeySystemAccess=Dq,navigator.requestMediaKeySystemAccess=Cq,HTMLMediaElement.prototype.setMediaKeys=Gq)});function Lq(){return Promise.reject(Error("The key system specified is not supported."))}function Mq(a){return null==a?Promise.resolve():Promise.reject(Error("MediaKeys not supported."))}function Nq(){throw new TypeError("Illegal constructor.");}Nq.prototype.createSession=function(){};Nq.prototype.setServerCertificate=function(){};function Oq(){this.keySystem="";throw new TypeError("Illegal constructor.");}Oq.prototype.getConfiguration=function(){};Oq.prototype.createMediaKeys=function(){};
jq(function(){!window.HTMLVideoElement||navigator.requestMediaKeySystemAccess&&MediaKeySystemAccess.prototype.getConfiguration||(navigator.requestMediaKeySystemAccess=Lq,delete HTMLMediaElement.prototype.mediaKeys,HTMLMediaElement.prototype.mediaKeys=null,HTMLMediaElement.prototype.setMediaKeys=Mq,window.MediaKeys=Nq,window.MediaKeySystemAccess=Oq)},-10);function Pq(a){var b=Qq;return b?b+a.charAt(0).toUpperCase()+a.slice(1):a}function Rq(a,b){try{var c=new Sq(a,b);return Promise.resolve(c)}catch(d){return Promise.reject(d)}}function Tq(a){var b=this.mediaKeys;b&&b!=a&&Uq(b,null);delete this.mediaKeys;(this.mediaKeys=a)&&Uq(a,this);return Promise.resolve()}
function Sq(a,b){this.a=this.keySystem=a;var c=!1;"org.w3.clearkey"==a&&(this.a="webkit-org.w3.clearkey",c=!1);var d=!1;var e=document.getElementsByTagName("video");e=e.length?e[0]:document.createElement("video");for(var f=q(b),g=f.next();!g.done;g=f.next()){g=g.value;var h={audioCapabilities:[],videoCapabilities:[],persistentState:"optional",distinctiveIdentifier:"optional",initDataTypes:g.initDataTypes,sessionTypes:["temporary"],label:g.label},k=!1;if(g.audioCapabilities)for(var l=q(g.audioCapabilities),
m=l.next();!m.done;m=l.next())m=m.value,m.contentType&&(k=!0,e.canPlayType(m.contentType.split(";")[0],this.a)&&(h.audioCapabilities.push(m),d=!0));if(g.videoCapabilities)for(l=q(g.videoCapabilities),m=l.next();!m.done;m=l.next())m=m.value,m.contentType&&(k=!0,e.canPlayType(m.contentType,this.a)&&(h.videoCapabilities.push(m),d=!0));k||(d=e.canPlayType("video/mp4",this.a)||e.canPlayType("video/webm",this.a));"required"==g.persistentState&&(c?(h.persistentState="required",h.sessionTypes=["persistent-license"]):
d=!1);if(d){this.b=h;return}}c="Unsupported keySystem";if("org.w3.clearkey"==a||"com.widevine.alpha"==a)c="None of the requested configurations were supported.";c=Error(c);c.name="NotSupportedError";c.code=DOMException.NOT_SUPPORTED_ERR;throw c;}Sq.prototype.createMediaKeys=function(){var a=new Vq(this.a);return Promise.resolve(a)};Sq.prototype.getConfiguration=function(){return this.b};function Vq(a){this.g=a;this.a=null;this.b=new Tc;this.c=[];this.f=new Map}
function Uq(a,b){a.a=b;a.b.Xa();var c=Qq;b&&(a.b.l(b,c+"needkey",function(d){var e=document.createEvent("CustomEvent");e.initCustomEvent("encrypted",!1,!1,null);e.initDataType="cenc";e.initData=mb(d.initData);a.a.dispatchEvent(e)}),a.b.l(b,c+"keymessage",function(d){var e=Wq(a,d.sessionId);e&&(d=new Q("message",{messageType:void 0==e.keyStatuses.a?"licenserequest":"licenserenewal",message:d.message}),e.b&&(e.b.resolve(),e.b=null),e.dispatchEvent(d))}),a.b.l(b,c+"keyadded",function(d){if(d=Wq(a,d.sessionId))Xq(d,
"usable"),d.a&&d.a.resolve(),d.a=null}),a.b.l(b,c+"keyerror",function(d){var e=Wq(a,d.sessionId);e&&e.handleError(d)}))}Vq.prototype.createSession=function(a){a=a||"temporary";if("temporary"!=a&&"persistent-license"!=a)throw new TypeError("Session type "+a+" is unsupported on this platform.");var b=this.a||document.createElement("video");b.src||(b.src="about:blank");a=new Yq(b,this.g,a);this.c.push(a);return a};Vq.prototype.setServerCertificate=function(){return Promise.resolve(!1)};
function Wq(a,b){var c=a.f.get(b);return c?c:(c=a.c.shift())?(c.sessionId=b,a.f.set(b,c),c):null}function Yq(a,b,c){xc.call(this);this.f=a;this.h=!1;this.a=this.b=null;this.c=b;this.g=c;this.sessionId="";this.expiration=NaN;this.closed=new Pb;this.keyStatuses=new Zq}pa(Yq,xc);p=Yq.prototype;
p.handleError=function(a){var b=Error("EME v0.1b key error"),c=a.errorCode;c.systemCode=a.systemCode;b.errorCode=c;!a.sessionId&&this.b?(45==a.systemCode&&(b.message="Unsupported session type."),this.b.reject(b),this.b=null):a.sessionId&&this.a?(this.a.reject(b),this.a=null):(b=a.systemCode,a.errorCode.code==MediaKeyError.MEDIA_KEYERR_OUTPUT?Xq(this,"output-restricted"):1==b?Xq(this,"expired"):Xq(this,"internal-error"))};
function $q(a,b,c){if(a.h)return Promise.reject(Error("The session is already initialized."));a.h=!0;try{if("persistent-license"==a.g)if(c)var d=L(Xb("LOAD_SESSION|"+c));else{var e=Xb("PERSISTENT|");d=fc(e,b)}else d=L(b)}catch(g){return Promise.reject(g)}a.b=new Pb;var f=Pq("generateKeyRequest");try{a.f[f](a.c,d)}catch(g){if("InvalidStateError"!=g.name)return a.b=null,Promise.reject(g);(new N(function(){try{a.f[f](a.c,d)}catch(h){a.b.reject(h),a.b=null}})).R(.01)}return a.b}
function ar(a,b,c){if(a.a)a.a.then(function(){return ar(a,b,c)})["catch"](function(){return ar(a,b,c)});else{a.a=b;if("webkit-org.w3.clearkey"==a.c){var d=Tb(c);var e=JSON.parse(d);"oct"!=e.keys[0].kty&&(a.a.reject(Error("Response is not a valid JSON Web Key Set.")),a.a=null);d=cc(e.keys[0].k);e=cc(e.keys[0].kid)}else d=L(c),e=null;var f=Pq("addKey");try{a.f[f](a.c,d,e,a.sessionId)}catch(g){a.a.reject(g),a.a=null}}}
function Xq(a,b){var c=a.keyStatuses;c.size=void 0==b?0:1;c.a=b;c=new Q("keystatuseschange");a.dispatchEvent(c)}p.generateRequest=function(a,b){return $q(this,b,null)};p.load=function(a){return"persistent-license"==this.g?$q(this,null,a):Promise.reject(Error("Not a persistent session."))};p.update=function(a){var b=new Pb;ar(this,b,a);return b};
p.close=function(){if("persistent-license"!=this.g){if(!this.sessionId)return this.closed.reject(Error("The session is not callable.")),this.closed;var a=Pq("cancelKeyRequest");try{this.f[a](this.c,this.sessionId)}catch(b){}}this.closed.resolve();return this.closed};p.remove=function(){return"persistent-license"!=this.g?Promise.reject(Error("Not a persistent session.")):this.close()};function Zq(){this.size=0;this.a=void 0}p=Zq.prototype;p.forEach=function(a){this.a&&a(this.a,ce.value())};p.get=function(a){if(this.has(a))return this.a};
p.has=function(a){var b=ce.value();return this.a&&kb(a,b)?!0:!1};p.entries=function(){};p.keys=function(){};p.values=function(){};var Qq="";
jq(function(){if(!(!window.HTMLVideoElement||navigator.requestMediaKeySystemAccess&&MediaKeySystemAccess.prototype.getConfiguration)){if(HTMLMediaElement.prototype.webkitGenerateKeyRequest)Qq="webkit";else if(!HTMLMediaElement.prototype.generateKeyRequest)return;navigator.requestMediaKeySystemAccess=Rq;delete HTMLMediaElement.prototype.mediaKeys;HTMLMediaElement.prototype.mediaKeys=null;HTMLMediaElement.prototype.setMediaKeys=Tq;window.MediaKeys=Vq;window.MediaKeySystemAccess=Sq}});function br(a){a=a.target;if("picture-in-picture"==a.webkitPresentationMode){document.pictureInPictureElement=a;var b=new Event("enterpictureinpicture");a.dispatchEvent(b)}else document.pictureInPictureElement==a&&(document.pictureInPictureElement=null),b=new Event("leavepictureinpicture"),a.dispatchEvent(b)}
function cr(){return this.webkitSupportsPresentationMode("picture-in-picture")?(this.webkitSetPresentationMode("picture-in-picture"),document.pictureInPictureElement=this,Promise.resolve()):Promise.reject(Error("PiP not allowed by video element"))}function dr(){var a=document.pictureInPictureElement;return a?(a.webkitSetPresentationMode("inline"),document.pictureInPictureElement=null,Promise.resolve()):Promise.reject(Error("No picture in picture element found"))}
function er(){return this.hasAttribute("disablePictureInPicture")?!0:!this.webkitSupportsPresentationMode("picture-in-picture")}function fr(a){a?this.setAttribute("disablePictureInPicture",""):this.removeAttribute("disablePictureInPicture")}
jq(function(){if(window.HTMLVideoElement){var a=HTMLVideoElement.prototype;a.requestPictureInPicture&&document.exitPictureInPicture||!a.webkitSupportsPresentationMode||(document.pictureInPictureEnabled=!0,document.pictureInPictureElement=null,a.requestPictureInPicture=cr,Object.defineProperty(a,"disablePictureInPicture",{get:er,set:fr,enumerable:!0,configurable:!0}),document.exitPictureInPicture=dr,document.addEventListener("webkitpresentationmodechanged",br,!0))}});jq(function(){if(window.HTMLMediaElement){var a=HTMLMediaElement.prototype.play;HTMLMediaElement.prototype.play=function(){var b=a.apply(this);b&&b["catch"](function(){});return b}}});function gr(){return{droppedVideoFrames:this.webkitDroppedFrameCount,totalVideoFrames:this.webkitDecodedFrameCount,corruptedVideoFrames:0,creationTime:NaN,totalFrameDelay:0}}jq(function(){if(window.HTMLVideoElement){var a=HTMLVideoElement.prototype;!a.getVideoPlaybackQuality&&"webkitDroppedFrameCount"in a&&(a.getVideoPlaybackQuality=gr)}});function hr(a,b,c){return new window.TextTrackCue(a,b,c)}function ir(a,b,c){return new window.TextTrackCue(a+"-"+b+"-"+c,a,b,c)}jq(function(){if(!window.VTTCue&&window.TextTrackCue){var a=null,b=TextTrackCue.length;if(3==b)a=hr;else if(6==b)a=ir;else{try{var c=!!hr(1,2,"")}catch(d){c=!1}c&&(a=hr)}a&&(window.VTTCue=function(d,e,f){return a(d,e,f)})}});function jr(){}jr.prototype.parseInit=function(){};
jr.prototype.parseMedia=function(a,b){var c=Tb(a),d=[],e=new DOMParser,f=null;if(""==c)return d;try{f=e.parseFromString(c,"text/xml")}catch(B){throw new M(2,2,2005,"Failed to parse TTML.");}if(f){if(c=f.getElementsByTagName("parsererror")[0])throw new M(2,2,2005,c.textContent);if(e=f.getElementsByTagName("tt")[0]){var g=dl(e,"http://www.w3.org/ns/ttml#parameter","frameRate");var h=dl(e,"http://www.w3.org/ns/ttml#parameter","subFrameRate");var k=dl(e,"http://www.w3.org/ns/ttml#parameter","frameRateMultiplier");
var l=dl(e,"http://www.w3.org/ns/ttml#parameter","tickRate");var m=dl(e,"http://www.w3.org/ns/ttml#parameter","cellResolution");f=e.getAttribute("xml:space")||"default";c=dl(e,"http://www.w3.org/ns/ttml#styling","extent")}else throw new M(2,2,2005,"TTML does not contain <tt> tag.");if("default"!=f&&"preserve"!=f)throw new M(2,2,2005,"Invalid xml:space value: "+f);f="default"==f;g=new kr(g,h,k,l);m=m?(m=/^(\d+) (\d+)$/.exec(m))?{columns:parseInt(m[1],10),rows:parseInt(m[2],10)}:null:null;h=lr(e.getElementsByTagName("metadata")[0]);
k=lr(e.getElementsByTagName("styling")[0]);l=lr(e.getElementsByTagName("layout")[0]);for(var n=[],r=q(l),u=r.next();!u.done;u=r.next()){var v=u.value,A=c;u=new me;var y=v.getAttribute("xml:id");if(y){u.id=y;y=null;A&&(y=mr.exec(A)||nr.exec(A));A=y?Number(y[1]):null;y=y?Number(y[2]):null;var z,D;if(z=or(v,k,"extent"))z=(D=mr.exec(z))||nr.exec(z),null!=z&&(u.width=null!=A?100*Number(z[1])/A:Number(z[1]),u.height=null!=y?100*Number(z[2])/y:Number(z[2]),u.widthUnits=D||null!=A?Be:0,u.heightUnits=D||null!=
y?Be:0);if(v=or(v,k,"origin"))z=(D=mr.exec(v))||nr.exec(v),null!=z&&(u.viewportAnchorX=null!=A?100*Number(z[1])/A:Number(z[1]),u.viewportAnchorY=null!=y?100*Number(z[2])/y:Number(z[2]),u.viewportAnchorUnits=D||null!=A?Be:0)}else u=null;u&&n.push(u)}c=pr(e.getElementsByTagName("body")[0]);c=q(c);for(e=c.next();!e.done;e=c.next())(e=qr(e.value,b.periodStart,g,h,k,l,n,f,!1,m))&&d.push(e)}return d};
function lr(a){var b=[];if(!a)return b;for(var c=q(a.childNodes),d=c.next();!d.done;d=c.next())d=d.value,d.nodeType==Node.ELEMENT_NODE&&"br"!==d.nodeName&&(d=lr(d),b=b.concat(d));b.length||b.push(a);return b}function pr(a){if(!a)return[];var b=[];a=q(a.childNodes);for(var c=a.next();!c.done;c=a.next())c=c.value,c instanceof Element&&(c.hasAttribute("begin")?b.push(c):b=b.concat(pr(c)));return b}
function rr(a,b){for(var c="",d=q(a.childNodes),e=d.next();!e.done;e=d.next())e=e.value,"br"==e.nodeName&&a.childNodes[0]!==e?c+="\n":e.childNodes&&0<e.childNodes.length?c+=rr(e,b):b?(e=e.textContent.trim(),e=e.replace(/\s+/g," "),c+=e):c+=e.textContent;return c}
function qr(a,b,c,d,e,f,g,h,k,l){if(k&&"br"==a.nodeName)return a=new ke(0,0,""),a.spacer=!0,a;var m=/^[\s\n]*$/.test(a.textContent),n=a.nodeType==Node.ELEMENT_NODE&&!a.hasAttribute("begin")&&!a.hasAttribute("end");if(a.nodeType!=Node.ELEMENT_NODE||n&&m||n&&!k)return null;m=sr(a.getAttribute("begin"),c);n=sr(a.getAttribute("end"),c);var r=sr(a.getAttribute("dur"),c);null==n&&null!=r&&(n=m+r);if(!k&&(null==m||null==n))throw new M(2,2,2001);m=k&&null==m?0:m+b;n=k&&null==n?0:n+b;r="";k=[];if(Array.from(a.childNodes).some(function(y){return y.nodeType==
Node.TEXT_NODE&&/\S+/.test(y.textContent)}))r=rr(a,h);else for(var u=q(a.childNodes),v=u.next();!v.done;v=u.next())if(v=qr(v.value,b,c,d,e,f,g,h,!0,l))v.startTime=v.startTime||m,v.endTime=v.endTime||n,k.push(v);b=new ke(m,n,r);b.nestedCues=k;l&&(b.cellResolution=l);if((f=tr(a,"region",f,"")[0])&&f.getAttribute("xml:id")){var A=f.getAttribute("xml:id");b.region=g.filter(function(y){return y.id==A})[0]}d=tr(a,"backgroundImage",d,"#","http://www.smpte-ra.org/schemas/2052-1/2010/smpte-tt")[0];ur(b,a,
f,d,e);return b}
function ur(a,b,c,d,e){"rtl"==vr(b,c,e,"direction")&&(a.direction="rtl");var f=vr(b,c,e,"writingMode");"tb"==f||"tblr"==f?a.writingMode="vertical-lr":"tbrl"==f?a.writingMode="vertical-rl":"rltb"==f||"rl"==f?a.direction="rtl":f&&(a.direction=le);(f=vr(b,c,e,"textAlign"))?(a.positionAlign=wr[f],a.lineAlign=xr[f],a.textAlign=we[f.toUpperCase()]):a.textAlign="start";if(f=vr(b,c,e,"displayAlign"))a.displayAlign=xe[f.toUpperCase()];if(f=vr(b,c,e,"color"))a.color=f;if(f=vr(b,c,e,"backgroundColor"))a.backgroundColor=f;
if(f=vr(b,c,e,"border"))a.border=f;if(f=vr(b,c,e,"fontFamily"))a.fontFamily=f;(f=vr(b,c,e,"fontWeight"))&&"bold"==f&&(a.fontWeight=700);(f=vr(b,c,e,"wrapOption"))&&"noWrap"==f&&(a.wrapLine=!1);(f=vr(b,c,e,"lineHeight"))&&f.match(yr)&&(a.lineHeight=f);(f=vr(b,c,e,"fontSize"))&&(f.match(yr)||f.match(zr))&&(a.fontSize=f);if(f=vr(b,c,e,"fontStyle"))a.fontStyle=Ae[f.toUpperCase()];if(d){f=d.getAttribute("imagetype");var g=d.getAttribute("encoding");d=d.textContent.trim();"PNG"==f&&"Base64"==g&&d&&(a.backgroundImage=
"data:image/png;base64,"+d)}(d=vr(b,c,e,"letterSpacing"))&&d.match(yr)&&(a.letterSpacing=d);(d=vr(b,c,e,"linePadding"))&&d.match(yr)&&(a.linePadding=d);if(d=vr(b,c,e,"opacity"))a.opacity=parseFloat(d);(c=or(c,e,"textDecoration"))&&Ar(a,c);(b=Br(b,e,"textDecoration"))&&Ar(a,b)}
function Ar(a,b){for(var c=q(b.split(" ")),d=c.next();!d.done;d=c.next())switch(d.value){case "underline":a.textDecoration.includes("underline")||a.textDecoration.push("underline");break;case "noUnderline":a.textDecoration.includes("underline")&&Bc(a.textDecoration,"underline");break;case "lineThrough":a.textDecoration.includes("lineThrough")||a.textDecoration.push("lineThrough");break;case "noLineThrough":a.textDecoration.includes("lineThrough")&&Bc(a.textDecoration,"lineThrough");break;case "overline":a.textDecoration.includes("overline")||
a.textDecoration.push("overline");break;case "noOverline":a.textDecoration.includes("overline")&&Bc(a.textDecoration,"overline")}}function vr(a,b,c,d){return(a=Br(a,c,d))?a:or(b,c,d)}function or(a,b,c){if(!a)return null;var d=lr(a);d=q(d);for(var e=d.next();!e.done;e=d.next())if(e=dl(e.value,"http://www.w3.org/ns/ttml#styling",c))return e;return Cr(a,b,c)}function Br(a,b,c){var d=dl(a,"http://www.w3.org/ns/ttml#styling",c);return d?d:Cr(a,b,c)}
function Cr(a,b,c){a=tr(a,"style",b,"");for(var d=null,e=0;e<a.length;e++){var f=dl(a[e],"urn:ebu:tt:style",c);f||(f=dl(a[e],"http://www.w3.org/ns/ttml#styling",c));f||(f=Br(a[e],b,c));f&&(d=f)}return d}
function tr(a,b,c,d,e){var f=[];if(!a||1>c.length)return f;var g=a;for(a=null;g&&!(a=e?dl(g,e,b):g.getAttribute(b))&&(g=g.parentNode,g instanceof Element););if(b=a)for(b=q(b.split(" ")),e=b.next();!e.done;e=b.next())for(e=e.value,a=q(c),g=a.next();!g.done;g=a.next())if(g=g.value,d+g.getAttribute("xml:id")==e){f.push(g);break}return f}
function sr(a,b){var c=null;if(Dr.test(a)){c=Dr.exec(a);var d=Number(c[1]),e=Number(c[2]),f=Number(c[3]),g=Number(c[4]);g+=(Number(c[5])||0)/b.b;f+=g/b.frameRate;c=f+60*e+3600*d}else Er.test(a)?c=Fr(Er,a):Gr.test(a)?c=Fr(Gr,a):Hr.test(a)?(c=Hr.exec(a),c=Number(c[1])/b.frameRate):Ir.test(a)?(c=Ir.exec(a),c=Number(c[1])/b.a):Jr.test(a)&&(c=Fr(Jr,a));return c}
function Fr(a,b){var c=a.exec(b);return null==c||""==c[0]?null:(Number(c[4])||0)/1E3+(Number(c[3])||0)+60*(Number(c[2])||0)+3600*(Number(c[1])||0)}K("shaka.text.TtmlTextParser",jr);jr.prototype.parseMedia=jr.prototype.parseMedia;jr.prototype.parseInit=jr.prototype.parseInit;function kr(a,b,c,d){this.frameRate=Number(a)||30;this.b=Number(b)||1;this.a=Number(d);0==this.a&&(this.a=a?this.frameRate*this.b:1);c&&(a=/^(\d+) (\d+)$/g.exec(c))&&(this.frameRate*=Number(a[1])/Number(a[2]))}
var mr=/^(\d{1,2}(?:\.\d+)?|100(?:\.0+)?)% (\d{1,2}(?:\.\d+)?|100(?:\.0+)?)%$/,zr=/^(\d{1,2}(?:\.\d+)?|100)%$/,yr=/^(\d+px|\d+em|\d*\.?\d+c)$/,nr=/^(\d+)px (\d+)px$/,Dr=/^(\d{2,}):(\d{2}):(\d{2}):(\d{2})\.?(\d+)?$/,Er=/^(?:(\d{2,}):)?(\d{2}):(\d{2})$/,Gr=/^(?:(\d{2,}):)?(\d{2}):(\d{2}\.\d{2,})$/,Hr=/^(\d*(?:\.\d*)?)f$/,Ir=/^(\d*(?:\.\d*)?)t$/,Jr=/^(?:(\d*(?:\.\d*)?)h)?(?:(\d*(?:\.\d*)?)m)?(?:(\d*(?:\.\d*)?)s)?(?:(\d*(?:\.\d*)?)ms)?$/,xr={left:re,center:"center",right:"end",start:re,end:"end"},wr=
{left:"line-left",center:"center",right:"line-right"};Fe["application/ttml+xml"]=function(){return new jr};function Kr(){this.m=new jr}Kr.prototype.parseInit=function(a){var b=!1;(new Mg).box("moov",Qg).box("trak",Qg).box("mdia",Qg).box("minf",Qg).box("stbl",Qg).ea("stsd",Rg).box("stpp",function(c){b=!0;c.parser.stop()}).parse(a);if(!b)throw new M(2,2,2007);};Kr.prototype.parseMedia=function(a,b){var c=this,d=!1,e=[];(new Mg).box("mdat",Sg(function(f){d=!0;e=e.concat(c.m.parseMedia(f,b))})).parse(a,!1);if(!d)throw new M(2,2,2007);return e};K("shaka.text.Mp4TtmlParser",Kr);Kr.prototype.parseMedia=Kr.prototype.parseMedia;
Kr.prototype.parseInit=Kr.prototype.parseInit;Fe['application/mp4; codecs="stpp"']=function(){return new Kr};Fe['application/mp4; codecs="stpp.ttml.im1t"']=function(){return new Kr};Fe['application/mp4; codecs="stpp.TTML.im1t"']=function(){return new Kr};function Lr(){}Lr.prototype.parseInit=function(){};
Lr.prototype.parseMedia=function(a,b){var c=Tb(a);c=c.replace(/\r\n|\r(?=[^\n]|$)/gm,"\n");var d=c.split(/\n{2,}/m);if(!/^WEBVTT($|[ \t\n])/m.test(d[0]))throw new M(2,2,2E3);c=b.periodStart;if(d[0].includes("X-TIMESTAMP-MAP")){var e=d[0].match(/LOCAL:((?:(\d{1,}):)?(\d{2}):(\d{2})\.(\d{3}))/m),f=d[0].match(/MPEGTS:(\d+)/m);if(e&&f){c=Mr(new nn(e[1]));if(null==c)throw new M(2,2,2E3);f=Number(f[1]);for(e=b.segmentStart;95443.7176888889<=e;)e-=95443.7176888889,f+=8589934592;c=b.periodStart+f/9E4-c}}f=
[];e=q(d[0].split("\n"));for(var g=e.next();!g.done;g=e.next())if(g=g.value,/^Region:/.test(g)){g=new nn(g);var h=new me;qn(g);on(g);for(var k=qn(g);k;){var l=h,m=k;(k=/^id=(.*)$/.exec(m))?l.id=k[1]:(k=/^width=(\d{1,2}|100)%$/.exec(m))?l.width=Number(k[1]):(k=/^lines=(\d+)$/.exec(m))?(l.height=Number(k[1]),l.heightUnits=2):(k=/^regionanchor=(\d{1,2}|100)%,(\d{1,2}|100)%$/.exec(m))?(l.regionAnchorX=Number(k[1]),l.regionAnchorY=Number(k[2])):(k=/^viewportanchor=(\d{1,2}|100)%,(\d{1,2}|100)%$/.exec(m))?
(l.viewportAnchorX=Number(k[1]),l.viewportAnchorY=Number(k[2])):/^scroll=up$/.exec(m)&&(l.scroll="up");on(g);k=qn(g)}f.push(h)}e=[];d=q(d.slice(1));for(g=d.next();!g.done;g=d.next()){l=g.value.split("\n");k=c;if(1==l.length&&!l[0]||/^NOTE($|[ \t])/.test(l[0])||"STYLE"==l[0])g=null;else{g=null;l[0].includes("--\x3e")||(g=l[0],l.splice(0,1));h=new nn(l[0]);m=Mr(h);var n=pn(h,/[ \t]+--\x3e[ \t]+/g),r=Mr(h);if(null==m||null==n||null==r)throw new M(2,2,2001);l=new ke(m+k,r+k,l.slice(1).join("\n").trim());
on(h);for(k=qn(h);k;)Nr(l,k,f),on(h),k=qn(h);null!=g&&(l.id=g);g=l}g&&e.push(g)}return e};
function Nr(a,b,c){var d;if(d=/^align:(start|middle|center|end|left|right)$/.exec(b))b=d[1],"middle"==b?a.textAlign=oe:a.textAlign=we[b.toUpperCase()];else if(d=/^vertical:(lr|rl)$/.exec(b))a.writingMode="lr"==d[1]?"vertical-lr":"vertical-rl";else if(d=/^size:([\d.]+)%$/.exec(b))a.size=Number(d[1]);else if(d=/^position:([\d.]+)%(?:,(line-left|line-right|center|start|end))?$/.exec(b))a.position=Number(d[1]),d[2]&&(b=d[2],a.positionAlign="line-left"==b||"start"==b?"line-left":"line-right"==b||"end"==
b?"line-right":"center");else if(d=/^region:(.*)$/.exec(b)){if(b=Or(c,d[1]))a.region=b}else if(c=/^line:([\d.]+)%(?:,(start|end|center))?$/.exec(b))a.lineInterpretation=1,a.line=Number(c[1]),c[2]&&(a.lineAlign=ye[c[2].toUpperCase()]);else if(c=/^line:(-?\d+)(?:,(start|end|center))?$/.exec(b))a.lineInterpretation=qe,a.line=Number(c[1]),c[2]&&(a.lineAlign=ye[c[2].toUpperCase()])}function Or(a,b){var c=a.filter(function(d){return d.id==b});return c.length?c[0]:null}
function Mr(a){a=pn(a,/(?:(\d{1,}):)?(\d{2}):(\d{2})\.(\d{2,3})/g);if(null==a)return null;var b=Number(a[2]),c=Number(a[3]);return 59<b||59<c?null:Number(a[4])/1E3+c+60*b+3600*(Number(a[1])||0)}K("shaka.text.VttTextParser",Lr);Lr.prototype.parseMedia=Lr.prototype.parseMedia;Lr.prototype.parseInit=Lr.prototype.parseInit;Fe["text/vtt"]=function(){return new Lr};Fe['text/vtt; codecs="vtt"']=function(){return new Lr};Fe['text/vtt; codecs="wvtt"']=function(){return new Lr};function Pr(){this.a=null}Pr.prototype.parseInit=function(a){var b=this,c=!1;(new Mg).box("moov",Qg).box("trak",Qg).box("mdia",Qg).ea("mdhd",function(d){0==d.version?(d.reader.skip(4),d.reader.skip(4),b.a=d.reader.K(),d.reader.skip(4)):(d.reader.skip(8),d.reader.skip(8),b.a=d.reader.K(),d.reader.skip(8));d.reader.skip(4)}).box("minf",Qg).box("stbl",Qg).ea("stsd",Rg).box("wvtt",function(){c=!0}).parse(a);if(!this.a)throw new M(2,2,2008);if(!c)throw new M(2,2,2008);};
Pr.prototype.parseMedia=function(a,b){if(!this.a)throw new M(2,2,2008);var c=0,d=[],e,f=[],g=!1,h=!1,k=!1,l=null;(new Mg).box("moof",Qg).box("traf",Qg).ea("tfdt",function(E){g=!0;c=0==E.version?E.reader.K():E.reader.rb()}).ea("tfhd",function(E){var H=E.flags;E=E.reader;E.skip(4);H&1&&E.skip(8);H&2&&E.skip(4);l=H&8?E.K():null}).ea("trun",function(E){h=!0;var H=E.version,G=E.flags;E=E.reader;var F=E.K();G&1&&E.skip(4);G&4&&E.skip(4);var I=[];F=q(gb(F));for(var O=F.next();!O.done;O=F.next())O={duration:null,
sampleSize:null,rd:null},G&256&&(O.duration=E.K()),G&512&&(O.sampleSize=E.K()),G&1024&&E.skip(4),G&2048&&(O.rd=0==H?E.K():E.Od()),I.push(O);d=I}).box("mdat",Sg(function(E){k=!0;e=E})).parse(a,!1);if(!k&&!g&&!h)throw new M(2,2,2008);for(var m=c,n=new V(e,0),r=q(d),u=r.next();!u.done;u=r.next()){u=u.value;var v=u.duration||l,A=u.rd?c+u.rd:m;m=A+(v||0);var y=0;do{var z=n.K();y+=z;var D=n.K(),B=null;"vttc"==Tg(D)?8<z&&(B=n.Wa(z-8)):n.skip(z-8);v&&B&&(z=Qr(B,b.periodStart+A/this.a,b.periodStart+m/this.a),
f.push(z))}while(u.sampleSize&&y<u.sampleSize)}return f.filter(Kb)};function Qr(a,b,c){var d,e,f;(new Mg).box("payl",Sg(function(g){d=Tb(g)})).box("iden",Sg(function(g){e=Tb(g)})).box("sttg",Sg(function(g){f=Tb(g)})).parse(a);return d?Rr(d,e,f,b,c):null}function Rr(a,b,c,d,e){a=new ke(d,e,a);b&&(a.id=b);if(c)for(b=new nn(c),c=qn(b);c;)Nr(a,c,[]),on(b),c=qn(b);return a}K("shaka.text.Mp4VttParser",Pr);Pr.prototype.parseMedia=Pr.prototype.parseMedia;Pr.prototype.parseInit=Pr.prototype.parseInit;
Fe['application/mp4; codecs="wvtt"']=function(){return new Pr};/*
 @license
 EME Encryption Scheme Polyfill
 Copyright 2019 Google LLC
 SPDX-License-Identifier: Apache-2.0
*/
function Sr(){}var Tr;function Ur(){Tr?console.debug("EmeEncryptionSchemePolyfill: Already installed."):navigator.requestMediaKeySystemAccess&&MediaKeySystemAccess.prototype.getConfiguration?(Tr=navigator.requestMediaKeySystemAccess,console.debug("EmeEncryptionSchemePolyfill: Waiting to detect encryptionScheme support."),navigator.requestMediaKeySystemAccess=Vr):console.debug("EmeEncryptionSchemePolyfill: EME not found")}
function Vr(a,b){var c=this,d;return J(function(e){if(1==e.a)return console.assert(c==navigator,'bad "this" for requestMediaKeySystemAccess'),t(e,Tr.call(c,a,b),2);d=e.b;if(Wr(d))return console.debug("EmeEncryptionSchemePolyfill: Native encryptionScheme support found."),navigator.requestMediaKeySystemAccess=Tr,e["return"](d);console.debug("EmeEncryptionSchemePolyfill: No native encryptionScheme support found. Patching encryptionScheme support.");navigator.requestMediaKeySystemAccess=Xr;return e["return"](Xr.call(c,
a,b))})}
function Xr(a,b){var c=this,d,e,f,g,h,k,l,m,n,r;return J(function(u){if(1==u.a){console.assert(c==navigator,'bad "this" for requestMediaKeySystemAccess');d=Yr(a);e=[];f=q(b);for(g=f.next();!g.done;g=f.next())h=g.value,k=Zr(h.videoCapabilities,d),l=Zr(h.audioCapabilities,d),h.videoCapabilities&&h.videoCapabilities.length&&!k.length||h.audioCapabilities&&h.audioCapabilities.length&&!l.length||(m=Object.assign({},h),m.videoCapabilities=k,m.audioCapabilities=l,e.push(m));if(!e.length)throw n=Error("Unsupported keySystem or supportedConfigurations."),
n.name="NotSupportedError",n.code=DOMException.NOT_SUPPORTED_ERR,n;return t(u,Tr.call(c,a,e),2)}r=u.b;return u["return"](new $r(r,d))})}function Zr(a,b){return a?a.filter(function(c){return!c.encryptionScheme||c.encryptionScheme==b}):a}K("EmeEncryptionSchemePolyfill",Sr);Sr.install=Ur;function as(){}var bs;
function cs(){navigator.mediaCapabilities?(bs=navigator.mediaCapabilities.decodingInfo,console.debug("McEncryptionSchemePolyfill: Waiting to detect encryptionScheme support."),navigator.mediaCapabilities.decodingInfo=ds):console.debug("McEncryptionSchemePolyfill: MediaCapabilities not found")}
function ds(a){var b=this,c,d;return J(function(e){if(1==e.a)return console.assert(b==navigator.mediaCapabilities,'bad "this" for decodingInfo'),t(e,bs.call(b,a),2);c=e.b;if(!a.keySystemConfiguration)return e["return"](c);d=c.keySystemAccess;if(Wr(d))return console.debug("McEncryptionSchemePolyfill: Native encryptionScheme support found."),navigator.mediaCapabilities.decodingInfo=bs,e["return"](c);console.debug("McEncryptionSchemePolyfill: No native encryptionScheme support found. Patching encryptionScheme support.");
navigator.mediaCapabilities.decodingInfo=es;return e["return"](es.call(b,a))})}
function es(a){var b=this,c,d,e,f,g,h,k;return J(function(l){if(1==l.a)return console.assert(b==navigator.mediaCapabilities,'bad "this" for decodingInfo'),c=null,a.keySystemConfiguration&&(d=a.keySystemConfiguration,e=d.keySystem,f=d.audio&&d.audio.encryptionScheme,g=d.video&&d.video.encryptionScheme,c=Yr(e),h={powerEfficient:!1,smooth:!1,supported:!1,keySystemAccess:null,configuration:a},f&&f!=c||g&&g!=c)?l["return"](h):t(l,bs.call(b,a),2);k=l.b;k.keySystemAccess&&(k.keySystemAccess=new $r(k.keySystemAccess,
c));return l["return"](k)})}K("McEncryptionSchemePolyfill",as);as.install=cs;function $r(a,b){this.b=a;this.a=b;this.keySystem=a.keySystem}$r.prototype.getConfiguration=function(){var a=this.b.getConfiguration();if(a.videoCapabilities)for(var b=q(a.videoCapabilities),c=b.next();!c.done;c=b.next())c.value.encryptionScheme=this.a;if(a.audioCapabilities)for(b=q(a.audioCapabilities),c=b.next();!c.done;c=b.next())c.value.encryptionScheme=this.a;return a};$r.prototype.createMediaKeys=function(){return this.b.createMediaKeys()};
function Yr(a){if(a.startsWith("com.widevine")||a.startsWith("com.microsoft")||a.startsWith("com.adobe")||a.startsWith("org.w3"))return"cenc";if(a.startsWith("com.apple"))return"cbcs-1-9";console.warn("EmeEncryptionSchemePolyfill: Unknown key system:",a,"Please contribute!");return null}function Wr(a){a=a.getConfiguration();var b=a.audioCapabilities&&a.audioCapabilities[0];return(a=a.videoCapabilities&&a.videoCapabilities[0]||b)&&void 0!==a.encryptionScheme?!0:!1}function fs(){}
function lq(){Ur();cs()}K("EncryptionSchemePolyfills",fs);fs.install=lq;"undefined"!==typeof module&&module.exports&&(module.exports=fs);}).call(exportTo,innerGlobal,innerGlobal,undefined);if(typeof exports!="undefined")for(var k in exportTo.shaka)exports[k]=exportTo.shaka[k];else if(typeof define=="function"&&define.amd)define(function(){return exportTo.shaka});else innerGlobal.shaka=exportTo.shaka})();


},{}],"../src/playerTechs/dash_player.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DashPlayer = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _interface = require("./interface");

var Shaka = _interopRequireWildcard(require("shaka-player"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var DashPlayer =
/*#__PURE__*/
function (_PlayerTechInterface) {
  (0, _inherits2.default)(DashPlayer, _PlayerTechInterface);

  var _super = _createSuper(DashPlayer);

  function DashPlayer(wrapperId, manifestUrl) {
    (0, _classCallCheck2.default)(this, DashPlayer);
    return _super.call(this, wrapperId, manifestUrl);
  }

  (0, _createClass2.default)(DashPlayer, [{
    key: "load",
    value: function load() {
      var _this = this;

      return new Promise(function (resolve) {
        var shakap = new Shaka.Player(_this.videoElement_);
        shakap.load(_this.manifestUrl_).then(function () {
          resolve();
        });
        _this.shakap_ = shakap;
      });
    }
  }, {
    key: "destroy",
    value: function destroy() {
      if (this.shakap_) {
        this.shakap_.destroy();
      }

      (0, _get2.default)((0, _getPrototypeOf2.default)(DashPlayer.prototype), "destroy", this).call(this);
    }
  }, {
    key: "isLive",
    get: function get() {
      return this.shakap_.isLive();
    }
  }]);
  return DashPlayer;
}(_interface.PlayerTechInterface);

exports.DashPlayer = DashPlayer;
},{"@babel/runtime/helpers/classCallCheck":"../node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"../node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/get":"../node_modules/@babel/runtime/helpers/get.js","@babel/runtime/helpers/inherits":"../node_modules/@babel/runtime/helpers/inherits.js","@babel/runtime/helpers/possibleConstructorReturn":"../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"../node_modules/@babel/runtime/helpers/getPrototypeOf.js","./interface":"../src/playerTechs/interface.js","shaka-player":"../node_modules/shaka-player/dist/shaka-player.compiled.js"}],"../node_modules/dashjs/build/es5/externals/cea608-parser.js":[function(require,module,exports) {
'use strict';/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2015-2016, DASH Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  1. Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  2. Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */(function(exports){"use strict";/**
     *  Exceptions from regular ASCII. CodePoints are mapped to UTF-16 codes
     */var specialCea608CharsCodes={0x2a:0xe1,// lowercase a, acute accent
0x5c:0xe9,// lowercase e, acute accent
0x5e:0xed,// lowercase i, acute accent
0x5f:0xf3,// lowercase o, acute accent
0x60:0xfa,// lowercase u, acute accent
0x7b:0xe7,// lowercase c with cedilla
0x7c:0xf7,// division symbol
0x7d:0xd1,// uppercase N tilde
0x7e:0xf1,// lowercase n tilde
0x7f:0x2588,// Full block
// THIS BLOCK INCLUDES THE 16 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS
// THAT COME FROM HI BYTE=0x11 AND LOW BETWEEN 0x30 AND 0x3F
// THIS MEANS THAT \x50 MUST BE ADDED TO THE VALUES
0x80:0xae,// Registered symbol (R)
0x81:0xb0,// degree sign
0x82:0xbd,// 1/2 symbol
0x83:0xbf,// Inverted (open) question mark
0x84:0x2122,// Trademark symbol (TM)
0x85:0xa2,// Cents symbol
0x86:0xa3,// Pounds sterling
0x87:0x266a,// Music 8'th note
0x88:0xe0,// lowercase a, grave accent
0x89:0x20,// transparent space (regular)
0x8a:0xe8,// lowercase e, grave accent
0x8b:0xe2,// lowercase a, circumflex accent
0x8c:0xea,// lowercase e, circumflex accent
0x8d:0xee,// lowercase i, circumflex accent
0x8e:0xf4,// lowercase o, circumflex accent
0x8f:0xfb,// lowercase u, circumflex accent
// THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS
// THAT COME FROM HI BYTE=0x12 AND LOW BETWEEN 0x20 AND 0x3F
0x90:0xc1,// capital letter A with acute
0x91:0xc9,// capital letter E with acute
0x92:0xd3,// capital letter O with acute
0x93:0xda,// capital letter U with acute
0x94:0xdc,// capital letter U with diaresis
0x95:0xfc,// lowercase letter U with diaeresis
0x96:0x2018,// opening single quote
0x97:0xa1,// inverted exclamation mark
0x98:0x2a,// asterisk
0x99:0x2019,// closing single quote
0x9a:0x2501,// box drawings heavy horizontal
0x9b:0xa9,// copyright sign
0x9c:0x2120,// Service mark
0x9d:0x2022,// (round) bullet
0x9e:0x201c,// Left double quotation mark
0x9f:0x201d,// Right double quotation mark
0xa0:0xc0,// uppercase A, grave accent
0xa1:0xc2,// uppercase A, circumflex
0xa2:0xc7,// uppercase C with cedilla
0xa3:0xc8,// uppercase E, grave accent
0xa4:0xca,// uppercase E, circumflex
0xa5:0xcb,// capital letter E with diaresis
0xa6:0xeb,// lowercase letter e with diaresis
0xa7:0xce,// uppercase I, circumflex
0xa8:0xcf,// uppercase I, with diaresis
0xa9:0xef,// lowercase i, with diaresis
0xaa:0xd4,// uppercase O, circumflex
0xab:0xd9,// uppercase U, grave accent
0xac:0xf9,// lowercase u, grave accent
0xad:0xdb,// uppercase U, circumflex
0xae:0xab,// left-pointing double angle quotation mark
0xaf:0xbb,// right-pointing double angle quotation mark
// THIS BLOCK INCLUDES THE 32 EXTENDED (TWO-BYTE) LINE 21 CHARACTERS
// THAT COME FROM HI BYTE=0x13 AND LOW BETWEEN 0x20 AND 0x3F
0xb0:0xc3,// Uppercase A, tilde
0xb1:0xe3,// Lowercase a, tilde
0xb2:0xcd,// Uppercase I, acute accent
0xb3:0xcc,// Uppercase I, grave accent
0xb4:0xec,// Lowercase i, grave accent
0xb5:0xd2,// Uppercase O, grave accent
0xb6:0xf2,// Lowercase o, grave accent
0xb7:0xd5,// Uppercase O, tilde
0xb8:0xf5,// Lowercase o, tilde
0xb9:0x7b,// Open curly brace
0xba:0x7d,// Closing curly brace
0xbb:0x5c,// Backslash
0xbc:0x5e,// Caret
0xbd:0x5f,// Underscore
0xbe:0x7c,// Pipe (vertical line)
0xbf:0x223c,// Tilde operator
0xc0:0xc4,// Uppercase A, umlaut
0xc1:0xe4,// Lowercase A, umlaut
0xc2:0xd6,// Uppercase O, umlaut
0xc3:0xf6,// Lowercase o, umlaut
0xc4:0xdf,// Esszett (sharp S)
0xc5:0xa5,// Yen symbol
0xc6:0xa4,// Generic currency sign
0xc7:0x2503,// Box drawings heavy vertical
0xc8:0xc5,// Uppercase A, ring
0xc9:0xe5,// Lowercase A, ring
0xca:0xd8,// Uppercase O, stroke
0xcb:0xf8,// Lowercase o, strok
0xcc:0x250f,// Box drawings heavy down and right
0xcd:0x2513,// Box drawings heavy down and left
0xce:0x2517,// Box drawings heavy up and right
0xcf:0x251b// Box drawings heavy up and left
};/**
     * Get Unicode Character from CEA-608 byte code
     */var getCharForByte=function getCharForByte(byte){var charCode=byte;if(specialCea608CharsCodes.hasOwnProperty(byte)){charCode=specialCea608CharsCodes[byte];}return String.fromCharCode(charCode);};var NR_ROWS=15,NR_COLS=32;// Tables to look up row from PAC data
var rowsLowCh1={0x11:1,0x12:3,0x15:5,0x16:7,0x17:9,0x10:11,0x13:12,0x14:14};var rowsHighCh1={0x11:2,0x12:4,0x15:6,0x16:8,0x17:10,0x13:13,0x14:15};var rowsLowCh2={0x19:1,0x1A:3,0x1D:5,0x1E:7,0x1F:9,0x18:11,0x1B:12,0x1C:14};var rowsHighCh2={0x19:2,0x1A:4,0x1D:6,0x1E:8,0x1F:10,0x1B:13,0x1C:15};var backgroundColors=['white','green','blue','cyan','red','yellow','magenta','black','transparent'];/**
     * Simple logger class to be able to write with time-stamps and filter on level.
     */var logger={verboseFilter:{'DATA':3,'DEBUG':3,'INFO':2,'WARNING':2,'TEXT':1,'ERROR':0},time:null,verboseLevel:0,// Only write errors
setTime:function setTime(newTime){this.time=newTime;},log:function log(severity,msg){var minLevel=this.verboseFilter[severity];if(this.verboseLevel>=minLevel){console.log(this.time+" ["+severity+"] "+msg);}}};var numArrayToHexArray=function numArrayToHexArray(numArray){var hexArray=[];for(var j=0;j<numArray.length;j++){hexArray.push(numArray[j].toString(16));}return hexArray;};/**
     * State of CEA-608 pen or character
     * @constructor
     */var PenState=function PenState(foreground,underline,italics,background,flash){this.foreground=foreground||"white";this.underline=underline||false;this.italics=italics||false;this.background=background||"black";this.flash=flash||false;};PenState.prototype={reset:function reset(){this.foreground="white";this.underline=false;this.italics=false;this.background="black";this.flash=false;},setStyles:function setStyles(styles){var attribs=["foreground","underline","italics","background","flash"];for(var i=0;i<attribs.length;i++){var style=attribs[i];if(styles.hasOwnProperty(style)){this[style]=styles[style];}}},isDefault:function isDefault(){return this.foreground==="white"&&!this.underline&&!this.italics&&this.background==="black"&&!this.flash;},equals:function equals(other){return this.foreground===other.foreground&&this.underline===other.underline&&this.italics===other.italics&&this.background===other.background&&this.flash===other.flash;},copy:function copy(newPenState){this.foreground=newPenState.foreground;this.underline=newPenState.underline;this.italics=newPenState.italics;this.background=newPenState.background;this.flash=newPenState.flash;},toString:function toString(){return"color="+this.foreground+", underline="+this.underline+", italics="+this.italics+", background="+this.background+", flash="+this.flash;}};/**
     * Unicode character with styling and background.
     * @constructor
     */var StyledUnicodeChar=function StyledUnicodeChar(uchar,foreground,underline,italics,background,flash){this.uchar=uchar||' ';// unicode character
this.penState=new PenState(foreground,underline,italics,background,flash);};StyledUnicodeChar.prototype={reset:function reset(){this.uchar=' ';this.penState.reset();},setChar:function setChar(uchar,newPenState){this.uchar=uchar;this.penState.copy(newPenState);},setPenState:function setPenState(newPenState){this.penState.copy(newPenState);},equals:function equals(other){return this.uchar===other.uchar&&this.penState.equals(other.penState);},copy:function copy(newChar){this.uchar=newChar.uchar;this.penState.copy(newChar.penState);},isEmpty:function isEmpty(){return this.uchar===' '&&this.penState.isDefault();}};/**
     * CEA-608 row consisting of NR_COLS instances of StyledUnicodeChar.
     * @constructor
     */var Row=function Row(){this.chars=[];for(var i=0;i<NR_COLS;i++){this.chars.push(new StyledUnicodeChar());}this.pos=0;this.currPenState=new PenState();};Row.prototype={equals:function equals(other){var equal=true;for(var i=0;i<NR_COLS;i++){if(!this.chars[i].equals(other.chars[i])){equal=false;break;}}return equal;},copy:function copy(other){for(var i=0;i<NR_COLS;i++){this.chars[i].copy(other.chars[i]);}},isEmpty:function isEmpty(){var empty=true;for(var i=0;i<NR_COLS;i++){if(!this.chars[i].isEmpty()){empty=false;break;}}return empty;},/**
         *  Set the cursor to a valid column.
         */setCursor:function setCursor(absPos){if(this.pos!==absPos){this.pos=absPos;}if(this.pos<0){logger.log("ERROR","Negative cursor position "+this.pos);this.pos=0;}else if(this.pos>NR_COLS){logger.log("ERROR","Too large cursor position "+this.pos);this.pos=NR_COLS;}},/** 
         * Move the cursor relative to current position.
         */moveCursor:function moveCursor(relPos){var newPos=this.pos+relPos;if(relPos>1){for(var i=this.pos+1;i<newPos+1;i++){this.chars[i].setPenState(this.currPenState);}}this.setCursor(newPos);},/**
         * Backspace, move one step back and clear character.
         */backSpace:function backSpace(){this.moveCursor(-1);this.chars[this.pos].setChar(' ',this.currPenState);},insertChar:function insertChar(byte){if(byte>=0x90){//Extended char
this.backSpace();}var char=getCharForByte(byte);if(this.pos>=NR_COLS){logger.log("ERROR","Cannot insert "+byte.toString(16)+" ("+char+") at position "+this.pos+". Skipping it!");return;}this.chars[this.pos].setChar(char,this.currPenState);this.moveCursor(1);},clearFromPos:function clearFromPos(startPos){var i;for(i=startPos;i<NR_COLS;i++){this.chars[i].reset();}},clear:function clear(){this.clearFromPos(0);this.pos=0;this.currPenState.reset();},clearToEndOfRow:function clearToEndOfRow(){this.clearFromPos(this.pos);},getTextString:function getTextString(){var chars=[];var empty=true;for(var i=0;i<NR_COLS;i++){var char=this.chars[i].uchar;if(char!==" "){empty=false;}chars.push(char);}if(empty){return"";}else{return chars.join("");}},setPenStyles:function setPenStyles(styles){this.currPenState.setStyles(styles);var currChar=this.chars[this.pos];currChar.setPenState(this.currPenState);}};/**
     * Keep a CEA-608 screen of 32x15 styled characters
     * @constructor
    */var CaptionScreen=function CaptionScreen(){this.rows=[];for(var i=0;i<NR_ROWS;i++){this.rows.push(new Row());// Note that we use zero-based numbering (0-14)
}this.currRow=NR_ROWS-1;this.nrRollUpRows=null;this.reset();};CaptionScreen.prototype={reset:function reset(){for(var i=0;i<NR_ROWS;i++){this.rows[i].clear();}this.currRow=NR_ROWS-1;},equals:function equals(other){var equal=true;for(var i=0;i<NR_ROWS;i++){if(!this.rows[i].equals(other.rows[i])){equal=false;break;}}return equal;},copy:function copy(other){for(var i=0;i<NR_ROWS;i++){this.rows[i].copy(other.rows[i]);}},isEmpty:function isEmpty(){var empty=true;for(var i=0;i<NR_ROWS;i++){if(!this.rows[i].isEmpty()){empty=false;break;}}return empty;},backSpace:function backSpace(){var row=this.rows[this.currRow];row.backSpace();},clearToEndOfRow:function clearToEndOfRow(){var row=this.rows[this.currRow];row.clearToEndOfRow();},/**
         * Insert a character (without styling) in the current row.
         */insertChar:function insertChar(char){var row=this.rows[this.currRow];row.insertChar(char);},setPen:function setPen(styles){var row=this.rows[this.currRow];row.setPenStyles(styles);},moveCursor:function moveCursor(relPos){var row=this.rows[this.currRow];row.moveCursor(relPos);},setCursor:function setCursor(absPos){logger.log("INFO","setCursor: "+absPos);var row=this.rows[this.currRow];row.setCursor(absPos);},setPAC:function setPAC(pacData){logger.log("INFO","pacData = "+JSON.stringify(pacData));var newRow=pacData.row-1;if(this.nrRollUpRows&&newRow<this.nrRollUpRows-1){newRow=this.nrRollUpRows-1;}this.currRow=newRow;var row=this.rows[this.currRow];if(pacData.indent!==null){var indent=pacData.indent;var prevPos=Math.max(indent-1,0);row.setCursor(pacData.indent);pacData.color=row.chars[prevPos].penState.foreground;}var styles={foreground:pacData.color,underline:pacData.underline,italics:pacData.italics,background:'black',flash:false};this.setPen(styles);},/**
         * Set background/extra foreground, but first do back_space, and then insert space (backwards compatibility).
         */setBkgData:function setBkgData(bkgData){logger.log("INFO","bkgData = "+JSON.stringify(bkgData));this.backSpace();this.setPen(bkgData);this.insertChar(0x20);//Space
},setRollUpRows:function setRollUpRows(nrRows){this.nrRollUpRows=nrRows;},rollUp:function rollUp(){if(this.nrRollUpRows===null){logger.log("DEBUG","roll_up but nrRollUpRows not set yet");return;//Not properly setup
}logger.log("TEXT",this.getDisplayText());var topRowIndex=this.currRow+1-this.nrRollUpRows;var topRow=this.rows.splice(topRowIndex,1)[0];topRow.clear();this.rows.splice(this.currRow,0,topRow);logger.log("INFO","Rolling up");//logger.log("TEXT", this.get_display_text())
},/**
        * Get all non-empty rows with as unicode text. 
        */getDisplayText:function getDisplayText(asOneRow){asOneRow=asOneRow||false;var displayText=[];var text="";var rowNr=-1;for(var i=0;i<NR_ROWS;i++){var rowText=this.rows[i].getTextString();if(rowText){rowNr=i+1;if(asOneRow){displayText.push("Row "+rowNr+': "'+rowText+'"');}else{displayText.push(rowText.trim());}}}if(displayText.length>0){if(asOneRow){text="["+displayText.join(" | ")+"]";}else{text=displayText.join("\n");}}return text;},getTextAndFormat:function getTextAndFormat(){return this.rows;}};/**
     * Handle a CEA-608 channel and send decoded data to outputFilter
     * @constructor
     * @param {Number} channelNumber (1 or 2)
     * @param {CueHandler} outputFilter Output from channel1 newCue(startTime, endTime, captionScreen)
    */var Cea608Channel=function Cea608Channel(channelNumber,outputFilter){this.chNr=channelNumber;this.outputFilter=outputFilter;this.mode=null;this.verbose=0;this.displayedMemory=new CaptionScreen();this.nonDisplayedMemory=new CaptionScreen();this.lastOutputScreen=new CaptionScreen();this.currRollUpRow=this.displayedMemory.rows[NR_ROWS-1];this.writeScreen=this.displayedMemory;this.mode=null;this.cueStartTime=null;// Keeps track of where a cue started.
};Cea608Channel.prototype={modes:["MODE_ROLL-UP","MODE_POP-ON","MODE_PAINT-ON","MODE_TEXT"],reset:function reset(){this.mode=null;this.displayedMemory.reset();this.nonDisplayedMemory.reset();this.lastOutputScreen.reset();this.currRollUpRow=this.displayedMemory.rows[NR_ROWS-1];this.writeScreen=this.displayedMemory;this.mode=null;this.cueStartTime=null;this.lastCueEndTime=null;},getHandler:function getHandler(){return this.outputFilter;},setHandler:function setHandler(newHandler){this.outputFilter=newHandler;},setPAC:function setPAC(pacData){this.writeScreen.setPAC(pacData);},setBkgData:function setBkgData(bkgData){this.writeScreen.setBkgData(bkgData);},setMode:function setMode(newMode){if(newMode===this.mode){return;}this.mode=newMode;logger.log("INFO","MODE="+newMode);if(this.mode=="MODE_POP-ON"){this.writeScreen=this.nonDisplayedMemory;}else{this.writeScreen=this.displayedMemory;this.writeScreen.reset();}if(this.mode!=="MODE_ROLL-UP"){this.displayedMemory.nrRollUpRows=null;this.nonDisplayedMemory.nrRollUpRows=null;}this.mode=newMode;},insertChars:function insertChars(chars){for(var i=0;i<chars.length;i++){this.writeScreen.insertChar(chars[i]);}var screen=this.writeScreen===this.displayedMemory?"DISP":"NON_DISP";logger.log("INFO",screen+": "+this.writeScreen.getDisplayText(true));if(this.mode==="MODE_PAINT-ON"||this.mode==="MODE_ROLL-UP"){logger.log("TEXT","DISPLAYED: "+this.displayedMemory.getDisplayText(true));this.outputDataUpdate();}},cc_RCL:function cc_RCL(){// Resume Caption Loading (switch mode to Pop On)
logger.log("INFO","RCL - Resume Caption Loading");this.setMode("MODE_POP-ON");},cc_BS:function cc_BS(){// BackSpace
logger.log("INFO","BS - BackSpace");if(this.mode==="MODE_TEXT"){return;}this.writeScreen.backSpace();if(this.writeScreen===this.displayedMemory){this.outputDataUpdate();}},cc_AOF:function cc_AOF(){// Reserved (formerly Alarm Off)
return;},cc_AON:function cc_AON(){// Reserved (formerly Alarm On)
return;},cc_DER:function cc_DER(){// Delete to End of Row
logger.log("INFO","DER- Delete to End of Row");this.writeScreen.clearToEndOfRow();this.outputDataUpdate();},cc_RU:function cc_RU(nrRows){//Roll-Up Captions-2,3,or 4 Rows
logger.log("INFO","RU("+nrRows+") - Roll Up");this.writeScreen=this.displayedMemory;this.setMode("MODE_ROLL-UP");this.writeScreen.setRollUpRows(nrRows);},cc_FON:function cc_FON(){//Flash On
logger.log("INFO","FON - Flash On");this.writeScreen.setPen({flash:true});},cc_RDC:function cc_RDC(){// Resume Direct Captioning (switch mode to PaintOn)
logger.log("INFO","RDC - Resume Direct Captioning");this.setMode("MODE_PAINT-ON");},cc_TR:function cc_TR(){// Text Restart in text mode (not supported, however)
logger.log("INFO","TR");this.setMode("MODE_TEXT");},cc_RTD:function cc_RTD(){// Resume Text Display in Text mode (not supported, however)
logger.log("INFO","RTD");this.setMode("MODE_TEXT");},cc_EDM:function cc_EDM(){// Erase Displayed Memory
logger.log("INFO","EDM - Erase Displayed Memory");this.displayedMemory.reset();this.outputDataUpdate();},cc_CR:function cc_CR(){// Carriage Return
logger.log("CR - Carriage Return");this.writeScreen.rollUp();this.outputDataUpdate();},cc_ENM:function cc_ENM(){//Erase Non-Displayed Memory
logger.log("INFO","ENM - Erase Non-displayed Memory");this.nonDisplayedMemory.reset();},cc_EOC:function cc_EOC(){//End of Caption (Flip Memories)
logger.log("INFO","EOC - End Of Caption");if(this.mode==="MODE_POP-ON"){var tmp=this.displayedMemory;this.displayedMemory=this.nonDisplayedMemory;this.nonDisplayedMemory=tmp;this.writeScreen=this.nonDisplayedMemory;logger.log("TEXT","DISP: "+this.displayedMemory.getDisplayText());}this.outputDataUpdate();},cc_TO:function cc_TO(nrCols){// Tab Offset 1,2, or 3 columns
logger.log("INFO","TO("+nrCols+") - Tab Offset");this.writeScreen.moveCursor(nrCols);},cc_MIDROW:function cc_MIDROW(secondByte){// Parse MIDROW command
var styles={flash:false};styles.underline=secondByte%2===1;styles.italics=secondByte>=0x2e;if(!styles.italics){var colorIndex=Math.floor(secondByte/2)-0x10;var colors=["white","green","blue","cyan","red","yellow","magenta"];styles.foreground=colors[colorIndex];}else{styles.foreground="white";}logger.log("INFO","MIDROW: "+JSON.stringify(styles));this.writeScreen.setPen(styles);},outputDataUpdate:function outputDataUpdate(){var t=logger.time;if(t===null){return;}if(this.outputFilter){if(this.outputFilter.updateData){this.outputFilter.updateData(t,this.displayedMemory);}if(this.cueStartTime===null&&!this.displayedMemory.isEmpty()){// Start of a new cue
this.cueStartTime=t;}else{if(!this.displayedMemory.equals(this.lastOutputScreen)){if(this.outputFilter.newCue){this.outputFilter.newCue(this.cueStartTime,t,this.lastOutputScreen);}this.cueStartTime=this.displayedMemory.isEmpty()?null:t;}}this.lastOutputScreen.copy(this.displayedMemory);}},cueSplitAtTime:function cueSplitAtTime(t){if(this.outputFilter){if(!this.displayedMemory.isEmpty()){if(this.outputFilter.newCue){this.outputFilter.newCue(this.cueStartTime,t,this.displayedMemory);}this.cueStartTime=t;}}}};/**
     * Parse CEA-608 data and send decoded data to out1 and out2.
     * @constructor
     * @param {Number} field  CEA-608 field (1 or 2)
     * @param {CueHandler} out1 Output from channel1 newCue(startTime, endTime, captionScreen)
     * @param {CueHandler} out2 Output from channel2 newCue(startTime, endTime, captionScreen)
     */var Cea608Parser=function Cea608Parser(field,out1,out2){this.field=field||1;this.outputs=[out1,out2];this.channels=[new Cea608Channel(1,out1),new Cea608Channel(2,out2)];this.currChNr=-1;// Will be 1 or 2
this.lastCmdA=null;// First byte of last command
this.lastCmdB=null;// Second byte of last command
this.bufferedData=[];this.startTime=null;this.lastTime=null;this.dataCounters={'padding':0,'char':0,'cmd':0,'other':0};};Cea608Parser.prototype={getHandler:function getHandler(index){return this.channels[index].getHandler();},setHandler:function setHandler(index,newHandler){this.channels[index].setHandler(newHandler);},/**
         * Add data for time t in forms of list of bytes (unsigned ints). The bytes are treated as pairs.
         */addData:function addData(t,byteList){var cmdFound,a,b,charsFound=false;this.lastTime=t;logger.setTime(t);for(var i=0;i<byteList.length;i+=2){a=byteList[i]&0x7f;b=byteList[i+1]&0x7f;if(a>=0x10&&a<=0x1f&&a===this.lastCmdA&&b===this.lastCmdB){this.lastCmdA=null;this.lastCmdB=null;logger.log("DEBUG","Repeated command ("+numArrayToHexArray([a,b])+") is dropped");continue;// Repeated commands are dropped (once)
}if(a===0&&b===0){this.dataCounters.padding+=2;continue;}else{logger.log("DATA","["+numArrayToHexArray([byteList[i],byteList[i+1]])+"] -> ("+numArrayToHexArray([a,b])+")");}cmdFound=this.parseCmd(a,b);if(!cmdFound){cmdFound=this.parseMidrow(a,b);}if(!cmdFound){cmdFound=this.parsePAC(a,b);}if(!cmdFound){cmdFound=this.parseBackgroundAttributes(a,b);}if(!cmdFound){charsFound=this.parseChars(a,b);if(charsFound){if(this.currChNr&&this.currChNr>=0){var channel=this.channels[this.currChNr-1];channel.insertChars(charsFound);}else{logger.log("WARNING","No channel found yet. TEXT-MODE?");}}}if(cmdFound){this.dataCounters.cmd+=2;}else if(charsFound){this.dataCounters.char+=2;}else{this.dataCounters.other+=2;logger.log("WARNING","Couldn't parse cleaned data "+numArrayToHexArray([a,b])+" orig: "+numArrayToHexArray([byteList[i],byteList[i+1]]));}}},/**
         * Parse Command.
         * @returns {Boolean} Tells if a command was found
         */parseCmd:function parseCmd(a,b){var chNr=null;var cond1=(a===0x14||a===0x15||a===0x1C||a===0x1D)&&0x20<=b&&b<=0x2F;var cond2=(a===0x17||a===0x1F)&&0x21<=b&&b<=0x23;if(!(cond1||cond2)){return false;}if(a===0x14||a===0x15||a===0x17){chNr=1;}else{chNr=2;// (a === 0x1C || a === 0x1D || a=== 0x1f)
}var channel=this.channels[chNr-1];if(a===0x14||a===0x15||a===0x1C||a===0x1D){if(b===0x20){channel.cc_RCL();}else if(b===0x21){channel.cc_BS();}else if(b===0x22){channel.cc_AOF();}else if(b===0x23){channel.cc_AON();}else if(b===0x24){channel.cc_DER();}else if(b===0x25){channel.cc_RU(2);}else if(b===0x26){channel.cc_RU(3);}else if(b===0x27){channel.cc_RU(4);}else if(b===0x28){channel.cc_FON();}else if(b===0x29){channel.cc_RDC();}else if(b===0x2A){channel.cc_TR();}else if(b===0x2B){channel.cc_RTD();}else if(b===0x2C){channel.cc_EDM();}else if(b===0x2D){channel.cc_CR();}else if(b===0x2E){channel.cc_ENM();}else if(b===0x2F){channel.cc_EOC();}}else{//a == 0x17 || a == 0x1F
channel.cc_TO(b-0x20);}this.lastCmdA=a;this.lastCmdB=b;this.currChNr=chNr;return true;},/**
         * Parse midrow styling command
         * @returns {Boolean}
         */parseMidrow:function parseMidrow(a,b){var chNr=null;if((a===0x11||a===0x19)&&0x20<=b&&b<=0x2f){if(a===0x11){chNr=1;}else{chNr=2;}if(chNr!==this.currChNr){logger.log("ERROR","Mismatch channel in midrow parsing");return false;}var channel=this.channels[chNr-1];// cea608 spec says midrow codes should inject a space
channel.insertChars([0x20]);channel.cc_MIDROW(b);logger.log("DEBUG","MIDROW ("+numArrayToHexArray([a,b])+")");this.lastCmdA=a;this.lastCmdB=b;return true;}return false;},/**
         * Parse Preable Access Codes (Table 53).
         * @returns {Boolean} Tells if PAC found
         */parsePAC:function parsePAC(a,b){var chNr=null;var row=null;var case1=(0x11<=a&&a<=0x17||0x19<=a&&a<=0x1F)&&0x40<=b&&b<=0x7F;var case2=(a===0x10||a===0x18)&&0x40<=b&&b<=0x5F;if(!(case1||case2)){return false;}chNr=a<=0x17?1:2;if(0x40<=b&&b<=0x5F){row=chNr===1?rowsLowCh1[a]:rowsLowCh2[a];}else{// 0x60 <= b <= 0x7F
row=chNr===1?rowsHighCh1[a]:rowsHighCh2[a];}var pacData=this.interpretPAC(row,b);var channel=this.channels[chNr-1];channel.setPAC(pacData);this.lastCmdA=a;this.lastCmdB=b;this.currChNr=chNr;return true;},/**
         * Interpret the second byte of the pac, and return the information.
         * @returns {Object} pacData with style parameters.
         */interpretPAC:function interpretPAC(row,byte){var pacIndex=byte;var pacData={color:null,italics:false,indent:null,underline:false,row:row};if(byte>0x5F){pacIndex=byte-0x60;}else{pacIndex=byte-0x40;}pacData.underline=(pacIndex&1)===1;if(pacIndex<=0xd){pacData.color=['white','green','blue','cyan','red','yellow','magenta','white'][Math.floor(pacIndex/2)];}else if(pacIndex<=0xf){pacData.italics=true;pacData.color='white';}else{pacData.indent=Math.floor((pacIndex-0x10)/2)*4;}return pacData;// Note that row has zero offset. The spec uses 1.
},/**
         * Parse characters.
         * @returns An array with 1 to 2 codes corresponding to chars, if found. null otherwise.
         */parseChars:function parseChars(a,b){var channelNr=null,charCodes=null,charCode1=null,charCode2=null;if(a>=0x19){channelNr=2;charCode1=a-8;}else{channelNr=1;charCode1=a;}if(0x11<=charCode1&&charCode1<=0x13){// Special character
var oneCode=b;if(charCode1===0x11){oneCode=b+0x50;}else if(charCode1===0x12){oneCode=b+0x70;}else{oneCode=b+0x90;}logger.log("INFO","Special char '"+getCharForByte(oneCode)+"' in channel "+channelNr);charCodes=[oneCode];this.lastCmdA=a;this.lastCmdB=b;}else if(0x20<=a&&a<=0x7f){charCodes=b===0?[a]:[a,b];this.lastCmdA=null;this.lastCmdB=null;}if(charCodes){var hexCodes=numArrayToHexArray(charCodes);logger.log("DEBUG","Char codes =  "+hexCodes.join(","));}return charCodes;},/**
        * Parse extended background attributes as well as new foreground color black.
        * @returns{Boolean} Tells if background attributes are found
        */parseBackgroundAttributes:function parseBackgroundAttributes(a,b){var bkgData,index,chNr,channel;var case1=(a===0x10||a===0x18)&&0x20<=b&&b<=0x2f;var case2=(a===0x17||a===0x1f)&&0x2d<=b&&b<=0x2f;if(!(case1||case2)){return false;}bkgData={};if(a===0x10||a===0x18){index=Math.floor((b-0x20)/2);bkgData.background=backgroundColors[index];if(b%2===1){bkgData.background=bkgData.background+"_semi";}}else if(b===0x2d){bkgData.background="transparent";}else{bkgData.foreground="black";if(b===0x2f){bkgData.underline=true;}}chNr=a<0x18?1:2;channel=this.channels[chNr-1];channel.setBkgData(bkgData);this.lastCmdA=a;this.lastCmdB=b;return true;},/**
         * Reset state of parser and its channels.
         */reset:function reset(){for(var i=0;i<this.channels.length;i++){if(this.channels[i]){this.channels[i].reset();}}this.lastCmdA=null;this.lastCmdB=null;},/**
         * Trigger the generation of a cue, and the start of a new one if displayScreens are not empty.
         */cueSplitAtTime:function cueSplitAtTime(t){for(var i=0;i<this.channels.length;i++){if(this.channels[i]){this.channels[i].cueSplitAtTime(t);}}}};/**
     * Find ranges corresponding to SEA CEA-608 NALUS in sizeprepended NALU array.
     * @param {raw} dataView of binary data
     * @param {startPos} start position in raw
     * @param {size} total size of data in raw to consider
     * @returns 
     */var findCea608Nalus=function findCea608Nalus(raw,startPos,size){var nalSize=0,cursor=startPos,nalType=0,cea608NaluRanges=[],// Check SEI data according to ANSI-SCTE 128
isCEA608SEI=function isCEA608SEI(payloadType,payloadSize,raw,pos){if(payloadType!==4||payloadSize<8){return null;}var countryCode=raw.getUint8(pos);var providerCode=raw.getUint16(pos+1);var userIdentifier=raw.getUint32(pos+3);var userDataTypeCode=raw.getUint8(pos+7);return countryCode==0xB5&&providerCode==0x31&&userIdentifier==0x47413934&&userDataTypeCode==0x3;};while(cursor<startPos+size){nalSize=raw.getUint32(cursor);nalType=raw.getUint8(cursor+4)&0x1F;//console.log(time + "  NAL " + nalType);
if(nalType===6){// SEI NAL Unit. The NAL header is the first byte
//console.log("SEI NALU of size " + nalSize + " at time " + time);
var pos=cursor+5;var payloadType=-1;while(pos<cursor+4+nalSize-1){// The last byte should be rbsp_trailing_bits
payloadType=0;var b=0xFF;while(b===0xFF){b=raw.getUint8(pos);payloadType+=b;pos++;}var payloadSize=0;b=0xFF;while(b===0xFF){b=raw.getUint8(pos);payloadSize+=b;pos++;}if(isCEA608SEI(payloadType,payloadSize,raw,pos)){//console.log("CEA608 SEI " + time + " " + payloadSize);
cea608NaluRanges.push([pos,payloadSize]);}pos+=payloadSize;}}cursor+=nalSize+4;}return cea608NaluRanges;};var extractCea608DataFromRange=function extractCea608DataFromRange(raw,cea608Range){var pos=cea608Range[0];var fieldData=[[],[]];pos+=8;// Skip the identifier up to userDataTypeCode
var ccCount=raw.getUint8(pos)&0x1f;pos+=2;// Advance 1 and skip reserved byte
for(var i=0;i<ccCount;i++){var byte=raw.getUint8(pos);var ccValid=byte&0x4;var ccType=byte&0x3;pos++;var ccData1=raw.getUint8(pos);// Keep parity bit
pos++;var ccData2=raw.getUint8(pos);// Keep parity bit
pos++;if(ccValid&&(ccData1&0x7f)+(ccData2&0x7f)!==0){//Check validity and non-empty data
if(ccType===0){fieldData[0].push(ccData1);fieldData[0].push(ccData2);}else if(ccType===1){fieldData[1].push(ccData1);fieldData[1].push(ccData2);}}}return fieldData;};exports.logger=logger;exports.PenState=PenState;exports.CaptionScreen=CaptionScreen;exports.Cea608Parser=Cea608Parser;exports.findCea608Nalus=findCea608Nalus;exports.extractCea608DataFromRange=extractCea608DataFromRange;})(typeof exports==='undefined'?undefined.cea608parser={}:exports);


},{}],"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * Constants declaration
 * @class
 * @ignore
 * @hideconstructor
 */var Constants=function(){_createClass(Constants,[{key:'init',value:function init(){/**
         *  @constant {string} STREAM Stream media type. Mainly used to report metrics relative to the full stream
         *  @memberof Constants#
         *  @static
         */this.STREAM='stream';/**
         *  @constant {string} VIDEO Video media type
         *  @memberof Constants#
         *  @static
         */this.VIDEO='video';/**
         *  @constant {string} AUDIO Audio media type
         *  @memberof Constants#
         *  @static
         */this.AUDIO='audio';/**
         *  @constant {string} TEXT Text media type
         *  @memberof Constants#
         *  @static
         */this.TEXT='text';/**
         *  @constant {string} FRAGMENTED_TEXT Fragmented text media type
         *  @memberof Constants#
         *  @static
         */this.FRAGMENTED_TEXT='fragmentedText';/**
         *  @constant {string} EMBEDDED_TEXT Embedded text media type
         *  @memberof Constants#
         *  @static
         */this.EMBEDDED_TEXT='embeddedText';/**
         *  @constant {string} MUXED Muxed (video/audio in the same chunk) media type
         *  @memberof Constants#
         *  @static
         */this.MUXED='muxed';/**
         *  @constant {string} IMAGE Image media type
         *  @memberof Constants#
         *  @static
         */this.IMAGE='image';/**
         *  @constant {string} STPP STTP Subtitles format
         *  @memberof Constants#
         *  @static
         */this.STPP='stpp';/**
         *  @constant {string} TTML STTP Subtitles format
         *  @memberof Constants#
         *  @static
         */this.TTML='ttml';/**
         *  @constant {string} VTT STTP Subtitles format
         *  @memberof Constants#
         *  @static
         */this.VTT='vtt';/**
         *  @constant {string} WVTT STTP Subtitles format
         *  @memberof Constants#
         *  @static
         */this.WVTT='wvtt';/**
         *  @constant {string} ABR_STRATEGY_DYNAMIC Dynamic Adaptive bitrate algorithm
         *  @memberof Constants#
         *  @static
         */this.ABR_STRATEGY_DYNAMIC='abrDynamic';/**
         *  @constant {string} ABR_STRATEGY_BOLA Adaptive bitrate algorithm based on Bola (buffer level)
         *  @memberof Constants#
         *  @static
         */this.ABR_STRATEGY_BOLA='abrBola';/**
         *  @constant {string} ABR_STRATEGY_L2A Adaptive bitrate algorithm based on L2A (online learning)
         *  @memberof Constants#
         *  @static
         */this.ABR_STRATEGY_L2A='abrL2A';/**
         *  @constant {string} ABR_STRATEGY_LoLP Adaptive bitrate algorithm based on LoL+
         *  @memberof Constants#
         *  @static
         */this.ABR_STRATEGY_LoLP='abrLoLP';/**
         *  @constant {string} ABR_STRATEGY_THROUGHPUT Adaptive bitrate algorithm based on throughput
         *  @memberof Constants#
         *  @static
         */this.ABR_STRATEGY_THROUGHPUT='abrThroughput';/**
         *  @constant {string} ABR_FETCH_THROUGHPUT_CALUCUALTION_DOWNLOADED_DATA Throughput calculation based on downloaded data array
         *  @memberof Constants#
         *  @static
         */this.ABR_FETCH_THROUGHPUT_CALCULATION_DOWNLOADED_DATA='abrFetchThroughputCalculationDownloadedData';/**
         *  @constant {string} ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING Throughput calculation based on moof parsing
         *  @memberof Constants#
         *  @static
         */this.ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING='abrFetchThroughputCalculationMoofParsing';/**
         *  @constant {string} LIVE_CATCHUP_MODE_DEFAULT Throughput calculation based on moof parsing
         *  @memberof Constants#
         *  @static
         */this.LIVE_CATCHUP_MODE_DEFAULT='liveCatchupModeDefault';/**
         *  @constant {string} LIVE_CATCHUP_MODE_LOLP Throughput calculation based on moof parsing
         *  @memberof Constants#
         *  @static
         */this.LIVE_CATCHUP_MODE_LOLP='liveCatchupModeLoLP';/**
         *  @constant {string} MOVING_AVERAGE_SLIDING_WINDOW Moving average sliding window
         *  @memberof Constants#
         *  @static
         */this.MOVING_AVERAGE_SLIDING_WINDOW='slidingWindow';/**
         *  @constant {string} EWMA Exponential moving average
         *  @memberof Constants#
         *  @static
         */this.MOVING_AVERAGE_EWMA='ewma';/**
         *  @constant {string} BAD_ARGUMENT_ERROR Invalid Arguments type of error
         *  @memberof Constants#
         *  @static
         */this.BAD_ARGUMENT_ERROR='Invalid Arguments';/**
         *  @constant {string} MISSING_CONFIG_ERROR Missing configuration parameters type of error
         *  @memberof Constants#
         *  @static
         */this.MISSING_CONFIG_ERROR='Missing config parameter(s)';/**
         *  @constant {string} TRACK_SWITCH_MODE_ALWAYS_REPLACE used to clear the buffered data (prior to current playback position) after track switch. Default for audio
         *  @memberof Constants#
         *  @static
         */this.TRACK_SWITCH_MODE_ALWAYS_REPLACE='alwaysReplace';/**
         *  @constant {string} TRACK_SWITCH_MODE_NEVER_REPLACE used to forbid clearing the buffered data (prior to current playback position) after track switch. Defers to fastSwitchEnabled for placement of new data. Default for video
         *  @memberof Constants#
         *  @static
         */this.TRACK_SWITCH_MODE_NEVER_REPLACE='neverReplace';/**
         *  @constant {string} TRACK_SELECTION_MODE_HIGHEST_BITRATE makes the player select the track with a highest bitrate. This mode is a default mode.
         *  @memberof Constants#
         *  @static
         */this.TRACK_SELECTION_MODE_HIGHEST_BITRATE='highestBitrate';/**
         *  @constant {string} TRACK_SELECTION_MODE_WIDEST_RANGE this mode makes the player select the track with a widest range of bitrates
         *  @memberof Constants#
         *  @static
         */this.TRACK_SELECTION_MODE_WIDEST_RANGE='widestRange';this.LOCATION='Location';this.INITIALIZE='initialize';this.TEXT_SHOWING='showing';this.TEXT_HIDDEN='hidden';this.CC1='CC1';this.CC3='CC3';this.UTF8='utf-8';this.SCHEME_ID_URI='schemeIdUri';this.START_TIME='starttime';this.SERVICE_DESCRIPTION_LL_SCHEME='urn:dvb:dash:lowlatency:scope:2019';this.SUPPLEMENTAL_PROPERTY_LL_SCHEME='urn:dvb:dash:lowlatency:critical:2019';this.XML='XML';this.ARRAY_BUFFER='ArrayBuffer';this.DVB_REPORTING_URL='dvb:reportingUrl';this.DVB_PROBABILITY='dvb:probability';}}]);function Constants(){_classCallCheck(this,Constants);this.init();}return Constants;}();var constants=new Constants();exports.default=constants;


},{}],"../node_modules/dashjs/build/es5/src/dash/constants/DashConstants.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * Dash constants declaration
 * @class
 * @ignore
 */var DashConstants=function(){_createClass(DashConstants,[{key:'init',value:function init(){this.BASE_URL='BaseURL';this.SEGMENT_BASE='SegmentBase';this.SEGMENT_TEMPLATE='SegmentTemplate';this.SEGMENT_LIST='SegmentList';this.SEGMENT_URL='SegmentURL';this.SEGMENT_TIMELINE='SegmentTimeline';this.SEGMENT_PROFILES='segmentProfiles';this.ADAPTATION_SET='AdaptationSet';this.REPRESENTATION='Representation';this.REPRESENTATION_INDEX='RepresentationIndex';this.SUB_REPRESENTATION='SubRepresentation';this.INITIALIZATION='Initialization';this.INITIALIZATION_MINUS='initialization';this.MPD='MPD';this.PERIOD='Period';this.ASSET_IDENTIFIER='AssetIdentifier';this.EVENT_STREAM='EventStream';this.ID='id';this.PROFILES='profiles';this.SERVICE_LOCATION='serviceLocation';this.RANGE='range';this.INDEX='index';this.MEDIA='media';this.BYTE_RANGE='byteRange';this.INDEX_RANGE='indexRange';this.MEDIA_RANGE='mediaRange';this.VALUE='value';this.CONTENT_TYPE='contentType';this.MIME_TYPE='mimeType';this.BITSTREAM_SWITCHING='BitstreamSwitching';this.BITSTREAM_SWITCHING_MINUS='bitstreamSwitching';this.CODECS='codecs';this.DEPENDENCY_ID='dependencyId';this.MEDIA_STREAM_STRUCTURE_ID='mediaStreamStructureId';this.METRICS='Metrics';this.METRICS_MINUS='metrics';this.REPORTING='Reporting';this.WIDTH='width';this.HEIGHT='height';this.SAR='sar';this.FRAMERATE='frameRate';this.AUDIO_SAMPLING_RATE='audioSamplingRate';this.MAXIMUM_SAP_PERIOD='maximumSAPPeriod';this.START_WITH_SAP='startWithSAP';this.MAX_PLAYOUT_RATE='maxPlayoutRate';this.CODING_DEPENDENCY='codingDependency';this.SCAN_TYPE='scanType';this.FRAME_PACKING='FramePacking';this.AUDIO_CHANNEL_CONFIGURATION='AudioChannelConfiguration';this.CONTENT_PROTECTION='ContentProtection';this.ESSENTIAL_PROPERTY='EssentialProperty';this.SUPPLEMENTAL_PROPERTY='SupplementalProperty';this.INBAND_EVENT_STREAM='InbandEventStream';this.ACCESSIBILITY='Accessibility';this.ROLE='Role';this.RATING='Rating';this.CONTENT_COMPONENT='ContentComponent';this.SUBSET='Subset';this.LANG='lang';this.VIEWPOINT='Viewpoint';this.ROLE_ASARRAY='Role_asArray';this.ACCESSIBILITY_ASARRAY='Accessibility_asArray';this.AUDIOCHANNELCONFIGURATION_ASARRAY='AudioChannelConfiguration_asArray';this.CONTENTPROTECTION_ASARRAY='ContentProtection_asArray';this.MAIN='main';this.DYNAMIC='dynamic';this.STATIC='static';this.MEDIA_PRESENTATION_DURATION='mediaPresentationDuration';this.MINIMUM_UPDATE_PERIOD='minimumUpdatePeriod';this.CODEC_PRIVATE_DATA='codecPrivateData';this.BANDWITH='bandwidth';this.SOURCE_URL='sourceURL';this.TIMESCALE='timescale';this.DURATION='duration';this.START_NUMBER='startNumber';this.PRESENTATION_TIME_OFFSET='presentationTimeOffset';this.AVAILABILITY_START_TIME='availabilityStartTime';this.AVAILABILITY_END_TIME='availabilityEndTime';this.TIMESHIFT_BUFFER_DEPTH='timeShiftBufferDepth';this.MAX_SEGMENT_DURATION='maxSegmentDuration';this.PRESENTATION_TIME='presentationTime';this.MIN_BUFFER_TIME='minBufferTime';this.MAX_SUBSEGMENT_DURATION='maxSubsegmentDuration';this.START='start';this.AVAILABILITY_TIME_OFFSET='availabilityTimeOffset';this.AVAILABILITY_TIME_COMPLETE='availabilityTimeComplete';this.CENC_DEFAULT_KID='cenc:default_KID';this.DVB_PRIORITY='dvb:priority';this.DVB_WEIGHT='dvb:weight';this.SUGGESTED_PRESENTATION_DELAY='suggestedPresentationDelay';this.SERVICE_DESCRIPTION='ServiceDescription';this.SERVICE_DESCRIPTION_SCOPE='Scope';this.SERVICE_DESCRIPTION_LATENCY='Latency';this.SERVICE_DESCRIPTION_PLAYBACK_RATE='PlaybackRate';}}]);function DashConstants(){_classCallCheck(this,DashConstants);this.init();}return DashConstants;}();var constants=new DashConstants();exports.default=constants;


},{}],"../node_modules/dashjs/build/es5/src/streaming/constants/MetricsConstants.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * Metrics Constants declaration
 * @class
 * @ignore
 */var MetricsConstants=function(){_createClass(MetricsConstants,[{key:'init',value:function init(){this.TCP_CONNECTION='TcpList';this.HTTP_REQUEST='HttpList';this.TRACK_SWITCH='RepSwitchList';this.BUFFER_LEVEL='BufferLevel';this.BUFFER_LOADED='bufferLoaded';this.ABANDON_LOAD='abandonload';this.ALLOW_LOAD='allowload';this.BUFFER_EMPTY='bufferStalled';this.BUFFER_STATE='BufferState';this.DVR_INFO='DVRInfo';this.DROPPED_FRAMES='DroppedFrames';this.SCHEDULING_INFO='SchedulingInfo';this.REQUESTS_QUEUE='RequestsQueue';this.MANIFEST_UPDATE='ManifestUpdate';this.MANIFEST_UPDATE_STREAM_INFO='ManifestUpdatePeriodInfo';this.MANIFEST_UPDATE_TRACK_INFO='ManifestUpdateRepresentationInfo';this.PLAY_LIST='PlayList';this.DVB_ERRORS='DVBErrors';}}]);function MetricsConstants(){_classCallCheck(this,MetricsConstants);this.init();}return MetricsConstants;}();var constants=new MetricsConstants();exports.default=constants;


},{}],"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @module FactoryMaker
 * @ignore
 */var FactoryMaker=function(){var instance=void 0;var singletonContexts=[];var singletonFactories={};var classFactories={};function extend(name,childInstance,override,context){if(!context[name]&&childInstance){context[name]={instance:childInstance,override:override};}}/**
     * Use this method from your extended object.  this.factory is injected into your object.
     * this.factory.getSingletonInstance(this.context, 'VideoModel')
     * will return the video model for use in the extended object.
     *
     * @param {Object} context - injected into extended object as this.context
     * @param {string} className - string name found in all dash.js objects
     * with name __dashjs_factory_name Will be at the bottom. Will be the same as the object's name.
     * @returns {*} Context aware instance of specified singleton name.
     * @memberof module:FactoryMaker
     * @instance
     */function getSingletonInstance(context,className){for(var i in singletonContexts){var obj=singletonContexts[i];if(obj.context===context&&obj.name===className){return obj.instance;}}return null;}/**
     * Use this method to add an singleton instance to the system.  Useful for unit testing to mock objects etc.
     *
     * @param {Object} context
     * @param {string} className
     * @param {Object} instance
     * @memberof module:FactoryMaker
     * @instance
     */function setSingletonInstance(context,className,instance){for(var i in singletonContexts){var obj=singletonContexts[i];if(obj.context===context&&obj.name===className){singletonContexts[i].instance=instance;return;}}singletonContexts.push({name:className,context:context,instance:instance});}/**
     * Use this method to remove all singleton instances associated with a particular context.
     *
     * @param {Object} context
     * @memberof module:FactoryMaker
     * @instance
     */function deleteSingletonInstances(context){singletonContexts=singletonContexts.filter(function(x){return x.context!==context;});}/*------------------------------------------------------------------------------------------*/// Factories storage Management
/*------------------------------------------------------------------------------------------*/function getFactoryByName(name,factoriesArray){return factoriesArray[name];}function updateFactory(name,factory,factoriesArray){if(name in factoriesArray){factoriesArray[name]=factory;}}/*------------------------------------------------------------------------------------------*/// Class Factories Management
/*------------------------------------------------------------------------------------------*/function updateClassFactory(name,factory){updateFactory(name,factory,classFactories);}function getClassFactoryByName(name){return getFactoryByName(name,classFactories);}function getClassFactory(classConstructor){var factory=getFactoryByName(classConstructor.__dashjs_factory_name,classFactories);if(!factory){factory=function factory(context){if(context===undefined){context={};}return{create:function create(){return merge(classConstructor,context,arguments);}};};classFactories[classConstructor.__dashjs_factory_name]=factory;// store factory
}return factory;}/*------------------------------------------------------------------------------------------*/// Singleton Factory MAangement
/*------------------------------------------------------------------------------------------*/function updateSingletonFactory(name,factory){updateFactory(name,factory,singletonFactories);}function getSingletonFactoryByName(name){return getFactoryByName(name,singletonFactories);}function getSingletonFactory(classConstructor){var factory=getFactoryByName(classConstructor.__dashjs_factory_name,singletonFactories);if(!factory){factory=function factory(context){var instance=void 0;if(context===undefined){context={};}return{getInstance:function getInstance(){// If we don't have an instance yet check for one on the context
if(!instance){instance=getSingletonInstance(context,classConstructor.__dashjs_factory_name);}// If there's no instance on the context then create one
if(!instance){instance=merge(classConstructor,context,arguments);singletonContexts.push({name:classConstructor.__dashjs_factory_name,context:context,instance:instance});}return instance;}};};singletonFactories[classConstructor.__dashjs_factory_name]=factory;// store factory
}return factory;}function merge(classConstructor,context,args){var classInstance=void 0;var className=classConstructor.__dashjs_factory_name;var extensionObject=context[className];if(extensionObject){var extension=extensionObject.instance;if(extensionObject.override){//Override public methods in parent but keep parent.
classInstance=classConstructor.apply({context:context},args);extension=extension.apply({context:context,factory:instance,parent:classInstance},args);for(var prop in extension){if(classInstance.hasOwnProperty(prop)){classInstance[prop]=extension[prop];}}}else{//replace parent object completely with new object. Same as dijon.
return extension.apply({context:context,factory:instance},args);}}else{// Create new instance of the class
classInstance=classConstructor.apply({context:context},args);}// Add getClassName function to class instance prototype (used by Debug)
classInstance.getClassName=function(){return className;};return classInstance;}instance={extend:extend,getSingletonInstance:getSingletonInstance,setSingletonInstance:setSingletonInstance,deleteSingletonInstances:deleteSingletonInstances,getSingletonFactory:getSingletonFactory,getSingletonFactoryByName:getSingletonFactoryByName,updateSingletonFactory:updateSingletonFactory,getClassFactory:getClassFactory,getClassFactoryByName:getClassFactoryByName,updateClassFactory:updateClassFactory};return instance;}();exports.default=FactoryMaker;


},{}],"../node_modules/dashjs/build/es5/src/core/events/EventsBase.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var EventsBase=function(){function EventsBase(){_classCallCheck(this,EventsBase);}_createClass(EventsBase,[{key:'extend',value:function extend(events,config){if(!events)return;var override=config?config.override:false;var publicOnly=config?config.publicOnly:false;for(var evt in events){if(!events.hasOwnProperty(evt)||this[evt]&&!override)continue;if(publicOnly&&events[evt].indexOf('public_')===-1)continue;this[evt]=events[evt];}}}]);return EventsBase;}();exports.default=EventsBase;


},{}],"../node_modules/dashjs/build/es5/src/streaming/MediaPlayerEvents.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _EventsBase2=require('../core/events/EventsBase');var _EventsBase3=_interopRequireDefault(_EventsBase2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @implements EventsBase
 */var MediaPlayerEvents=function(_EventsBase){_inherits(MediaPlayerEvents,_EventsBase);/**
     * @description Public facing external events to be used when developing a player that implements dash.js.
     */function MediaPlayerEvents(){_classCallCheck(this,MediaPlayerEvents);/**
         * Triggered when playback will not start yet
         * as the MPD's availabilityStartTime is in the future.
         * Check delay property in payload to determine time before playback will start.
         * @event MediaPlayerEvents#AST_IN_FUTURE
         */var _this=_possibleConstructorReturn(this,(MediaPlayerEvents.__proto__||Object.getPrototypeOf(MediaPlayerEvents)).call(this));_this.AST_IN_FUTURE='astInFuture';/**
         * Triggered when the video element's buffer state changes to stalled.
         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).
         * @event MediaPlayerEvents#BUFFER_EMPTY
         */_this.BUFFER_EMPTY='bufferStalled';/**
         * Triggered when the video element's buffer state changes to loaded.
         * Check mediaType in payload to determine type (Video, Audio, FragmentedText).
         * @event MediaPlayerEvents#BUFFER_LOADED
         */_this.BUFFER_LOADED='bufferLoaded';/**
         * Triggered when the video element's buffer state changes, either stalled or loaded. Check payload for state.
         * @event MediaPlayerEvents#BUFFER_LEVEL_STATE_CHANGED
         */_this.BUFFER_LEVEL_STATE_CHANGED='bufferStateChanged';/**
         * Triggered when a dynamic stream changed to static (transition phase between Live and On-Demand).
         * @event MediaPlayerEvents#DYNAMIC_TO_STATIC
         */_this.DYNAMIC_TO_STATIC='dynamicToStatic';/**
         * Triggered when there is an error from the element or MSE source buffer.
         * @event MediaPlayerEvents#ERROR
         */_this.ERROR='error';/**
         * Triggered when a fragment download has completed.
         * @event MediaPlayerEvents#FRAGMENT_LOADING_COMPLETED
         */_this.FRAGMENT_LOADING_COMPLETED='fragmentLoadingCompleted';/**
         * Triggered when a partial fragment download has completed.
         * @event MediaPlayerEvents#FRAGMENT_LOADING_PROGRESS
         */_this.FRAGMENT_LOADING_PROGRESS='fragmentLoadingProgress';/**
         * Triggered when a fragment download has started.
         * @event MediaPlayerEvents#FRAGMENT_LOADING_STARTED
         */_this.FRAGMENT_LOADING_STARTED='fragmentLoadingStarted';/**
         * Triggered when a fragment download is abandoned due to detection of slow download base on the ABR abandon rule..
         * @event MediaPlayerEvents#FRAGMENT_LOADING_ABANDONED
         */_this.FRAGMENT_LOADING_ABANDONED='fragmentLoadingAbandoned';/**
         * Triggered when {@link module:Debug} logger methods are called.
         * @event MediaPlayerEvents#LOG
         */_this.LOG='log';//TODO refactor with internal event
/**
         * Triggered when the manifest load is complete
         * @event MediaPlayerEvents#MANIFEST_LOADED
         */_this.MANIFEST_LOADED='manifestLoaded';/**
         * Triggered anytime there is a change to the overall metrics.
         * @event MediaPlayerEvents#METRICS_CHANGED
         */_this.METRICS_CHANGED='metricsChanged';/**
         * Triggered when an individual metric is added, updated or cleared.
         * @event MediaPlayerEvents#METRIC_CHANGED
         */_this.METRIC_CHANGED='metricChanged';/**
         * Triggered every time a new metric is added.
         * @event MediaPlayerEvents#METRIC_ADDED
         */_this.METRIC_ADDED='metricAdded';/**
         * Triggered every time a metric is updated.
         * @event MediaPlayerEvents#METRIC_UPDATED
         */_this.METRIC_UPDATED='metricUpdated';/**
         * Triggered at the stream end of a period.
         * @event MediaPlayerEvents#PERIOD_SWITCH_COMPLETED
         */_this.PERIOD_SWITCH_COMPLETED='periodSwitchCompleted';/**
         * Triggered when a new period starts.
         * @event MediaPlayerEvents#PERIOD_SWITCH_STARTED
         */_this.PERIOD_SWITCH_STARTED='periodSwitchStarted';/**
         * Triggered when an ABR up /down switch is initiated; either by user in manual mode or auto mode via ABR rules.
         * @event MediaPlayerEvents#QUALITY_CHANGE_REQUESTED
         */_this.QUALITY_CHANGE_REQUESTED='qualityChangeRequested';/**
         * Triggered when the new ABR quality is being rendered on-screen.
         * @event MediaPlayerEvents#QUALITY_CHANGE_RENDERED
         */_this.QUALITY_CHANGE_RENDERED='qualityChangeRendered';/**
         * Triggered when the new track is being rendered.
         * @event MediaPlayerEvents#TRACK_CHANGE_RENDERED
         */_this.TRACK_CHANGE_RENDERED='trackChangeRendered';/**
         * Triggered when the source is setup and ready.
         * @event MediaPlayerEvents#SOURCE_INITIALIZED
         */_this.SOURCE_INITIALIZED='sourceInitialized';/**
         * Triggered when a stream (period) is being loaded
         * @event MediaPlayerEvents#STREAM_INITIALIZING
         */_this.STREAM_INITIALIZING='streamInitializing';/**
         * Triggered when a stream (period) is loaded
         * @event MediaPlayerEvents#STREAM_UPDATED
         */_this.STREAM_UPDATED='streamUpdated';/**
         * Triggered when a stream (period) is updated
         * @event MediaPlayerEvents#STREAM_INITIALIZED
         */_this.STREAM_INITIALIZED='streamInitialized';/**
         * Triggered when the player has been reset.
         * @event MediaPlayerEvents#STREAM_TEARDOWN_COMPLETE
         */_this.STREAM_TEARDOWN_COMPLETE='streamTeardownComplete';/**
         * Triggered once all text tracks detected in the MPD are added to the video element.
         * @event MediaPlayerEvents#TEXT_TRACKS_ADDED
         */_this.TEXT_TRACKS_ADDED='allTextTracksAdded';/**
         * Triggered when a text track is added to the video element's TextTrackList
         * @event MediaPlayerEvents#TEXT_TRACK_ADDED
         */_this.TEXT_TRACK_ADDED='textTrackAdded';/**
         * Triggered when a ttml chunk is parsed.
         * @event MediaPlayerEvents#TTML_PARSED
         */_this.TTML_PARSED='ttmlParsed';/**
         * Triggered when a ttml chunk has to be parsed.
         * @event MediaPlayerEvents#TTML_TO_PARSE
         */_this.TTML_TO_PARSE='ttmlToParse';/**
         * Triggered when a caption is rendered.
         * @event MediaPlayerEvents#CAPTION_RENDERED
         */_this.CAPTION_RENDERED='captionRendered';/**
         * Triggered when the caption container is resized.
         * @event MediaPlayerEvents#CAPTION_CONTAINER_RESIZE
         */_this.CAPTION_CONTAINER_RESIZE='captionContainerResize';/**
         * Sent when enough data is available that the media can be played,
         * at least for a couple of frames.  This corresponds to the
         * HAVE_ENOUGH_DATA readyState.
         * @event MediaPlayerEvents#CAN_PLAY
         */_this.CAN_PLAY='canPlay';/**
         * Sent when playback completes.
         * @event MediaPlayerEvents#PLAYBACK_ENDED
         */_this.PLAYBACK_ENDED='playbackEnded';/**
         * Sent when an error occurs.  The element's error
         * attribute contains more information.
         * @event MediaPlayerEvents#PLAYBACK_ERROR
         */_this.PLAYBACK_ERROR='playbackError';/**
         * Sent when playback is not allowed (for example if user gesture is needed).
         * @event MediaPlayerEvents#PLAYBACK_NOT_ALLOWED
         */_this.PLAYBACK_NOT_ALLOWED='playbackNotAllowed';/**
         * The media's metadata has finished loading; all attributes now
         * contain as much useful information as they're going to.
         * @event MediaPlayerEvents#PLAYBACK_METADATA_LOADED
         */_this.PLAYBACK_METADATA_LOADED='playbackMetaDataLoaded';/**
         * Sent when playback is paused.
         * @event MediaPlayerEvents#PLAYBACK_PAUSED
         */_this.PLAYBACK_PAUSED='playbackPaused';/**
         * Sent when the media begins to play (either for the first time, after having been paused,
         * or after ending and then restarting).
         *
         * @event MediaPlayerEvents#PLAYBACK_PLAYING
         */_this.PLAYBACK_PLAYING='playbackPlaying';/**
         * Sent periodically to inform interested parties of progress downloading
         * the media. Information about the current amount of the media that has
         * been downloaded is available in the media element's buffered attribute.
         * @event MediaPlayerEvents#PLAYBACK_PROGRESS
         */_this.PLAYBACK_PROGRESS='playbackProgress';/**
         * Sent when the playback speed changes.
         * @event MediaPlayerEvents#PLAYBACK_RATE_CHANGED
         */_this.PLAYBACK_RATE_CHANGED='playbackRateChanged';/**
         * Sent when a seek operation completes.
         * @event MediaPlayerEvents#PLAYBACK_SEEKED
         */_this.PLAYBACK_SEEKED='playbackSeeked';/**
         * Sent when a seek operation begins.
         * @event MediaPlayerEvents#PLAYBACK_SEEKING
         */_this.PLAYBACK_SEEKING='playbackSeeking';/**
         * Sent when a seek operation has been asked.
         * @event MediaPlayerEvents#PLAYBACK_SEEK_ASKED
         */_this.PLAYBACK_SEEK_ASKED='playbackSeekAsked';/**
         * Sent when the video element reports stalled
         * @event MediaPlayerEvents#PLAYBACK_STALLED
         */_this.PLAYBACK_STALLED='playbackStalled';/**
         * Sent when playback of the media starts after having been paused;
         * that is, when playback is resumed after a prior pause event.
         *
         * @event MediaPlayerEvents#PLAYBACK_STARTED
         */_this.PLAYBACK_STARTED='playbackStarted';/**
         * The time indicated by the element's currentTime attribute has changed.
         * @event MediaPlayerEvents#PLAYBACK_TIME_UPDATED
         */_this.PLAYBACK_TIME_UPDATED='playbackTimeUpdated';/**
         * Sent when the media playback has stopped because of a temporary lack of data.
         *
         * @event MediaPlayerEvents#PLAYBACK_WAITING
         */_this.PLAYBACK_WAITING='playbackWaiting';/**
         * Manifest validity changed - As a result of an MPD validity expiration event.
         * @event MediaPlayerEvents#MANIFEST_VALIDITY_CHANGED
         */_this.MANIFEST_VALIDITY_CHANGED='manifestValidityChanged';/**
         * A gap occured in the timeline which requires a seek to the next period
         * @event MediaPlayerEvents#GAP_CAUSED_SEEK_TO_PERIOD_END
         */_this.GAP_CAUSED_SEEK_TO_PERIOD_END='gapCausedSeekToPeriodEnd';/**
         * A gap occured in the timeline which requires an internal seek
         * @event MediaPlayerEvents#GAP_CAUSED_INTERNAL_SEEK
         */_this.GAP_CAUSED_INTERNAL_SEEK='gapCausedInternalSeek';/**
         * Dash events are triggered at their respective start points on the timeline.
         * @event MediaPlayerEvents#EVENT_MODE_ON_START
         */_this.EVENT_MODE_ON_START='eventModeOnStart';/**
         * Dash events are triggered as soon as they were parsed.
         * @event MediaPlayerEvents#EVENT_MODE_ON_RECEIVE
         */_this.EVENT_MODE_ON_RECEIVE='eventModeOnReceive';return _this;}return MediaPlayerEvents;}(_EventsBase3.default);var mediaPlayerEvents=new MediaPlayerEvents();exports.default=mediaPlayerEvents;


},{"../core/events/EventsBase":"../node_modules/dashjs/build/es5/src/core/events/EventsBase.js"}],"../node_modules/dashjs/build/es5/src/core/EventBus.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('./FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _MediaPlayerEvents=require('../streaming/MediaPlayerEvents');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var EVENT_PRIORITY_LOW=0;var EVENT_PRIORITY_HIGH=5000;function EventBus(){var handlers={};function on(type,listener,scope){var options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};if(!type){throw new Error('event type cannot be null or undefined');}if(!listener||typeof listener!=='function'){throw new Error('listener must be a function: '+listener);}var priority=options.priority||EVENT_PRIORITY_LOW;if(getHandlerIdx(type,listener,scope)>=0)return;handlers[type]=handlers[type]||[];var handler={callback:listener,scope:scope,priority:priority};if(scope&&scope.getStreamId){handler.streamId=scope.getStreamId();}if(scope&&scope.getType){handler.mediaType=scope.getType();}if(options&&options.mode){handler.mode=options.mode;}var inserted=handlers[type].some(function(item,idx){if(item&&priority>item.priority){handlers[type].splice(idx,0,handler);return true;}});if(!inserted){handlers[type].push(handler);}}function off(type,listener,scope){if(!type||!listener||!handlers[type])return;var idx=getHandlerIdx(type,listener,scope);if(idx<0)return;handlers[type][idx]=null;}function trigger(type){var payload=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var filters=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(!type||!handlers[type])return;payload=payload||{};if(payload.hasOwnProperty('type'))throw new Error('\'type\' is a reserved word for event dispatching');payload.type=type;if(filters.streamId){payload.streamId=filters.streamId;}if(filters.mediaType){payload.mediaType=filters.mediaType;}handlers[type].filter(function(handler){if(!handler){return false;}if(filters.streamId&&handler.streamId&&handler.streamId!==filters.streamId){return false;}if(filters.mediaType&&handler.mediaType&&handler.mediaType!==filters.mediaType){return false;}// This is used for dispatching DASH events. By default we use the onStart mode. Consequently we filter everything that has a non matching mode and the onReceive events for handlers that did not specify a mode.
if(filters.mode&&handler.mode&&handler.mode!==filters.mode||!handler.mode&&filters.mode&&filters.mode===_MediaPlayerEvents.EVENT_MODE_ON_RECEIVE){return false;}return true;}).forEach(function(handler){return handler&&handler.callback.call(handler.scope,payload);});}function getHandlerIdx(type,listener,scope){var idx=-1;if(!handlers[type])return idx;handlers[type].some(function(item,index){if(item&&item.callback===listener&&(!scope||scope===item.scope)){idx=index;return true;}});return idx;}function reset(){handlers={};}var instance={on:on,off:off,trigger:trigger,reset:reset};return instance;}EventBus.__dashjs_factory_name='EventBus';var factory=_FactoryMaker2.default.getSingletonFactory(EventBus);factory.EVENT_PRIORITY_LOW=EVENT_PRIORITY_LOW;factory.EVENT_PRIORITY_HIGH=EVENT_PRIORITY_HIGH;_FactoryMaker2.default.updateSingletonFactory(EventBus.__dashjs_factory_name,factory);exports.default=factory;


},{"./FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../streaming/MediaPlayerEvents":"../node_modules/dashjs/build/es5/src/streaming/MediaPlayerEvents.js"}],"../node_modules/dashjs/build/es5/src/core/events/CoreEvents.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _EventsBase2=require('./EventsBase');var _EventsBase3=_interopRequireDefault(_EventsBase2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * These are internal events that should not be needed at the player level.
 * If you find and event in here that you would like access to from MediaPlayer level
 * please add an issue at https://github.com/Dash-Industry-Forum/dash.js/issues/new
 * @class
 * @ignore
 */var CoreEvents=function(_EventsBase){_inherits(CoreEvents,_EventsBase);function CoreEvents(){_classCallCheck(this,CoreEvents);var _this=_possibleConstructorReturn(this,(CoreEvents.__proto__||Object.getPrototypeOf(CoreEvents)).call(this));_this.BUFFERING_COMPLETED='bufferingCompleted';_this.BUFFER_CLEARED='bufferCleared';_this.BUFFER_LEVEL_UPDATED='bufferLevelUpdated';_this.BYTES_APPENDED='bytesAppended';_this.BYTES_APPENDED_END_FRAGMENT='bytesAppendedEndFragment';_this.CHECK_FOR_EXISTENCE_COMPLETED='checkForExistenceCompleted';_this.CURRENT_TRACK_CHANGED='currentTrackChanged';_this.DATA_UPDATE_COMPLETED='dataUpdateCompleted';_this.DATA_UPDATE_STARTED='dataUpdateStarted';_this.INBAND_EVENTS='inbandEvents';_this.INITIALIZATION_LOADED='initializationLoaded';_this.INIT_FRAGMENT_LOADED='initFragmentLoaded';_this.INIT_FRAGMENT_NEEDED='initFragmentNeeded';_this.INTERNAL_MANIFEST_LOADED='internalManifestLoaded';_this.ORIGINAL_MANIFEST_LOADED='originalManifestLoaded';_this.LIVE_EDGE_SEARCH_COMPLETED='liveEdgeSearchCompleted';_this.LOADING_COMPLETED='loadingCompleted';_this.LOADING_PROGRESS='loadingProgress';_this.LOADING_DATA_PROGRESS='loadingDataProgress';_this.LOADING_ABANDONED='loadingAborted';_this.MANIFEST_UPDATED='manifestUpdated';_this.MEDIA_FRAGMENT_LOADED='mediaFragmentLoaded';_this.MEDIA_FRAGMENT_NEEDED='mediaFragmentNeeded';_this.QUOTA_EXCEEDED='quotaExceeded';_this.REPRESENTATION_UPDATE_STARTED='representationUpdateStarted';_this.REPRESENTATION_UPDATE_COMPLETED='representationUpdateCompleted';_this.SEGMENTS_LOADED='segmentsLoaded';_this.SERVICE_LOCATION_BLACKLIST_ADD='serviceLocationBlacklistAdd';_this.SERVICE_LOCATION_BLACKLIST_CHANGED='serviceLocationBlacklistChanged';_this.SOURCEBUFFER_REMOVE_COMPLETED='sourceBufferRemoveCompleted';_this.STREAMS_COMPOSED='streamsComposed';_this.STREAM_BUFFERING_COMPLETED='streamBufferingCompleted';_this.STREAM_COMPLETED='streamCompleted';_this.TEXT_TRACKS_QUEUE_INITIALIZED='textTracksQueueInitialized';_this.TIME_SYNCHRONIZATION_COMPLETED='timeSynchronizationComplete';_this.URL_RESOLUTION_FAILED='urlResolutionFailed';_this.VIDEO_CHUNK_RECEIVED='videoChunkReceived';_this.WALLCLOCK_TIME_UPDATED='wallclockTimeUpdated';_this.XLINK_ELEMENT_LOADED='xlinkElementLoaded';_this.XLINK_READY='xlinkReady';_this.SEGMENTBASE_INIT_REQUEST_NEEDED='segmentBaseInitRequestNeeded';_this.SEGMENTBASE_SEGMENTSLIST_REQUEST_NEEDED='segmentBaseSegmentsListRequestNeeded';_this.SEEK_TARGET='seekTarget';return _this;}return CoreEvents;}(_EventsBase3.default);exports.default=CoreEvents;


},{"./EventsBase":"../node_modules/dashjs/build/es5/src/core/events/EventsBase.js"}],"../node_modules/dashjs/build/es5/src/core/events/Events.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _CoreEvents2=require('./CoreEvents');var _CoreEvents3=_interopRequireDefault(_CoreEvents2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var Events=function(_CoreEvents){_inherits(Events,_CoreEvents);function Events(){_classCallCheck(this,Events);return _possibleConstructorReturn(this,(Events.__proto__||Object.getPrototypeOf(Events)).apply(this,arguments));}return Events;}(_CoreEvents3.default);var events=new Events();exports.default=events;


},{"./CoreEvents":"../node_modules/dashjs/build/es5/src/core/events/CoreEvents.js"}],"../node_modules/dashjs/build/es5/src/core/Debug.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _EventBus=require('./EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('./events/Events');var _Events2=_interopRequireDefault(_Events);var _FactoryMaker=require('./FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var LOG_LEVEL_NONE=0;/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var LOG_LEVEL_FATAL=1;var LOG_LEVEL_ERROR=2;var LOG_LEVEL_WARNING=3;var LOG_LEVEL_INFO=4;var LOG_LEVEL_DEBUG=5;/**
 * @module Debug
 * @param {object} config
 * @ignore
 */function Debug(config){config=config||{};var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var settings=config.settings;var logFn=[];var instance=void 0,showLogTimestamp=void 0,showCalleeName=void 0,startTime=void 0;function setup(){showLogTimestamp=true;showCalleeName=true;startTime=new Date().getTime();if(typeof window!=='undefined'&&window.console){logFn[LOG_LEVEL_FATAL]=getLogFn(window.console.error);logFn[LOG_LEVEL_ERROR]=getLogFn(window.console.error);logFn[LOG_LEVEL_WARNING]=getLogFn(window.console.warn);logFn[LOG_LEVEL_INFO]=getLogFn(window.console.info);logFn[LOG_LEVEL_DEBUG]=getLogFn(window.console.debug);}}function getLogFn(fn){if(fn&&fn.bind){return fn.bind(window.console);}// if not define, return the default function for reporting logs
return window.console.log.bind(window.console);}/**
     * Retrieves a logger which can be used to write logging information in browser console.
     * @param {object} instance Object for which the logger is created. It is used
     * to include calle object information in log messages.
     * @memberof module:Debug
     * @returns {Logger}
     * @instance
     */function getLogger(instance){return{fatal:fatal.bind(instance),error:error.bind(instance),warn:warn.bind(instance),info:info.bind(instance),debug:debug.bind(instance)};}/**
     * Prepends a timestamp in milliseconds to each log message.
     * @param {boolean} value Set to true if you want to see a timestamp in each log message.
     * @default LOG_LEVEL_WARNING
     * @memberof module:Debug
     * @instance
     */function setLogTimestampVisible(value){showLogTimestamp=value;}/**
     * Prepends the callee object name, and media type if available, to each log message.
     * @param {boolean} value Set to true if you want to see the callee object name and media type in each log message.
     * @default true
     * @memberof module:Debug
     * @instance
     */function setCalleeNameVisible(value){showCalleeName=value;}function fatal(){for(var _len=arguments.length,params=Array(_len),_key=0;_key<_len;_key++){params[_key]=arguments[_key];}doLog.apply(undefined,[LOG_LEVEL_FATAL,this].concat(params));}function error(){for(var _len2=arguments.length,params=Array(_len2),_key2=0;_key2<_len2;_key2++){params[_key2]=arguments[_key2];}doLog.apply(undefined,[LOG_LEVEL_ERROR,this].concat(params));}function warn(){for(var _len3=arguments.length,params=Array(_len3),_key3=0;_key3<_len3;_key3++){params[_key3]=arguments[_key3];}doLog.apply(undefined,[LOG_LEVEL_WARNING,this].concat(params));}function info(){for(var _len4=arguments.length,params=Array(_len4),_key4=0;_key4<_len4;_key4++){params[_key4]=arguments[_key4];}doLog.apply(undefined,[LOG_LEVEL_INFO,this].concat(params));}function debug(){for(var _len5=arguments.length,params=Array(_len5),_key5=0;_key5<_len5;_key5++){params[_key5]=arguments[_key5];}doLog.apply(undefined,[LOG_LEVEL_DEBUG,this].concat(params));}function doLog(level,_this){var message='';var logTime=null;if(showLogTimestamp){logTime=new Date().getTime();message+='['+(logTime-startTime)+']';}if(showCalleeName&&_this&&_this.getClassName){message+='['+_this.getClassName()+']';if(_this.getType){message+='['+_this.getType()+']';}}if(message.length>0){message+=' ';}for(var _len6=arguments.length,params=Array(_len6>2?_len6-2:0),_key6=2;_key6<_len6;_key6++){params[_key6-2]=arguments[_key6];}Array.apply(null,params).forEach(function(item){message+=item+' ';});// log to console if the log level is high enough
if(logFn[level]&&settings.get().debug.logLevel>=level){logFn[level](message);}// send log event regardless of log level
if(settings&&settings.get().debug.dispatchEvent){eventBus.trigger(_Events2.default.LOG,{message:message,level:level});}}instance={getLogger:getLogger,setLogTimestampVisible:setLogTimestampVisible,setCalleeNameVisible:setCalleeNameVisible};setup();return instance;}Debug.__dashjs_factory_name='Debug';var factory=_FactoryMaker2.default.getSingletonFactory(Debug);factory.LOG_LEVEL_NONE=LOG_LEVEL_NONE;factory.LOG_LEVEL_FATAL=LOG_LEVEL_FATAL;factory.LOG_LEVEL_ERROR=LOG_LEVEL_ERROR;factory.LOG_LEVEL_WARNING=LOG_LEVEL_WARNING;factory.LOG_LEVEL_INFO=LOG_LEVEL_INFO;factory.LOG_LEVEL_DEBUG=LOG_LEVEL_DEBUG;_FactoryMaker2.default.updateSingletonFactory(Debug.__dashjs_factory_name,factory);exports.default=factory;


},{"./EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","./events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","./FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/streaming/controllers/PlaybackController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _MetricsConstants=require('../constants/MetricsConstants');var _MetricsConstants2=_interopRequireDefault(_MetricsConstants);var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Debug=require('../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var LIVE_UPDATE_PLAYBACK_TIME_INTERVAL_MS=500;function PlaybackController(){var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var instance=void 0,logger=void 0,streamController=void 0,dashMetrics=void 0,adapter=void 0,videoModel=void 0,timelineConverter=void 0,streamSwitch=void 0,streamSeekTime=void 0,wallclockTimeIntervalId=void 0,liveDelay=void 0,streamInfo=void 0,isDynamic=void 0,mediaPlayerModel=void 0,playOnceInitialized=void 0,lastLivePlaybackTime=void 0,availabilityStartTime=void 0,seekTarget=void 0,isLowLatencySeekingInProgress=void 0,playbackStalled=void 0,minPlaybackRateChange=void 0,uriFragmentModel=void 0,settings=void 0;function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);reset();}function initialize(sInfo,periodSwitch,seekTime){streamInfo=sInfo;addAllListeners();isDynamic=streamInfo.manifestInfo.isDynamic;isLowLatencySeekingInProgress=false;playbackStalled=false;streamSwitch=periodSwitch===true;streamSeekTime=seekTime;var ua=typeof navigator!=='undefined'?navigator.userAgent.toLowerCase():'';// Detect safari browser (special behavior for low latency streams)
var isSafari=/safari/.test(ua)&&!/chrome/.test(ua);minPlaybackRateChange=isSafari?0.25:0.02;eventBus.on(_Events2.default.STREAM_INITIALIZED,onStreamInitialized,this);eventBus.on(_Events2.default.DATA_UPDATE_COMPLETED,onDataUpdateCompleted,this);eventBus.on(_Events2.default.LOADING_PROGRESS,onFragmentLoadProgress,this);eventBus.on(_Events2.default.BUFFER_LEVEL_STATE_CHANGED,onBufferLevelStateChanged,this);eventBus.on(_Events2.default.PLAYBACK_PROGRESS,onPlaybackProgression,this);eventBus.on(_Events2.default.PLAYBACK_TIME_UPDATED,onPlaybackProgression,this);eventBus.on(_Events2.default.PLAYBACK_ENDED,onPlaybackEnded,this,{priority:_EventBus2.default.EVENT_PRIORITY_HIGH});eventBus.on(_Events2.default.STREAM_INITIALIZING,onStreamInitializing,this);if(playOnceInitialized){playOnceInitialized=false;play();}}function onStreamInitialized(e){// Seamless period switch
if(streamSwitch&&isNaN(streamSeekTime))return;// Seek new stream in priority order:
// - at seek time (streamSeekTime) when switching period
// - at start time provided in URI parameters
// - at stream/period start time (for static streams) or live start time (for dynamic streams)
var startTime=streamSeekTime;if(isNaN(startTime)){if(isDynamic){// For dynamic stream, start by default at (live edge - live delay)
startTime=e.liveStartTime;// If start time in URI, take min value between live edge time and time from URI (capped by DVR window range)
var dvrInfo=dashMetrics.getCurrentDVRInfo();var dvrWindow=dvrInfo?dvrInfo.range:null;if(dvrWindow){// #t shall be relative to period start
var startTimeFromUri=getStartTimeFromUriParameters(true);if(!isNaN(startTimeFromUri)){logger.info('Start time from URI parameters: '+startTimeFromUri);startTime=Math.max(Math.min(startTime,startTimeFromUri),dvrWindow.start);}}}else{// For static stream, start by default at period start
startTime=streamInfo.start;// If start time in URI, take max value between period start and time from URI (if in period range)
var _startTimeFromUri=getStartTimeFromUriParameters(false);if(!isNaN(_startTimeFromUri)&&_startTimeFromUri<startTime+streamInfo.duration){logger.info('Start time from URI parameters: '+_startTimeFromUri);startTime=Math.max(startTime,_startTimeFromUri);}}}if(!isNaN(startTime)&&startTime!==videoModel.getTime()){// Trigger PLAYBACK_SEEKING event for controllers
eventBus.trigger(_Events2.default.PLAYBACK_SEEKING,{seekTime:startTime});// Seek video model
seek(startTime,false,true);}}function getTimeToStreamEnd(){return parseFloat((getStreamEndTime()-getTime()).toFixed(5));}function getStreamEndTime(){return streamInfo.start+streamInfo.duration;}function play(){if(streamInfo&&videoModel&&videoModel.getElement()){videoModel.play();}else{playOnceInitialized=true;}}function isPaused(){return streamInfo&&videoModel?videoModel.isPaused():null;}function pause(){if(streamInfo&&videoModel){videoModel.pause();}}function isSeeking(){return streamInfo&&videoModel?videoModel.isSeeking():null;}function seek(time,stickToBuffered,internalSeek){if(!streamInfo||!videoModel)return;var currentTime=!isNaN(seekTarget)?seekTarget:videoModel.getTime();if(time===currentTime)return;if(internalSeek===true){// Internal seek = seek video model only (disable 'seeking' listener)
// buffer(s) are already appended at requested time
videoModel.removeEventListener('seeking',onPlaybackSeeking);logger.info('Requesting internal seek to time: '+time);videoModel.setCurrentTime(time,stickToBuffered);}else{seekTarget=time;eventBus.trigger(_Events2.default.PLAYBACK_SEEK_ASKED);logger.info('Requesting seek to time: '+time);videoModel.setCurrentTime(time,stickToBuffered);}}function seekToLive(){var DVRMetrics=dashMetrics.getCurrentDVRInfo();var DVRWindow=DVRMetrics?DVRMetrics.range:null;seek(DVRWindow.end-mediaPlayerModel.getLiveDelay(),true,false);}function getTime(){return streamInfo&&videoModel?videoModel.getTime():null;}function getNormalizedTime(){var t=getTime();if(isDynamic&&!isNaN(availabilityStartTime)){var timeOffset=availabilityStartTime/1000;// Fix current time for firefox and safari (returned as an absolute time)
if(t>timeOffset){t-=timeOffset;}}return t;}function getPlaybackRate(){return streamInfo&&videoModel?videoModel.getPlaybackRate():null;}function getPlayedRanges(){return streamInfo&&videoModel?videoModel.getPlayedRanges():null;}function getEnded(){return streamInfo&&videoModel?videoModel.getEnded():null;}function getIsDynamic(){return isDynamic;}function getStreamController(){return streamController;}/**
     * Computes the desirable delay for the live edge to avoid a risk of getting 404 when playing at the bleeding edge
     * @param {number} fragmentDuration - seconds?
     * @param {number} dvrWindowSize - seconds?
     * @param {number} minBufferTime - seconds?
     * @returns {number} object
     * @memberof PlaybackController#
     */function computeAndSetLiveDelay(fragmentDuration,dvrWindowSize,minBufferTime){var delay=void 0,ret=void 0,startTime=void 0;var END_OF_PLAYLIST_PADDING=10;var MIN_BUFFER_TIME_FACTOR=4;var FRAGMENT_DURATION_FACTOR=4;var adjustedFragmentDuration=!isNaN(fragmentDuration)&&isFinite(fragmentDuration)?fragmentDuration:NaN;var suggestedPresentationDelay=adapter.getSuggestedPresentationDelay();if(settings.get().streaming.lowLatencyEnabled){delay=0;}else if(mediaPlayerModel.getLiveDelay()){delay=mediaPlayerModel.getLiveDelay();// If set by user, this value takes precedence
}else if(settings.get().streaming.liveDelayFragmentCount!==null&&!isNaN(settings.get().streaming.liveDelayFragmentCount)&&!isNaN(adjustedFragmentDuration)){delay=adjustedFragmentDuration*settings.get().streaming.liveDelayFragmentCount;}else if(settings.get().streaming.useSuggestedPresentationDelay===true&&suggestedPresentationDelay!==null&&!isNaN(suggestedPresentationDelay)&&suggestedPresentationDelay>0){delay=suggestedPresentationDelay;}else if(!isNaN(adjustedFragmentDuration)){delay=adjustedFragmentDuration*FRAGMENT_DURATION_FACTOR;}else{delay=!isNaN(minBufferTime)?minBufferTime*MIN_BUFFER_TIME_FACTOR:streamInfo.manifestInfo.minBufferTime*MIN_BUFFER_TIME_FACTOR;}startTime=adapter.getAvailabilityStartTime();if(startTime!==null){availabilityStartTime=startTime;}if(dvrWindowSize>0){// cap target latency to:
// - dvrWindowSize / 2 for short playlists
// - dvrWindowSize - END_OF_PLAYLIST_PADDING for longer playlists
var targetDelayCapping=Math.max(dvrWindowSize-END_OF_PLAYLIST_PADDING,dvrWindowSize/2);ret=Math.min(delay,targetDelayCapping);}else{ret=delay;}liveDelay=ret;return ret;}function getLiveDelay(){return liveDelay;}function setLiveDelay(value){var useMaxValue=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(useMaxValue&&value<liveDelay){return;}liveDelay=value;}function getCurrentLiveLatency(){if(!isDynamic||isNaN(availabilityStartTime)){return NaN;}var currentTime=getNormalizedTime();if(isNaN(currentTime)||currentTime===0){return 0;}var now=new Date().getTime()+timelineConverter.getClientTimeOffset()*1000;return Math.max(((now-availabilityStartTime-currentTime*1000)/1000).toFixed(3),0);}function reset(){playOnceInitialized=false;streamSwitch=false;streamSeekTime=NaN;liveDelay=0;availabilityStartTime=0;seekTarget=NaN;if(videoModel){eventBus.off(_Events2.default.STREAM_INITIALIZED,onStreamInitialized,this);eventBus.off(_Events2.default.DATA_UPDATE_COMPLETED,onDataUpdateCompleted,this);eventBus.off(_Events2.default.BUFFER_LEVEL_STATE_CHANGED,onBufferLevelStateChanged,this);eventBus.off(_Events2.default.LOADING_PROGRESS,onFragmentLoadProgress,this);eventBus.off(_Events2.default.PLAYBACK_PROGRESS,onPlaybackProgression,this);eventBus.off(_Events2.default.PLAYBACK_TIME_UPDATED,onPlaybackProgression,this);eventBus.off(_Events2.default.PLAYBACK_ENDED,onPlaybackEnded,this);eventBus.off(_Events2.default.STREAM_INITIALIZING,onStreamInitializing,this);stopUpdatingWallclockTime();removeAllListeners();}wallclockTimeIntervalId=null;videoModel=null;streamInfo=null;isDynamic=null;}function setConfig(config){if(!config)return;if(config.streamController){streamController=config.streamController;}if(config.dashMetrics){dashMetrics=config.dashMetrics;}if(config.mediaPlayerModel){mediaPlayerModel=config.mediaPlayerModel;}if(config.adapter){adapter=config.adapter;}if(config.videoModel){videoModel=config.videoModel;}if(config.timelineConverter){timelineConverter=config.timelineConverter;}if(config.uriFragmentModel){uriFragmentModel=config.uriFragmentModel;}if(config.settings){settings=config.settings;}}function getStartTimeFromUriParameters(isDynamic){var fragData=uriFragmentModel.getURIFragmentData();if(!fragData||!fragData.t){return NaN;}var refStream=streamController.getStreams()[0];var refStreamStartTime=refStream.getStreamInfo().start;// Consider only start time of MediaRange
// TODO: consider end time of MediaRange to stop playback at provided end time
fragData.t=fragData.t.split(',')[0];// "t=<time>" : time is relative to 1st period start
// "t=posix:<time>" : time is absolute start time as number of seconds since 01-01-1970
var posix=fragData.t.indexOf('posix:')!==-1?fragData.t.substring(6)==='now'?Date.now()/1000:parseInt(fragData.t.substring(6)):NaN;var startTime=isDynamic&&!isNaN(posix)?posix-availabilityStartTime/1000:parseInt(fragData.t)+refStreamStartTime;return startTime;}function getActualPresentationTime(currentTime){var DVRMetrics=dashMetrics.getCurrentDVRInfo();var DVRWindow=DVRMetrics?DVRMetrics.range:null;var actualTime=void 0;if(!DVRWindow){return NaN;}logger.debug('Checking DVR window for at '+currentTime+' with DVR window range '+DVRWindow.start+' - '+DVRWindow.end);if(currentTime>DVRWindow.end){actualTime=Math.max(DVRWindow.end-liveDelay,DVRWindow.start);}else if(currentTime>0&&currentTime+0.250<DVRWindow.start&&Math.abs(currentTime-DVRWindow.start)<315360000){// Checking currentTime plus 250ms as the 'timeupdate' is fired with a frequency between 4Hz and 66Hz
// https://developer.mozilla.org/en-US/docs/Web/Events/timeupdate
// http://w3c.github.io/html/single-page.html#offsets-into-the-media-resource
// Checking also duration of the DVR makes sense. We detected temporary situations in which currentTime
// is bad reported by the browser which causes playback to jump to start (315360000 = 1 year)
//actualTime = DVRWindow.start;
actualTime=DVRWindow.start;}else{actualTime=currentTime;}return actualTime;}function startUpdatingWallclockTime(){if(wallclockTimeIntervalId!==null)return;var tick=function tick(){onWallclockTime();};wallclockTimeIntervalId=setInterval(tick,settings.get().streaming.wallclockTimeUpdateInterval);}function stopUpdatingWallclockTime(){clearInterval(wallclockTimeIntervalId);wallclockTimeIntervalId=null;}function updateCurrentTime(){if(isPaused()||!isDynamic||videoModel.getReadyState()===0)return;var currentTime=getNormalizedTime();var actualTime=getActualPresentationTime(currentTime);var timeChanged=!isNaN(actualTime)&&actualTime!==currentTime;if(timeChanged){logger.debug('UpdateCurrentTime: Seek to actual time: '+actualTime+' from currentTime: '+currentTime);seek(actualTime);}}function onDataUpdateCompleted(e){if(e.error)return;var representationInfo=adapter.convertDataToRepresentationInfo(e.currentRepresentation);var info=representationInfo?representationInfo.mediaInfo.streamInfo:null;if(info===null||streamInfo.id!==info.id)return;streamInfo=info;updateCurrentTime();}function onCanPlay(){eventBus.trigger(_Events2.default.CAN_PLAY);}function onPlaybackStart(){logger.info('Native video element event: play');updateCurrentTime();startUpdatingWallclockTime();eventBus.trigger(_Events2.default.PLAYBACK_STARTED,{startTime:getTime()});}function onPlaybackWaiting(){logger.info('Native video element event: waiting');eventBus.trigger(_Events2.default.PLAYBACK_WAITING,{playingTime:getTime()});}function onPlaybackPlaying(){logger.info('Native video element event: playing');eventBus.trigger(_Events2.default.PLAYBACK_PLAYING,{playingTime:getTime()});}function onPlaybackPaused(){logger.info('Native video element event: pause');eventBus.trigger(_Events2.default.PLAYBACK_PAUSED,{ended:getEnded()});}function onPlaybackSeeking(){var seekTime=getTime();// On some browsers/devices, in case of live streams, setting current time on video element fails when there is no buffered data at requested time
// Then re-set seek target time and video element will be seeked afterwhile once data is buffered (see BufferContoller)
if(!isNaN(seekTarget)&&seekTarget!==seekTime){seekTime=seekTarget;}seekTarget=NaN;logger.info('Seeking to: '+seekTime);startUpdatingWallclockTime();eventBus.trigger(_Events2.default.PLAYBACK_SEEKING,{seekTime:seekTime});}function onPlaybackSeeked(){logger.info('Native video element event: seeked');eventBus.trigger(_Events2.default.PLAYBACK_SEEKED);// Reactivate 'seeking' event listener (see seek())
videoModel.addEventListener('seeking',onPlaybackSeeking);}function onPlaybackTimeUpdated(){if(streamInfo){eventBus.trigger(_Events2.default.PLAYBACK_TIME_UPDATED,{timeToEnd:getTimeToStreamEnd(),time:getTime()});}}function updateLivePlaybackTime(){var now=Date.now();if(!lastLivePlaybackTime||now>lastLivePlaybackTime+LIVE_UPDATE_PLAYBACK_TIME_INTERVAL_MS){lastLivePlaybackTime=now;onPlaybackTimeUpdated();}}function onPlaybackProgress(){eventBus.trigger(_Events2.default.PLAYBACK_PROGRESS);}function onPlaybackRateChanged(){var rate=getPlaybackRate();logger.info('Native video element event: ratechange: ',rate);eventBus.trigger(_Events2.default.PLAYBACK_RATE_CHANGED,{playbackRate:rate});}function onPlaybackMetaDataLoaded(){logger.info('Native video element event: loadedmetadata');eventBus.trigger(_Events2.default.PLAYBACK_METADATA_LOADED);startUpdatingWallclockTime();}// Event to handle the native video element ended event
function onNativePlaybackEnded(){logger.info('Native video element event: ended');pause();stopUpdatingWallclockTime();eventBus.trigger(_Events2.default.PLAYBACK_ENDED,{'isLast':streamController.getActiveStreamInfo().isLast});}// Handle DASH PLAYBACK_ENDED event
function onPlaybackEnded(e){if(wallclockTimeIntervalId&&e.isLast){// PLAYBACK_ENDED was triggered elsewhere, react.
logger.info('onPlaybackEnded -- PLAYBACK_ENDED but native video element didn\'t fire ended');var seekTime=e.seekTime?e.seekTime:getStreamEndTime();videoModel.setCurrentTime(seekTime);pause();stopUpdatingWallclockTime();}}function onPlaybackError(event){var target=event.target||event.srcElement;eventBus.trigger(_Events2.default.PLAYBACK_ERROR,{error:target.error});}function onWallclockTime(){eventBus.trigger(_Events2.default.WALLCLOCK_TIME_UPDATED,{isDynamic:isDynamic,time:new Date()});// Updates playback time for paused dynamic streams
// (video element doesn't call timeupdate when the playback is paused)
if(getIsDynamic()&&isPaused()){updateLivePlaybackTime();}}function onPlaybackProgression(){if(isDynamic&&_isCatchupEnabled()&&settings.get().streaming.liveCatchup.playbackRate>0&&!isPaused()&&!isSeeking()){if(_needToCatchUp()){startPlaybackCatchUp();}else{stopPlaybackCatchUp();}}}function _isCatchupEnabled(){return settings.get().streaming.liveCatchup.enabled||settings.get().streaming.lowLatencyEnabled;}function getBufferLevel(){var bufferLevel=null;streamController.getActiveStreamProcessors().forEach(function(p){var bl=p.getBufferLevel();if(bufferLevel===null){bufferLevel=bl;}else{bufferLevel=Math.min(bufferLevel,bl);}});return bufferLevel;}/**
     * Returns the mode for live playback catchup.
     * @return {String}
     * @private
     */function _getCatchupMode(){var playbackBufferMin=settings.get().streaming.liveCatchup.playbackBufferMin;return settings.get().streaming.liveCatchup.mode===_Constants2.default.LIVE_CATCHUP_MODE_LOLP&&playbackBufferMin!==null&&!isNaN(playbackBufferMin)?_Constants2.default.LIVE_CATCHUP_MODE_LOLP:_Constants2.default.LIVE_CATCHUP_MODE_DEFAULT;}/**
     * Checks whether the catchup mechanism should be enabled
     * @return {boolean}
     */function _needToCatchUp(){try{if(_isCatchupEnabled()&&settings.get().streaming.liveCatchup.playbackRate>0&&getTime()>0){var catchupMode=_getCatchupMode();var currentLiveLatency=getCurrentLiveLatency();var _liveDelay=mediaPlayerModel.getLiveDelay();var liveCatchupLatencyThreshold=mediaPlayerModel.getLiveCatchupLatencyThreshold();var liveCatchUpMinDrift=settings.get().streaming.liveCatchup.minDrift;if(catchupMode===_Constants2.default.LIVE_CATCHUP_MODE_LOLP){var currentBuffer=getBufferLevel();var playbackBufferMin=settings.get().streaming.liveCatchup.playbackBufferMin;return _lolpNeedToCatchUpCustom(currentLiveLatency,_liveDelay,liveCatchUpMinDrift,currentBuffer,playbackBufferMin,liveCatchupLatencyThreshold);}else{return _defaultNeedToCatchUp(currentLiveLatency,_liveDelay,liveCatchupLatencyThreshold,liveCatchUpMinDrift);}}}catch(e){return false;}}/**
     * Default algorithm to determine if catchup mode should be enabled
     * @param {number} currentLiveLatency
     * @param {number} liveDelay
     * @param {number} liveCatchupLatencyThreshold
     * @param {number} minDrift
     * @return {boolean}
     * @private
     */function _defaultNeedToCatchUp(currentLiveLatency,liveDelay,liveCatchupLatencyThreshold,minDrift){try{var latencyDrift=Math.abs(currentLiveLatency-liveDelay);return latencyDrift>minDrift&&(isNaN(liveCatchupLatencyThreshold)||currentLiveLatency<=liveCatchupLatencyThreshold);}catch(e){return false;}}/**
     * LoL+ logic to determine if catchup mode should be enabled
     * @param {number} currentLiveLatency
     * @param {number} liveDelay
     * @param {number} minDrift
     * @param {number} currentBuffer
     * @param {number} playbackBufferMin
     * @param {number} liveCatchupLatencyThreshold
     * @return {boolean}
     * @private
     */function _lolpNeedToCatchUpCustom(currentLiveLatency,liveDelay,minDrift,currentBuffer,playbackBufferMin,liveCatchupLatencyThreshold){try{var latencyDrift=Math.abs(currentLiveLatency-liveDelay);return(isNaN(liveCatchupLatencyThreshold)||currentLiveLatency<=liveCatchupLatencyThreshold)&&(latencyDrift>minDrift||currentBuffer<playbackBufferMin);}catch(e){return false;}}/**
     * Apply catchup mode
     */function startPlaybackCatchUp(){if(videoModel){var results=void 0;var currentPlaybackRate=videoModel.getPlaybackRate();var liveCatchupPlaybackRate=settings.get().streaming.liveCatchup.playbackRate;var currentLiveLatency=getCurrentLiveLatency();var _liveDelay2=mediaPlayerModel.getLiveDelay();var bufferLevel=getBufferLevel();// Custom playback control: Based on buffer level
if(_getCatchupMode()===_Constants2.default.LIVE_CATCHUP_MODE_LOLP){var liveCatchUpMinDrift=settings.get().streaming.liveCatchup.minDrift;var playbackBufferMin=settings.get().streaming.liveCatchup.playbackBufferMin;results=_calculateNewPlaybackRateLolP(liveCatchupPlaybackRate,currentLiveLatency,_liveDelay2,liveCatchUpMinDrift,playbackBufferMin,bufferLevel,currentPlaybackRate);}else{// Default playback control: Based on target and current latency
results=_calculateNewPlaybackRateDefault(liveCatchupPlaybackRate,currentLiveLatency,_liveDelay2,bufferLevel,currentPlaybackRate);}// Obtain newRate and apply to video model
var newRate=results.newRate;if(newRate){// non-null
videoModel.setPlaybackRate(newRate);}var deltaLatency=currentLiveLatency-_liveDelay2;if(settings.get().streaming.liveCatchup.maxDrift>0&&!isLowLatencySeekingInProgress&&deltaLatency>settings.get().streaming.liveCatchup.maxDrift){logger.info('Low Latency catchup mechanism. Latency too high, doing a seek to live point');isLowLatencySeekingInProgress=true;seekToLive();}else{isLowLatencySeekingInProgress=false;}}}/**
     * Default algorithm to calculate the new playback rate
     * @param {number} liveCatchUpPlaybackRate
     * @param {number} currentLiveLatency
     * @param {number} liveDelay
     * @param {number} bufferLevel
     * @param {number} currentPlaybackRate
     * @return {{newRate: number}}
     * @private
     */function _calculateNewPlaybackRateDefault(liveCatchUpPlaybackRate,currentLiveLatency,liveDelay,bufferLevel,currentPlaybackRate){var cpr=liveCatchUpPlaybackRate;var deltaLatency=currentLiveLatency-liveDelay;var d=deltaLatency*5;// Playback rate must be between (1 - cpr) - (1 + cpr)
// ex: if cpr is 0.5, it can have values between 0.5 - 1.5
var s=cpr*2/(1+Math.pow(Math.E,-d));var newRate=1-cpr+s;// take into account situations in which there are buffer stalls,
// in which increasing playbackRate to reach target latency will
// just cause more and more stall situations
if(playbackStalled){// const bufferLevel = getBufferLevel();
if(bufferLevel>liveDelay/2){// playbackStalled = false;
playbackStalled=false;}else if(deltaLatency>0){newRate=1.0;}}// don't change playbackrate for small variations (don't overload element with playbackrate changes)
if(Math.abs(currentPlaybackRate-newRate)<=minPlaybackRateChange){newRate=null;}return{newRate:newRate};}/**
     * Lol+ algorithm to calculate the new playback rate
     * @param {number} liveCatchUpPlaybackRate
     * @param {number} currentLiveLatency
     * @param {number} liveDelay
     * @param {number} minDrift
     * @param {number} playbackBufferMin
     * @param {number} bufferLevel
     * @param {number} currentPlaybackRate
     * @return {{newRate: number}}
     * @private
     */function _calculateNewPlaybackRateLolP(liveCatchUpPlaybackRate,currentLiveLatency,liveDelay,minDrift,playbackBufferMin,bufferLevel,currentPlaybackRate){var cpr=liveCatchUpPlaybackRate;var newRate=void 0;// Hybrid: Buffer-based
if(bufferLevel<playbackBufferMin){// Buffer in danger, slow down
var deltaBuffer=bufferLevel-playbackBufferMin;// -ve value
var d=deltaBuffer*5;// Playback rate must be between (1 - cpr) - (1 + cpr)
// ex: if cpr is 0.5, it can have values between 0.5 - 1.5
var s=cpr*2/(1+Math.pow(Math.E,-d));newRate=1-cpr+s;logger.debug('[LoL+ playback control_buffer-based] bufferLevel: '+bufferLevel+', newRate: '+newRate);}else{// Hybrid: Latency-based
// Buffer is safe, vary playback rate based on latency
// Check if latency is within range of target latency
var minDifference=0.02;if(Math.abs(currentLiveLatency-liveDelay)<=minDifference*liveDelay){newRate=1;}else{var deltaLatency=currentLiveLatency-liveDelay;var _d=deltaLatency*5;// Playback rate must be between (1 - cpr) - (1 + cpr)
// ex: if cpr is 0.5, it can have values between 0.5 - 1.5
var _s=cpr*2/(1+Math.pow(Math.E,-_d));newRate=1-cpr+_s;}logger.debug('[LoL+ playback control_latency-based] latency: '+currentLiveLatency+', newRate: '+newRate);}if(playbackStalled){if(bufferLevel>liveDelay/2){playbackStalled=false;}}// don't change playbackrate for small variations (don't overload element with playbackrate changes)
if(Math.abs(currentPlaybackRate-newRate)<=minPlaybackRateChange){newRate=null;}return{newRate:newRate};}function stopPlaybackCatchUp(){if(videoModel){videoModel.setPlaybackRate(1.0);}}function onFragmentLoadProgress(e){// If using fetch and stream mode is not available, readjust live latency so it is 20% higher than segment duration
if(e.stream===false&&settings.get().streaming.lowLatencyEnabled&&!isNaN(e.request.duration)){var minDelay=1.2*e.request.duration;if(minDelay>mediaPlayerModel.getLiveDelay()){logger.warn('Browser does not support fetch API with StreamReader. Increasing live delay to be 20% higher than segment duration:',minDelay.toFixed(2));var s={streaming:{liveDelay:minDelay}};settings.update(s);}}}function onBufferLevelStateChanged(e){// do not stall playback when get an event from Stream that is not active
if(e.streamId!==streamInfo.id)return;if(_isCatchupEnabled()){if(e.state===_MetricsConstants2.default.BUFFER_EMPTY&&!isSeeking()){if(!playbackStalled){playbackStalled=true;stopPlaybackCatchUp();}}}else{videoModel.setStallState(e.mediaType,e.state===_MetricsConstants2.default.BUFFER_EMPTY);}}function onPlaybackStalled(e){eventBus.trigger(_Events2.default.PLAYBACK_STALLED,{e:e});}function onStreamInitializing(e){applyServiceDescription(e.streamInfo,e.mediaInfo);}function applyServiceDescription(streamInfo,mediaInfo){if(streamInfo&&streamInfo.manifestInfo&&streamInfo.manifestInfo.serviceDescriptions){// is there a service description for low latency defined?
var llsd=void 0;for(var i=0;i<streamInfo.manifestInfo.serviceDescriptions.length;i++){var sd=streamInfo.manifestInfo.serviceDescriptions[i];if(sd.schemeIdUri===_Constants2.default.SERVICE_DESCRIPTION_LL_SCHEME){llsd=sd;break;}}if(llsd){if(mediaInfo&&mediaInfo.supplementalProperties&&mediaInfo.supplementalProperties[_Constants2.default.SUPPLEMENTAL_PROPERTY_LL_SCHEME]==='true'){if(llsd.latency&&llsd.latency.target>0){logger.debug('Apply LL properties coming from service description. Target Latency (ms):',llsd.latency.target);settings.update({streaming:{lowLatencyEnabled:true,liveDelay:llsd.latency.target/1000,liveCatchup:{minDrift:llsd.latency.max>llsd.latency.target?(llsd.latency.max-llsd.latency.target)/1000:undefined}}});}if(llsd.playbackRate&&llsd.playbackRate.max>1.0){logger.debug('Apply LL properties coming from service description. Max PlaybackRate:',llsd.playbackRate.max);settings.update({streaming:{lowLatencyEnabled:true,liveCatchup:{playbackRate:llsd.playbackRate.max-1.0}}});}}}}}function addAllListeners(){videoModel.addEventListener('canplay',onCanPlay);videoModel.addEventListener('play',onPlaybackStart);videoModel.addEventListener('waiting',onPlaybackWaiting);videoModel.addEventListener('playing',onPlaybackPlaying);videoModel.addEventListener('pause',onPlaybackPaused);videoModel.addEventListener('error',onPlaybackError);videoModel.addEventListener('seeking',onPlaybackSeeking);videoModel.addEventListener('seeked',onPlaybackSeeked);videoModel.addEventListener('timeupdate',onPlaybackTimeUpdated);videoModel.addEventListener('progress',onPlaybackProgress);videoModel.addEventListener('ratechange',onPlaybackRateChanged);videoModel.addEventListener('loadedmetadata',onPlaybackMetaDataLoaded);videoModel.addEventListener('stalled',onPlaybackStalled);videoModel.addEventListener('ended',onNativePlaybackEnded);}function removeAllListeners(){videoModel.removeEventListener('canplay',onCanPlay);videoModel.removeEventListener('play',onPlaybackStart);videoModel.removeEventListener('waiting',onPlaybackWaiting);videoModel.removeEventListener('playing',onPlaybackPlaying);videoModel.removeEventListener('pause',onPlaybackPaused);videoModel.removeEventListener('error',onPlaybackError);videoModel.removeEventListener('seeking',onPlaybackSeeking);videoModel.removeEventListener('seeked',onPlaybackSeeked);videoModel.removeEventListener('timeupdate',onPlaybackTimeUpdated);videoModel.removeEventListener('progress',onPlaybackProgress);videoModel.removeEventListener('ratechange',onPlaybackRateChanged);videoModel.removeEventListener('loadedmetadata',onPlaybackMetaDataLoaded);videoModel.removeEventListener('stalled',onPlaybackStalled);videoModel.removeEventListener('ended',onNativePlaybackEnded);}instance={initialize:initialize,setConfig:setConfig,getStartTimeFromUriParameters:getStartTimeFromUriParameters,getTimeToStreamEnd:getTimeToStreamEnd,getTime:getTime,getNormalizedTime:getNormalizedTime,getPlaybackRate:getPlaybackRate,getPlayedRanges:getPlayedRanges,getEnded:getEnded,getIsDynamic:getIsDynamic,getStreamController:getStreamController,computeAndSetLiveDelay:computeAndSetLiveDelay,getLiveDelay:getLiveDelay,setLiveDelay:setLiveDelay,getCurrentLiveLatency:getCurrentLiveLatency,play:play,isPaused:isPaused,pause:pause,isSeeking:isSeeking,getStreamEndTime:getStreamEndTime,seek:seek,reset:reset};setup();return instance;}PlaybackController.__dashjs_factory_name='PlaybackController';exports.default=_FactoryMaker2.default.getSingletonFactory(PlaybackController);


},{"../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../constants/MetricsConstants":"../node_modules/dashjs/build/es5/src/streaming/constants/MetricsConstants.js","../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js"}],"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/HTTPRequest.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @classdesc This Object holds reference to the HTTPRequest for manifest, fragment and xlink loading.
 * Members which are not defined in ISO23009-1 Annex D should be prefixed by a _ so that they are ignored
 * by Metrics Reporting code.
 * @ignore
 */var HTTPRequest=/**
     * @class
     */function HTTPRequest(){_classCallCheck(this,HTTPRequest);/**
         * Identifier of the TCP connection on which the HTTP request was sent.
         * @public
         */this.tcpid=null;/**
         * This is an optional parameter and should not be included in HTTP request/response transactions for progressive download.
         * The type of the request:
         * - MPD
         * - XLink expansion
         * - Initialization Fragment
         * - Index Fragment
         * - Media Fragment
         * - Bitstream Switching Fragment
         * - other
         * @public
         */this.type=null;/**
         * The original URL (before any redirects or failures)
         * @public
         */this.url=null;/**
         * The actual URL requested, if different from above
         * @public
         */this.actualurl=null;/**
         * The contents of the byte-range-spec part of the HTTP Range header.
         * @public
         */this.range=null;/**
         * Real-Time | The real time at which the request was sent.
         * @public
         */this.trequest=null;/**
         * Real-Time | The real time at which the first byte of the response was received.
         * @public
         */this.tresponse=null;/**
         * The HTTP response code.
         * @public
         */this.responsecode=null;/**
         * The duration of the throughput trace intervals (ms), for successful requests only.
         * @public
         */this.interval=null;/**
         * Throughput traces, for successful requests only.
         * @public
         */this.trace=[];/**
         * Type of stream ("audio" | "video" etc..)
         * @public
         */this._stream=null;/**
         * Real-Time | The real time at which the request finished.
         * @public
         */this._tfinish=null;/**
         * The duration of the media requests, if available, in milliseconds.
         * @public
         */this._mediaduration=null;/**
         * The media segment quality
         * @public
         */this._quality=null;/**
         * all the response headers from request.
         * @public
         */this._responseHeaders=null;/**
         * The selected service location for the request. string.
         * @public
         */this._serviceLocation=null;};/**
 * @classdesc This Object holds reference to the progress of the HTTPRequest.
 * @ignore
 */var HTTPRequestTrace=/**
    * @class
    */function HTTPRequestTrace(){_classCallCheck(this,HTTPRequestTrace);/**
         * Real-Time | Measurement stream start.
         * @public
         */this.s=null;/**
         * Measurement stream duration (ms).
         * @public
         */this.d=null;/**
         * List of integers counting the bytes received in each trace interval within the measurement stream.
         * @public
         */this.b=[];};HTTPRequest.GET='GET';HTTPRequest.HEAD='HEAD';HTTPRequest.MPD_TYPE='MPD';HTTPRequest.XLINK_EXPANSION_TYPE='XLinkExpansion';HTTPRequest.INIT_SEGMENT_TYPE='InitializationSegment';HTTPRequest.INDEX_SEGMENT_TYPE='IndexSegment';HTTPRequest.MEDIA_SEGMENT_TYPE='MediaSegment';HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE='BitstreamSwitchingSegment';HTTPRequest.OTHER_TYPE='other';exports.HTTPRequest=HTTPRequest;exports.HTTPRequestTrace=HTTPRequestTrace;


},{}],"../node_modules/dashjs/build/es5/src/streaming/vo/FragmentRequest.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var _HTTPRequest=require('../vo/metrics/HTTPRequest');function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * @class
 * @ignore
 */var FragmentRequest=function(){function FragmentRequest(url){_classCallCheck(this,FragmentRequest);this.action=FragmentRequest.ACTION_DOWNLOAD;this.startTime=NaN;this.mediaStartTime=NaN;this.mediaType=null;this.mediaInfo=null;this.type=null;this.duration=NaN;this.timescale=NaN;this.range=null;this.url=url||null;this.serviceLocation=null;this.requestStartDate=null;this.firstByteDate=null;this.requestEndDate=null;this.quality=NaN;this.index=NaN;this.availabilityStartTime=null;this.availabilityEndTime=null;this.wallStartTime=null;this.bytesLoaded=NaN;this.bytesTotal=NaN;this.delayLoadingTime=NaN;this.responseType='arraybuffer';this.representationId=null;}_createClass(FragmentRequest,[{key:'isInitializationRequest',value:function isInitializationRequest(){return this.type&&this.type===_HTTPRequest.HTTPRequest.INIT_SEGMENT_TYPE;}},{key:'setInfo',value:function setInfo(info){this.type=info&&info.init?_HTTPRequest.HTTPRequest.INIT_SEGMENT_TYPE:_HTTPRequest.HTTPRequest.MEDIA_SEGMENT_TYPE;this.url=info&&info.url?info.url:null;this.range=info&&info.range?info.range.start+'-'+info.range.end:null;this.mediaType=info&&info.mediaType?info.mediaType:null;}}]);return FragmentRequest;}();FragmentRequest.ACTION_DOWNLOAD='download';FragmentRequest.ACTION_COMPLETE='complete';exports.default=FragmentRequest;


},{"../vo/metrics/HTTPRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/HTTPRequest.js"}],"../node_modules/dashjs/build/es5/src/streaming/models/FragmentModel.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _FragmentRequest=require('../vo/FragmentRequest');var _FragmentRequest2=_interopRequireDefault(_FragmentRequest);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var FRAGMENT_MODEL_LOADING='loading';var FRAGMENT_MODEL_EXECUTED='executed';var FRAGMENT_MODEL_CANCELED='canceled';var FRAGMENT_MODEL_FAILED='failed';function FragmentModel(config){config=config||{};var eventBus=config.eventBus;var events=config.events;var dashMetrics=config.dashMetrics;var fragmentLoader=config.fragmentLoader;var debug=config.debug;var streamInfo=config.streamInfo;var type=config.type;var instance=void 0,logger=void 0,executedRequests=void 0,loadingRequests=void 0;function setup(){logger=debug.getLogger(instance);resetInitialSettings();eventBus.on(events.LOADING_COMPLETED,onLoadingCompleted,instance);eventBus.on(events.LOADING_DATA_PROGRESS,onLoadingInProgress,instance);eventBus.on(events.LOADING_ABANDONED,onLoadingAborted,instance);}function getStreamId(){return streamInfo.id;}function getType(){return type;}function isFragmentLoaded(request){var isEqualComplete=function isEqualComplete(req1,req2){return req1.action===_FragmentRequest2.default.ACTION_COMPLETE&&req1.action===req2.action;};var isEqualMedia=function isEqualMedia(req1,req2){return!isNaN(req1.index)&&req1.startTime===req2.startTime&&req1.adaptationIndex===req2.adaptationIndex&&req1.type===req2.type;};var isEqualInit=function isEqualInit(req1,req2){return isNaN(req1.index)&&isNaN(req2.index)&&req1.quality===req2.quality;};var check=function check(requests){var isLoaded=false;requests.some(function(req){if(isEqualMedia(request,req)||isEqualInit(request,req)||isEqualComplete(request,req)){isLoaded=true;return isLoaded;}});return isLoaded;};if(!request){return false;}return check(executedRequests);}function isFragmentLoadedOrPending(request){var isLoaded=false;var i=0;var req=void 0;// First, check if the fragment has already been loaded
isLoaded=isFragmentLoaded(request);// Then, check if the fragment is about to be loeaded
if(!isLoaded){for(i=0;i<loadingRequests.length;i++){req=loadingRequests[i];if(request.url===req.url&&request.startTime===req.startTime){isLoaded=true;}}}return isLoaded;}/**
     *
     * Gets an array of {@link FragmentRequest} objects
     *
     * @param {Object} filter The object with properties by which the method filters the requests to be returned.
     *  the only mandatory property is state, which must be a value from
     *  other properties should match the properties of {@link FragmentRequest}. E.g.:
     *  getRequests({state: FragmentModel.FRAGMENT_MODEL_EXECUTED, quality: 0}) - returns
     *  all the requests from executedRequests array where requests.quality = filter.quality
     *
     * @returns {Array}
     * @memberof FragmentModel#
     */function getRequests(filter){var states=filter?filter.state instanceof Array?filter.state:[filter.state]:[];var filteredRequests=[];states.forEach(function(state){var requests=getRequestsForState(state);filteredRequests=filteredRequests.concat(filterRequests(requests,filter));});return filteredRequests;}function getRequestThreshold(req){return isNaN(req.duration)?0.25:Math.min(req.duration/8,0.5);}function removeExecutedRequestsBeforeTime(time){executedRequests=executedRequests.filter(function(req){var threshold=getRequestThreshold(req);return isNaN(req.startTime)||(time!==undefined?req.startTime>=time-threshold:false);});}function removeExecutedRequestsAfterTime(time){executedRequests=executedRequests.filter(function(req){return isNaN(req.startTime)||(time!==undefined?req.startTime<time:false);});}function removeExecutedRequestsInTimeRange(start,end){if(end<=start+0.5){return;}executedRequests=executedRequests.filter(function(req){var threshold=getRequestThreshold(req);return isNaN(req.startTime)||req.startTime>=end-threshold||isNaN(req.duration)||req.startTime+req.duration<=start+threshold;});}// Remove requests that are not "represented" by any of buffered ranges
function syncExecutedRequestsWithBufferedRange(bufferedRanges,streamDuration){if(!bufferedRanges||bufferedRanges.length===0){removeExecutedRequestsBeforeTime();return;}var start=0;for(var i=0,ln=bufferedRanges.length;i<ln;i++){removeExecutedRequestsInTimeRange(start,bufferedRanges.start(i));start=bufferedRanges.end(i);}if(streamDuration>0){removeExecutedRequestsInTimeRange(start,streamDuration);}}function abortRequests(){logger.debug('abort requests');fragmentLoader.abort();loadingRequests=[];}function executeRequest(request){switch(request.action){case _FragmentRequest2.default.ACTION_COMPLETE:executedRequests.push(request);addSchedulingInfoMetrics(request,FRAGMENT_MODEL_EXECUTED);logger.debug('STREAM_COMPLETED');eventBus.trigger(events.STREAM_COMPLETED,{request:request},{streamId:request.mediaInfo.streamInfo.id,mediaType:request.mediaType});break;case _FragmentRequest2.default.ACTION_DOWNLOAD:addSchedulingInfoMetrics(request,FRAGMENT_MODEL_LOADING);loadingRequests.push(request);loadCurrentFragment(request);break;default:logger.warn('Unknown request action.');}}function loadCurrentFragment(request){eventBus.trigger(events.FRAGMENT_LOADING_STARTED,{request:request},{streamId:streamInfo.id,mediaType:type});fragmentLoader.load(request);}function getRequestForTime(arr,time,threshold){// loop through the executed requests and pick the one for which the playback interval matches the given time
var lastIdx=arr.length-1;for(var i=lastIdx;i>=0;i--){var req=arr[i];var start=req.startTime;var end=start+req.duration;threshold=!isNaN(threshold)?threshold:getRequestThreshold(req);if(!isNaN(start)&&!isNaN(end)&&time+threshold>=start&&time-threshold<end||isNaN(start)&&isNaN(time)){return req;}}return null;}function filterRequests(arr,filter){// for time use a specific filtration function
if(filter.hasOwnProperty('time')){return[getRequestForTime(arr,filter.time,filter.threshold)];}return arr.filter(function(request){for(var prop in filter){if(prop==='state')continue;if(filter.hasOwnProperty(prop)&&request[prop]!=filter[prop])return false;}return true;});}function getRequestsForState(state){var requests=void 0;switch(state){case FRAGMENT_MODEL_LOADING:requests=loadingRequests;break;case FRAGMENT_MODEL_EXECUTED:requests=executedRequests;break;default:requests=[];}return requests;}function addSchedulingInfoMetrics(request,state){dashMetrics.addSchedulingInfo(request,state);dashMetrics.addRequestsQueue(request.mediaType,loadingRequests,executedRequests);}function onLoadingCompleted(e){if(e.sender!==fragmentLoader)return;loadingRequests.splice(loadingRequests.indexOf(e.request),1);if(e.response&&!e.error){executedRequests.push(e.request);}addSchedulingInfoMetrics(e.request,e.error?FRAGMENT_MODEL_FAILED:FRAGMENT_MODEL_EXECUTED);eventBus.trigger(events.FRAGMENT_LOADING_COMPLETED,{request:e.request,response:e.response,error:e.error,sender:this},{streamId:streamInfo.id,mediaType:type});}function onLoadingInProgress(e){if(e.sender!==fragmentLoader)return;eventBus.trigger(events.FRAGMENT_LOADING_PROGRESS,{request:e.request,response:e.response,error:e.error,sender:this},{streamId:streamInfo.id,mediaType:type});}function onLoadingAborted(e){if(e.sender!==fragmentLoader)return;eventBus.trigger(events.FRAGMENT_LOADING_ABANDONED,{request:e.request},{streamId:streamInfo.id,mediaType:type});}function resetInitialSettings(){executedRequests=[];loadingRequests=[];}function reset(){eventBus.off(events.LOADING_COMPLETED,onLoadingCompleted,this);eventBus.off(events.LOADING_DATA_PROGRESS,onLoadingInProgress,this);eventBus.off(events.LOADING_ABANDONED,onLoadingAborted,this);if(fragmentLoader){fragmentLoader.reset();}resetInitialSettings();}function addExecutedRequest(request){executedRequests.push(request);}instance={getStreamId:getStreamId,getType:getType,getRequests:getRequests,isFragmentLoaded:isFragmentLoaded,isFragmentLoadedOrPending:isFragmentLoadedOrPending,removeExecutedRequestsBeforeTime:removeExecutedRequestsBeforeTime,removeExecutedRequestsAfterTime:removeExecutedRequestsAfterTime,syncExecutedRequestsWithBufferedRange:syncExecutedRequestsWithBufferedRange,abortRequests:abortRequests,executeRequest:executeRequest,reset:reset,addExecutedRequest:addExecutedRequest};setup();return instance;}FragmentModel.__dashjs_factory_name='FragmentModel';var factory=_FactoryMaker2.default.getClassFactory(FragmentModel);factory.FRAGMENT_MODEL_LOADING=FRAGMENT_MODEL_LOADING;factory.FRAGMENT_MODEL_EXECUTED=FRAGMENT_MODEL_EXECUTED;factory.FRAGMENT_MODEL_CANCELED=FRAGMENT_MODEL_CANCELED;factory.FRAGMENT_MODEL_FAILED=FRAGMENT_MODEL_FAILED;_FactoryMaker2.default.updateClassFactory(FragmentModel.__dashjs_factory_name,factory);exports.default=factory;


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../vo/FragmentRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/FragmentRequest.js"}],"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var DashJSError=function DashJSError(code,message,data){_classCallCheck(this,DashJSError);this.code=code||null;this.message=message||null;this.data=data||null;};exports.default=DashJSError;


},{}],"../node_modules/dashjs/build/es5/src/streaming/vo/TextTrackInfo.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var TextTrackInfo=function TextTrackInfo(){_classCallCheck(this,TextTrackInfo);this.captionData=null;this.label=null;this.lang=null;this.defaultTrack=false;this.kind=null;this.isFragmented=false;this.isEmbedded=false;};exports.default=TextTrackInfo;


},{}],"../node_modules/dashjs/build/es5/src/streaming/vo/IsoBox.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var IsoBox=function(){function IsoBox(boxData){_classCallCheck(this,IsoBox);this.offset=boxData._offset;this.type=boxData.type;this.size=boxData.size;this.boxes=[];if(boxData.boxes){for(var i=0;i<boxData.boxes.length;i++){this.boxes.push(new IsoBox(boxData.boxes[i]));}}this.isComplete=true;switch(boxData.type){case'sidx':this.timescale=boxData.timescale;this.earliest_presentation_time=boxData.earliest_presentation_time;this.first_offset=boxData.first_offset;this.references=boxData.references;if(boxData.references){this.references=[];for(var _i=0;_i<boxData.references.length;_i++){var reference={reference_type:boxData.references[_i].reference_type,referenced_size:boxData.references[_i].referenced_size,subsegment_duration:boxData.references[_i].subsegment_duration};this.references.push(reference);}}break;case'emsg':this.id=boxData.id;this.version=boxData.version===1?1:0;this.value=boxData.value;this.timescale=boxData.timescale;this.scheme_id_uri=boxData.scheme_id_uri;this.presentation_time_delta=boxData.version===1?boxData.presentation_time:boxData.presentation_time_delta;this.event_duration=boxData.event_duration;this.message_data=boxData.message_data;break;case'mdhd':this.timescale=boxData.timescale;break;case'mfhd':this.sequence_number=boxData.sequence_number;break;case'subs':this.entry_count=boxData.entry_count;this.entries=boxData.entries;break;case'tfhd':this.base_data_offset=boxData.base_data_offset;this.sample_description_index=boxData.sample_description_index;this.default_sample_duration=boxData.default_sample_duration;this.default_sample_size=boxData.default_sample_size;this.default_sample_flags=boxData.default_sample_flags;this.flags=boxData.flags;break;case'tfdt':this.version=boxData.version;this.baseMediaDecodeTime=boxData.baseMediaDecodeTime;this.flags=boxData.flags;break;case'trun':this.sample_count=boxData.sample_count;this.first_sample_flags=boxData.first_sample_flags;this.data_offset=boxData.data_offset;this.flags=boxData.flags;this.samples=boxData.samples;if(boxData.samples){this.samples=[];for(var _i2=0,ln=boxData.samples.length;_i2<ln;_i2++){var sample={sample_size:boxData.samples[_i2].sample_size,sample_duration:boxData.samples[_i2].sample_duration,sample_composition_time_offset:boxData.samples[_i2].sample_composition_time_offset};this.samples.push(sample);}}break;}}_createClass(IsoBox,[{key:'getChildBox',value:function getChildBox(type){for(var i=0;i<this.boxes.length;i++){if(this.boxes[i].type===type){return this.boxes[i];}}}},{key:'getChildBoxes',value:function getChildBoxes(type){var boxes=[];for(var i=0;i<this.boxes.length;i++){if(this.boxes[i].type===type){boxes.push(this.boxes[i]);}}return boxes;}}]);return IsoBox;}();exports.default=IsoBox;


},{}],"../node_modules/dashjs/build/es5/src/streaming/utils/IsoFile.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _IsoBox=require('../vo/IsoBox');var _IsoBox2=_interopRequireDefault(_IsoBox);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function IsoFile(){var instance=void 0,parsedIsoFile=void 0;/**
    * @param {string} type
    * @returns {IsoBox|null}
    * @memberof IsoFile#
    */function getBox(type){if(!type||!parsedIsoFile||!parsedIsoFile.boxes||parsedIsoFile.boxes.length===0||typeof parsedIsoFile.fetch!=='function')return null;return convertToDashIsoBox(parsedIsoFile.fetch(type));}/**
    * @param {string} type
    * @returns {Array|null} array of {@link IsoBox}
    * @memberof IsoFile#
    */function getBoxes(type){var boxes=[];if(!type||!parsedIsoFile||typeof parsedIsoFile.fetchAll!=='function'){return boxes;}var boxData=parsedIsoFile.fetchAll(type);var box=void 0;for(var i=0,ln=boxData.length;i<ln;i++){box=convertToDashIsoBox(boxData[i]);if(box){boxes.push(box);}}return boxes;}/**
    * @param {string} value
    * @memberof IsoFile#
    */function setData(value){parsedIsoFile=value;}/**
    * @returns {IsoBox|null}
    * @memberof IsoFile#
    */function getLastBox(){if(!parsedIsoFile||!parsedIsoFile.boxes||!parsedIsoFile.boxes.length)return null;var type=parsedIsoFile.boxes[parsedIsoFile.boxes.length-1].type;var boxes=getBoxes(type);return boxes.length>0?boxes[boxes.length-1]:null;}function convertToDashIsoBox(boxData){if(!boxData)return null;var box=new _IsoBox2.default(boxData);if(boxData.hasOwnProperty('_incomplete')){box.isComplete=!boxData._incomplete;}return box;}instance={getBox:getBox,getBoxes:getBoxes,setData:setData,getLastBox:getLastBox};return instance;}IsoFile.__dashjs_factory_name='IsoFile';exports.default=_FactoryMaker2.default.getClassFactory(IsoFile);


},{"../vo/IsoBox":"../node_modules/dashjs/build/es5/src/streaming/vo/IsoBox.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/codem-isoboxer/dist/iso_boxer.js":[function(require,module,exports) {
/*! codem-isoboxer v0.3.6 https://github.com/madebyhiro/codem-isoboxer/blob/master/LICENSE.txt */
var ISOBoxer = {};

ISOBoxer.parseBuffer = function(arrayBuffer) {
  return new ISOFile(arrayBuffer).parse();
};

ISOBoxer.addBoxProcessor = function(type, parser) {
  if (typeof type !== 'string' || typeof parser !== 'function') {
    return;
  }
  ISOBox.prototype._boxProcessors[type] = parser;
};

ISOBoxer.createFile = function() {
  return new ISOFile();
};

// See ISOBoxer.append() for 'pos' parameter syntax
ISOBoxer.createBox = function(type, parent, pos) {
  var newBox = ISOBox.create(type);
  if (parent) {
    parent.append(newBox, pos);
  }
  return newBox;
};

// See ISOBoxer.append() for 'pos' parameter syntax
ISOBoxer.createFullBox = function(type, parent, pos) {
  var newBox = ISOBoxer.createBox(type, parent, pos);
  newBox.version = 0;
  newBox.flags = 0;
  return newBox;
};

ISOBoxer.Utils = {};
ISOBoxer.Utils.dataViewToString = function(dataView, encoding) {
  var impliedEncoding = encoding || 'utf-8';
  if (typeof TextDecoder !== 'undefined') {
    return new TextDecoder(impliedEncoding).decode(dataView);
  }
  var a = [];
  var i = 0;

  if (impliedEncoding === 'utf-8') {
    /* The following algorithm is essentially a rewrite of the UTF8.decode at
    http://bannister.us/weblog/2007/simple-base64-encodedecode-javascript/
    */

    while (i < dataView.byteLength) {
      var c = dataView.getUint8(i++);
      if (c < 0x80) {
        // 1-byte character (7 bits)
      } else if (c < 0xe0) {
        // 2-byte character (11 bits)
        c = (c & 0x1f) << 6;
        c |= (dataView.getUint8(i++) & 0x3f);
      } else if (c < 0xf0) {
        // 3-byte character (16 bits)
        c = (c & 0xf) << 12;
        c |= (dataView.getUint8(i++) & 0x3f) << 6;
        c |= (dataView.getUint8(i++) & 0x3f);
      } else {
        // 4-byte character (21 bits)
        c = (c & 0x7) << 18;
        c |= (dataView.getUint8(i++) & 0x3f) << 12;
        c |= (dataView.getUint8(i++) & 0x3f) << 6;
        c |= (dataView.getUint8(i++) & 0x3f);
      }
      a.push(String.fromCharCode(c));
    }
  } else { // Just map byte-by-byte (probably wrong)
    while (i < dataView.byteLength) {
      a.push(String.fromCharCode(dataView.getUint8(i++)));
    }
  }
  return a.join('');
};

ISOBoxer.Utils.utf8ToByteArray = function(string) {
  // Only UTF-8 encoding is supported by TextEncoder
  var u, i;
  if (typeof TextEncoder !== 'undefined') {
    u = new TextEncoder().encode(string);
  } else {
    u = [];
    for (i = 0; i < string.length; ++i) {
      var c = string.charCodeAt(i);
      if (c < 0x80) {
        u.push(c);
      } else if (c < 0x800) {
        u.push(0xC0 | (c >> 6));
        u.push(0x80 | (63 & c));
      } else if (c < 0x10000) {
        u.push(0xE0 | (c >> 12));
        u.push(0x80 | (63 & (c >> 6)));
        u.push(0x80 | (63 & c));
      } else {
        u.push(0xF0 | (c >> 18));
        u.push(0x80 | (63 & (c >> 12)));
        u.push(0x80 | (63 & (c >> 6)));
        u.push(0x80 | (63 & c));
      }
    }
  }
  return u;
};

// Method to append a box in the list of child boxes
// The 'pos' parameter can be either:
//   - (number) a position index at which to insert the new box
//   - (string) the type of the box after which to insert the new box
//   - (object) the box after which to insert the new box
ISOBoxer.Utils.appendBox = function(parent, box, pos) {
  box._offset = parent._cursor.offset;
  box._root = (parent._root ? parent._root : parent);
  box._raw = parent._raw;
  box._parent = parent;

  if (pos === -1) {
    // The new box is a sub-box of the parent but not added in boxes array,
    // for example when the new box is set as an entry (see dref and stsd for example)
    return;
  }

  if (pos === undefined || pos === null) {
    parent.boxes.push(box);
    return;
  }

  var index = -1,
      type;

  if (typeof pos === "number") {
    index = pos;
  } else {
    if (typeof pos === "string") {
      type = pos;
    } else if (typeof pos === "object" && pos.type) {
      type = pos.type;
    } else {
      parent.boxes.push(box);
      return;
    }

    for (var i = 0; i < parent.boxes.length; i++) {
      if (type === parent.boxes[i].type) {
        index = i + 1;
        break;
      }
    }
  }
  parent.boxes.splice(index, 0, box);
};

if (typeof exports !== 'undefined') {
  exports.parseBuffer     = ISOBoxer.parseBuffer;
  exports.addBoxProcessor = ISOBoxer.addBoxProcessor;
  exports.createFile      = ISOBoxer.createFile;
  exports.createBox       = ISOBoxer.createBox;
  exports.createFullBox   = ISOBoxer.createFullBox;
  exports.Utils           = ISOBoxer.Utils;
}

ISOBoxer.Cursor = function(initialOffset) {
  this.offset = (typeof initialOffset == 'undefined' ? 0 : initialOffset);
};

var ISOFile = function(arrayBuffer) {
  this._cursor = new ISOBoxer.Cursor();
  this.boxes = [];
  if (arrayBuffer) {
    this._raw = new DataView(arrayBuffer);
  }
};

ISOFile.prototype.fetch = function(type) {
  var result = this.fetchAll(type, true);
  return (result.length ? result[0] : null);
};

ISOFile.prototype.fetchAll = function(type, returnEarly) {
  var result = [];
  ISOFile._sweep.call(this, type, result, returnEarly);
  return result;
};

ISOFile.prototype.parse = function() {
  this._cursor.offset = 0;
  this.boxes = [];
  while (this._cursor.offset < this._raw.byteLength) {
    var box = ISOBox.parse(this);

    // Box could not be parsed
    if (typeof box.type === 'undefined') break;

    this.boxes.push(box);
  }
  return this;
};

ISOFile._sweep = function(type, result, returnEarly) {
  if (this.type && this.type == type) result.push(this);
  for (var box in this.boxes) {
    if (result.length && returnEarly) return;
    ISOFile._sweep.call(this.boxes[box], type, result, returnEarly);
  }
};

ISOFile.prototype.write = function() {

  var length = 0,
      i;

  for (i = 0; i < this.boxes.length; i++) {
    length += this.boxes[i].getLength(false);
  }

  var bytes = new Uint8Array(length);
  this._rawo = new DataView(bytes.buffer);
  this.bytes = bytes;
  this._cursor.offset = 0;

  for (i = 0; i < this.boxes.length; i++) {
    this.boxes[i].write();
  }

  return bytes.buffer;
};

ISOFile.prototype.append = function(box, pos) {
  ISOBoxer.Utils.appendBox(this, box, pos);
};
var ISOBox = function() {
  this._cursor = new ISOBoxer.Cursor();
};

ISOBox.parse = function(parent) {
  var newBox = new ISOBox();
  newBox._offset = parent._cursor.offset;
  newBox._root = (parent._root ? parent._root : parent);
  newBox._raw = parent._raw;
  newBox._parent = parent;
  newBox._parseBox();
  parent._cursor.offset = newBox._raw.byteOffset + newBox._raw.byteLength;
  return newBox;
};

ISOBox.create = function(type) {
  var newBox = new ISOBox();
  newBox.type = type;
  newBox.boxes = [];
  return newBox;
};

ISOBox.prototype._boxContainers = ['dinf', 'edts', 'mdia', 'meco', 'mfra', 'minf', 'moof', 'moov', 'mvex', 'stbl', 'strk', 'traf', 'trak', 'tref', 'udta', 'vttc', 'sinf', 'schi', 'encv', 'enca'];

ISOBox.prototype._boxProcessors = {};

///////////////////////////////////////////////////////////////////////////////////////////////////
// Generic read/write functions

ISOBox.prototype._procField = function (name, type, size) {
  if (this._parsing) {
    this[name] = this._readField(type, size);
  }
  else {
    this._writeField(type, size, this[name]);
  }
};

ISOBox.prototype._procFieldArray = function (name, length, type, size) {
  var i;
  if (this._parsing) {
    this[name] = [];
    for (i = 0; i < length; i++) {
      this[name][i] = this._readField(type, size);
    }
  }
  else {
    for (i = 0; i < this[name].length; i++) {
      this._writeField(type, size, this[name][i]);
    }
  }
};

ISOBox.prototype._procFullBox = function() {
  this._procField('version', 'uint', 8);
  this._procField('flags', 'uint', 24);
};

ISOBox.prototype._procEntries = function(name, length, fn) {
  var i;
  if (this._parsing) {
    this[name] = [];
    for (i = 0; i < length; i++) {
      this[name].push({});
      fn.call(this, this[name][i]);
    }
  }
  else {
    for (i = 0; i < length; i++) {
      fn.call(this, this[name][i]);
    }
  }
};

ISOBox.prototype._procSubEntries = function(entry, name, length, fn) {
  var i;
  if (this._parsing) {
    entry[name] = [];
    for (i = 0; i < length; i++) {
      entry[name].push({});
      fn.call(this, entry[name][i]);
    }
  }
  else {
    for (i = 0; i < length; i++) {
      fn.call(this, entry[name][i]);
    }
  }
};

ISOBox.prototype._procEntryField = function (entry, name, type, size) {
  if (this._parsing) {
    entry[name] = this._readField(type, size);
  }
  else {
    this._writeField(type, size, entry[name]);
  }
};

ISOBox.prototype._procSubBoxes = function(name, length) {
  var i;
  if (this._parsing) {
    this[name] = [];
    for (i = 0; i < length; i++) {
      this[name].push(ISOBox.parse(this));
    }
  }
  else {
    for (i = 0; i < length; i++) {
      if (this._rawo) {
        this[name][i].write();
      } else {
        this.size += this[name][i].getLength();
      }
    }
  }
};

///////////////////////////////////////////////////////////////////////////////////////////////////
// Read/parse functions

ISOBox.prototype._readField = function(type, size) {
  switch (type) {
    case 'uint':
      return this._readUint(size);
    case 'int':
      return this._readInt(size);
    case 'template':
      return this._readTemplate(size);
    case 'string':
      return (size === -1) ? this._readTerminatedString() : this._readString(size);
    case 'data':
      return this._readData(size);
    case 'utf8':
      return this._readUTF8String();
    default:
      return -1;
  }
};

ISOBox.prototype._readInt = function(size) {
  var result = null,
      offset = this._cursor.offset - this._raw.byteOffset;
  switch(size) {
  case 8:
    result = this._raw.getInt8(offset);
    break;
  case 16:
    result = this._raw.getInt16(offset);
    break;
  case 32:
    result = this._raw.getInt32(offset);
    break;
  case 64:
    // Warning: JavaScript cannot handle 64-bit integers natively.
    // This will give unexpected results for integers >= 2^53
    var s1 = this._raw.getInt32(offset);
    var s2 = this._raw.getInt32(offset + 4);
    result = (s1 * Math.pow(2,32)) + s2;
    break;
  }
  this._cursor.offset += (size >> 3);
  return result;
};

ISOBox.prototype._readUint = function(size) {
  var result = null,
      offset = this._cursor.offset - this._raw.byteOffset,
      s1, s2;
  switch(size) {
  case 8:
    result = this._raw.getUint8(offset);
    break;
  case 16:
    result = this._raw.getUint16(offset);
    break;
  case 24:
    s1 = this._raw.getUint16(offset);
    s2 = this._raw.getUint8(offset + 2);
    result = (s1 << 8) + s2;
    break;
  case 32:
    result = this._raw.getUint32(offset);
    break;
  case 64:
    // Warning: JavaScript cannot handle 64-bit integers natively.
    // This will give unexpected results for integers >= 2^53
    s1 = this._raw.getUint32(offset);
    s2 = this._raw.getUint32(offset + 4);
    result = (s1 * Math.pow(2,32)) + s2;
    break;
  }
  this._cursor.offset += (size >> 3);
  return result;
};

ISOBox.prototype._readString = function(length) {
  var str = '';
  for (var c = 0; c < length; c++) {
    var char = this._readUint(8);
    str += String.fromCharCode(char);
  }
  return str;
};

ISOBox.prototype._readTemplate = function(size) {
  var pre = this._readUint(size / 2);
  var post = this._readUint(size / 2);
  return pre + (post / Math.pow(2, size / 2));
};

ISOBox.prototype._readTerminatedString = function() {
  var str = '';
  while (this._cursor.offset - this._offset < this._raw.byteLength) {
    var char = this._readUint(8);
    if (char === 0) break;
    str += String.fromCharCode(char);
  }
  return str;
};

ISOBox.prototype._readData = function(size) {
  var length = (size > 0) ? size : (this._raw.byteLength - (this._cursor.offset - this._offset));
  if (length > 0) {
    var data = new Uint8Array(this._raw.buffer, this._cursor.offset, length);

    this._cursor.offset += length;
    return data;
  }
  else {
    return null;
  }
};

ISOBox.prototype._readUTF8String = function() {
  var length = this._raw.byteLength - (this._cursor.offset - this._offset);
  var data = null;
  if (length > 0) {
    data = new DataView(this._raw.buffer, this._cursor.offset, length);
    this._cursor.offset += length;
  }
 
  return data ? ISOBoxer.Utils.dataViewToString(data) : data;
};

ISOBox.prototype._parseBox = function() {
  this._parsing = true;
  this._cursor.offset = this._offset;

  // return immediately if there are not enough bytes to read the header
  if (this._offset + 8 > this._raw.buffer.byteLength) {
    this._root._incomplete = true;
    return;
  }

  this._procField('size', 'uint', 32);
  this._procField('type', 'string', 4);

  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }
  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }

  switch(this.size) {
  case 0:
    this._raw = new DataView(this._raw.buffer, this._offset, (this._raw.byteLength - this._cursor.offset + 8));
    break;
  case 1:
    if (this._offset + this.size > this._raw.buffer.byteLength) {
      this._incomplete = true;
      this._root._incomplete = true;
    } else {
      this._raw = new DataView(this._raw.buffer, this._offset, this.largesize);
    }
    break;
  default:
    if (this._offset + this.size > this._raw.buffer.byteLength) {
      this._incomplete = true;
      this._root._incomplete = true;
    } else {
      this._raw = new DataView(this._raw.buffer, this._offset, this.size);
    }
  }

  // additional parsing
  if (!this._incomplete) {
    if (this._boxProcessors[this.type]) {
      this._boxProcessors[this.type].call(this);
    }
    if (this._boxContainers.indexOf(this.type) !== -1) {
      this._parseContainerBox();
    } else{
      // Unknown box => read and store box content
      this._data = this._readData();
    }
  }
};

ISOBox.prototype._parseFullBox = function() {
  this.version = this._readUint(8);
  this.flags = this._readUint(24);
};

ISOBox.prototype._parseContainerBox = function() {
  this.boxes = [];
  while (this._cursor.offset - this._raw.byteOffset < this._raw.byteLength) {
    this.boxes.push(ISOBox.parse(this));
  }
};

///////////////////////////////////////////////////////////////////////////////////////////////////
// Write functions

ISOBox.prototype.append = function(box, pos) {
  ISOBoxer.Utils.appendBox(this, box, pos);
};

ISOBox.prototype.getLength = function() {
  this._parsing = false;
  this._rawo = null;

  this.size = 0;
  this._procField('size', 'uint', 32);
  this._procField('type', 'string', 4);

  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }
  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }

  if (this._boxProcessors[this.type]) {
    this._boxProcessors[this.type].call(this);
  }

  if (this._boxContainers.indexOf(this.type) !== -1) {
    for (var i = 0; i < this.boxes.length; i++) {
      this.size += this.boxes[i].getLength();
    }
  } 

  if (this._data) {
    this._writeData(this._data);
  }

  return this.size;
};

ISOBox.prototype.write = function() {
  this._parsing = false;
  this._cursor.offset = this._parent._cursor.offset;

  switch(this.size) {
  case 0:
    this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, (this.parent._rawo.byteLength - this._cursor.offset));
    break;
  case 1:
      this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.largesize);
    break;
  default:
      this._rawo = new DataView(this._parent._rawo.buffer, this._cursor.offset, this.size);
  }

  this._procField('size', 'uint', 32);
  this._procField('type', 'string', 4);

  if (this.size === 1)      { this._procField('largesize', 'uint', 64); }
  if (this.type === 'uuid') { this._procFieldArray('usertype', 16, 'uint', 8); }

  if (this._boxProcessors[this.type]) {
    this._boxProcessors[this.type].call(this);
  }

  if (this._boxContainers.indexOf(this.type) !== -1) {
    for (var i = 0; i < this.boxes.length; i++) {
      this.boxes[i].write();
    }
  } 

  if (this._data) {
    this._writeData(this._data);
  }

  this._parent._cursor.offset += this.size;

  return this.size;
};

ISOBox.prototype._writeInt = function(size, value) {
  if (this._rawo) {
    var offset = this._cursor.offset - this._rawo.byteOffset;
    switch(size) {
    case 8:
      this._rawo.setInt8(offset, value);
      break;
    case 16:
      this._rawo.setInt16(offset, value);
      break;
    case 32:
      this._rawo.setInt32(offset, value);
      break;
    case 64:
      // Warning: JavaScript cannot handle 64-bit integers natively.
      // This will give unexpected results for integers >= 2^53
      var s1 = Math.floor(value / Math.pow(2,32));
      var s2 = value - (s1 * Math.pow(2,32));
      this._rawo.setUint32(offset, s1);
      this._rawo.setUint32(offset + 4, s2);
      break;
    }
    this._cursor.offset += (size >> 3);
  } else {
    this.size += (size >> 3);
  }
};

ISOBox.prototype._writeUint = function(size, value) {

  if (this._rawo) {
    var offset = this._cursor.offset - this._rawo.byteOffset,
        s1, s2;
    switch(size) {
    case 8:
      this._rawo.setUint8(offset, value);
      break;
    case 16:
      this._rawo.setUint16(offset, value);
      break;
    case 24:
      s1 = (value & 0xFFFF00) >> 8;
      s2 = (value & 0x0000FF);
      this._rawo.setUint16(offset, s1);
      this._rawo.setUint8(offset + 2, s2);
      break;
    case 32:
      this._rawo.setUint32(offset, value);
      break;
    case 64:
      // Warning: JavaScript cannot handle 64-bit integers natively.
      // This will give unexpected results for integers >= 2^53
      s1 = Math.floor(value / Math.pow(2,32));
      s2 = value - (s1 * Math.pow(2,32));
      this._rawo.setUint32(offset, s1);
      this._rawo.setUint32(offset + 4, s2);
      break;
    }
    this._cursor.offset += (size >> 3);
  } else {
    this.size += (size >> 3);
  }
};

ISOBox.prototype._writeString = function(size, str) {
  for (var c = 0; c < size; c++) {
    this._writeUint(8, str.charCodeAt(c));
  }
};

ISOBox.prototype._writeTerminatedString = function(str) {
  if (str.length === 0) {
    return;
  }
  for (var c = 0; c < str.length; c++) {
    this._writeUint(8, str.charCodeAt(c));
  }
  this._writeUint(8, 0);
};

ISOBox.prototype._writeTemplate = function(size, value) {
  var pre = Math.floor(value);
  var post = (value - pre) * Math.pow(2, size / 2);
  this._writeUint(size / 2, pre);
  this._writeUint(size / 2, post);
};

ISOBox.prototype._writeData = function(data) {
  var i;
  //data to copy
  if (data) {
    if (this._rawo) {
      //Array and Uint8Array has also to be managed
      if (data instanceof Array) {
        var offset = this._cursor.offset - this._rawo.byteOffset;
        for (var i = 0; i < data.length; i++) {
          this._rawo.setInt8(offset + i, data[i]);
        }
        this._cursor.offset += data.length;
      } 

      if (data instanceof Uint8Array) {
        this._root.bytes.set(data, this._cursor.offset);
        this._cursor.offset += data.length;
      }

    } else {
      //nothing to copy only size to compute
      this.size += data.length;
    }
  }
};

ISOBox.prototype._writeUTF8String = function(string) {
  var u = ISOBoxer.Utils.utf8ToByteArray(string);
  if (this._rawo) {
    var dataView = new DataView(this._rawo.buffer, this._cursor.offset, u.length);
    for (var i = 0; i < u.length; i++) {
      dataView.setUint8(i, u[i]);
    }
  } else {
    this.size += u.length;
  }
};

ISOBox.prototype._writeField = function(type, size, value) {
  switch (type) {
  case 'uint':
    this._writeUint(size, value);
    break;
  case 'int':
    this._writeInt(size, value);
    break;
  case 'template':
    this._writeTemplate(size, value);
    break;
  case 'string':
      if (size == -1) {
        this._writeTerminatedString(value);
      } else {
        this._writeString(size, value);
      }
      break;
  case 'data':
    this._writeData(value);
    break;
  case 'utf8':
    this._writeUTF8String(value);
    break;
  default:
    break;
  }
};

// ISO/IEC 14496-15:2014 - avc1 box
ISOBox.prototype._boxProcessors['avc1'] = ISOBox.prototype._boxProcessors['encv'] = function() {
  // SampleEntry fields
  this._procFieldArray('reserved1', 6,    'uint', 8);
  this._procField('data_reference_index', 'uint', 16);
  // VisualSampleEntry fields
  this._procField('pre_defined1',         'uint',     16);
  this._procField('reserved2',            'uint',     16);
  this._procFieldArray('pre_defined2', 3, 'uint',     32);
  this._procField('width',                'uint',     16);
  this._procField('height',               'uint',     16);
  this._procField('horizresolution',      'template', 32);
  this._procField('vertresolution',       'template', 32);
  this._procField('reserved3',            'uint',     32);
  this._procField('frame_count',          'uint',     16);
  this._procFieldArray('compressorname', 32,'uint',    8);
  this._procField('depth',                'uint',     16);
  this._procField('pre_defined3',         'int',      16);
  // AVCSampleEntry fields
  this._procField('config', 'data', -1);
};

// ISO/IEC 14496-12:2012 - 8.7.2 Data Reference Box
ISOBox.prototype._boxProcessors['dref'] = function() {
  this._procFullBox();
  this._procField('entry_count', 'uint', 32);
  this._procSubBoxes('entries', this.entry_count);
};

// ISO/IEC 14496-12:2012 - 8.6.6 Edit List Box
ISOBox.prototype._boxProcessors['elst'] = function() {
  this._procFullBox();
  this._procField('entry_count', 'uint', 32);
  this._procEntries('entries', this.entry_count, function(entry) {
    this._procEntryField(entry, 'segment_duration',     'uint', (this.version === 1) ? 64 : 32);
    this._procEntryField(entry, 'media_time',           'int',  (this.version === 1) ? 64 : 32);
    this._procEntryField(entry, 'media_rate_integer',   'int',  16);
    this._procEntryField(entry, 'media_rate_fraction',  'int',  16);
  });
};

// ISO/IEC 23009-1:2014 - 5.10.3.3 Event Message Box
ISOBox.prototype._boxProcessors['emsg'] = function() {
  this._procFullBox();
  if (this.version == 1) {
    this._procField('timescale',                'uint',   32);
    this._procField('presentation_time',        'uint',   64);
    this._procField('event_duration',           'uint',   32);
    this._procField('id',                       'uint',   32);
    this._procField('scheme_id_uri',            'string', -1);
    this._procField('value',                    'string', -1);
  } else {
    this._procField('scheme_id_uri',            'string', -1);
    this._procField('value',                    'string', -1);
    this._procField('timescale',                'uint',   32);
    this._procField('presentation_time_delta',  'uint',   32);
    this._procField('event_duration',           'uint',   32);
    this._procField('id',                       'uint',   32);
  }
  this._procField('message_data',             'data',   -1);
};
// ISO/IEC 14496-12:2012 - 8.1.2 Free Space Box
ISOBox.prototype._boxProcessors['free'] = ISOBox.prototype._boxProcessors['skip'] = function() {
  this._procField('data', 'data', -1);
};

// ISO/IEC 14496-12:2012 - 8.12.2 Original Format Box
ISOBox.prototype._boxProcessors['frma'] = function() {
  this._procField('data_format', 'uint', 32);
};
// ISO/IEC 14496-12:2012 - 4.3 File Type Box / 8.16.2 Segment Type Box
ISOBox.prototype._boxProcessors['ftyp'] =
ISOBox.prototype._boxProcessors['styp'] = function() {
  this._procField('major_brand', 'string', 4);
  this._procField('minor_version', 'uint', 32);
  var nbCompatibleBrands = -1;
  if (this._parsing) {
    nbCompatibleBrands = (this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset)) / 4;
  }
  this._procFieldArray('compatible_brands', nbCompatibleBrands, 'string', 4);
};

// ISO/IEC 14496-12:2012 - 8.4.3 Handler Reference Box
ISOBox.prototype._boxProcessors['hdlr'] = function() {
  this._procFullBox();
  this._procField('pre_defined',      'uint',   32);
  this._procField('handler_type',     'string', 4);
  this._procFieldArray('reserved', 3, 'uint', 32);
  this._procField('name',             'string', -1);
};

// ISO/IEC 14496-12:2012 - 8.1.1 Media Data Box
ISOBox.prototype._boxProcessors['mdat'] = function() {
  this._procField('data', 'data', -1);
};

// ISO/IEC 14496-12:2012 - 8.4.2 Media Header Box
ISOBox.prototype._boxProcessors['mdhd'] = function() {
  this._procFullBox();
  this._procField('creation_time',      'uint', (this.version == 1) ? 64 : 32);
  this._procField('modification_time',  'uint', (this.version == 1) ? 64 : 32);
  this._procField('timescale',          'uint', 32);
  this._procField('duration',           'uint', (this.version == 1) ? 64 : 32);
  if (!this._parsing && typeof this.language === 'string') {
    // In case of writing and language has been set as a string, then convert it into char codes array
    this.language = ((this.language.charCodeAt(0) - 0x60) << 10) |
                    ((this.language.charCodeAt(1) - 0x60) << 5) |
                    ((this.language.charCodeAt(2) - 0x60));
  }
  this._procField('language',           'uint', 16);
  if (this._parsing) {
    this.language = String.fromCharCode(((this.language >> 10) & 0x1F) + 0x60,
                                        ((this.language >> 5) & 0x1F) + 0x60,
                                        (this.language & 0x1F) + 0x60);
  }
  this._procField('pre_defined',        'uint', 16);
};

// ISO/IEC 14496-12:2012 - 8.8.2 Movie Extends Header Box
ISOBox.prototype._boxProcessors['mehd'] = function() {
  this._procFullBox();
  this._procField('fragment_duration', 'uint', (this.version == 1) ? 64 : 32);
};

// ISO/IEC 14496-12:2012 - 8.8.5 Movie Fragment Header Box
ISOBox.prototype._boxProcessors['mfhd'] = function() {
  this._procFullBox();
  this._procField('sequence_number', 'uint', 32);
};

// ISO/IEC 14496-12:2012 - 8.8.11 Movie Fragment Random Access Box
ISOBox.prototype._boxProcessors['mfro'] = function() {
  this._procFullBox();
  this._procField('mfra_size', 'uint', 32); // Called mfra_size to distinguish from the normal "size" attribute of a box
};


// ISO/IEC 14496-12:2012 - 8.5.2.2 mp4a box (use AudioSampleEntry definition and naming)
ISOBox.prototype._boxProcessors['mp4a'] = ISOBox.prototype._boxProcessors['enca'] = function() {
  // SampleEntry fields
  this._procFieldArray('reserved1', 6,    'uint', 8);
  this._procField('data_reference_index', 'uint', 16);
  // AudioSampleEntry fields
  this._procFieldArray('reserved2', 2,    'uint', 32);
  this._procField('channelcount',         'uint', 16);
  this._procField('samplesize',           'uint', 16);
  this._procField('pre_defined',          'uint', 16);
  this._procField('reserved3',            'uint', 16);
  this._procField('samplerate',           'template', 32);
  // ESDescriptor fields
  this._procField('esds',                 'data', -1);
};

// ISO/IEC 14496-12:2012 - 8.2.2 Movie Header Box
ISOBox.prototype._boxProcessors['mvhd'] = function() {
  this._procFullBox();
  this._procField('creation_time',      'uint',     (this.version == 1) ? 64 : 32);
  this._procField('modification_time',  'uint',     (this.version == 1) ? 64 : 32);
  this._procField('timescale',          'uint',     32);
  this._procField('duration',           'uint',     (this.version == 1) ? 64 : 32);
  this._procField('rate',               'template', 32);
  this._procField('volume',             'template', 16);
  this._procField('reserved1',          'uint',  16);
  this._procFieldArray('reserved2', 2,  'uint',     32);
  this._procFieldArray('matrix', 9,     'template', 32);
  this._procFieldArray('pre_defined', 6,'uint',   32);
  this._procField('next_track_ID',      'uint',     32);
};

// ISO/IEC 14496-30:2014 - WebVTT Cue Payload Box.
ISOBox.prototype._boxProcessors['payl'] = function() {
  this._procField('cue_text', 'utf8');
};

//ISO/IEC 23001-7:2011 - 8.1 Protection System Specific Header Box
ISOBox.prototype._boxProcessors['pssh'] = function() {
  this._procFullBox();
  
  this._procFieldArray('SystemID', 16, 'uint', 8);
  this._procField('DataSize', 'uint', 32);
  this._procFieldArray('Data', this.DataSize, 'uint', 8);
};
// ISO/IEC 14496-12:2012 - 8.12.5 Scheme Type Box
ISOBox.prototype._boxProcessors['schm'] = function() {
    this._procFullBox();
    
    this._procField('scheme_type', 'uint', 32);
    this._procField('scheme_version', 'uint', 32);

    if (this.flags & 0x000001) {
        this._procField('scheme_uri', 'string', -1);
    }
};
// ISO/IEC 14496-12:2012 - 8.6.4.1 sdtp box 
ISOBox.prototype._boxProcessors['sdtp'] = function() {
  this._procFullBox();

  var sample_count = -1;
  if (this._parsing) {
    sample_count = (this._raw.byteLength - (this._cursor.offset - this._raw.byteOffset));
  }

  this._procFieldArray('sample_dependency_table', sample_count, 'uint', 8);
};

// ISO/IEC 14496-12:2012 - 8.16.3 Segment Index Box
ISOBox.prototype._boxProcessors['sidx'] = function() {
  this._procFullBox();
  this._procField('reference_ID', 'uint', 32);
  this._procField('timescale', 'uint', 32);
  this._procField('earliest_presentation_time', 'uint', (this.version == 1) ? 64 : 32);
  this._procField('first_offset', 'uint', (this.version == 1) ? 64 : 32);
  this._procField('reserved', 'uint', 16);
  this._procField('reference_count', 'uint', 16);
  this._procEntries('references', this.reference_count, function(entry) {
    if (!this._parsing) {
      entry.reference  = (entry.reference_type  & 0x00000001) << 31;
      entry.reference |= (entry.referenced_size & 0x7FFFFFFF);
      entry.sap  = (entry.starts_with_SAP & 0x00000001) << 31;
      entry.sap |= (entry.SAP_type        & 0x00000003) << 28;
      entry.sap |= (entry.SAP_delta_time  & 0x0FFFFFFF);
    }
    this._procEntryField(entry, 'reference', 'uint', 32);
    this._procEntryField(entry, 'subsegment_duration', 'uint', 32);
    this._procEntryField(entry, 'sap', 'uint', 32);
    if (this._parsing) {
      entry.reference_type = (entry.reference >> 31) & 0x00000001;
      entry.referenced_size = entry.reference & 0x7FFFFFFF;
      entry.starts_with_SAP  = (entry.sap >> 31) & 0x00000001;
      entry.SAP_type = (entry.sap >> 28) & 0x00000007;
      entry.SAP_delta_time = (entry.sap  & 0x0FFFFFFF);
    }
  });
};

// ISO/IEC 14496-12:2012 - 8.4.5.3 Sound Media Header Box
ISOBox.prototype._boxProcessors['smhd'] = function() {
  this._procFullBox();
  this._procField('balance',  'uint', 16);
  this._procField('reserved', 'uint', 16);
};

// ISO/IEC 14496-12:2012 - 8.16.4 Subsegment Index Box
ISOBox.prototype._boxProcessors['ssix'] = function() {
  this._procFullBox();
  this._procField('subsegment_count', 'uint', 32);
  this._procEntries('subsegments', this.subsegment_count, function(subsegment) {
    this._procEntryField(subsegment, 'ranges_count', 'uint', 32);
    this._procSubEntries(subsegment, 'ranges', subsegment.ranges_count, function(range) {
      this._procEntryField(range, 'level', 'uint', 8);
      this._procEntryField(range, 'range_size', 'uint', 24);
    });
  });
};

// ISO/IEC 14496-12:2012 - 8.5.2 Sample Description Box
ISOBox.prototype._boxProcessors['stsd'] = function() {
  this._procFullBox();
  this._procField('entry_count', 'uint', 32);
  this._procSubBoxes('entries', this.entry_count);
};

// ISO/IEC 14496-12:2015 - 8.7.7 Sub-Sample Information Box
ISOBox.prototype._boxProcessors['subs'] = function () {
  this._procFullBox();
  this._procField('entry_count', 'uint', 32);
  this._procEntries('entries', this.entry_count, function(entry) {
    this._procEntryField(entry, 'sample_delta', 'uint', 32);
    this._procEntryField(entry, 'subsample_count', 'uint', 16);
    this._procSubEntries(entry, 'subsamples', entry.subsample_count, function(subsample) {
      this._procEntryField(subsample, 'subsample_size', 'uint', (this.version === 1) ? 32 : 16);
      this._procEntryField(subsample, 'subsample_priority', 'uint', 8);
      this._procEntryField(subsample, 'discardable', 'uint', 8);
      this._procEntryField(subsample, 'codec_specific_parameters', 'uint', 32);
    });
  });
};

//ISO/IEC 23001-7:2011 - 8.2 Track Encryption Box
ISOBox.prototype._boxProcessors['tenc'] = function() {
    this._procFullBox();

    this._procField('default_IsEncrypted', 'uint', 24);
    this._procField('default_IV_size', 'uint', 8);
    this._procFieldArray('default_KID', 16,    'uint', 8);
 };

// ISO/IEC 14496-12:2012 - 8.8.12 Track Fragmnent Decode Time
ISOBox.prototype._boxProcessors['tfdt'] = function() {
  this._procFullBox();
  this._procField('baseMediaDecodeTime', 'uint', (this.version == 1) ? 64 : 32);
};

// ISO/IEC 14496-12:2012 - 8.8.7 Track Fragment Header Box
ISOBox.prototype._boxProcessors['tfhd'] = function() {
  this._procFullBox();
  this._procField('track_ID', 'uint', 32);
  if (this.flags & 0x01) this._procField('base_data_offset',          'uint', 64);
  if (this.flags & 0x02) this._procField('sample_description_offset', 'uint', 32);
  if (this.flags & 0x08) this._procField('default_sample_duration',   'uint', 32);
  if (this.flags & 0x10) this._procField('default_sample_size',       'uint', 32);
  if (this.flags & 0x20) this._procField('default_sample_flags',      'uint', 32);
};

// ISO/IEC 14496-12:2012 - 8.8.10 Track Fragment Random Access Box
ISOBox.prototype._boxProcessors['tfra'] = function() {
  this._procFullBox();
  this._procField('track_ID', 'uint', 32);
  if (!this._parsing) {
    this.reserved = 0;
    this.reserved |= (this.length_size_of_traf_num  & 0x00000030) << 4;
    this.reserved |= (this.length_size_of_trun_num  & 0x0000000C) << 2;
    this.reserved |= (this.length_size_of_sample_num  & 0x00000003);
  }
  this._procField('reserved', 'uint', 32);
  if (this._parsing) {
    this.length_size_of_traf_num = (this.reserved & 0x00000030) >> 4;
    this.length_size_of_trun_num = (this.reserved & 0x0000000C) >> 2;
    this.length_size_of_sample_num = (this.reserved & 0x00000003);
  }
  this._procField('number_of_entry', 'uint', 32);
  this._procEntries('entries', this.number_of_entry, function(entry) {
    this._procEntryField(entry, 'time', 'uint', (this.version === 1) ? 64 : 32);
    this._procEntryField(entry, 'moof_offset', 'uint', (this.version === 1) ? 64 : 32);
    this._procEntryField(entry, 'traf_number', 'uint', (this.length_size_of_traf_num + 1) * 8);
    this._procEntryField(entry, 'trun_number', 'uint', (this.length_size_of_trun_num + 1) * 8);
    this._procEntryField(entry, 'sample_number', 'uint', (this.length_size_of_sample_num + 1) * 8);
  });
};

// ISO/IEC 14496-12:2012 - 8.3.2 Track Header Box
ISOBox.prototype._boxProcessors['tkhd'] = function() {
  this._procFullBox();
  this._procField('creation_time',      'uint',     (this.version == 1) ? 64 : 32);
  this._procField('modification_time',  'uint',     (this.version == 1) ? 64 : 32);
  this._procField('track_ID',           'uint',     32);
  this._procField('reserved1',          'uint',     32);
  this._procField('duration',           'uint',     (this.version == 1) ? 64 : 32);
  this._procFieldArray('reserved2', 2,  'uint',     32);
  this._procField('layer',              'uint',     16);
  this._procField('alternate_group',    'uint',     16);
  this._procField('volume',             'template', 16);
  this._procField('reserved3',          'uint',     16);
  this._procFieldArray('matrix', 9,     'template', 32);
  this._procField('width',              'template', 32);
  this._procField('height',             'template', 32);
};

// ISO/IEC 14496-12:2012 - 8.8.3 Track Extends Box
ISOBox.prototype._boxProcessors['trex'] = function() {
  this._procFullBox();
  this._procField('track_ID',                         'uint', 32);
  this._procField('default_sample_description_index', 'uint', 32);
  this._procField('default_sample_duration',          'uint', 32);
  this._procField('default_sample_size',              'uint', 32);
  this._procField('default_sample_flags',             'uint', 32);
};

// ISO/IEC 14496-12:2012 - 8.8.8 Track Run Box
// Note: the 'trun' box has a direct relation to the 'tfhd' box for defaults.
// These defaults are not set explicitly here, but are left to resolve for the user.
ISOBox.prototype._boxProcessors['trun'] = function() {
  this._procFullBox();
  this._procField('sample_count', 'uint', 32);
  if (this.flags & 0x1) this._procField('data_offset', 'int', 32);
  if (this.flags & 0x4) this._procField('first_sample_flags', 'uint', 32);
  this._procEntries('samples', this.sample_count, function(sample) {
    if (this.flags & 0x100) this._procEntryField(sample, 'sample_duration', 'uint', 32);
    if (this.flags & 0x200) this._procEntryField(sample, 'sample_size', 'uint', 32);
    if (this.flags & 0x400) this._procEntryField(sample, 'sample_flags', 'uint', 32);
    if (this.flags & 0x800) this._procEntryField(sample, 'sample_composition_time_offset', (this.version === 1) ? 'int' : 'uint',  32);
  });
};

// ISO/IEC 14496-12:2012 - 8.7.2 Data Reference Box
ISOBox.prototype._boxProcessors['url '] = ISOBox.prototype._boxProcessors['urn '] = function() {
  this._procFullBox();
  if (this.type === 'urn ') {
    this._procField('name', 'string', -1);
  }
  this._procField('location', 'string', -1);
};

// ISO/IEC 14496-30:2014 - WebVTT Source Label Box
ISOBox.prototype._boxProcessors['vlab'] = function() {
  this._procField('source_label', 'utf8');
};

// ISO/IEC 14496-12:2012 - 8.4.5.2 Video Media Header Box
ISOBox.prototype._boxProcessors['vmhd'] = function() {
  this._procFullBox();
  this._procField('graphicsmode', 'uint', 16);
  this._procFieldArray('opcolor', 3, 'uint', 16);
};

// ISO/IEC 14496-30:2014 - WebVTT Configuration Box
ISOBox.prototype._boxProcessors['vttC'] = function() {
  this._procField('config', 'utf8');
};

// ISO/IEC 14496-30:2014 - WebVTT Empty Sample Box
ISOBox.prototype._boxProcessors['vtte'] = function() {
  // Nothing should happen here.
};

},{}],"../node_modules/dashjs/build/es5/src/streaming/vo/IsoBoxSearchInfo.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var IsoBoxSearchInfo=function IsoBoxSearchInfo(lastCompletedOffset,found,size){_classCallCheck(this,IsoBoxSearchInfo);this.lastCompletedOffset=lastCompletedOffset;this.found=found;this.size=size;};exports.default=IsoBoxSearchInfo;


},{}],"../node_modules/dashjs/build/es5/src/streaming/utils/BoxParser.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Debug=require('../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _IsoFile=require('./IsoFile');var _IsoFile2=_interopRequireDefault(_IsoFile);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _codemIsoboxer=require('codem-isoboxer');var _codemIsoboxer2=_interopRequireDefault(_codemIsoboxer);var _IsoBoxSearchInfo=require('../vo/IsoBoxSearchInfo');var _IsoBoxSearchInfo2=_interopRequireDefault(_IsoBoxSearchInfo);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function BoxParser()/*config*/{var logger=void 0,instance=void 0;var context=this.context;function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);}/**
     * @param {ArrayBuffer} data
     * @returns {IsoFile|null}
     * @memberof BoxParser#
     */function parse(data){if(!data)return null;if(data.fileStart===undefined){data.fileStart=0;}var parsedFile=_codemIsoboxer2.default.parseBuffer(data);var dashIsoFile=(0,_IsoFile2.default)(context).create();dashIsoFile.setData(parsedFile);return dashIsoFile;}/**
     * From the list of type boxes to look for, returns the latest one that is fully completed (header + payload). This
     * method only looks into the list of top boxes and doesn't analyze nested boxes.
     * @param {string[]} types
     * @param {ArrayBuffer|uint8Array} buffer
     * @param {number} offset
     * @returns {IsoBoxSearchInfo}
     * @memberof BoxParser#
     */function findLastTopIsoBoxCompleted(types,buffer,offset){if(offset===undefined){offset=0;}// 8 = size (uint32) + type (4 characters)
if(!buffer||offset+8>=buffer.byteLength){return new _IsoBoxSearchInfo2.default(0,false);}var data=buffer instanceof ArrayBuffer?new Uint8Array(buffer):buffer;var boxInfo=void 0;var lastCompletedOffset=0;while(offset<data.byteLength){var boxSize=parseUint32(data,offset);var boxType=parseIsoBoxType(data,offset+4);if(boxSize===0){break;}if(offset+boxSize<=data.byteLength){if(types.indexOf(boxType)>=0){boxInfo=new _IsoBoxSearchInfo2.default(offset,true,boxSize);}else{lastCompletedOffset=offset+boxSize;}}offset+=boxSize;}if(!boxInfo){return new _IsoBoxSearchInfo2.default(lastCompletedOffset,false);}return boxInfo;}function getSamplesInfo(ab){if(!ab||ab.byteLength===0){return{sampleList:[],lastSequenceNumber:NaN,totalDuration:NaN,numSequences:NaN};}var isoFile=parse(ab);// zero or more moofs
var moofBoxes=isoFile.getBoxes('moof');// exactly one mfhd per moof
var mfhdBoxes=isoFile.getBoxes('mfhd');var sampleDuration=void 0,sampleCompositionTimeOffset=void 0,sampleCount=void 0,sampleSize=void 0,sampleDts=void 0,sampleList=void 0,sample=void 0,i=void 0,j=void 0,k=void 0,l=void 0,m=void 0,n=void 0,dataOffset=void 0,lastSequenceNumber=void 0,numSequences=void 0,totalDuration=void 0;numSequences=isoFile.getBoxes('moof').length;lastSequenceNumber=mfhdBoxes[mfhdBoxes.length-1].sequence_number;sampleCount=0;sampleList=[];var subsIndex=-1;var nextSubsSample=-1;for(l=0;l<moofBoxes.length;l++){var moofBox=moofBoxes[l];// zero or more trafs per moof
var trafBoxes=moofBox.getChildBoxes('traf');for(j=0;j<trafBoxes.length;j++){var trafBox=trafBoxes[j];// exactly one tfhd per traf
var tfhdBox=trafBox.getChildBox('tfhd');// zero or one tfdt per traf
var tfdtBox=trafBox.getChildBox('tfdt');sampleDts=tfdtBox.baseMediaDecodeTime;// zero or more truns per traf
var trunBoxes=trafBox.getChildBoxes('trun');// zero or more subs per traf
var subsBoxes=trafBox.getChildBoxes('subs');for(k=0;k<trunBoxes.length;k++){var trunBox=trunBoxes[k];sampleCount=trunBox.sample_count;dataOffset=(tfhdBox.base_data_offset||0)+(trunBox.data_offset||0);for(i=0;i<sampleCount;i++){sample=trunBox.samples[i];sampleDuration=sample.sample_duration!==undefined?sample.sample_duration:tfhdBox.default_sample_duration;sampleSize=sample.sample_size!==undefined?sample.sample_size:tfhdBox.default_sample_size;sampleCompositionTimeOffset=sample.sample_composition_time_offset!==undefined?sample.sample_composition_time_offset:0;var sampleData={'dts':sampleDts,'cts':sampleDts+sampleCompositionTimeOffset,'duration':sampleDuration,'offset':moofBox.offset+dataOffset,'size':sampleSize,'subSizes':[sampleSize]};if(subsBoxes){for(m=0;m<subsBoxes.length;m++){var subsBox=subsBoxes[m];if(subsIndex<subsBox.entry_count-1&&i>nextSubsSample){subsIndex++;nextSubsSample+=subsBox.entries[subsIndex].sample_delta;}if(i==nextSubsSample){sampleData.subSizes=[];var entry=subsBox.entries[subsIndex];for(n=0;n<entry.subsample_count;n++){sampleData.subSizes.push(entry.subsamples[n].subsample_size);}}}}sampleList.push(sampleData);dataOffset+=sampleSize;sampleDts+=sampleDuration;}}totalDuration=sampleDts-tfdtBox.baseMediaDecodeTime;}}return{sampleList:sampleList,lastSequenceNumber:lastSequenceNumber,totalDuration:totalDuration,numSequences:numSequences};}function getMediaTimescaleFromMoov(ab){var isoFile=parse(ab);var mdhdBox=isoFile?isoFile.getBox('mdhd'):undefined;return mdhdBox?mdhdBox.timescale:NaN;}function parseUint32(data,offset){return data[offset+3]>>>0|data[offset+2]<<8>>>0|data[offset+1]<<16>>>0|data[offset]<<24>>>0;}function parseIsoBoxType(data,offset){return String.fromCharCode(data[offset++])+String.fromCharCode(data[offset++])+String.fromCharCode(data[offset++])+String.fromCharCode(data[offset]);}function findInitRange(data){var initRange=null;var start=void 0,end=void 0;var isoFile=parse(data);if(!isoFile){return initRange;}var ftyp=isoFile.getBox('ftyp');var moov=isoFile.getBox('moov');logger.debug('Searching for initialization.');if(moov&&moov.isComplete){start=ftyp?ftyp.offset:moov.offset;end=moov.offset+moov.size-1;initRange=start+'-'+end;logger.debug('Found the initialization.  Range: '+initRange);}return initRange;}/**
     * Real-time parsing (whenever data is loaded in the buffer payload) of the payload to capture the moof of a chunk
     * @param {array} types
     * @param {ArrayBuffer} buffer
     * @param {number} offset
     * @return {IsoBoxSearchInfo}
     */function parsePayload(types,buffer,offset){if(offset===undefined){offset=0;}if(!buffer||offset+8>=buffer.byteLength){return new _IsoBoxSearchInfo2.default(0,false);}var data=buffer instanceof ArrayBuffer?new Uint8Array(buffer):buffer;var boxInfo=void 0;var lastCompletedOffset=0;while(offset<data.byteLength){var boxSize=parseUint32(data,offset);var boxType=parseIsoBoxType(data,offset+4);if(boxSize===0){break;}if(offset+boxSize<=data.byteLength){if(types.indexOf(boxType)>=0){boxInfo=new _IsoBoxSearchInfo2.default(offset,true,boxSize,boxType);}else{lastCompletedOffset=offset+boxSize;}}offset+=boxSize;}if(!boxInfo){return new _IsoBoxSearchInfo2.default(lastCompletedOffset,false);}return boxInfo;}instance={parse:parse,findLastTopIsoBoxCompleted:findLastTopIsoBoxCompleted,getMediaTimescaleFromMoov:getMediaTimescaleFromMoov,getSamplesInfo:getSamplesInfo,findInitRange:findInitRange,parsePayload:parsePayload};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */BoxParser.__dashjs_factory_name='BoxParser';exports.default=_FactoryMaker2.default.getSingletonFactory(BoxParser);


},{"../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","./IsoFile":"../node_modules/dashjs/build/es5/src/streaming/utils/IsoFile.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","codem-isoboxer":"../node_modules/codem-isoboxer/dist/iso_boxer.js","../vo/IsoBoxSearchInfo":"../node_modules/dashjs/build/es5/src/streaming/vo/IsoBoxSearchInfo.js"}],"../node_modules/dashjs/build/es5/src/streaming/utils/SupervisorTools.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */exports.checkParameterType=checkParameterType;exports.checkInteger=checkInteger;exports.checkRange=checkRange;exports.checkIsVideoOrAudioType=checkIsVideoOrAudioType;var _Constants=require('../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function checkParameterType(parameter,type){if((typeof parameter==='undefined'?'undefined':_typeof(parameter))!==type){throw _Constants2.default.BAD_ARGUMENT_ERROR;}}function checkInteger(parameter){var isInt=parameter!==null&&!isNaN(parameter)&&parameter%1===0;if(!isInt){throw _Constants2.default.BAD_ARGUMENT_ERROR+' : argument is not an integer';}}function checkRange(parameter,min,max){if(parameter<min||parameter>max){throw _Constants2.default.BAD_ARGUMENT_ERROR+' : argument out of range';}}function checkIsVideoOrAudioType(type){if(typeof type!=='string'||type!==_Constants2.default.AUDIO&&type!==_Constants2.default.VIDEO){throw _Constants2.default.BAD_ARGUMENT_ERROR;}}


},{"../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js"}],"../node_modules/dashjs/build/es5/src/streaming/utils/CustomTimeRanges.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _SupervisorTools=require('../utils/SupervisorTools');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
* The copyright in this software is being made available under the BSD License,
* included below. This software may be subject to other third party and contributor
* rights, including patent rights, and no such rights are granted under this license.
*
* Copyright (c) 2013, Dash Industry Forum.
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without modification,
* are permitted provided that the following conditions are met:
*  * Redistributions of source code must retain the above copyright notice, this
*  list of conditions and the following disclaimer.
*  * Redistributions in binary form must reproduce the above copyright notice,
*  this list of conditions and the following disclaimer in the documentation and/or
*  other materials provided with the distribution.
*  * Neither the name of Dash Industry Forum nor the names of its
*  contributors may be used to endorse or promote products derived from this software
*  without specific prior written permission.
*
*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
*  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
*  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
*  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
*  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
*  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
*  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
*  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
*  POSSIBILITY OF SUCH DAMAGE.
*/function CustomTimeRanges()/*config*/{var customTimeRangeArray=[];var length=0;function add(start,end){var i=0;for(i=0;i<this.customTimeRangeArray.length&&start>this.customTimeRangeArray[i].start;i++){}this.customTimeRangeArray.splice(i,0,{start:start,end:end});for(i=0;i<this.customTimeRangeArray.length-1;i++){if(this.mergeRanges(i,i+1)){i--;}}this.length=this.customTimeRangeArray.length;}function clear(){this.customTimeRangeArray=[];this.length=0;}function remove(start,end){for(var i=0;i<this.customTimeRangeArray.length;i++){if(start<=this.customTimeRangeArray[i].start&&end>=this.customTimeRangeArray[i].end){//      |--------------Range i-------|
//|---------------Range to remove ---------------|
//    or
//|--------------Range i-------|
//|--------------Range to remove ---------------|
//    or
//                 |--------------Range i-------|
//|--------------Range to remove ---------------|
this.customTimeRangeArray.splice(i,1);i--;}else if(start>this.customTimeRangeArray[i].start&&end<this.customTimeRangeArray[i].end){//|-----------------Range i----------------|
//        |-------Range to remove -----|
this.customTimeRangeArray.splice(i+1,0,{start:end,end:this.customTimeRangeArray[i].end});this.customTimeRangeArray[i].end=start;break;}else if(start>this.customTimeRangeArray[i].start&&start<this.customTimeRangeArray[i].end){//|-----------Range i----------|
//                    |---------Range to remove --------|
//    or
//|-----------------Range i----------------|
//            |-------Range to remove -----|
this.customTimeRangeArray[i].end=start;}else if(end>this.customTimeRangeArray[i].start&&end<this.customTimeRangeArray[i].end){//                     |-----------Range i----------|
//|---------Range to remove --------|
//            or
//|-----------------Range i----------------|
//|-------Range to remove -----|
this.customTimeRangeArray[i].start=end;}}this.length=this.customTimeRangeArray.length;}function mergeRanges(rangeIndex1,rangeIndex2){var range1=this.customTimeRangeArray[rangeIndex1];var range2=this.customTimeRangeArray[rangeIndex2];if(range1.start<=range2.start&&range2.start<=range1.end&&range1.end<=range2.end){//|-----------Range1----------|
//                    |-----------Range2----------|
range1.end=range2.end;this.customTimeRangeArray.splice(rangeIndex2,1);return true;}else if(range2.start<=range1.start&&range1.start<=range2.end&&range2.end<=range1.end){//                |-----------Range1----------|
//|-----------Range2----------|
range1.start=range2.start;this.customTimeRangeArray.splice(rangeIndex2,1);return true;}else if(range2.start<=range1.start&&range1.start<=range2.end&&range1.end<=range2.end){//      |--------Range1-------|
//|---------------Range2--------------|
this.customTimeRangeArray.splice(rangeIndex1,1);return true;}else if(range1.start<=range2.start&&range2.start<=range1.end&&range2.end<=range1.end){//|-----------------Range1--------------|
//        |-----------Range2----------|
this.customTimeRangeArray.splice(rangeIndex2,1);return true;}return false;}function start(index){(0,_SupervisorTools.checkInteger)(index);if(index>=this.customTimeRangeArray.length||index<0){return NaN;}return this.customTimeRangeArray[index].start;}function end(index){(0,_SupervisorTools.checkInteger)(index);if(index>=this.customTimeRangeArray.length||index<0){return NaN;}return this.customTimeRangeArray[index].end;}return{customTimeRangeArray:customTimeRangeArray,length:length,add:add,clear:clear,remove:remove,mergeRanges:mergeRanges,start:start,end:end};}CustomTimeRanges.__dashjs_factory_name='CustomTimeRanges';exports.default=_FactoryMaker2.default.getClassFactory(CustomTimeRanges);


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../utils/SupervisorTools":"../node_modules/dashjs/build/es5/src/streaming/utils/SupervisorTools.js"}],"../node_modules/imsc/src/main/js/names.js":[function(require,module,exports) {
/* 
 * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/**
 * @module imscNames
 */

;
(function (imscNames) { // wrapper for non-node envs

    imscNames.ns_tt = "http://www.w3.org/ns/ttml";
    imscNames.ns_tts = "http://www.w3.org/ns/ttml#styling";
    imscNames.ns_ttp = "http://www.w3.org/ns/ttml#parameter";
    imscNames.ns_xml = "http://www.w3.org/XML/1998/namespace";
    imscNames.ns_itts = "http://www.w3.org/ns/ttml/profile/imsc1#styling";
    imscNames.ns_ittp = "http://www.w3.org/ns/ttml/profile/imsc1#parameter";
    imscNames.ns_smpte = "http://www.smpte-ra.org/schemas/2052-1/2010/smpte-tt";
    imscNames.ns_ebutts = "urn:ebu:tt:style";
    
})(typeof exports === 'undefined' ? this.imscNames = {} : exports);





},{}],"../node_modules/imsc/src/main/js/utils.js":[function(require,module,exports) {
/* 
 * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/**
 * @module imscUtils
 */

;
(function (imscUtils) { // wrapper for non-node envs

    /* Documents the error handler interface */

    /**
     * @classdesc Generic interface for handling events. The interface exposes four
     * methods:
     * * <pre>info</pre>: unusual event that does not result in an inconsistent state
     * * <pre>warn</pre>: unexpected event that should not result in an inconsistent state
     * * <pre>error</pre>: unexpected event that may result in an inconsistent state
     * * <pre>fatal</pre>: unexpected event that results in an inconsistent state
     *   and termination of processing
     * Each method takes a single <pre>string</pre> describing the event as argument,
     * and returns a single <pre>boolean</pre>, which terminates processing if <pre>true</pre>.
     *
     * @name ErrorHandler
     * @class
     */


    /*
     * Parses a TTML color expression
     * 
     */

    var HEX_COLOR_RE = /#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})?/;
    var DEC_COLOR_RE = /rgb\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)/;
    var DEC_COLORA_RE = /rgba\(\s*(\d+),\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)/;
    var NAMED_COLOR = {
        transparent: [0, 0, 0, 0],
        black: [0, 0, 0, 255],
        silver: [192, 192, 192, 255],
        gray: [128, 128, 128, 255],
        white: [255, 255, 255, 255],
        maroon: [128, 0, 0, 255],
        red: [255, 0, 0, 255],
        purple: [128, 0, 128, 255],
        fuchsia: [255, 0, 255, 255],
        magenta: [255, 0, 255, 255],
        green: [0, 128, 0, 255],
        lime: [0, 255, 0, 255],
        olive: [128, 128, 0, 255],
        yellow: [255, 255, 0, 255],
        navy: [0, 0, 128, 255],
        blue: [0, 0, 255, 255],
        teal: [0, 128, 128, 255],
        aqua: [0, 255, 255, 255],
        cyan: [0, 255, 255, 255]
    };

    imscUtils.parseColor = function (str) {

        var m;
        
        var r = null;
        
        var nc = NAMED_COLOR[str.toLowerCase()];
        
        if (nc !== undefined) {

            r = nc;

        } else if ((m = HEX_COLOR_RE.exec(str)) !== null) {

            r = [parseInt(m[1], 16),
                parseInt(m[2], 16),
                parseInt(m[3], 16),
                (m[4] !== undefined ? parseInt(m[4], 16) : 255)];
            
        } else if ((m = DEC_COLOR_RE.exec(str)) !== null) {

            r = [parseInt(m[1]),
                parseInt(m[2]),
                parseInt(m[3]),
                255];
            
        } else if ((m = DEC_COLORA_RE.exec(str)) !== null) {

            r = [parseInt(m[1]),
                parseInt(m[2]),
                parseInt(m[3]),
                parseInt(m[4])];
            
        }

        return r;
    };

    var LENGTH_RE = /^((?:\+|\-)?\d*(?:\.\d+)?)(px|em|c|%|rh|rw)$/;

    imscUtils.parseLength = function (str) {

        var m;

        var r = null;

        if ((m = LENGTH_RE.exec(str)) !== null) {

            r = {value: parseFloat(m[1]), unit: m[2]};
        }

        return r;
    };

    imscUtils.parseTextShadow = function (str) {

        var shadows = str.split(",");

        var r = [];

        for (var i in shadows) {

            var shadow = shadows[i].split(" ");

            if (shadow.length === 1 && shadow[0] === "none") {

                return "none";

            } else if (shadow.length > 1 && shadow.length < 5) {

                var out_shadow = [null, null, null, null];

                /* x offset */

                var l = imscUtils.parseLength(shadow.shift());

                if (l === null)
                    return null;

                out_shadow[0] = l;

                /* y offset */

                l = imscUtils.parseLength(shadow.shift());

                if (l === null)
                    return null;

                out_shadow[1] = l;

                /* is there a third component */

                if (shadow.length === 0) {
                    r.push(out_shadow);
                    continue;
                }

                l = imscUtils.parseLength(shadow[0]);

                if (l !== null) {

                    out_shadow[2] = l;

                    shadow.shift();

                }

                if (shadow.length === 0) {
                    r.push(out_shadow);
                    continue;
                }

                var c = imscUtils.parseColor(shadow[0]);

                if (c === null)
                    return null;

                out_shadow[3] = c;

                r.push(out_shadow);
            }

        }

        return r;
    };


    imscUtils.parsePosition = function (str) {

        /* see https://www.w3.org/TR/ttml2/#style-value-position */

        var s = str.split(" ");

        var isKeyword = function (str) {

            return str === "center" ||
                    str === "left" ||
                    str === "top" ||
                    str === "bottom" ||
                    str === "right";

        };

        if (s.length > 4) {

            return null;

        }

        /* initial clean-up pass */

        for (var j in s) {

            if (!isKeyword(s[j])) {

                var l = imscUtils.parseLength(s[j]);

                if (l === null)
                    return null;

                s[j] = l;
            }

        }

        /* position default */

        var pos = {
            h: {edge: "left", offset: {value: 50, unit: "%"}},
            v: {edge: "top", offset: {value: 50, unit: "%"}}
        };

        /* update position */

        for (var i = 0; i < s.length; ) {

            /* extract the current component */

            var comp = s[i++];

            if (isKeyword(comp)) {

                /* we have a keyword */

                var offset = {value: 0, unit: "%"};

                /* peek at the next component */

                if (s.length !== 2 && i < s.length && (!isKeyword(s[i]))) {

                    /* followed by an offset */

                    offset = s[i++];

                }

                /* skip if center */

                if (comp === "right") {

                    pos.h.edge = comp;

                    pos.h.offset = offset;

                } else if (comp === "bottom") {

                    pos.v.edge = comp;


                    pos.v.offset = offset;


                } else if (comp === "left") {

                    pos.h.offset = offset;


                } else if (comp === "top") {

                    pos.v.offset = offset;


                }

            } else if (s.length === 1 || s.length === 2) {

                /* we have a bare value */

                if (i === 1) {

                    /* assign it to left edge if first bare value */

                    pos.h.offset = comp;

                } else {

                    /* assign it to top edge if second bare value */

                    pos.v.offset = comp;

                }

            } else {

                /* error condition */

                return null;

            }

        }

        return pos;
    };


    imscUtils.ComputedLength = function (rw, rh) {
        this.rw = rw;
        this.rh = rh;
    };

    imscUtils.ComputedLength.prototype.toUsedLength = function (width, height) {
        return width * this.rw + height * this.rh;
    };

    imscUtils.ComputedLength.prototype.isZero = function () {
        return this.rw === 0 && this.rh === 0;
    };

    /**
     * Computes a specified length to a root container relative length
     * 
     * @param {number} lengthVal Length value to be computed
     * @param {string} lengthUnit Units of the length value
     * @param {number} emScale length of 1em, or null if em is not allowed
     * @param {number} percentScale length to which , or null if perecentage is not allowed
     * @param {number} cellScale length of 1c, or null if c is not allowed
     * @param {number} pxScale length of 1px, or null if px is not allowed
     * @param {number} direction 0 if the length is computed in the horizontal direction, 1 if the length is computed in the vertical direction
     * @return {number} Computed length
     */
    imscUtils.toComputedLength = function(lengthVal, lengthUnit, emLength, percentLength, cellLength, pxLength) {

        if (lengthUnit === "%" && percentLength) {

            return new imscUtils.ComputedLength(
                    percentLength.rw * lengthVal / 100,
                    percentLength.rh * lengthVal / 100
                    );

        } else if (lengthUnit === "em" && emLength) {

            return new imscUtils.ComputedLength(
                    emLength.rw * lengthVal,
                    emLength.rh * lengthVal
                    );

        } else if (lengthUnit === "c" && cellLength) {

            return new imscUtils.ComputedLength(
                    lengthVal * cellLength.rw,
                    lengthVal * cellLength.rh
                    );

        } else if (lengthUnit === "px" && pxLength) {

            return new imscUtils.ComputedLength(
                    lengthVal * pxLength.rw,
                    lengthVal * pxLength.rh
                    );

        } else if (lengthUnit === "rh") {

            return new imscUtils.ComputedLength(
                    0,
                    lengthVal / 100
                    );

        } else if (lengthUnit === "rw") {

            return new imscUtils.ComputedLength(
                    lengthVal / 100,
                    0                    
                    );

        } else {

            return null;

        }

    };



})(typeof exports === 'undefined' ? this.imscUtils = {} : exports);

},{}],"../node_modules/imsc/src/main/js/styles.js":[function(require,module,exports) {
/* 
 * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/**
 * @module imscStyles
 */

;
(function (imscStyles, imscNames, imscUtils) { // wrapper for non-node envs

    function StylingAttributeDefinition(ns, name, initialValue, appliesTo, isInherit, isAnimatable, parseFunc, computeFunc) {
        this.name = name;
        this.ns = ns;
        this.qname = ns + " " + name;
        this.inherit = isInherit;
        this.animatable = isAnimatable;
        this.initial = initialValue;
        this.applies = appliesTo;
        this.parse = parseFunc;
        this.compute = computeFunc;
    }

    imscStyles.all = [

        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "backgroundColor",
            "transparent",
            ['body', 'div', 'p', 'region', 'span'],
            false,
            true,
            imscUtils.parseColor,
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "color",
            "white",
            ['span'],
            true,
            true,
            imscUtils.parseColor,
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "direction",
            "ltr",
            ['p', 'span'],
            true,
            true,
            function (str) {
                return str;
            },
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "display",
            "auto",
            ['body', 'div', 'p', 'region', 'span'],
            false,
            true,
            function (str) {
                return str;
            },
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "displayAlign",
            "before",
            ['region'],
            false,
            true,
            function (str) {
                return str;
            },
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "extent",
            "auto",
            ['tt', 'region'],
            false,
            true,
            function (str) {

                if (str === "auto") {

                    return str;

                } else {

                    var s = str.split(" ");
                    if (s.length !== 2)
                        return null;
                    var w = imscUtils.parseLength(s[0]);
                    var h = imscUtils.parseLength(s[1]);
                    if (!h || !w)
                        return null;
                    return {'h': h, 'w': w};
                }

            },
            function (doc, parent, element, attr, context) {

                var h;
                var w;

                if (attr === "auto") {

                    h = new imscUtils.ComputedLength(0, 1);

                } else {

                    h = imscUtils.toComputedLength(
                        attr.h.value,
                        attr.h.unit,
                        null,
                        doc.dimensions.h,
                        null,
                        doc.pxLength.h
                        );


                    if (h === null) {

                        return null;

                    }
                }

                if (attr === "auto") {

                    w = new imscUtils.ComputedLength(1, 0);

                } else {

                    w = imscUtils.toComputedLength(
                        attr.w.value,
                        attr.w.unit,
                        null,
                        doc.dimensions.w,
                        null,
                        doc.pxLength.w
                        );

                    if (w === null) {

                        return null;

                    }

                }

                return {'h': h, 'w': w};
            }
        ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "fontFamily",
            "default",
            ['span'],
            true,
            true,
            function (str) {
                var ffs = str.split(",");
                var rslt = [];

                for (var i in ffs) {

                    if (ffs[i].charAt(0) !== "'" && ffs[i].charAt(0) !== '"') {

                        if (ffs[i] === "default") {

                            /* per IMSC1 */

                            rslt.push("monospaceSerif");

                        } else {

                            rslt.push(ffs[i]);

                        }

                    } else {

                        rslt.push(ffs[i]);

                    }

                }

                return rslt;
            },
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "shear",
            "0%",
            ['p'],
            true,
            true,
            imscUtils.parseLength,
            function (doc, parent, element, attr) {

                var fs;

                if (attr.unit === "%") {

                    fs = Math.abs(attr.value) > 100 ? Math.sign(attr.value) * 100 : attr.value;

                } else {

                    return null;

                }

                return fs;
            }
        ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "fontSize",
            "1c",
            ['span'],
            true,
            true,
            imscUtils.parseLength,
            function (doc, parent, element, attr, context) {

                var fs;

                fs = imscUtils.toComputedLength(
                    attr.value,
                    attr.unit,
                    parent !== null ? parent.styleAttrs[imscStyles.byName.fontSize.qname] : doc.cellLength.h,
                    parent !== null ? parent.styleAttrs[imscStyles.byName.fontSize.qname] : doc.cellLength.h,
                    doc.cellLength.h,
                    doc.pxLength.h
                    );

                return fs;
            }
        ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "fontStyle",
            "normal",
            ['span'],
            true,
            true,
            function (str) {
                /* TODO: handle font style */

                return str;
            },
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "fontWeight",
            "normal",
            ['span'],
            true,
            true,
            function (str) {
                /* TODO: handle font weight */

                return str;
            },
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "lineHeight",
            "normal",
            ['p'],
            true,
            true,
            function (str) {
                if (str === "normal") {
                    return str;
                } else {
                    return imscUtils.parseLength(str);
                }
            },
            function (doc, parent, element, attr, context) {

                var lh;

                if (attr === "normal") {

                    /* inherit normal per https://github.com/w3c/ttml1/issues/220 */

                    lh = attr;

                } else {

                    lh = imscUtils.toComputedLength(
                        attr.value,
                        attr.unit,
                        element.styleAttrs[imscStyles.byName.fontSize.qname],
                        element.styleAttrs[imscStyles.byName.fontSize.qname],
                        doc.cellLength.h,
                        doc.pxLength.h
                        );

                    if (lh === null) {

                        return null;

                    }

                }

                /* TODO: create a Length constructor */

                return lh;
            }
        ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "opacity",
            1.0,
            ['region'],
            false,
            true,
            parseFloat,
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "origin",
            "auto",
            ['region'],
            false,
            true,
            function (str) {

                if (str === "auto") {

                    return str;

                } else {

                    var s = str.split(" ");
                    if (s.length !== 2)
                        return null;
                    var w = imscUtils.parseLength(s[0]);
                    var h = imscUtils.parseLength(s[1]);
                    if (!h || !w)
                        return null;
                    return {'h': h, 'w': w};
                }

            },
            function (doc, parent, element, attr, context) {

                var h;
                var w;

                if (attr === "auto") {

                    h = new imscUtils.ComputedLength(0,0);

                } else {

                    h = imscUtils.toComputedLength(
                        attr.h.value,
                        attr.h.unit,
                        null,
                        doc.dimensions.h,
                        null,
                        doc.pxLength.h
                        );

                    if (h === null) {

                        return null;

                    }

                }

                if (attr === "auto") {

                    w = new imscUtils.ComputedLength(0,0);

                } else {

                    w = imscUtils.toComputedLength(
                        attr.w.value,
                        attr.w.unit,
                        null,
                        doc.dimensions.w,
                        null,
                        doc.pxLength.w
                        );

                    if (w === null) {

                        return null;

                    }

                }

                return {'h': h, 'w': w};
            }
        ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "overflow",
            "hidden",
            ['region'],
            false,
            true,
            function (str) {
                return str;
            },
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "padding",
            "0px",
            ['region'],
            false,
            true,
            function (str) {

                var s = str.split(" ");
                if (s.length > 4)
                    return null;
                var r = [];
                for (var i in s) {

                    var l = imscUtils.parseLength(s[i]);
                    if (!l)
                        return null;
                    r.push(l);
                }

                return r;
            },
            function (doc, parent, element, attr, context) {

                var padding;

                /* TODO: make sure we are in region */

                /*
                 * expand padding shortcuts to 
                 * [before, end, after, start]
                 * 
                 */

                if (attr.length === 1) {

                    padding = [attr[0], attr[0], attr[0], attr[0]];

                } else if (attr.length === 2) {

                    padding = [attr[0], attr[1], attr[0], attr[1]];

                } else if (attr.length === 3) {

                    padding = [attr[0], attr[1], attr[2], attr[1]];

                } else if (attr.length === 4) {

                    padding = [attr[0], attr[1], attr[2], attr[3]];

                } else {

                    return null;

                }

                /* TODO: take into account tts:direction */

                /* 
                 * transform [before, end, after, start] according to writingMode to 
                 * [top,left,bottom,right]
                 * 
                 */

                var dir = element.styleAttrs[imscStyles.byName.writingMode.qname];

                if (dir === "lrtb" || dir === "lr") {

                    padding = [padding[0], padding[3], padding[2], padding[1]];

                } else if (dir === "rltb" || dir === "rl") {

                    padding = [padding[0], padding[1], padding[2], padding[3]];

                } else if (dir === "tblr") {

                    padding = [padding[3], padding[0], padding[1], padding[2]];

                } else if (dir === "tbrl" || dir === "tb") {

                    padding = [padding[3], padding[2], padding[1], padding[0]];

                } else {

                    return null;

                }

                var out = [];

                for (var i in padding) {

                    if (padding[i].value === 0) {

                        out[i] = new imscUtils.ComputedLength(0,0);

                    } else {

                        out[i] = imscUtils.toComputedLength(
                            padding[i].value,
                            padding[i].unit,
                            element.styleAttrs[imscStyles.byName.fontSize.qname],
                            i === "0" || i === "2" ? element.styleAttrs[imscStyles.byName.extent.qname].h : element.styleAttrs[imscStyles.byName.extent.qname].w,
                            i === "0" || i === "2" ? doc.cellLength.h : doc.cellLength.w,
                            i === "0" || i === "2" ? doc.pxLength.h: doc.pxLength.w
                            );

                        if (out[i] === null) return null;

                    }
                }


                return out;
            }
        ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "position",
            "top left",
            ['region'],
            false,
            true,
            function (str) {

                return imscUtils.parsePosition(str);

            },
            function (doc, parent, element, attr) {
                var h;
                var w;
                
                h = imscUtils.toComputedLength(
                    attr.v.offset.value,
                    attr.v.offset.unit,
                    null,
                    new imscUtils.ComputedLength(
                        - element.styleAttrs[imscStyles.byName.extent.qname].h.rw,
                        doc.dimensions.h.rh - element.styleAttrs[imscStyles.byName.extent.qname].h.rh 
                    ),
                    null,
                    doc.pxLength.h
                    );

                if (h === null) return null;


                if (attr.v.edge === "bottom") {

                    h = new imscUtils.ComputedLength(
                        - h.rw - element.styleAttrs[imscStyles.byName.extent.qname].h.rw,
                        doc.dimensions.h.rh - h.rh - element.styleAttrs[imscStyles.byName.extent.qname].h.rh
                    );
            
                }

                w = imscUtils.toComputedLength(
                    attr.h.offset.value,
                    attr.h.offset.unit,
                    null,
                    new imscUtils.ComputedLength(
                        doc.dimensions.w.rw - element.styleAttrs[imscStyles.byName.extent.qname].w.rw,
                        - element.styleAttrs[imscStyles.byName.extent.qname].w.rh
                    ),
                    null,
                    doc.pxLength.w
                    );

                if (h === null) return null;

                if (attr.h.edge === "right") {
                    
                    w = new imscUtils.ComputedLength(
                        doc.dimensions.w.rw - w.rw - element.styleAttrs[imscStyles.byName.extent.qname].w.rw,
                        - w.rh - element.styleAttrs[imscStyles.byName.extent.qname].w.rh
                    );

                }

                return {'h': h, 'w': w};
            }
        ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "ruby",
            "none",
            ['span'],
            false,
            true,
            function (str) {
                return str;
            },
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "rubyAlign",
            "center",
            ['span'],
            true,
            true,
            function (str) {
                
                if (! (str === "center" || str === "spaceAround")) {
                    return null;
                }
                
                return str;
            },
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "rubyPosition",
            "outside",
            ['span'],
            true,
            true,
            function (str) {
                return str;
            },
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "rubyReserve",
            "none",
            ['p'],
            true,
            true,
            function (str) {
                var s = str.split(" ");

                var r = [null, null];

                if (s.length === 0 || s.length > 2)
                    return null;

                if (s[0] === "none" ||
                    s[0] === "both" ||
                    s[0] === "after" ||
                    s[0] === "before" ||
                    s[0] === "outside") {

                    r[0] = s[0];

                } else {

                    return null;

                }

                if (s.length === 2 && s[0] !== "none") {

                    var l = imscUtils.parseLength(s[1]);

                    if (l) {

                        r[1] = l;

                    } else {

                        return null;

                    }

                }


                return r;
            },
            function (doc, parent, element, attr, context) {

                if (attr[0] === "none") {

                    return attr;

                }

                var fs = null;

                if (attr[1] === null) {

                    fs = new imscUtils.ComputedLength(
                            element.styleAttrs[imscStyles.byName.fontSize.qname].rw * 0.5,
                            element.styleAttrs[imscStyles.byName.fontSize.qname].rh * 0.5
                    );

                } else {

                    fs = imscUtils.toComputedLength(attr[1].value,
                        attr[1].unit,
                        element.styleAttrs[imscStyles.byName.fontSize.qname],
                        element.styleAttrs[imscStyles.byName.fontSize.qname],
                        doc.cellLength.h,
                        doc.pxLength.h
                        );
                
                }

                if (fs === null) return null;

                return [attr[0], fs];
            }
        ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "showBackground",
            "always",
            ['region'],
            false,
            true,
            function (str) {
                return str;
            },
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "textAlign",
            "start",
            ['p'],
            true,
            true,
            function (str) {
                return str;
            },
            function (doc, parent, element, attr, context) {
                /* Section 7.16.9 of XSL */

                if (attr === "left") {

                    return "start";

                } else if (attr === "right") {

                    return "end";

                } else {

                    return attr;

                }
            }
        ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "textCombine",
            "none",
            ['span'],
            true,
            true,
            function (str) {
                var s = str.split(" ");

                if (s.length === 1) {

                    if (s[0] === "none" || s[0] === "all") {

                        return [s[0]];

                    }

                }

                return null;
            },
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "textDecoration",
            "none",
            ['span'],
            true,
            true,
            function (str) {
                return str.split(" ");
            },
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "textEmphasis",
            "none",
            ['span'],
            true,
            true,
            function (str) {
                var e = str.split(" ");

                var rslt = {style: null, symbol: null, color: null, position: null};

                for (var i in e) {

                    if (e[i] === "none" || e[i] === "auto") {

                        rslt.style = e[i];

                    } else if (e[i] === "filled" ||
                        e[i] === "open") {

                        rslt.style = e[i];

                    } else if (e[i] === "circle" ||
                        e[i] === "dot" ||
                        e[i] === "sesame") {

                        rslt.symbol = e[i];

                    } else if (e[i] === "current") {

                        rslt.color = e[i];

                    } else if (e[i] === "outside" || e[i] === "before" || e[i] === "after") {

                        rslt.position = e[i];

                    } else {

                        rslt.color = imscUtils.parseColor(e[i]);

                        if (rslt.color === null)
                            return null;

                    }
                }

                if (rslt.style == null && rslt.symbol == null) {

                    rslt.style = "auto";

                } else {

                    rslt.symbol = rslt.symbol || "circle";
                    rslt.style = rslt.style || "filled";

                }

                rslt.position = rslt.position || "outside";
                rslt.color = rslt.color || "current";

                return rslt;
            },
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "textOutline",
            "none",
            ['span'],
            true,
            true,
            function (str) {

                /*
                 * returns {c: <color>?, thichness: <length>} | "none"
                 * 
                 */

                if (str === "none") {

                    return str;

                } else {

                    var r = {};
                    var s = str.split(" ");
                    if (s.length === 0 || s.length > 2)
                        return null;
                    var c = imscUtils.parseColor(s[0]);

                    r.color = c;

                    if (c !== null)
                        s.shift();

                    if (s.length !== 1)
                        return null;

                    var l = imscUtils.parseLength(s[0]);

                    if (!l)
                        return null;

                    r.thickness = l;

                    return r;
                }

            },
            function (doc, parent, element, attr, context) {

                /*
                 * returns {color: <color>, thickness: <norm length>}
                 * 
                 */

                if (attr === "none")
                    return attr;

                var rslt = {};

                if (attr.color === null) {

                    rslt.color = element.styleAttrs[imscStyles.byName.color.qname];

                } else {

                    rslt.color = attr.color;

                }

                rslt.thickness = imscUtils.toComputedLength(
                    attr.thickness.value,
                    attr.thickness.unit,
                    element.styleAttrs[imscStyles.byName.fontSize.qname],
                    element.styleAttrs[imscStyles.byName.fontSize.qname],
                    doc.cellLength.h,
                    doc.pxLength.h
                    );

                if (rslt.thickness === null)
                    return null;

                return rslt;
            }
        ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "textShadow",
            "none",
            ['span'],
            true,
            true,
            imscUtils.parseTextShadow,
            function (doc, parent, element, attr) {

                /*
                 * returns [{x_off: <length>, y_off: <length>, b_radius: <length>, color: <color>}*] or "none"
                 * 
                 */

                if (attr === "none")
                    return attr;

                var r = [];

                for (var i in attr) {

                    var shadow = {};

                    shadow.x_off = imscUtils.toComputedLength(
                        attr[i][0].value,
                        attr[i][0].unit,
                        null,
                        element.styleAttrs[imscStyles.byName.fontSize.qname],
                        null,
                        doc.pxLength.w
                        );

                    if (shadow.x_off === null)
                        return null;

                    shadow.y_off = imscUtils.toComputedLength(
                        attr[i][1].value,
                        attr[i][1].unit,
                        null,
                        element.styleAttrs[imscStyles.byName.fontSize.qname],
                        null,
                        doc.pxLength.h
                        );

                    if (shadow.y_off === null)
                        return null;

                    if (attr[i][2] === null) {

                        shadow.b_radius = 0;

                    } else {

                        shadow.b_radius = imscUtils.toComputedLength(
                            attr[i][2].value,
                            attr[i][2].unit,
                            null,
                            element.styleAttrs[imscStyles.byName.fontSize.qname],
                            null,
                            doc.pxLength.h
                            );

                        if (shadow.b_radius === null)
                            return null;

                    }

                    if (attr[i][3] === null) {

                        shadow.color = element.styleAttrs[imscStyles.byName.color.qname];

                    } else {

                        shadow.color = attr[i][3];

                    }

                    r.push(shadow);

                }

                return r;
            }
        ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "unicodeBidi",
            "normal",
            ['span', 'p'],
            false,
            true,
            function (str) {
                return str;
            },
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "visibility",
            "visible",
            ['body', 'div', 'p', 'region', 'span'],
            true,
            true,
            function (str) {
                return str;
            },
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "wrapOption",
            "wrap",
            ['span'],
            true,
            true,
            function (str) {
                return str;
            },
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "writingMode",
            "lrtb",
            ['region'],
            false,
            true,
            function (str) {
                return str;
            },
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_tts,
            "zIndex",
            "auto",
            ['region'],
            false,
            true,
            function (str) {

                var rslt;

                if (str === 'auto') {

                    rslt = str;

                } else {

                    rslt = parseInt(str);

                    if (isNaN(rslt)) {
                        rslt = null;
                    }

                }

                return rslt;
            },
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_ebutts,
            "linePadding",
            "0c",
            ['p'],
            true,
            false,
            imscUtils.parseLength,
            function (doc, parent, element, attr, context) {

                return imscUtils.toComputedLength(attr.value, attr.unit, null, null, doc.cellLength.w, null);

            }
        ),
        new StylingAttributeDefinition(
            imscNames.ns_ebutts,
            "multiRowAlign",
            "auto",
            ['p'],
            true,
            false,
            function (str) {
                return str;
            },
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_smpte,
            "backgroundImage",
            null,
            ['div'],
            false,
            false,
            function (str) {
                return str;
            },
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_itts,
            "forcedDisplay",
            "false",
            ['body', 'div', 'p', 'region', 'span'],
            true,
            true,
            function (str) {
                return str === 'true' ? true : false;
            },
            null
            ),
        new StylingAttributeDefinition(
            imscNames.ns_itts,
            "fillLineGap",
            "false",
            ['p'],
            true,
            true,
            function (str) {
                return str === 'true' ? true : false;
            },
            null
            )
    ];

    /* TODO: allow null parse function */

    imscStyles.byQName = {};
    for (var i in imscStyles.all) {

        imscStyles.byQName[imscStyles.all[i].qname] = imscStyles.all[i];
    }

    imscStyles.byName = {};
    for (var j in imscStyles.all) {

        imscStyles.byName[imscStyles.all[j].name] = imscStyles.all[j];
    }


})(typeof exports === 'undefined' ? this.imscStyles = {} : exports,
    typeof imscNames === 'undefined' ? require("./names") : imscNames,
    typeof imscUtils === 'undefined' ? require("./utils") : imscUtils);

},{"./names":"../node_modules/imsc/src/main/js/names.js","./utils":"../node_modules/imsc/src/main/js/utils.js"}],"../node_modules/imsc/src/main/js/isd.js":[function(require,module,exports) {
/* 
 * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/**
 * @module imscISD
 */


;
(function (imscISD, imscNames, imscStyles, imscUtils) { // wrapper for non-node envs

    /** 
     * Creates a canonical representation of an IMSC1 document returned by <pre>imscDoc.fromXML()</pre>
     * at a given absolute offset in seconds. This offset does not have to be one of the values returned
     * by <pre>getMediaTimeEvents()</pre>.
     * 
     * @param {Object} tt IMSC1 document
     * @param {number} offset Absolute offset (in seconds)
     * @param {?module:imscUtils.ErrorHandler} errorHandler Error callback
     * @returns {Object} Opaque in-memory representation of an ISD
     */

    imscISD.generateISD = function (tt, offset, errorHandler) {

        /* TODO check for tt and offset validity */

        /* create the ISD object from the IMSC1 doc */

        var isd = new ISD(tt);

        /* context */

        var context = {

            /*rubyfs: []*/ /* font size of the nearest textContainer or container */

        };

        /* process regions */

        for (var r in tt.head.layout.regions) {

            /* post-order traversal of the body tree per [construct intermediate document] */

            var c = isdProcessContentElement(tt, offset, tt.head.layout.regions[r], tt.body, null, '', tt.head.layout.regions[r], errorHandler, context);

            if (c !== null) {

                /* add the region to the ISD */

                isd.contents.push(c.element);
            }


        }

        return isd;
    };

    /* set of styles not applicable to ruby container spans */

    var _rcs_na_styles = [
        imscStyles.byName.color.qname,
        imscStyles.byName.textCombine.qname,
        imscStyles.byName.textDecoration.qname,
        imscStyles.byName.textEmphasis.qname,
        imscStyles.byName.textOutline.qname,
        imscStyles.byName.textShadow.qname
    ];

    function isdProcessContentElement(doc, offset, region, body, parent, inherited_region_id, elem, errorHandler, context) {

        /* prune if temporally inactive */

        if (offset < elem.begin || offset >= elem.end) {
            return null;
        }

        /* 
         * set the associated region as specified by the regionID attribute, or the 
         * inherited associated region otherwise
         */

        var associated_region_id = 'regionID' in elem && elem.regionID !== '' ? elem.regionID : inherited_region_id;

        /* prune the element if either:
         * - the element is not terminal and the associated region is neither the default
         *   region nor the parent region (this allows children to be associated with a 
         *   region later on)
         * - the element is terminal and the associated region is not the parent region
         */

        /* TODO: improve detection of terminal elements since <region> has no contents */

        if (parent !== null /* are we in the region element */ &&
            associated_region_id !== region.id &&
            (
                (!('contents' in elem)) ||
                ('contents' in elem && elem.contents.length === 0) ||
                associated_region_id !== ''
                )
            )
            return null;

        /* create an ISD element, including applying specified styles */

        var isd_element = new ISDContentElement(elem);

        /* apply set (animation) styling */

        for (var i in elem.sets) {

            if (offset < elem.sets[i].begin || offset >= elem.sets[i].end)
                continue;

            isd_element.styleAttrs[elem.sets[i].qname] = elem.sets[i].value;

        }

        /* 
         * keep track of specified styling attributes so that we
         * can compute them later
         */

        var spec_attr = {};

        for (var qname in isd_element.styleAttrs) {

            spec_attr[qname] = true;

            /* special rule for tts:writingMode (section 7.29.1 of XSL)
             * direction is set consistently with writingMode only
             * if writingMode sets inline-direction to LTR or RTL  
             */

            if (qname === imscStyles.byName.writingMode.qname &&
                !(imscStyles.byName.direction.qname in isd_element.styleAttrs)) {

                var wm = isd_element.styleAttrs[qname];

                if (wm === "lrtb" || wm === "lr") {

                    isd_element.styleAttrs[imscStyles.byName.direction.qname] = "ltr";

                } else if (wm === "rltb" || wm === "rl") {

                    isd_element.styleAttrs[imscStyles.byName.direction.qname] = "rtl";

                }

            }
        }

        /* inherited styling */

        if (parent !== null) {

            for (var j in imscStyles.all) {

                var sa = imscStyles.all[j];

                /* textDecoration has special inheritance rules */

                if (sa.qname === imscStyles.byName.textDecoration.qname) {

                    /* handle both textDecoration inheritance and specification */

                    var ps = parent.styleAttrs[sa.qname];
                    var es = isd_element.styleAttrs[sa.qname];
                    var outs = [];

                    if (es === undefined) {

                        outs = ps;

                    } else if (es.indexOf("none") === -1) {

                        if ((es.indexOf("noUnderline") === -1 &&
                            ps.indexOf("underline") !== -1) ||
                            es.indexOf("underline") !== -1) {

                            outs.push("underline");

                        }

                        if ((es.indexOf("noLineThrough") === -1 &&
                            ps.indexOf("lineThrough") !== -1) ||
                            es.indexOf("lineThrough") !== -1) {

                            outs.push("lineThrough");

                        }

                        if ((es.indexOf("noOverline") === -1 &&
                            ps.indexOf("overline") !== -1) ||
                            es.indexOf("overline") !== -1) {

                            outs.push("overline");

                        }

                    } else {

                        outs.push("none");

                    }

                    isd_element.styleAttrs[sa.qname] = outs;

                } else if (sa.qname === imscStyles.byName.fontSize.qname &&
                    !(sa.qname in isd_element.styleAttrs) &&
                    isd_element.kind === 'span' &&
                    isd_element.styleAttrs[imscStyles.byName.ruby.qname] === "textContainer") {
                    
                    /* special inheritance rule for ruby text container font size */
                    
                    var ruby_fs = parent.styleAttrs[imscStyles.byName.fontSize.qname];

                    isd_element.styleAttrs[sa.qname] = new imscUtils.ComputedLength(
                        0.5 * ruby_fs.rw,
                        0.5 * ruby_fs.rh);

                } else if (sa.qname === imscStyles.byName.fontSize.qname &&
                    !(sa.qname in isd_element.styleAttrs) &&
                    isd_element.kind === 'span' &&
                    isd_element.styleAttrs[imscStyles.byName.ruby.qname] === "text") {
                    
                    /* special inheritance rule for ruby text font size */
                    
                    var parent_fs = parent.styleAttrs[imscStyles.byName.fontSize.qname];
                    
                    if (parent.styleAttrs[imscStyles.byName.ruby.qname] === "textContainer") {
                        
                        isd_element.styleAttrs[sa.qname] = parent_fs;
                        
                    } else {
                        
                        isd_element.styleAttrs[sa.qname] = new imscUtils.ComputedLength(
                            0.5 * parent_fs.rw,
                            0.5 * parent_fs.rh);
                    }
                    
                } else if (sa.inherit &&
                    (sa.qname in parent.styleAttrs) &&
                    !(sa.qname in isd_element.styleAttrs)) {

                    isd_element.styleAttrs[sa.qname] = parent.styleAttrs[sa.qname];

                }

            }

        }

        /* initial value styling */

        for (var k in imscStyles.all) {

            var ivs = imscStyles.all[k];

            /* skip if value is already specified */

            if (ivs.qname in isd_element.styleAttrs) continue;

            /* skip tts:position if tts:origin is specified */

            if (ivs.qname === imscStyles.byName.position.qname &&
                imscStyles.byName.origin.qname in isd_element.styleAttrs)
                continue;

            /* skip tts:origin if tts:position is specified */

            if (ivs.qname === imscStyles.byName.origin.qname &&
                imscStyles.byName.position.qname in isd_element.styleAttrs)
                continue;
            
            /* determine initial value */
            
            var iv = doc.head.styling.initials[ivs.qname] || ivs.initial;

            /* apply initial value to elements other than region only if non-inherited */

            if (isd_element.kind === 'region' || (ivs.inherit === false && iv !== null)) {

                isd_element.styleAttrs[ivs.qname] = ivs.parse(iv);

                /* keep track of the style as specified */

                spec_attr[ivs.qname] = true;

            }

        }

        /* compute styles (only for non-inherited styles) */
        /* TODO: get rid of spec_attr */

        for (var z in imscStyles.all) {

            var cs = imscStyles.all[z];

            if (!(cs.qname in spec_attr)) continue;

            if (cs.compute !== null) {

                var cstyle = cs.compute(
                    /*doc, parent, element, attr, context*/
                    doc,
                    parent,
                    isd_element,
                    isd_element.styleAttrs[cs.qname],
                    context
                    );

                if (cstyle !== null) {

                    isd_element.styleAttrs[cs.qname] = cstyle;
                    
                } else {
                    /* if the style cannot be computed, replace it by its initial value */

                    isd_element.styleAttrs[cs.qname] = cs.compute(
                        /*doc, parent, element, attr, context*/
                        doc,
                        parent,
                        isd_element,
                        cs.parse(cs.initial),
                        context
                    );

                    reportError(errorHandler, "Style '" + cs.qname + "' on element '" + isd_element.kind + "' cannot be computed");
                }
            }

        }

        /* tts:fontSize special ineritance for ruby */

/*        var isrubycontainer = false;

        if (isd_element.kind === "span") {

            var rtemp = isd_element.styleAttrs[imscStyles.byName.ruby.qname];

            if (rtemp === "container" || rtemp === "textContainer") {

                isrubycontainer = true;

                context.rubyfs.unshift(isd_element.styleAttrs[imscStyles.byName.fontSize.qname]);

            }

        } */

        /* prune if tts:display is none */

        if (isd_element.styleAttrs[imscStyles.byName.display.qname] === "none")
            return null;

        /* process contents of the element */

        var contents;

        if (parent === null) {

            /* we are processing the region */

            if (body === null) {

                /* if there is no body, still process the region but with empty content */

                contents = [];

            } else {

                /*use the body element as contents */

                contents = [body];

            }

        } else if ('contents' in elem) {

            contents = elem.contents;

        }

        for (var x in contents) {

            var c = isdProcessContentElement(doc, offset, region, body, isd_element, associated_region_id, contents[x], errorHandler, context);

            /* 
             * keep child element only if they are non-null and their region match 
             * the region of this element
             */

            if (c !== null) {

                isd_element.contents.push(c.element);

            }

        }

        /* compute used value of lineHeight="normal" */

        /*        if (isd_element.styleAttrs[imscStyles.byName.lineHeight.qname] === "normal"  ) {
         
         isd_element.styleAttrs[imscStyles.byName.lineHeight.qname] =
         isd_element.styleAttrs[imscStyles.byName.fontSize.qname] * 1.2;
         
         }
         */

        /* tts:fontSize special ineritance for ruby */

        /*if (isrubycontainer) {

            context.rubyfs.shift();

        }*/

        /* remove styles that are not applicable */

        for (var qnameb in isd_element.styleAttrs) {

            /* true if not applicable */

            var na = false;

            /* special applicability of certain style properties to ruby container spans */
            /* TODO: in the future ruby elements should be translated to elements instead of kept as spans */

            if (isd_element.kind === 'span') {

                var rsp = isd_element.styleAttrs[imscStyles.byName.ruby.qname];

                na = ( rsp === 'container' || rsp === 'textContainer' || rsp === 'baseContainer' ) && 
                    _rcs_na_styles.indexOf(qnameb) !== -1;

                if (! na) {

                    na = rsp !== 'container' &&
                        qnameb === imscStyles.byName.rubyAlign.qname;

                }

                if (! na) {

                    na =  (! (rsp === 'textContainer' || rsp === 'text')) &&
                        qnameb === imscStyles.byName.rubyPosition.qname;

                }

            }

            /* normal applicability */
            
            if (! na) {

                var da = imscStyles.byQName[qnameb];
                na = da.applies.indexOf(isd_element.kind) === -1;

            }


            if (na) {
                delete isd_element.styleAttrs[qnameb];
            }

        }

        /* collapse white space if space is "default" */

        if (isd_element.kind === 'span' && isd_element.text && isd_element.space === "default") {

            var trimmedspan = isd_element.text.replace(/[\t\r\n ]+/g, ' ');

            isd_element.text = trimmedspan;

        }

        /* trim whitespace around explicit line breaks */

        if (isd_element.kind === 'p') {

            var elist = [];

            constructSpanList(isd_element, elist);

            var l = 0;

            var state = "after_br";
            var br_pos = 0;

            while (true) {

                if (state === "after_br") {

                    if (l >= elist.length || elist[l].kind === "br") {

                        state = "before_br";
                        br_pos = l;
                        l--;

                    } else {

                        if (elist[l].space !== "preserve") {

                            elist[l].text = elist[l].text.replace(/^[\t\r\n ]+/g, '');

                        }

                        if (elist[l].text.length > 0) {

                            state = "looking_br";
                            l++;

                        } else {

                            elist.splice(l, 1);

                        }

                    }

                } else if (state === "before_br") {

                    if (l < 0 || elist[l].kind === "br") {

                        state = "after_br";
                        l = br_pos + 1;

                        if (l >= elist.length) break;

                    } else {

                        if (elist[l].space !== "preserve") {

                            elist[l].text = elist[l].text.replace(/[\t\r\n ]+$/g, '');

                        }

                        if (elist[l].text.length > 0) {

                            state = "after_br";
                            l = br_pos + 1;

                            if (l >= elist.length) break;

                        } else {

                            elist.splice(l, 1);
                            l--;

                        }

                    }

                } else {

                    if (l >= elist.length || elist[l].kind === "br") {

                        state = "before_br";
                        br_pos = l;
                        l--;

                    } else {

                        l++;

                    }

                }

            }

            pruneEmptySpans(isd_element);

        }

        /* keep element if:
         * * contains a background image
         * * <br/>
         * * if there are children
         * * if it is an image
         * * if <span> and has text
         * * if region and showBackground = always
         */

        if ((isd_element.kind === 'div' && imscStyles.byName.backgroundImage.qname in isd_element.styleAttrs) ||
            isd_element.kind === 'br' ||
            isd_element.kind === 'image' ||
            ('contents' in isd_element && isd_element.contents.length > 0) ||
            (isd_element.kind === 'span' && isd_element.text !== null) ||
            (isd_element.kind === 'region' &&
                isd_element.styleAttrs[imscStyles.byName.showBackground.qname] === 'always')) {

            return {
                region_id: associated_region_id,
                element: isd_element
            };
        }

        return null;
    }

    function constructSpanList(element, elist) {

        if ('contents' in element) {

            for (var i in element.contents) {
                constructSpanList(element.contents[i], elist);
            }

        } else if (element.kind === 'span' || element.kind === 'br') {

            elist.push(element);

        }

    }

    function pruneEmptySpans(element) {

        if (element.kind === 'br') {

            return false;

        } else if ('text' in element) {

            return  element.text.length === 0;

        } else if ('contents' in element) {

            var i = element.contents.length;

            while (i--) {

                if (pruneEmptySpans(element.contents[i])) {
                    element.contents.splice(i, 1);
                }

            }

            return element.contents.length === 0;

        }
    }

    function ISD(tt) {
        this.contents = [];
        this.aspectRatio = tt.aspectRatio;
    }

    function ISDContentElement(ttelem) {

        /* assume the element is a region if it does not have a kind */

        this.kind = ttelem.kind || 'region';

        /* copy id */

        if (ttelem.id) {
            this.id = ttelem.id;
        }

        /* deep copy of style attributes */
        this.styleAttrs = {};

        for (var sname in ttelem.styleAttrs) {

            this.styleAttrs[sname] =
                ttelem.styleAttrs[sname];
        }
        
        /* copy src and type if image */
        
        if ('src' in ttelem) {
            
            this.src = ttelem.src;
            
        }
        
         if ('type' in ttelem) {
            
            this.type = ttelem.type;
            
        }

        /* TODO: clean this! 
         * TODO: ISDElement and document element should be better tied together */

        if ('text' in ttelem) {

            this.text = ttelem.text;

        } else if (this.kind === 'region' || 'contents' in ttelem) {

            this.contents = [];
        }

        if ('space' in ttelem) {

            this.space = ttelem.space;
        }
    }


    /*
     * ERROR HANDLING UTILITY FUNCTIONS
     * 
     */

    function reportInfo(errorHandler, msg) {

        if (errorHandler && errorHandler.info && errorHandler.info(msg))
            throw msg;

    }

    function reportWarning(errorHandler, msg) {

        if (errorHandler && errorHandler.warn && errorHandler.warn(msg))
            throw msg;

    }

    function reportError(errorHandler, msg) {

        if (errorHandler && errorHandler.error && errorHandler.error(msg))
            throw msg;

    }

    function reportFatal(errorHandler, msg) {

        if (errorHandler && errorHandler.fatal)
            errorHandler.fatal(msg);

        throw msg;

    }


})(typeof exports === 'undefined' ? this.imscISD = {} : exports,
    typeof imscNames === 'undefined' ? require("./names") : imscNames,
    typeof imscStyles === 'undefined' ? require("./styles") : imscStyles,
    typeof imscUtils === 'undefined' ? require("./utils") : imscUtils
    );

},{"./names":"../node_modules/imsc/src/main/js/names.js","./styles":"../node_modules/imsc/src/main/js/styles.js","./utils":"../node_modules/imsc/src/main/js/utils.js"}],"../node_modules/events/events.js":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
'use strict';

var R = typeof Reflect === 'object' ? Reflect : null;
var ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {
  return Function.prototype.apply.call(target, receiver, args);
};
var ReflectOwnKeys;

if (R && typeof R.ownKeys === 'function') {
  ReflectOwnKeys = R.ownKeys;
} else if (Object.getOwnPropertySymbols) {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));
  };
} else {
  ReflectOwnKeys = function ReflectOwnKeys(target) {
    return Object.getOwnPropertyNames(target);
  };
}

function ProcessEmitWarning(warning) {
  if (console && console.warn) console.warn(warning);
}

var NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {
  return value !== value;
};

function EventEmitter() {
  EventEmitter.init.call(this);
}

module.exports = EventEmitter; // Backwards-compat with node 0.10.x

EventEmitter.EventEmitter = EventEmitter;
EventEmitter.prototype._events = undefined;
EventEmitter.prototype._eventsCount = 0;
EventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.

var defaultMaxListeners = 10;

function checkListener(listener) {
  if (typeof listener !== 'function') {
    throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
  }
}

Object.defineProperty(EventEmitter, 'defaultMaxListeners', {
  enumerable: true,
  get: function () {
    return defaultMaxListeners;
  },
  set: function (arg) {
    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {
      throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + '.');
    }

    defaultMaxListeners = arg;
  }
});

EventEmitter.init = function () {
  if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {
    this._events = Object.create(null);
    this._eventsCount = 0;
  }

  this._maxListeners = this._maxListeners || undefined;
}; // Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.


EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {
  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {
    throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n + '.');
  }

  this._maxListeners = n;
  return this;
};

function _getMaxListeners(that) {
  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;
  return that._maxListeners;
}

EventEmitter.prototype.getMaxListeners = function getMaxListeners() {
  return _getMaxListeners(this);
};

EventEmitter.prototype.emit = function emit(type) {
  var args = [];

  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);

  var doError = type === 'error';
  var events = this._events;
  if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false; // If there is no 'error' event listener then throw.

  if (doError) {
    var er;
    if (args.length > 0) er = args[0];

    if (er instanceof Error) {
      // Note: The comments on the `throw` lines are intentional, they show
      // up in Node's output if this results in an unhandled exception.
      throw er; // Unhandled 'error' event
    } // At least give some kind of context to the user


    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));
    err.context = er;
    throw err; // Unhandled 'error' event
  }

  var handler = events[type];
  if (handler === undefined) return false;

  if (typeof handler === 'function') {
    ReflectApply(handler, this, args);
  } else {
    var len = handler.length;
    var listeners = arrayClone(handler, len);

    for (var i = 0; i < len; ++i) ReflectApply(listeners[i], this, args);
  }

  return true;
};

function _addListener(target, type, listener, prepend) {
  var m;
  var events;
  var existing;
  checkListener(listener);
  events = target._events;

  if (events === undefined) {
    events = target._events = Object.create(null);
    target._eventsCount = 0;
  } else {
    // To avoid recursion in the case that type === "newListener"! Before
    // adding it to the listeners, first emit "newListener".
    if (events.newListener !== undefined) {
      target.emit('newListener', type, listener.listener ? listener.listener : listener); // Re-assign `events` because a newListener handler could have caused the
      // this._events to be assigned to a new object

      events = target._events;
    }

    existing = events[type];
  }

  if (existing === undefined) {
    // Optimize the case of one listener. Don't need the extra array object.
    existing = events[type] = listener;
    ++target._eventsCount;
  } else {
    if (typeof existing === 'function') {
      // Adding the second element, need to change to array.
      existing = events[type] = prepend ? [listener, existing] : [existing, listener]; // If we've already got an array, just append.
    } else if (prepend) {
      existing.unshift(listener);
    } else {
      existing.push(listener);
    } // Check for listener leak


    m = _getMaxListeners(target);

    if (m > 0 && existing.length > m && !existing.warned) {
      existing.warned = true; // No error code for this since it is a Warning
      // eslint-disable-next-line no-restricted-syntax

      var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');
      w.name = 'MaxListenersExceededWarning';
      w.emitter = target;
      w.type = type;
      w.count = existing.length;
      ProcessEmitWarning(w);
    }
  }

  return target;
}

EventEmitter.prototype.addListener = function addListener(type, listener) {
  return _addListener(this, type, listener, false);
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.prependListener = function prependListener(type, listener) {
  return _addListener(this, type, listener, true);
};

function onceWrapper() {
  if (!this.fired) {
    this.target.removeListener(this.type, this.wrapFn);
    this.fired = true;
    if (arguments.length === 0) return this.listener.call(this.target);
    return this.listener.apply(this.target, arguments);
  }
}

function _onceWrap(target, type, listener) {
  var state = {
    fired: false,
    wrapFn: undefined,
    target: target,
    type: type,
    listener: listener
  };
  var wrapped = onceWrapper.bind(state);
  wrapped.listener = listener;
  state.wrapFn = wrapped;
  return wrapped;
}

EventEmitter.prototype.once = function once(type, listener) {
  checkListener(listener);
  this.on(type, _onceWrap(this, type, listener));
  return this;
};

EventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {
  checkListener(listener);
  this.prependListener(type, _onceWrap(this, type, listener));
  return this;
}; // Emits a 'removeListener' event if and only if the listener was removed.


EventEmitter.prototype.removeListener = function removeListener(type, listener) {
  var list, events, position, i, originalListener;
  checkListener(listener);
  events = this._events;
  if (events === undefined) return this;
  list = events[type];
  if (list === undefined) return this;

  if (list === listener || list.listener === listener) {
    if (--this._eventsCount === 0) this._events = Object.create(null);else {
      delete events[type];
      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);
    }
  } else if (typeof list !== 'function') {
    position = -1;

    for (i = list.length - 1; i >= 0; i--) {
      if (list[i] === listener || list[i].listener === listener) {
        originalListener = list[i].listener;
        position = i;
        break;
      }
    }

    if (position < 0) return this;
    if (position === 0) list.shift();else {
      spliceOne(list, position);
    }
    if (list.length === 1) events[type] = list[0];
    if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);
  }

  return this;
};

EventEmitter.prototype.off = EventEmitter.prototype.removeListener;

EventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {
  var listeners, events, i;
  events = this._events;
  if (events === undefined) return this; // not listening for removeListener, no need to emit

  if (events.removeListener === undefined) {
    if (arguments.length === 0) {
      this._events = Object.create(null);
      this._eventsCount = 0;
    } else if (events[type] !== undefined) {
      if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];
    }

    return this;
  } // emit removeListener for all listeners on all events


  if (arguments.length === 0) {
    var keys = Object.keys(events);
    var key;

    for (i = 0; i < keys.length; ++i) {
      key = keys[i];
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }

    this.removeAllListeners('removeListener');
    this._events = Object.create(null);
    this._eventsCount = 0;
    return this;
  }

  listeners = events[type];

  if (typeof listeners === 'function') {
    this.removeListener(type, listeners);
  } else if (listeners !== undefined) {
    // LIFO order
    for (i = listeners.length - 1; i >= 0; i--) {
      this.removeListener(type, listeners[i]);
    }
  }

  return this;
};

function _listeners(target, type, unwrap) {
  var events = target._events;
  if (events === undefined) return [];
  var evlistener = events[type];
  if (evlistener === undefined) return [];
  if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];
  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
}

EventEmitter.prototype.listeners = function listeners(type) {
  return _listeners(this, type, true);
};

EventEmitter.prototype.rawListeners = function rawListeners(type) {
  return _listeners(this, type, false);
};

EventEmitter.listenerCount = function (emitter, type) {
  if (typeof emitter.listenerCount === 'function') {
    return emitter.listenerCount(type);
  } else {
    return listenerCount.call(emitter, type);
  }
};

EventEmitter.prototype.listenerCount = listenerCount;

function listenerCount(type) {
  var events = this._events;

  if (events !== undefined) {
    var evlistener = events[type];

    if (typeof evlistener === 'function') {
      return 1;
    } else if (evlistener !== undefined) {
      return evlistener.length;
    }
  }

  return 0;
}

EventEmitter.prototype.eventNames = function eventNames() {
  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
};

function arrayClone(arr, n) {
  var copy = new Array(n);

  for (var i = 0; i < n; ++i) copy[i] = arr[i];

  return copy;
}

function spliceOne(list, index) {
  for (; index + 1 < list.length; index++) list[index] = list[index + 1];

  list.pop();
}

function unwrapListeners(arr) {
  var ret = new Array(arr.length);

  for (var i = 0; i < ret.length; ++i) {
    ret[i] = arr[i].listener || arr[i];
  }

  return ret;
}
},{}],"../node_modules/inherits/inherits_browser.js":[function(require,module,exports) {
if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}

},{}],"../node_modules/process/browser.js":[function(require,module,exports) {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};
},{}],"../node_modules/process-nextick-args/index.js":[function(require,module,exports) {
var process = require("process");
'use strict';

if (typeof process === 'undefined' ||
    !process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = { nextTick: nextTick };
} else {
  module.exports = process
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}


},{"process":"../node_modules/process/browser.js"}],"../node_modules/isarray/index.js":[function(require,module,exports) {
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

},{}],"../node_modules/readable-stream/lib/internal/streams/stream-browser.js":[function(require,module,exports) {
module.exports = require('events').EventEmitter;

},{"events":"../node_modules/events/events.js"}],"../node_modules/base64-js/index.js":[function(require,module,exports) {
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

},{}],"../node_modules/ieee754/index.js":[function(require,module,exports) {
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],"../node_modules/buffer/index.js":[function(require,module,exports) {

var global = arguments[3];
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')
var isArray = require('isarray')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

},{"base64-js":"../node_modules/base64-js/index.js","ieee754":"../node_modules/ieee754/index.js","isarray":"../node_modules/isarray/index.js","buffer":"../node_modules/buffer/index.js"}],"../node_modules/safe-buffer/index.js":[function(require,module,exports) {

/* eslint-disable node/no-deprecated-api */
var buffer = require('buffer')
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}

},{"buffer":"../node_modules/buffer/index.js"}],"../node_modules/core-util-is/lib/util.js":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

},{"buffer":"../node_modules/buffer/index.js"}],"../node_modules/parcel-bundler/src/builtins/_empty.js":[function(require,module,exports) {

},{}],"../node_modules/readable-stream/lib/internal/streams/BufferList.js":[function(require,module,exports) {

'use strict';

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Buffer = require('safe-buffer').Buffer;
var util = require('util');

function copyBuffer(src, target, offset) {
  src.copy(target, offset);
}

module.exports = function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  BufferList.prototype.push = function push(v) {
    var entry = { data: v, next: null };
    if (this.length > 0) this.tail.next = entry;else this.head = entry;
    this.tail = entry;
    ++this.length;
  };

  BufferList.prototype.unshift = function unshift(v) {
    var entry = { data: v, next: this.head };
    if (this.length === 0) this.tail = entry;
    this.head = entry;
    ++this.length;
  };

  BufferList.prototype.shift = function shift() {
    if (this.length === 0) return;
    var ret = this.head.data;
    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
    --this.length;
    return ret;
  };

  BufferList.prototype.clear = function clear() {
    this.head = this.tail = null;
    this.length = 0;
  };

  BufferList.prototype.join = function join(s) {
    if (this.length === 0) return '';
    var p = this.head;
    var ret = '' + p.data;
    while (p = p.next) {
      ret += s + p.data;
    }return ret;
  };

  BufferList.prototype.concat = function concat(n) {
    if (this.length === 0) return Buffer.alloc(0);
    if (this.length === 1) return this.head.data;
    var ret = Buffer.allocUnsafe(n >>> 0);
    var p = this.head;
    var i = 0;
    while (p) {
      copyBuffer(p.data, ret, i);
      i += p.data.length;
      p = p.next;
    }
    return ret;
  };

  return BufferList;
}();

if (util && util.inspect && util.inspect.custom) {
  module.exports.prototype[util.inspect.custom] = function () {
    var obj = util.inspect({ length: this.length });
    return this.constructor.name + ' ' + obj;
  };
}
},{"safe-buffer":"../node_modules/safe-buffer/index.js","util":"../node_modules/parcel-bundler/src/builtins/_empty.js"}],"../node_modules/readable-stream/lib/internal/streams/destroy.js":[function(require,module,exports) {
'use strict';

/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/

// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
      pna.nextTick(emitErrorNT, this, err);
    }
    return this;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      pna.nextTick(emitErrorNT, _this, err);
      if (_this._writableState) {
        _this._writableState.errorEmitted = true;
      }
    } else if (cb) {
      cb(err);
    }
  });

  return this;
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy
};
},{"process-nextick-args":"../node_modules/process-nextick-args/index.js"}],"../node_modules/util-deprecate/browser.js":[function(require,module,exports) {
var global = arguments[3];

/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

},{}],"../node_modules/readable-stream/lib/_stream_writable.js":[function(require,module,exports) {
var process = require("process");

var global = arguments[3];
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.
'use strict';
/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/


module.exports = Writable;
/* <replacement> */

function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
} // It seems a linked list but it is not
// there will be only 2 of these for each stream


function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;

  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/


var asyncWrite = !true && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;
/*</replacement>*/

/*<replacement>*/

var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;
/*<replacement>*/

var util = require('core-util-is');

util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/

var internalUtil = {
  deprecate: require('util-deprecate')
};
/*</replacement>*/

/*<replacement>*/

var Stream = require('./internal/streams/stream');
/*</replacement>*/

/*<replacement>*/


var Buffer = require('safe-buffer').Buffer;

var OurUint8Array = global.Uint8Array || function () {};

function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}

function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}
/*</replacement>*/


var destroyImpl = require('./internal/streams/destroy');

util.inherits(Writable, Stream);

function nop() {}

function WritableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');
  options = options || {}; // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.

  var isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream
  // contains buffers or objects.

  this.objectMode = !!options.objectMode;
  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()

  var hwm = options.highWaterMark;
  var writableHwm = options.writableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm; // cast to ints.

  this.highWaterMark = Math.floor(this.highWaterMark); // if _final has been called

  this.finalCalled = false; // drain event flag.

  this.needDrain = false; // at the start of calling end()

  this.ending = false; // when end() has been called, and returned

  this.ended = false; // when 'finish' is emitted

  this.finished = false; // has it been destroyed

  this.destroyed = false; // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.

  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.

  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.

  this.length = 0; // a flag to see when we're in the middle of a write.

  this.writing = false; // when true all writes will be buffered until .uncork() call

  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.

  this.sync = true; // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.

  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)

  this.onwrite = function (er) {
    onwrite(stream, er);
  }; // the callback that the user supplies to write(chunk,encoding,cb)


  this.writecb = null; // the amount that is being written when _write is called.

  this.writelen = 0;
  this.bufferedRequest = null;
  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted

  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams

  this.prefinished = false; // True if the error was already emitted and should not be thrown again

  this.errorEmitted = false; // count buffered requests

  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two

  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];

  while (current) {
    out.push(current);
    current = current.next;
  }

  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})(); // Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.


var realHasInstance;

if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;
      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.
  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.

  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this); // legacy.

  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;
    if (typeof options.writev === 'function') this._writev = options.writev;
    if (typeof options.destroy === 'function') this._destroy = options.destroy;
    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
} // Otherwise people can pipe Writable streams, which is just wrong.


Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end'); // TODO: defer error events consistently everywhere, not just the cb

  stream.emit('error', er);
  pna.nextTick(cb, er);
} // Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.


function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;

  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }

  if (er) {
    stream.emit('error', er);
    pna.nextTick(cb, er);
    valid = false;
  }

  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;

  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;
  if (typeof cb !== 'function') cb = nop;
  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }
  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;
  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;
    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }

  return chunk;
}

Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._writableState.highWaterMark;
  }
}); // if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.

function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);

    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }

  var len = state.objectMode ? 1 : chunk.length;
  state.length += len;
  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.

  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };

    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }

    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    pna.nextTick(cb, er); // this can emit finish, and it will always happen
    // after error

    pna.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er); // this can emit finish, but finish must
    // always follow error

    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;
  onwriteStateUpdate(state);
  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
} // Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.


function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
} // if there's something in the buffer waiting, then process it


function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;
    var count = 0;
    var allBuffers = true;

    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }

    buffer.allBuffers = allBuffers;
    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite

    state.pendingcb++;
    state.lastBufferedRequest = null;

    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }

    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;
      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.

      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks

  if (state.corked) {
    state.corked = 1;
    this.uncork();
  } // ignore unnecessary end() calls.


  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}

function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;

    if (err) {
      stream.emit('error', err);
    }

    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}

function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function') {
      state.pendingcb++;
      state.finalCalled = true;
      pna.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);

  if (need) {
    prefinish(stream, state);

    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
    }
  }

  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);

  if (cb) {
    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);
  }

  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;

  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }

  if (state.corkedRequestsFree) {
    state.corkedRequestsFree.next = corkReq;
  } else {
    state.corkedRequestsFree = corkReq;
  }
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  get: function () {
    if (this._writableState === undefined) {
      return false;
    }

    return this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    } // backward compatibility, the user is explicitly
    // managing destroyed


    this._writableState.destroyed = value;
  }
});
Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;

Writable.prototype._destroy = function (err, cb) {
  this.end();
  cb(err);
};
},{"process-nextick-args":"../node_modules/process-nextick-args/index.js","core-util-is":"../node_modules/core-util-is/lib/util.js","inherits":"../node_modules/inherits/inherits_browser.js","util-deprecate":"../node_modules/util-deprecate/browser.js","./internal/streams/stream":"../node_modules/readable-stream/lib/internal/streams/stream-browser.js","safe-buffer":"../node_modules/safe-buffer/index.js","./internal/streams/destroy":"../node_modules/readable-stream/lib/internal/streams/destroy.js","./_stream_duplex":"../node_modules/readable-stream/lib/_stream_duplex.js","process":"../node_modules/process/browser.js"}],"../node_modules/readable-stream/lib/_stream_duplex.js":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.

'use strict';

/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

var Readable = require('./_stream_readable');
var Writable = require('./_stream_writable');

util.inherits(Duplex, Readable);

{
  // avoid scope creep, the keys array can then be collected
  var keys = objectKeys(Writable.prototype);
  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._writableState.highWaterMark;
  }
});

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  pna.nextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

Duplex.prototype._destroy = function (err, cb) {
  this.push(null);
  this.end();

  pna.nextTick(cb, err);
};
},{"process-nextick-args":"../node_modules/process-nextick-args/index.js","core-util-is":"../node_modules/core-util-is/lib/util.js","inherits":"../node_modules/inherits/inherits_browser.js","./_stream_readable":"../node_modules/readable-stream/lib/_stream_readable.js","./_stream_writable":"../node_modules/readable-stream/lib/_stream_writable.js"}],"../node_modules/string_decoder/lib/string_decoder.js":[function(require,module,exports) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}
},{"safe-buffer":"../node_modules/safe-buffer/index.js"}],"../node_modules/readable-stream/lib/_stream_readable.js":[function(require,module,exports) {

var global = arguments[3];
var process = require("process");
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

/*<replacement>*/

var pna = require('process-nextick-args');
/*</replacement>*/

module.exports = Readable;

/*<replacement>*/
var isArray = require('isarray');
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = require('events').EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = require('./internal/streams/stream');
/*</replacement>*/

/*<replacement>*/

var Buffer = require('safe-buffer').Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

/*<replacement>*/
var debugUtil = require('util');
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = require('./internal/streams/BufferList');
var destroyImpl = require('./internal/streams/destroy');
var StringDecoder;

util.inherits(Readable, Stream);

var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);

  // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.
  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream) {
  Duplex = Duplex || require('./_stream_duplex');

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var readableHwm = options.readableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || require('./_stream_duplex');

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});

Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  this.push(null);
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      stream.emit('error', er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        stream.emit('error', new Error('stream.push() after EOF'));
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
    }
  }

  return needMoreData(state);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    stream.emit('data', chunk);
    stream.read(0);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    pna.nextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = { hasUnpiped: false };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, unpipeInfo);
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this, unpipeInfo);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        pna.nextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    pna.nextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;

  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  this._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._readableState.highWaterMark;
  }
});

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = Buffer.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    pna.nextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
},{"process-nextick-args":"../node_modules/process-nextick-args/index.js","isarray":"../node_modules/isarray/index.js","events":"../node_modules/events/events.js","./internal/streams/stream":"../node_modules/readable-stream/lib/internal/streams/stream-browser.js","safe-buffer":"../node_modules/safe-buffer/index.js","core-util-is":"../node_modules/core-util-is/lib/util.js","inherits":"../node_modules/inherits/inherits_browser.js","util":"../node_modules/parcel-bundler/src/builtins/_empty.js","./internal/streams/BufferList":"../node_modules/readable-stream/lib/internal/streams/BufferList.js","./internal/streams/destroy":"../node_modules/readable-stream/lib/internal/streams/destroy.js","./_stream_duplex":"../node_modules/readable-stream/lib/_stream_duplex.js","string_decoder/":"../node_modules/string_decoder/lib/string_decoder.js","process":"../node_modules/process/browser.js"}],"../node_modules/readable-stream/lib/_stream_transform.js":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.

'use strict';

module.exports = Transform;

var Duplex = require('./_stream_duplex');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) {
    return this.emit('error', new Error('write callback called multiple times'));
  }

  ts.writechunk = null;
  ts.writecb = null;

  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);

  cb(er);

  var rs = this._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  };

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function') {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  var _this2 = this;

  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
    _this2.emit('close');
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');

  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}
},{"./_stream_duplex":"../node_modules/readable-stream/lib/_stream_duplex.js","core-util-is":"../node_modules/core-util-is/lib/util.js","inherits":"../node_modules/inherits/inherits_browser.js"}],"../node_modules/readable-stream/lib/_stream_passthrough.js":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.

'use strict';

module.exports = PassThrough;

var Transform = require('./_stream_transform');

/*<replacement>*/
var util = require('core-util-is');
util.inherits = require('inherits');
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};
},{"./_stream_transform":"../node_modules/readable-stream/lib/_stream_transform.js","core-util-is":"../node_modules/core-util-is/lib/util.js","inherits":"../node_modules/inherits/inherits_browser.js"}],"../node_modules/readable-stream/readable-browser.js":[function(require,module,exports) {
exports = module.exports = require('./lib/_stream_readable.js');
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = require('./lib/_stream_writable.js');
exports.Duplex = require('./lib/_stream_duplex.js');
exports.Transform = require('./lib/_stream_transform.js');
exports.PassThrough = require('./lib/_stream_passthrough.js');

},{"./lib/_stream_readable.js":"../node_modules/readable-stream/lib/_stream_readable.js","./lib/_stream_writable.js":"../node_modules/readable-stream/lib/_stream_writable.js","./lib/_stream_duplex.js":"../node_modules/readable-stream/lib/_stream_duplex.js","./lib/_stream_transform.js":"../node_modules/readable-stream/lib/_stream_transform.js","./lib/_stream_passthrough.js":"../node_modules/readable-stream/lib/_stream_passthrough.js"}],"../node_modules/readable-stream/writable-browser.js":[function(require,module,exports) {
module.exports = require('./lib/_stream_writable.js');

},{"./lib/_stream_writable.js":"../node_modules/readable-stream/lib/_stream_writable.js"}],"../node_modules/readable-stream/duplex-browser.js":[function(require,module,exports) {
module.exports = require('./lib/_stream_duplex.js');

},{"./lib/_stream_duplex.js":"../node_modules/readable-stream/lib/_stream_duplex.js"}],"../node_modules/readable-stream/transform.js":[function(require,module,exports) {
module.exports = require('./readable').Transform

},{"./readable":"../node_modules/readable-stream/readable-browser.js"}],"../node_modules/readable-stream/passthrough.js":[function(require,module,exports) {
module.exports = require('./readable').PassThrough

},{"./readable":"../node_modules/readable-stream/readable-browser.js"}],"../node_modules/stream-browserify/index.js":[function(require,module,exports) {
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = require('events').EventEmitter;
var inherits = require('inherits');

inherits(Stream, EE);
Stream.Readable = require('readable-stream/readable.js');
Stream.Writable = require('readable-stream/writable.js');
Stream.Duplex = require('readable-stream/duplex.js');
Stream.Transform = require('readable-stream/transform.js');
Stream.PassThrough = require('readable-stream/passthrough.js');

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};

},{"events":"../node_modules/events/events.js","inherits":"../node_modules/inherits/inherits_browser.js","readable-stream/readable.js":"../node_modules/readable-stream/readable-browser.js","readable-stream/writable.js":"../node_modules/readable-stream/writable-browser.js","readable-stream/duplex.js":"../node_modules/readable-stream/duplex-browser.js","readable-stream/transform.js":"../node_modules/readable-stream/transform.js","readable-stream/passthrough.js":"../node_modules/readable-stream/passthrough.js"}],"../node_modules/imsc/node_modules/sax/lib/sax.js":[function(require,module,exports) {
var Buffer = require("buffer").Buffer;
;(function (sax) { // wrapper for non-node envs
  sax.parser = function (strict, opt) { return new SAXParser(strict, opt) }
  sax.SAXParser = SAXParser
  sax.SAXStream = SAXStream
  sax.createStream = createStream

  // When we pass the MAX_BUFFER_LENGTH position, start checking for buffer overruns.
  // When we check, schedule the next check for MAX_BUFFER_LENGTH - (max(buffer lengths)),
  // since that's the earliest that a buffer overrun could occur.  This way, checks are
  // as rare as required, but as often as necessary to ensure never crossing this bound.
  // Furthermore, buffers are only tested at most once per write(), so passing a very
  // large string into write() might have undesirable effects, but this is manageable by
  // the caller, so it is assumed to be safe.  Thus, a call to write() may, in the extreme
  // edge case, result in creating at most one complete copy of the string passed in.
  // Set to Infinity to have unlimited buffers.
  sax.MAX_BUFFER_LENGTH = 64 * 1024

  var buffers = [
    'comment', 'sgmlDecl', 'textNode', 'tagName', 'doctype',
    'procInstName', 'procInstBody', 'entity', 'attribName',
    'attribValue', 'cdata', 'script'
  ]

  sax.EVENTS = [
    'text',
    'processinginstruction',
    'sgmldeclaration',
    'doctype',
    'comment',
    'opentagstart',
    'attribute',
    'opentag',
    'closetag',
    'opencdata',
    'cdata',
    'closecdata',
    'error',
    'end',
    'ready',
    'script',
    'opennamespace',
    'closenamespace'
  ]

  function SAXParser (strict, opt) {
    if (!(this instanceof SAXParser)) {
      return new SAXParser(strict, opt)
    }

    var parser = this
    clearBuffers(parser)
    parser.q = parser.c = ''
    parser.bufferCheckPosition = sax.MAX_BUFFER_LENGTH
    parser.opt = opt || {}
    parser.opt.lowercase = parser.opt.lowercase || parser.opt.lowercasetags
    parser.looseCase = parser.opt.lowercase ? 'toLowerCase' : 'toUpperCase'
    parser.tags = []
    parser.closed = parser.closedRoot = parser.sawRoot = false
    parser.tag = parser.error = null
    parser.strict = !!strict
    parser.noscript = !!(strict || parser.opt.noscript)
    parser.state = S.BEGIN
    parser.strictEntities = parser.opt.strictEntities
    parser.ENTITIES = parser.strictEntities ? Object.create(sax.XML_ENTITIES) : Object.create(sax.ENTITIES)
    parser.attribList = []

    // namespaces form a prototype chain.
    // it always points at the current tag,
    // which protos to its parent tag.
    if (parser.opt.xmlns) {
      parser.ns = Object.create(rootNS)
    }

    // mostly just for error reporting
    parser.trackPosition = parser.opt.position !== false
    if (parser.trackPosition) {
      parser.position = parser.line = parser.column = 0
    }
    emit(parser, 'onready')
  }

  if (!Object.create) {
    Object.create = function (o) {
      function F () {}
      F.prototype = o
      var newf = new F()
      return newf
    }
  }

  if (!Object.keys) {
    Object.keys = function (o) {
      var a = []
      for (var i in o) if (o.hasOwnProperty(i)) a.push(i)
      return a
    }
  }

  function checkBufferLength (parser) {
    var maxAllowed = Math.max(sax.MAX_BUFFER_LENGTH, 10)
    var maxActual = 0
    for (var i = 0, l = buffers.length; i < l; i++) {
      var len = parser[buffers[i]].length
      if (len > maxAllowed) {
        // Text/cdata nodes can get big, and since they're buffered,
        // we can get here under normal conditions.
        // Avoid issues by emitting the text node now,
        // so at least it won't get any bigger.
        switch (buffers[i]) {
          case 'textNode':
            closeText(parser)
            break

          case 'cdata':
            emitNode(parser, 'oncdata', parser.cdata)
            parser.cdata = ''
            break

          case 'script':
            emitNode(parser, 'onscript', parser.script)
            parser.script = ''
            break

          default:
            error(parser, 'Max buffer length exceeded: ' + buffers[i])
        }
      }
      maxActual = Math.max(maxActual, len)
    }
    // schedule the next check for the earliest possible buffer overrun.
    var m = sax.MAX_BUFFER_LENGTH - maxActual
    parser.bufferCheckPosition = m + parser.position
  }

  function clearBuffers (parser) {
    for (var i = 0, l = buffers.length; i < l; i++) {
      parser[buffers[i]] = ''
    }
  }

  function flushBuffers (parser) {
    closeText(parser)
    if (parser.cdata !== '') {
      emitNode(parser, 'oncdata', parser.cdata)
      parser.cdata = ''
    }
    if (parser.script !== '') {
      emitNode(parser, 'onscript', parser.script)
      parser.script = ''
    }
  }

  SAXParser.prototype = {
    end: function () { end(this) },
    write: write,
    resume: function () { this.error = null; return this },
    close: function () { return this.write(null) },
    flush: function () { flushBuffers(this) }
  }

  var Stream
  try {
    Stream = require('stream').Stream
  } catch (ex) {
    Stream = function () {}
  }

  var streamWraps = sax.EVENTS.filter(function (ev) {
    return ev !== 'error' && ev !== 'end'
  })

  function createStream (strict, opt) {
    return new SAXStream(strict, opt)
  }

  function SAXStream (strict, opt) {
    if (!(this instanceof SAXStream)) {
      return new SAXStream(strict, opt)
    }

    Stream.apply(this)

    this._parser = new SAXParser(strict, opt)
    this.writable = true
    this.readable = true

    var me = this

    this._parser.onend = function () {
      me.emit('end')
    }

    this._parser.onerror = function (er) {
      me.emit('error', er)

      // if didn't throw, then means error was handled.
      // go ahead and clear error, so we can write again.
      me._parser.error = null
    }

    this._decoder = null

    streamWraps.forEach(function (ev) {
      Object.defineProperty(me, 'on' + ev, {
        get: function () {
          return me._parser['on' + ev]
        },
        set: function (h) {
          if (!h) {
            me.removeAllListeners(ev)
            me._parser['on' + ev] = h
            return h
          }
          me.on(ev, h)
        },
        enumerable: true,
        configurable: false
      })
    })
  }

  SAXStream.prototype = Object.create(Stream.prototype, {
    constructor: {
      value: SAXStream
    }
  })

  SAXStream.prototype.write = function (data) {
    if (typeof Buffer === 'function' &&
      typeof Buffer.isBuffer === 'function' &&
      Buffer.isBuffer(data)) {
      if (!this._decoder) {
        var SD = require('string_decoder').StringDecoder
        this._decoder = new SD('utf8')
      }
      data = this._decoder.write(data)
    }

    this._parser.write(data.toString())
    this.emit('data', data)
    return true
  }

  SAXStream.prototype.end = function (chunk) {
    if (chunk && chunk.length) {
      this.write(chunk)
    }
    this._parser.end()
    return true
  }

  SAXStream.prototype.on = function (ev, handler) {
    var me = this
    if (!me._parser['on' + ev] && streamWraps.indexOf(ev) !== -1) {
      me._parser['on' + ev] = function () {
        var args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments)
        args.splice(0, 0, ev)
        me.emit.apply(me, args)
      }
    }

    return Stream.prototype.on.call(me, ev, handler)
  }

  // character classes and tokens
  var whitespace = '\r\n\t '

  // this really needs to be replaced with character classes.
  // XML allows all manner of ridiculous numbers and digits.
  var number = '0124356789'
  var letter = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'

  // (Letter | "_" | ":")
  var quote = '\'"'
  var attribEnd = whitespace + '>'
  var CDATA = '[CDATA['
  var DOCTYPE = 'DOCTYPE'
  var XML_NAMESPACE = 'http://www.w3.org/XML/1998/namespace'
  var XMLNS_NAMESPACE = 'http://www.w3.org/2000/xmlns/'
  var rootNS = { xml: XML_NAMESPACE, xmlns: XMLNS_NAMESPACE }

  // turn all the string character sets into character class objects.
  whitespace = charClass(whitespace)
  number = charClass(number)
  letter = charClass(letter)

  // http://www.w3.org/TR/REC-xml/#NT-NameStartChar
  // This implementation works on strings, a single character at a time
  // as such, it cannot ever support astral-plane characters (10000-EFFFF)
  // without a significant breaking change to either this  parser, or the
  // JavaScript language.  Implementation of an emoji-capable xml parser
  // is left as an exercise for the reader.
  var nameStart = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/

  var nameBody = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040\.\d-]/

  var entityStart = /[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/
  var entityBody = /[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040\.\d-]/

  quote = charClass(quote)
  attribEnd = charClass(attribEnd)

  function charClass (str) {
    return str.split('').reduce(function (s, c) {
      s[c] = true
      return s
    }, {})
  }

  function isRegExp (c) {
    return Object.prototype.toString.call(c) === '[object RegExp]'
  }

  function is (charclass, c) {
    return isRegExp(charclass) ? !!c.match(charclass) : charclass[c]
  }

  function not (charclass, c) {
    return !is(charclass, c)
  }

  var S = 0
  sax.STATE = {
    BEGIN: S++, // leading byte order mark or whitespace
    BEGIN_WHITESPACE: S++, // leading whitespace
    TEXT: S++, // general stuff
    TEXT_ENTITY: S++, // &amp and such.
    OPEN_WAKA: S++, // <
    SGML_DECL: S++, // <!BLARG
    SGML_DECL_QUOTED: S++, // <!BLARG foo "bar
    DOCTYPE: S++, // <!DOCTYPE
    DOCTYPE_QUOTED: S++, // <!DOCTYPE "//blah
    DOCTYPE_DTD: S++, // <!DOCTYPE "//blah" [ ...
    DOCTYPE_DTD_QUOTED: S++, // <!DOCTYPE "//blah" [ "foo
    COMMENT_STARTING: S++, // <!-
    COMMENT: S++, // <!--
    COMMENT_ENDING: S++, // <!-- blah -
    COMMENT_ENDED: S++, // <!-- blah --
    CDATA: S++, // <![CDATA[ something
    CDATA_ENDING: S++, // ]
    CDATA_ENDING_2: S++, // ]]
    PROC_INST: S++, // <?hi
    PROC_INST_BODY: S++, // <?hi there
    PROC_INST_ENDING: S++, // <?hi "there" ?
    OPEN_TAG: S++, // <strong
    OPEN_TAG_SLASH: S++, // <strong /
    ATTRIB: S++, // <a
    ATTRIB_NAME: S++, // <a foo
    ATTRIB_NAME_SAW_WHITE: S++, // <a foo _
    ATTRIB_VALUE: S++, // <a foo=
    ATTRIB_VALUE_QUOTED: S++, // <a foo="bar
    ATTRIB_VALUE_CLOSED: S++, // <a foo="bar"
    ATTRIB_VALUE_UNQUOTED: S++, // <a foo=bar
    ATTRIB_VALUE_ENTITY_Q: S++, // <foo bar="&quot;"
    ATTRIB_VALUE_ENTITY_U: S++, // <foo bar=&quot
    CLOSE_TAG: S++, // </a
    CLOSE_TAG_SAW_WHITE: S++, // </a   >
    SCRIPT: S++, // <script> ...
    SCRIPT_ENDING: S++ // <script> ... <
  }

  sax.XML_ENTITIES = {
    'amp': '&',
    'gt': '>',
    'lt': '<',
    'quot': '"',
    'apos': "'"
  }

  sax.ENTITIES = {
    'amp': '&',
    'gt': '>',
    'lt': '<',
    'quot': '"',
    'apos': "'",
    'AElig': 198,
    'Aacute': 193,
    'Acirc': 194,
    'Agrave': 192,
    'Aring': 197,
    'Atilde': 195,
    'Auml': 196,
    'Ccedil': 199,
    'ETH': 208,
    'Eacute': 201,
    'Ecirc': 202,
    'Egrave': 200,
    'Euml': 203,
    'Iacute': 205,
    'Icirc': 206,
    'Igrave': 204,
    'Iuml': 207,
    'Ntilde': 209,
    'Oacute': 211,
    'Ocirc': 212,
    'Ograve': 210,
    'Oslash': 216,
    'Otilde': 213,
    'Ouml': 214,
    'THORN': 222,
    'Uacute': 218,
    'Ucirc': 219,
    'Ugrave': 217,
    'Uuml': 220,
    'Yacute': 221,
    'aacute': 225,
    'acirc': 226,
    'aelig': 230,
    'agrave': 224,
    'aring': 229,
    'atilde': 227,
    'auml': 228,
    'ccedil': 231,
    'eacute': 233,
    'ecirc': 234,
    'egrave': 232,
    'eth': 240,
    'euml': 235,
    'iacute': 237,
    'icirc': 238,
    'igrave': 236,
    'iuml': 239,
    'ntilde': 241,
    'oacute': 243,
    'ocirc': 244,
    'ograve': 242,
    'oslash': 248,
    'otilde': 245,
    'ouml': 246,
    'szlig': 223,
    'thorn': 254,
    'uacute': 250,
    'ucirc': 251,
    'ugrave': 249,
    'uuml': 252,
    'yacute': 253,
    'yuml': 255,
    'copy': 169,
    'reg': 174,
    'nbsp': 160,
    'iexcl': 161,
    'cent': 162,
    'pound': 163,
    'curren': 164,
    'yen': 165,
    'brvbar': 166,
    'sect': 167,
    'uml': 168,
    'ordf': 170,
    'laquo': 171,
    'not': 172,
    'shy': 173,
    'macr': 175,
    'deg': 176,
    'plusmn': 177,
    'sup1': 185,
    'sup2': 178,
    'sup3': 179,
    'acute': 180,
    'micro': 181,
    'para': 182,
    'middot': 183,
    'cedil': 184,
    'ordm': 186,
    'raquo': 187,
    'frac14': 188,
    'frac12': 189,
    'frac34': 190,
    'iquest': 191,
    'times': 215,
    'divide': 247,
    'OElig': 338,
    'oelig': 339,
    'Scaron': 352,
    'scaron': 353,
    'Yuml': 376,
    'fnof': 402,
    'circ': 710,
    'tilde': 732,
    'Alpha': 913,
    'Beta': 914,
    'Gamma': 915,
    'Delta': 916,
    'Epsilon': 917,
    'Zeta': 918,
    'Eta': 919,
    'Theta': 920,
    'Iota': 921,
    'Kappa': 922,
    'Lambda': 923,
    'Mu': 924,
    'Nu': 925,
    'Xi': 926,
    'Omicron': 927,
    'Pi': 928,
    'Rho': 929,
    'Sigma': 931,
    'Tau': 932,
    'Upsilon': 933,
    'Phi': 934,
    'Chi': 935,
    'Psi': 936,
    'Omega': 937,
    'alpha': 945,
    'beta': 946,
    'gamma': 947,
    'delta': 948,
    'epsilon': 949,
    'zeta': 950,
    'eta': 951,
    'theta': 952,
    'iota': 953,
    'kappa': 954,
    'lambda': 955,
    'mu': 956,
    'nu': 957,
    'xi': 958,
    'omicron': 959,
    'pi': 960,
    'rho': 961,
    'sigmaf': 962,
    'sigma': 963,
    'tau': 964,
    'upsilon': 965,
    'phi': 966,
    'chi': 967,
    'psi': 968,
    'omega': 969,
    'thetasym': 977,
    'upsih': 978,
    'piv': 982,
    'ensp': 8194,
    'emsp': 8195,
    'thinsp': 8201,
    'zwnj': 8204,
    'zwj': 8205,
    'lrm': 8206,
    'rlm': 8207,
    'ndash': 8211,
    'mdash': 8212,
    'lsquo': 8216,
    'rsquo': 8217,
    'sbquo': 8218,
    'ldquo': 8220,
    'rdquo': 8221,
    'bdquo': 8222,
    'dagger': 8224,
    'Dagger': 8225,
    'bull': 8226,
    'hellip': 8230,
    'permil': 8240,
    'prime': 8242,
    'Prime': 8243,
    'lsaquo': 8249,
    'rsaquo': 8250,
    'oline': 8254,
    'frasl': 8260,
    'euro': 8364,
    'image': 8465,
    'weierp': 8472,
    'real': 8476,
    'trade': 8482,
    'alefsym': 8501,
    'larr': 8592,
    'uarr': 8593,
    'rarr': 8594,
    'darr': 8595,
    'harr': 8596,
    'crarr': 8629,
    'lArr': 8656,
    'uArr': 8657,
    'rArr': 8658,
    'dArr': 8659,
    'hArr': 8660,
    'forall': 8704,
    'part': 8706,
    'exist': 8707,
    'empty': 8709,
    'nabla': 8711,
    'isin': 8712,
    'notin': 8713,
    'ni': 8715,
    'prod': 8719,
    'sum': 8721,
    'minus': 8722,
    'lowast': 8727,
    'radic': 8730,
    'prop': 8733,
    'infin': 8734,
    'ang': 8736,
    'and': 8743,
    'or': 8744,
    'cap': 8745,
    'cup': 8746,
    'int': 8747,
    'there4': 8756,
    'sim': 8764,
    'cong': 8773,
    'asymp': 8776,
    'ne': 8800,
    'equiv': 8801,
    'le': 8804,
    'ge': 8805,
    'sub': 8834,
    'sup': 8835,
    'nsub': 8836,
    'sube': 8838,
    'supe': 8839,
    'oplus': 8853,
    'otimes': 8855,
    'perp': 8869,
    'sdot': 8901,
    'lceil': 8968,
    'rceil': 8969,
    'lfloor': 8970,
    'rfloor': 8971,
    'lang': 9001,
    'rang': 9002,
    'loz': 9674,
    'spades': 9824,
    'clubs': 9827,
    'hearts': 9829,
    'diams': 9830
  }

  Object.keys(sax.ENTITIES).forEach(function (key) {
    var e = sax.ENTITIES[key]
    var s = typeof e === 'number' ? String.fromCharCode(e) : e
    sax.ENTITIES[key] = s
  })

  for (var s in sax.STATE) {
    sax.STATE[sax.STATE[s]] = s
  }

  // shorthand
  S = sax.STATE

  function emit (parser, event, data) {
    parser[event] && parser[event](data)
  }

  function emitNode (parser, nodeType, data) {
    if (parser.textNode) closeText(parser)
    emit(parser, nodeType, data)
  }

  function closeText (parser) {
    parser.textNode = textopts(parser.opt, parser.textNode)
    if (parser.textNode) emit(parser, 'ontext', parser.textNode)
    parser.textNode = ''
  }

  function textopts (opt, text) {
    if (opt.trim) text = text.trim()
    if (opt.normalize) text = text.replace(/\s+/g, ' ')
    return text
  }

  function error (parser, er) {
    closeText(parser)
    if (parser.trackPosition) {
      er += '\nLine: ' + parser.line +
        '\nColumn: ' + parser.column +
        '\nChar: ' + parser.c
    }
    er = new Error(er)
    parser.error = er
    emit(parser, 'onerror', er)
    return parser
  }

  function end (parser) {
    if (parser.sawRoot && !parser.closedRoot) strictFail(parser, 'Unclosed root tag')
    if ((parser.state !== S.BEGIN) &&
      (parser.state !== S.BEGIN_WHITESPACE) &&
      (parser.state !== S.TEXT)) {
      error(parser, 'Unexpected end')
    }
    closeText(parser)
    parser.c = ''
    parser.closed = true
    emit(parser, 'onend')
    SAXParser.call(parser, parser.strict, parser.opt)
    return parser
  }

  function strictFail (parser, message) {
    if (typeof parser !== 'object' || !(parser instanceof SAXParser)) {
      throw new Error('bad call to strictFail')
    }
    if (parser.strict) {
      error(parser, message)
    }
  }

  function newTag (parser) {
    if (!parser.strict) parser.tagName = parser.tagName[parser.looseCase]()
    var parent = parser.tags[parser.tags.length - 1] || parser
    var tag = parser.tag = { name: parser.tagName, attributes: {} }

    // will be overridden if tag contails an xmlns="foo" or xmlns:foo="bar"
    if (parser.opt.xmlns) {
      tag.ns = parent.ns
    }
    parser.attribList.length = 0
    emitNode(parser, 'onopentagstart', tag)
  }

  function qname (name, attribute) {
    var i = name.indexOf(':')
    var qualName = i < 0 ? [ '', name ] : name.split(':')
    var prefix = qualName[0]
    var local = qualName[1]

    // <x "xmlns"="http://foo">
    if (attribute && name === 'xmlns') {
      prefix = 'xmlns'
      local = ''
    }

    return { prefix: prefix, local: local }
  }

  function attrib (parser) {
    if (!parser.strict) {
      parser.attribName = parser.attribName[parser.looseCase]()
    }

    if (parser.attribList.indexOf(parser.attribName) !== -1 ||
      parser.tag.attributes.hasOwnProperty(parser.attribName)) {
      parser.attribName = parser.attribValue = ''
      return
    }

    if (parser.opt.xmlns) {
      var qn = qname(parser.attribName, true)
      var prefix = qn.prefix
      var local = qn.local

      if (prefix === 'xmlns') {
        // namespace binding attribute. push the binding into scope
        if (local === 'xml' && parser.attribValue !== XML_NAMESPACE) {
          strictFail(parser,
            'xml: prefix must be bound to ' + XML_NAMESPACE + '\n' +
            'Actual: ' + parser.attribValue)
        } else if (local === 'xmlns' && parser.attribValue !== XMLNS_NAMESPACE) {
          strictFail(parser,
            'xmlns: prefix must be bound to ' + XMLNS_NAMESPACE + '\n' +
            'Actual: ' + parser.attribValue)
        } else {
          var tag = parser.tag
          var parent = parser.tags[parser.tags.length - 1] || parser
          if (tag.ns === parent.ns) {
            tag.ns = Object.create(parent.ns)
          }
          tag.ns[local] = parser.attribValue
        }
      }

      // defer onattribute events until all attributes have been seen
      // so any new bindings can take effect. preserve attribute order
      // so deferred events can be emitted in document order
      parser.attribList.push([parser.attribName, parser.attribValue])
    } else {
      // in non-xmlns mode, we can emit the event right away
      parser.tag.attributes[parser.attribName] = parser.attribValue
      emitNode(parser, 'onattribute', {
        name: parser.attribName,
        value: parser.attribValue
      })
    }

    parser.attribName = parser.attribValue = ''
  }

  function openTag (parser, selfClosing) {
    if (parser.opt.xmlns) {
      // emit namespace binding events
      var tag = parser.tag

      // add namespace info to tag
      var qn = qname(parser.tagName)
      tag.prefix = qn.prefix
      tag.local = qn.local
      tag.uri = tag.ns[qn.prefix] || ''

      if (tag.prefix && !tag.uri) {
        strictFail(parser, 'Unbound namespace prefix: ' +
          JSON.stringify(parser.tagName))
        tag.uri = qn.prefix
      }

      var parent = parser.tags[parser.tags.length - 1] || parser
      if (tag.ns && parent.ns !== tag.ns) {
        Object.keys(tag.ns).forEach(function (p) {
          emitNode(parser, 'onopennamespace', {
            prefix: p,
            uri: tag.ns[p]
          })
        })
      }

      // handle deferred onattribute events
      // Note: do not apply default ns to attributes:
      //   http://www.w3.org/TR/REC-xml-names/#defaulting
      for (var i = 0, l = parser.attribList.length; i < l; i++) {
        var nv = parser.attribList[i]
        var name = nv[0]
        var value = nv[1]
        var qualName = qname(name, true)
        var prefix = qualName.prefix
        var local = qualName.local
        var uri = prefix === '' ? '' : (tag.ns[prefix] || '')
        var a = {
          name: name,
          value: value,
          prefix: prefix,
          local: local,
          uri: uri
        }

        // if there's any attributes with an undefined namespace,
        // then fail on them now.
        if (prefix && prefix !== 'xmlns' && !uri) {
          strictFail(parser, 'Unbound namespace prefix: ' +
            JSON.stringify(prefix))
          a.uri = prefix
        }
        parser.tag.attributes[name] = a
        emitNode(parser, 'onattribute', a)
      }
      parser.attribList.length = 0
    }

    parser.tag.isSelfClosing = !!selfClosing

    // process the tag
    parser.sawRoot = true
    parser.tags.push(parser.tag)
    emitNode(parser, 'onopentag', parser.tag)
    if (!selfClosing) {
      // special case for <script> in non-strict mode.
      if (!parser.noscript && parser.tagName.toLowerCase() === 'script') {
        parser.state = S.SCRIPT
      } else {
        parser.state = S.TEXT
      }
      parser.tag = null
      parser.tagName = ''
    }
    parser.attribName = parser.attribValue = ''
    parser.attribList.length = 0
  }

  function closeTag (parser) {
    if (!parser.tagName) {
      strictFail(parser, 'Weird empty close tag.')
      parser.textNode += '</>'
      parser.state = S.TEXT
      return
    }

    if (parser.script) {
      if (parser.tagName !== 'script') {
        parser.script += '</' + parser.tagName + '>'
        parser.tagName = ''
        parser.state = S.SCRIPT
        return
      }
      emitNode(parser, 'onscript', parser.script)
      parser.script = ''
    }

    // first make sure that the closing tag actually exists.
    // <a><b></c></b></a> will close everything, otherwise.
    var t = parser.tags.length
    var tagName = parser.tagName
    if (!parser.strict) {
      tagName = tagName[parser.looseCase]()
    }
    var closeTo = tagName
    while (t--) {
      var close = parser.tags[t]
      if (close.name !== closeTo) {
        // fail the first time in strict mode
        strictFail(parser, 'Unexpected close tag')
      } else {
        break
      }
    }

    // didn't find it.  we already failed for strict, so just abort.
    if (t < 0) {
      strictFail(parser, 'Unmatched closing tag: ' + parser.tagName)
      parser.textNode += '</' + parser.tagName + '>'
      parser.state = S.TEXT
      return
    }
    parser.tagName = tagName
    var s = parser.tags.length
    while (s-- > t) {
      var tag = parser.tag = parser.tags.pop()
      parser.tagName = parser.tag.name
      emitNode(parser, 'onclosetag', parser.tagName)

      var x = {}
      for (var i in tag.ns) {
        x[i] = tag.ns[i]
      }

      var parent = parser.tags[parser.tags.length - 1] || parser
      if (parser.opt.xmlns && tag.ns !== parent.ns) {
        // remove namespace bindings introduced by tag
        Object.keys(tag.ns).forEach(function (p) {
          var n = tag.ns[p]
          emitNode(parser, 'onclosenamespace', { prefix: p, uri: n })
        })
      }
    }
    if (t === 0) parser.closedRoot = true
    parser.tagName = parser.attribValue = parser.attribName = ''
    parser.attribList.length = 0
    parser.state = S.TEXT
  }

  function parseEntity (parser) {
    var entity = parser.entity
    var entityLC = entity.toLowerCase()
    var num
    var numStr = ''

    if (parser.ENTITIES[entity]) {
      return parser.ENTITIES[entity]
    }
    if (parser.ENTITIES[entityLC]) {
      return parser.ENTITIES[entityLC]
    }
    entity = entityLC
    if (entity.charAt(0) === '#') {
      if (entity.charAt(1) === 'x') {
        entity = entity.slice(2)
        num = parseInt(entity, 16)
        numStr = num.toString(16)
      } else {
        entity = entity.slice(1)
        num = parseInt(entity, 10)
        numStr = num.toString(10)
      }
    }
    entity = entity.replace(/^0+/, '')
    if (numStr.toLowerCase() !== entity) {
      strictFail(parser, 'Invalid character entity')
      return '&' + parser.entity + ';'
    }

    return String.fromCodePoint(num)
  }

  function beginWhiteSpace (parser, c) {
    if (c === '<') {
      parser.state = S.OPEN_WAKA
      parser.startTagPosition = parser.position
    } else if (not(whitespace, c)) {
      // have to process this as a text node.
      // weird, but happens.
      strictFail(parser, 'Non-whitespace before first tag.')
      parser.textNode = c
      parser.state = S.TEXT
    }
  }

  function charAt (chunk, i) {
    var result = ''
    if (i < chunk.length) {
      result = chunk.charAt(i)
    }
    return result
  }

  function write (chunk) {
    var parser = this
    if (this.error) {
      throw this.error
    }
    if (parser.closed) {
      return error(parser,
        'Cannot write after close. Assign an onready handler.')
    }
    if (chunk === null) {
      return end(parser)
    }
    if (typeof chunk === 'object') {
      chunk = chunk.toString()
    }
    var i = 0
    var c = ''
    while (true) {
      c = charAt(chunk, i++)
      parser.c = c
      if (!c) {
        break
      }
      if (parser.trackPosition) {
        parser.position++
        if (c === '\n') {
          parser.line++
          parser.column = 0
        } else {
          parser.column++
        }
      }
      switch (parser.state) {
        case S.BEGIN:
          parser.state = S.BEGIN_WHITESPACE
          if (c === '\uFEFF') {
            continue
          }
          beginWhiteSpace(parser, c)
          continue

        case S.BEGIN_WHITESPACE:
          beginWhiteSpace(parser, c)
          continue

        case S.TEXT:
          if (parser.sawRoot && !parser.closedRoot) {
            var starti = i - 1
            while (c && c !== '<' && c !== '&') {
              c = charAt(chunk, i++)
              if (c && parser.trackPosition) {
                parser.position++
                if (c === '\n') {
                  parser.line++
                  parser.column = 0
                } else {
                  parser.column++
                }
              }
            }
            parser.textNode += chunk.substring(starti, i - 1)
          }
          if (c === '<' && !(parser.sawRoot && parser.closedRoot && !parser.strict)) {
            parser.state = S.OPEN_WAKA
            parser.startTagPosition = parser.position
          } else {
            if (not(whitespace, c) && (!parser.sawRoot || parser.closedRoot)) {
              strictFail(parser, 'Text data outside of root node.')
            }
            if (c === '&') {
              parser.state = S.TEXT_ENTITY
            } else {
              parser.textNode += c
            }
          }
          continue

        case S.SCRIPT:
          // only non-strict
          if (c === '<') {
            parser.state = S.SCRIPT_ENDING
          } else {
            parser.script += c
          }
          continue

        case S.SCRIPT_ENDING:
          if (c === '/') {
            parser.state = S.CLOSE_TAG
          } else {
            parser.script += '<' + c
            parser.state = S.SCRIPT
          }
          continue

        case S.OPEN_WAKA:
          // either a /, ?, !, or text is coming next.
          if (c === '!') {
            parser.state = S.SGML_DECL
            parser.sgmlDecl = ''
          } else if (is(whitespace, c)) {
            // wait for it...
          } else if (is(nameStart, c)) {
            parser.state = S.OPEN_TAG
            parser.tagName = c
          } else if (c === '/') {
            parser.state = S.CLOSE_TAG
            parser.tagName = ''
          } else if (c === '?') {
            parser.state = S.PROC_INST
            parser.procInstName = parser.procInstBody = ''
          } else {
            strictFail(parser, 'Unencoded <')
            // if there was some whitespace, then add that in.
            if (parser.startTagPosition + 1 < parser.position) {
              var pad = parser.position - parser.startTagPosition
              c = new Array(pad).join(' ') + c
            }
            parser.textNode += '<' + c
            parser.state = S.TEXT
          }
          continue

        case S.SGML_DECL:
          if ((parser.sgmlDecl + c).toUpperCase() === CDATA) {
            emitNode(parser, 'onopencdata')
            parser.state = S.CDATA
            parser.sgmlDecl = ''
            parser.cdata = ''
          } else if (parser.sgmlDecl + c === '--') {
            parser.state = S.COMMENT
            parser.comment = ''
            parser.sgmlDecl = ''
          } else if ((parser.sgmlDecl + c).toUpperCase() === DOCTYPE) {
            parser.state = S.DOCTYPE
            if (parser.doctype || parser.sawRoot) {
              strictFail(parser,
                'Inappropriately located doctype declaration')
            }
            parser.doctype = ''
            parser.sgmlDecl = ''
          } else if (c === '>') {
            emitNode(parser, 'onsgmldeclaration', parser.sgmlDecl)
            parser.sgmlDecl = ''
            parser.state = S.TEXT
          } else if (is(quote, c)) {
            parser.state = S.SGML_DECL_QUOTED
            parser.sgmlDecl += c
          } else {
            parser.sgmlDecl += c
          }
          continue

        case S.SGML_DECL_QUOTED:
          if (c === parser.q) {
            parser.state = S.SGML_DECL
            parser.q = ''
          }
          parser.sgmlDecl += c
          continue

        case S.DOCTYPE:
          if (c === '>') {
            parser.state = S.TEXT
            emitNode(parser, 'ondoctype', parser.doctype)
            parser.doctype = true // just remember that we saw it.
          } else {
            parser.doctype += c
            if (c === '[') {
              parser.state = S.DOCTYPE_DTD
            } else if (is(quote, c)) {
              parser.state = S.DOCTYPE_QUOTED
              parser.q = c
            }
          }
          continue

        case S.DOCTYPE_QUOTED:
          parser.doctype += c
          if (c === parser.q) {
            parser.q = ''
            parser.state = S.DOCTYPE
          }
          continue

        case S.DOCTYPE_DTD:
          parser.doctype += c
          if (c === ']') {
            parser.state = S.DOCTYPE
          } else if (is(quote, c)) {
            parser.state = S.DOCTYPE_DTD_QUOTED
            parser.q = c
          }
          continue

        case S.DOCTYPE_DTD_QUOTED:
          parser.doctype += c
          if (c === parser.q) {
            parser.state = S.DOCTYPE_DTD
            parser.q = ''
          }
          continue

        case S.COMMENT:
          if (c === '-') {
            parser.state = S.COMMENT_ENDING
          } else {
            parser.comment += c
          }
          continue

        case S.COMMENT_ENDING:
          if (c === '-') {
            parser.state = S.COMMENT_ENDED
            parser.comment = textopts(parser.opt, parser.comment)
            if (parser.comment) {
              emitNode(parser, 'oncomment', parser.comment)
            }
            parser.comment = ''
          } else {
            parser.comment += '-' + c
            parser.state = S.COMMENT
          }
          continue

        case S.COMMENT_ENDED:
          if (c !== '>') {
            strictFail(parser, 'Malformed comment')
            // allow <!-- blah -- bloo --> in non-strict mode,
            // which is a comment of " blah -- bloo "
            parser.comment += '--' + c
            parser.state = S.COMMENT
          } else {
            parser.state = S.TEXT
          }
          continue

        case S.CDATA:
          if (c === ']') {
            parser.state = S.CDATA_ENDING
          } else {
            parser.cdata += c
          }
          continue

        case S.CDATA_ENDING:
          if (c === ']') {
            parser.state = S.CDATA_ENDING_2
          } else {
            parser.cdata += ']' + c
            parser.state = S.CDATA
          }
          continue

        case S.CDATA_ENDING_2:
          if (c === '>') {
            if (parser.cdata) {
              emitNode(parser, 'oncdata', parser.cdata)
            }
            emitNode(parser, 'onclosecdata')
            parser.cdata = ''
            parser.state = S.TEXT
          } else if (c === ']') {
            parser.cdata += ']'
          } else {
            parser.cdata += ']]' + c
            parser.state = S.CDATA
          }
          continue

        case S.PROC_INST:
          if (c === '?') {
            parser.state = S.PROC_INST_ENDING
          } else if (is(whitespace, c)) {
            parser.state = S.PROC_INST_BODY
          } else {
            parser.procInstName += c
          }
          continue

        case S.PROC_INST_BODY:
          if (!parser.procInstBody && is(whitespace, c)) {
            continue
          } else if (c === '?') {
            parser.state = S.PROC_INST_ENDING
          } else {
            parser.procInstBody += c
          }
          continue

        case S.PROC_INST_ENDING:
          if (c === '>') {
            emitNode(parser, 'onprocessinginstruction', {
              name: parser.procInstName,
              body: parser.procInstBody
            })
            parser.procInstName = parser.procInstBody = ''
            parser.state = S.TEXT
          } else {
            parser.procInstBody += '?' + c
            parser.state = S.PROC_INST_BODY
          }
          continue

        case S.OPEN_TAG:
          if (is(nameBody, c)) {
            parser.tagName += c
          } else {
            newTag(parser)
            if (c === '>') {
              openTag(parser)
            } else if (c === '/') {
              parser.state = S.OPEN_TAG_SLASH
            } else {
              if (not(whitespace, c)) {
                strictFail(parser, 'Invalid character in tag name')
              }
              parser.state = S.ATTRIB
            }
          }
          continue

        case S.OPEN_TAG_SLASH:
          if (c === '>') {
            openTag(parser, true)
            closeTag(parser)
          } else {
            strictFail(parser, 'Forward-slash in opening tag not followed by >')
            parser.state = S.ATTRIB
          }
          continue

        case S.ATTRIB:
          // haven't read the attribute name yet.
          if (is(whitespace, c)) {
            continue
          } else if (c === '>') {
            openTag(parser)
          } else if (c === '/') {
            parser.state = S.OPEN_TAG_SLASH
          } else if (is(nameStart, c)) {
            parser.attribName = c
            parser.attribValue = ''
            parser.state = S.ATTRIB_NAME
          } else {
            strictFail(parser, 'Invalid attribute name')
          }
          continue

        case S.ATTRIB_NAME:
          if (c === '=') {
            parser.state = S.ATTRIB_VALUE
          } else if (c === '>') {
            strictFail(parser, 'Attribute without value')
            parser.attribValue = parser.attribName
            attrib(parser)
            openTag(parser)
          } else if (is(whitespace, c)) {
            parser.state = S.ATTRIB_NAME_SAW_WHITE
          } else if (is(nameBody, c)) {
            parser.attribName += c
          } else {
            strictFail(parser, 'Invalid attribute name')
          }
          continue

        case S.ATTRIB_NAME_SAW_WHITE:
          if (c === '=') {
            parser.state = S.ATTRIB_VALUE
          } else if (is(whitespace, c)) {
            continue
          } else {
            strictFail(parser, 'Attribute without value')
            parser.tag.attributes[parser.attribName] = ''
            parser.attribValue = ''
            emitNode(parser, 'onattribute', {
              name: parser.attribName,
              value: ''
            })
            parser.attribName = ''
            if (c === '>') {
              openTag(parser)
            } else if (is(nameStart, c)) {
              parser.attribName = c
              parser.state = S.ATTRIB_NAME
            } else {
              strictFail(parser, 'Invalid attribute name')
              parser.state = S.ATTRIB
            }
          }
          continue

        case S.ATTRIB_VALUE:
          if (is(whitespace, c)) {
            continue
          } else if (is(quote, c)) {
            parser.q = c
            parser.state = S.ATTRIB_VALUE_QUOTED
          } else {
            strictFail(parser, 'Unquoted attribute value')
            parser.state = S.ATTRIB_VALUE_UNQUOTED
            parser.attribValue = c
          }
          continue

        case S.ATTRIB_VALUE_QUOTED:
          if (c !== parser.q) {
            if (c === '&') {
              parser.state = S.ATTRIB_VALUE_ENTITY_Q
            } else {
              parser.attribValue += c
            }
            continue
          }
          attrib(parser)
          parser.q = ''
          parser.state = S.ATTRIB_VALUE_CLOSED
          continue

        case S.ATTRIB_VALUE_CLOSED:
          if (is(whitespace, c)) {
            parser.state = S.ATTRIB
          } else if (c === '>') {
            openTag(parser)
          } else if (c === '/') {
            parser.state = S.OPEN_TAG_SLASH
          } else if (is(nameStart, c)) {
            strictFail(parser, 'No whitespace between attributes')
            parser.attribName = c
            parser.attribValue = ''
            parser.state = S.ATTRIB_NAME
          } else {
            strictFail(parser, 'Invalid attribute name')
          }
          continue

        case S.ATTRIB_VALUE_UNQUOTED:
          if (not(attribEnd, c)) {
            if (c === '&') {
              parser.state = S.ATTRIB_VALUE_ENTITY_U
            } else {
              parser.attribValue += c
            }
            continue
          }
          attrib(parser)
          if (c === '>') {
            openTag(parser)
          } else {
            parser.state = S.ATTRIB
          }
          continue

        case S.CLOSE_TAG:
          if (!parser.tagName) {
            if (is(whitespace, c)) {
              continue
            } else if (not(nameStart, c)) {
              if (parser.script) {
                parser.script += '</' + c
                parser.state = S.SCRIPT
              } else {
                strictFail(parser, 'Invalid tagname in closing tag.')
              }
            } else {
              parser.tagName = c
            }
          } else if (c === '>') {
            closeTag(parser)
          } else if (is(nameBody, c)) {
            parser.tagName += c
          } else if (parser.script) {
            parser.script += '</' + parser.tagName
            parser.tagName = ''
            parser.state = S.SCRIPT
          } else {
            if (not(whitespace, c)) {
              strictFail(parser, 'Invalid tagname in closing tag')
            }
            parser.state = S.CLOSE_TAG_SAW_WHITE
          }
          continue

        case S.CLOSE_TAG_SAW_WHITE:
          if (is(whitespace, c)) {
            continue
          }
          if (c === '>') {
            closeTag(parser)
          } else {
            strictFail(parser, 'Invalid characters in closing tag')
          }
          continue

        case S.TEXT_ENTITY:
        case S.ATTRIB_VALUE_ENTITY_Q:
        case S.ATTRIB_VALUE_ENTITY_U:
          var returnState
          var buffer
          switch (parser.state) {
            case S.TEXT_ENTITY:
              returnState = S.TEXT
              buffer = 'textNode'
              break

            case S.ATTRIB_VALUE_ENTITY_Q:
              returnState = S.ATTRIB_VALUE_QUOTED
              buffer = 'attribValue'
              break

            case S.ATTRIB_VALUE_ENTITY_U:
              returnState = S.ATTRIB_VALUE_UNQUOTED
              buffer = 'attribValue'
              break
          }

          if (c === ';') {
            parser[buffer] += parseEntity(parser)
            parser.entity = ''
            parser.state = returnState
          } else if (is(parser.entity.length ? entityBody : entityStart, c)) {
            parser.entity += c
          } else {
            strictFail(parser, 'Invalid character in entity name')
            parser[buffer] += '&' + parser.entity + c
            parser.entity = ''
            parser.state = returnState
          }

          continue

        default:
          throw new Error(parser, 'Unknown state: ' + parser.state)
      }
    } // while

    if (parser.position >= parser.bufferCheckPosition) {
      checkBufferLength(parser)
    }
    return parser
  }

  /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */
  if (!String.fromCodePoint) {
    (function () {
      var stringFromCharCode = String.fromCharCode
      var floor = Math.floor
      var fromCodePoint = function () {
        var MAX_SIZE = 0x4000
        var codeUnits = []
        var highSurrogate
        var lowSurrogate
        var index = -1
        var length = arguments.length
        if (!length) {
          return ''
        }
        var result = ''
        while (++index < length) {
          var codePoint = Number(arguments[index])
          if (
            !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`
            codePoint < 0 || // not a valid Unicode code point
            codePoint > 0x10FFFF || // not a valid Unicode code point
            floor(codePoint) !== codePoint // not an integer
          ) {
            throw RangeError('Invalid code point: ' + codePoint)
          }
          if (codePoint <= 0xFFFF) { // BMP code point
            codeUnits.push(codePoint)
          } else { // Astral code point; split in surrogate halves
            // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
            codePoint -= 0x10000
            highSurrogate = (codePoint >> 10) + 0xD800
            lowSurrogate = (codePoint % 0x400) + 0xDC00
            codeUnits.push(highSurrogate, lowSurrogate)
          }
          if (index + 1 === length || codeUnits.length > MAX_SIZE) {
            result += stringFromCharCode.apply(null, codeUnits)
            codeUnits.length = 0
          }
        }
        return result
      }
      if (Object.defineProperty) {
        Object.defineProperty(String, 'fromCodePoint', {
          value: fromCodePoint,
          configurable: true,
          writable: true
        })
      } else {
        String.fromCodePoint = fromCodePoint
      }
    }())
  }
})(typeof exports === 'undefined' ? this.sax = {} : exports)

},{"stream":"../node_modules/stream-browserify/index.js","string_decoder":"../node_modules/string_decoder/lib/string_decoder.js","buffer":"../node_modules/buffer/index.js"}],"../node_modules/imsc/src/main/js/doc.js":[function(require,module,exports) {
/* 
 * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/**
 * @module imscDoc
 */

;
(function (imscDoc, sax, imscNames, imscStyles, imscUtils) {


    /**
     * Allows a client to provide callbacks to handle children of the <metadata> element
     * @typedef {Object} MetadataHandler
     * @property {?OpenTagCallBack} onOpenTag
     * @property {?CloseTagCallBack} onCloseTag
     * @property {?TextCallBack} onText
     */

    /**
     * Called when the opening tag of an element node is encountered.
     * @callback OpenTagCallBack
     * @param {string} ns Namespace URI of the element
     * @param {string} name Local name of the element
     * @param {Object[]} attributes List of attributes, each consisting of a
     *                              `uri`, `name` and `value`
     */

    /**
     * Called when the closing tag of an element node is encountered.
     * @callback CloseTagCallBack
     */

    /**
     * Called when a text node is encountered.
     * @callback TextCallBack
     * @param {string} contents Contents of the text node
     */

    /**
     * Parses an IMSC1 document into an opaque in-memory representation that exposes
     * a single method <pre>getMediaTimeEvents()</pre> that returns a list of time
     * offsets (in seconds) of the ISD, i.e. the points in time where the visual
     * representation of the document change. `metadataHandler` allows the caller to
     * be called back when nodes are present in <metadata> elements. 
     * 
     * @param {string} xmlstring XML document
     * @param {?module:imscUtils.ErrorHandler} errorHandler Error callback
     * @param {?MetadataHandler} metadataHandler Callback for <Metadata> elements
     * @returns {Object} Opaque in-memory representation of an IMSC1 document
     */

    imscDoc.fromXML = function (xmlstring, errorHandler, metadataHandler) {
        var p = sax.parser(true, {xmlns: true});
        var estack = [];
        var xmllangstack = [];
        var xmlspacestack = [];
        var metadata_depth = 0;
        var doc = null;

        p.onclosetag = function (node) {

            if (estack[0] instanceof Styling) {

                /* flatten chained referential styling */

                for (var sid in estack[0].styles) {

                    mergeChainedStyles(estack[0], estack[0].styles[sid], errorHandler);

                }

            } else if (estack[0] instanceof P || estack[0] instanceof Span) {

                /* merge anonymous spans */

                if (estack[0].contents.length > 1) {

                    var cs = [estack[0].contents[0]];

                    var c;

                    for (c = 1; c < estack[0].contents.length; c++) {

                        if (estack[0].contents[c] instanceof AnonymousSpan &&
                                cs[cs.length - 1] instanceof AnonymousSpan) {

                            cs[cs.length - 1].text += estack[0].contents[c].text;

                        } else {

                            cs.push(estack[0].contents[c]);

                        }

                    }

                    estack[0].contents = cs;

                }

                // remove redundant nested anonymous spans (9.3.3(1)(c))

                if (estack[0] instanceof Span &&
                        estack[0].contents.length === 1 &&
                        estack[0].contents[0] instanceof AnonymousSpan) {

                    estack[0].text = estack[0].contents[0].text;
                    delete estack[0].contents;

                }

            } else if (estack[0] instanceof ForeignElement) {

                if (estack[0].node.uri === imscNames.ns_tt &&
                        estack[0].node.local === 'metadata') {

                    /* leave the metadata element */

                    metadata_depth--;

                } else if (metadata_depth > 0 &&
                        metadataHandler &&
                        'onCloseTag' in metadataHandler) {

                    /* end of child of metadata element */

                    metadataHandler.onCloseTag();

                }

            }

            // TODO: delete stylerefs?

            // maintain the xml:space stack

            xmlspacestack.shift();

            // maintain the xml:lang stack

            xmllangstack.shift();

            // prepare for the next element

            estack.shift();
        };

        p.ontext = function (str) {

            if (estack[0] === undefined) {

                /* ignoring text outside of elements */

            } else if (estack[0] instanceof Span || estack[0] instanceof P) {

                /* ignore children text nodes in ruby container spans */

                if (estack[0] instanceof Span) {

                    var ruby = estack[0].styleAttrs[imscStyles.byName.ruby.qname];

                    if (ruby === 'container' || ruby === 'textContainer' || ruby === 'baseContainer') {

                        return;

                    }

                }

                /* create an anonymous span */

                var s = new AnonymousSpan();

                s.initFromText(doc, estack[0], str, xmlspacestack[0], errorHandler);

                estack[0].contents.push(s);

            } else if (estack[0] instanceof ForeignElement &&
                    metadata_depth > 0 &&
                    metadataHandler &&
                    'onText' in metadataHandler) {

                /* text node within a child of metadata element */

                metadataHandler.onText(str);

            }

        };


        p.onopentag = function (node) {

            // maintain the xml:space stack

            var xmlspace = node.attributes["xml:space"];

            if (xmlspace) {

                xmlspacestack.unshift(xmlspace.value);

            } else {

                if (xmlspacestack.length === 0) {

                    xmlspacestack.unshift("default");

                } else {

                    xmlspacestack.unshift(xmlspacestack[0]);

                }

            }

            /* maintain the xml:lang stack */


            var xmllang = node.attributes["xml:lang"];

            if (xmllang) {

                xmllangstack.unshift(xmllang.value);

            } else {

                if (xmllangstack.length === 0) {

                    xmllangstack.unshift("");

                } else {

                    xmllangstack.unshift(xmllangstack[0]);

                }

            }


            /* process the element */

            if (node.uri === imscNames.ns_tt) {

                if (node.local === 'tt') {

                    if (doc !== null) {

                        reportFatal(errorHandler, "Two <tt> elements at (" + this.line + "," + this.column + ")");

                    }

                    doc = new TT();

                    doc.initFromNode(node, errorHandler);

                    estack.unshift(doc);

                } else if (node.local === 'head') {

                    if (!(estack[0] instanceof TT)) {
                        reportFatal(errorHandler, "Parent of <head> element is not <tt> at (" + this.line + "," + this.column + ")");
                    }

                    estack.unshift(doc.head);

                } else if (node.local === 'styling') {

                    if (!(estack[0] instanceof Head)) {
                        reportFatal(errorHandler, "Parent of <styling> element is not <head> at (" + this.line + "," + this.column + ")");
                    }

                    estack.unshift(doc.head.styling);

                } else if (node.local === 'style') {

                    var s;

                    if (estack[0] instanceof Styling) {

                        s = new Style();

                        s.initFromNode(node, errorHandler);

                        /* ignore <style> element missing @id */

                        if (!s.id) {

                            reportError(errorHandler, "<style> element missing @id attribute");

                        } else {

                            doc.head.styling.styles[s.id] = s;

                        }

                        estack.unshift(s);

                    } else if (estack[0] instanceof Region) {

                        /* nested styles can be merged with specified styles
                         * immediately, with lower priority
                         * (see 8.4.4.2(3) at TTML1 )
                         */

                        s = new Style();

                        s.initFromNode(node, errorHandler);

                        mergeStylesIfNotPresent(s.styleAttrs, estack[0].styleAttrs);

                        estack.unshift(s);

                    } else {

                        reportFatal(errorHandler, "Parent of <style> element is not <styling> or <region> at (" + this.line + "," + this.column + ")");

                    }

                }  else if (node.local === 'initial') {

                    var ini;

                    if (estack[0] instanceof Styling) {

                        ini = new Initial();

                        ini.initFromNode(node, errorHandler);
                        
                        for (var qn in ini.styleAttrs) {
                            
                            doc.head.styling.initials[qn] = ini.styleAttrs[qn];
                            
                        }
                        
                        estack.unshift(ini);

                    } else {

                        reportFatal(errorHandler, "Parent of <initial> element is not <styling> at (" + this.line + "," + this.column + ")");

                    }

                } else if (node.local === 'layout') {

                    if (!(estack[0] instanceof Head)) {

                        reportFatal(errorHandler, "Parent of <layout> element is not <head> at " + this.line + "," + this.column + ")");

                    }

                    estack.unshift(doc.head.layout);

                } else if (node.local === 'region') {

                    if (!(estack[0] instanceof Layout)) {
                        reportFatal(errorHandler, "Parent of <region> element is not <layout> at " + this.line + "," + this.column + ")");
                    }

                    var r = new Region();

                    r.initFromNode(doc, node, errorHandler);

                    if (!r.id || r.id in doc.head.layout.regions) {

                        reportError(errorHandler, "Ignoring <region> with duplicate or missing @id at " + this.line + "," + this.column + ")");

                    } else {

                        doc.head.layout.regions[r.id] = r;

                    }

                    estack.unshift(r);

                } else if (node.local === 'body') {

                    if (!(estack[0] instanceof TT)) {

                        reportFatal(errorHandler, "Parent of <body> element is not <tt> at " + this.line + "," + this.column + ")");

                    }

                    if (doc.body !== null) {

                        reportFatal(errorHandler, "Second <body> element at " + this.line + "," + this.column + ")");

                    }

                    var b = new Body();

                    b.initFromNode(doc, node, errorHandler);

                    doc.body = b;

                    estack.unshift(b);

                } else if (node.local === 'div') {

                    if (!(estack[0] instanceof Div || estack[0] instanceof Body)) {

                        reportFatal(errorHandler, "Parent of <div> element is not <body> or <div> at " + this.line + "," + this.column + ")");

                    }

                    var d = new Div();

                    d.initFromNode(doc, estack[0], node, errorHandler);
                    
                    /* transform smpte:backgroundImage to TTML2 image element */
                    
                    var bi = d.styleAttrs[imscStyles.byName.backgroundImage.qname];
                    
                    if (bi) {
                        d.contents.push(new Image(bi));
                        delete d.styleAttrs[imscStyles.byName.backgroundImage.qname];                  
                    }

                    estack[0].contents.push(d);

                    estack.unshift(d);

                } else if (node.local === 'image') {

                    if (!(estack[0] instanceof Div)) {

                        reportFatal(errorHandler, "Parent of <image> element is not <div> at " + this.line + "," + this.column + ")");

                    }

                    var img = new Image();
                    
                    img.initFromNode(doc, estack[0], node, errorHandler);
                    
                    estack[0].contents.push(img);

                    estack.unshift(img);

                } else if (node.local === 'p') {

                    if (!(estack[0] instanceof Div)) {

                        reportFatal(errorHandler, "Parent of <p> element is not <div> at " + this.line + "," + this.column + ")");

                    }

                    var p = new P();

                    p.initFromNode(doc, estack[0], node, errorHandler);

                    estack[0].contents.push(p);

                    estack.unshift(p);

                } else if (node.local === 'span') {

                    if (!(estack[0] instanceof Span || estack[0] instanceof P)) {

                        reportFatal(errorHandler, "Parent of <span> element is not <span> or <p> at " + this.line + "," + this.column + ")");

                    }

                    var ns = new Span();

                    ns.initFromNode(doc, estack[0], node, xmlspacestack[0], errorHandler);

                    estack[0].contents.push(ns);

                    estack.unshift(ns);

                } else if (node.local === 'br') {

                    if (!(estack[0] instanceof Span || estack[0] instanceof P)) {

                        reportFatal(errorHandler, "Parent of <br> element is not <span> or <p> at " + this.line + "," + this.column + ")");

                    }

                    var nb = new Br();

                    nb.initFromNode(doc, estack[0], node, errorHandler);

                    estack[0].contents.push(nb);

                    estack.unshift(nb);

                } else if (node.local === 'set') {

                    if (!(estack[0] instanceof Span ||
                            estack[0] instanceof P ||
                            estack[0] instanceof Div ||
                            estack[0] instanceof Body ||
                            estack[0] instanceof Region ||
                            estack[0] instanceof Br)) {

                        reportFatal(errorHandler, "Parent of <set> element is not a content element or a region at " + this.line + "," + this.column + ")");

                    }

                    var st = new Set();

                    st.initFromNode(doc, estack[0], node, errorHandler);

                    estack[0].sets.push(st);

                    estack.unshift(st);

                } else {

                    /* element in the TT namespace, but not a content element */

                    estack.unshift(new ForeignElement(node));
                }

            } else {

                /* ignore elements not in the TTML namespace unless in metadata element */

                estack.unshift(new ForeignElement(node));

            }

            /* handle metadata callbacks */

            if (estack[0] instanceof ForeignElement) {

                if (node.uri === imscNames.ns_tt &&
                        node.local === 'metadata') {

                    /* enter the metadata element */

                    metadata_depth++;

                } else if (
                        metadata_depth > 0 &&
                        metadataHandler &&
                        'onOpenTag' in metadataHandler
                        ) {

                    /* start of child of metadata element */

                    var attrs = [];

                    for (var a in node.attributes) {
                        attrs[node.attributes[a].uri + " " + node.attributes[a].local] =
                                {
                                    uri: node.attributes[a].uri,
                                    local: node.attributes[a].local,
                                    value: node.attributes[a].value
                                };
                    }

                    metadataHandler.onOpenTag(node.uri, node.local, attrs);

                }

            }

        };

        // parse the document

        p.write(xmlstring).close();

        // all referential styling has been flatten, so delete styles

        delete doc.head.styling.styles;
       
        // create default region if no regions specified

        var hasRegions = false;

        /* AFAIK the only way to determine whether an object has members */

        for (var i in doc.head.layout.regions) {

            hasRegions = true;

            break;

        }

        if (!hasRegions) {

            /* create default region */

            var dr = Region.prototype.createDefaultRegion();

            doc.head.layout.regions[dr.id] = dr;

        }

        /* resolve desired timing for regions */

        for (var region_i in doc.head.layout.regions) {

            resolveTiming(doc, doc.head.layout.regions[region_i], null, null);

        }

        /* resolve desired timing for content elements */

        if (doc.body) {
            resolveTiming(doc, doc.body, null, null);
        }

        /* remove undefined spans in ruby containers */

        if (doc.body) {
            cleanRubyContainers(doc.body);
        }

        return doc;
    };

    function cleanRubyContainers(element) {
        
        if (! ('contents' in element)) return;

        var rubyval = 'styleAttrs' in element ? element.styleAttrs[imscStyles.byName.ruby.qname] : null;

        var isrubycontainer = (element.kind === 'span' && (rubyval === "container" || rubyval === "textContainer" || rubyval === "baseContainer"));

        for (var i = element.contents.length - 1; i >= 0; i--) {

            if (isrubycontainer && !('styleAttrs' in element.contents[i] && imscStyles.byName.ruby.qname in element.contents[i].styleAttrs)) {

                /* prune undefined <span> in ruby containers */

                delete element.contents[i];

            } else {

                cleanRubyContainers(element.contents[i]);

            }

        }

    }

    function resolveTiming(doc, element, prev_sibling, parent) {

        /* are we in a seq container? */

        var isinseq = parent && parent.timeContainer === "seq";

        /* determine implicit begin */

        var implicit_begin = 0; /* default */

        if (parent) {

            if (isinseq && prev_sibling) {

                /*
                 * if seq time container, offset from the previous sibling end
                 */

                implicit_begin = prev_sibling.end;


            } else {

                implicit_begin = parent.begin;

            }

        }

        /* compute desired begin */

        element.begin = element.explicit_begin ? element.explicit_begin + implicit_begin : implicit_begin;


        /* determine implicit end */

        var implicit_end = element.begin;

        var s = null;

        for (var set_i in element.sets) {

            resolveTiming(doc, element.sets[set_i], s, element);

            if (element.timeContainer === "seq") {

                implicit_end = element.sets[set_i].end;

            } else {

                implicit_end = Math.max(implicit_end, element.sets[set_i].end);

            }

            s = element.sets[set_i];

        }

        if (!('contents' in element)) {

            /* anonymous spans and regions and <set> and <br>s and spans with only children text nodes */

            if (isinseq) {

                /* in seq container, implicit duration is zero */

                implicit_end = element.begin;

            } else {

                /* in par container, implicit duration is indefinite */

                implicit_end = Number.POSITIVE_INFINITY;

            }

        } else {

            for (var content_i in element.contents) {

                resolveTiming(doc, element.contents[content_i], s, element);

                if (element.timeContainer === "seq") {

                    implicit_end = element.contents[content_i].end;

                } else {

                    implicit_end = Math.max(implicit_end, element.contents[content_i].end);

                }

                s = element.contents[content_i];

            }

        }

        /* determine desired end */
        /* it is never made really clear in SMIL that the explicit end is offset by the implicit begin */

        if (element.explicit_end !== null && element.explicit_dur !== null) {

            element.end = Math.min(element.begin + element.explicit_dur, implicit_begin + element.explicit_end);

        } else if (element.explicit_end === null && element.explicit_dur !== null) {

            element.end = element.begin + element.explicit_dur;

        } else if (element.explicit_end !== null && element.explicit_dur === null) {

            element.end = implicit_begin + element.explicit_end;

        } else {

            element.end = implicit_end;
        }

        delete element.explicit_begin;
        delete element.explicit_dur;
        delete element.explicit_end;

        doc._registerEvent(element);

    }

    function ForeignElement(node) {
        this.node = node;
    }

    function TT() {
        this.events = [];
        this.head = new Head();
        this.body = null;
    }

    TT.prototype.initFromNode = function (node, errorHandler) {

        /* compute cell resolution */

        var cr = extractCellResolution(node, errorHandler);
        
        this.cellLength = {
                'h': new imscUtils.ComputedLength(0, 1/cr.h),
                'w': new imscUtils.ComputedLength(1/cr.w, 0)
            };

        /* extract frame rate and tick rate */

        var frtr = extractFrameAndTickRate(node, errorHandler);

        this.effectiveFrameRate = frtr.effectiveFrameRate;

        this.tickRate = frtr.tickRate;

        /* extract aspect ratio */

        this.aspectRatio = extractAspectRatio(node, errorHandler);

        /* check timebase */

        var attr = findAttribute(node, imscNames.ns_ttp, "timeBase");

        if (attr !== null && attr !== "media") {

            reportFatal(errorHandler, "Unsupported time base");

        }

        /* retrieve extent */

        var e = extractExtent(node, errorHandler);

        if (e === null) {

            this.pxLength = {
                'h': null,
                'w': null
            };

        } else {

            if (e.h.unit !== "px" || e.w.unit !== "px") {
                reportFatal(errorHandler, "Extent on TT must be in px or absent");
            }

            this.pxLength = {
                'h': new imscUtils.ComputedLength(0, 1 / e.h.value),
                'w': new imscUtils.ComputedLength(1 / e.w.value, 0)
            };
        }
        
        /** set root container dimensions to (1, 1) arbitrarily
          * the root container is mapped to actual dimensions at rendering
        **/
        
        this.dimensions = {
                'h': new imscUtils.ComputedLength(0, 1),
                'w': new imscUtils.ComputedLength(1, 0)
    };

    };

    /* register a temporal events */
    TT.prototype._registerEvent = function (elem) {

        /* skip if begin is not < then end */

        if (elem.end <= elem.begin)
            return;

        /* index the begin time of the event */

        var b_i = indexOf(this.events, elem.begin);

        if (!b_i.found) {
            this.events.splice(b_i.index, 0, elem.begin);
        }

        /* index the end time of the event */

        if (elem.end !== Number.POSITIVE_INFINITY) {

            var e_i = indexOf(this.events, elem.end);

            if (!e_i.found) {
                this.events.splice(e_i.index, 0, elem.end);
            }

        }

    };


    /*
     * Retrieves the range of ISD times covered by the document
     * 
     * @returns {Array} Array of two elements: min_begin_time and max_begin_time
     * 
     */
    TT.prototype.getMediaTimeRange = function () {

        return [this.events[0], this.events[this.events.length - 1]];
    };

    /*
     * Returns list of ISD begin times  
     * 
     * @returns {Array}
     */
    TT.prototype.getMediaTimeEvents = function () {

        return this.events;
    };

    /*
     * Represents a TTML Head element
     */

    function Head() {
        this.styling = new Styling();
        this.layout = new Layout();
    }

    /*
     * Represents a TTML Styling element
     */

    function Styling() {
        this.styles = {};
        this.initials = {};
    }

    /*
     * Represents a TTML Style element
     */

    function Style() {
        this.id = null;
        this.styleAttrs = null;
        this.styleRefs = null;
    }

    Style.prototype.initFromNode = function (node, errorHandler) {
        this.id = elementGetXMLID(node);
        this.styleAttrs = elementGetStyles(node, errorHandler);
        this.styleRefs = elementGetStyleRefs(node);
    };
    
    /*
     * Represents a TTML initial element
     */

    function Initial() {
        this.styleAttrs = null;
    }

    Initial.prototype.initFromNode = function (node, errorHandler) {
        
        this.styleAttrs = {};
        
        for (var i in node.attributes) {

            if (node.attributes[i].uri === imscNames.ns_itts ||
                node.attributes[i].uri === imscNames.ns_ebutts ||
                node.attributes[i].uri === imscNames.ns_tts) {
                
                var qname = node.attributes[i].uri + " " + node.attributes[i].local;
                
                this.styleAttrs[qname] = node.attributes[i].value;

            }
        }
        
    };

    /*
     * Represents a TTML Layout element
     * 
     */

    function Layout() {
        this.regions = {};
    }
    
    /*
     * Represents a TTML image element
     */

    function Image(src, type) {
        ContentElement.call(this, 'image');
        this.src = src;
        this.type = type;
    }

    Image.prototype.initFromNode = function (doc, parent, node, errorHandler) {
        this.src = 'src' in node.attributes ? node.attributes.src.value : null;
        
        if (! this.src) {
            reportError(errorHandler, "Invalid image@src attribute");
        }
        
        this.type = 'type' in node.attributes ? node.attributes.type.value : null;
        
        if (! this.type) {
            reportError(errorHandler, "Invalid image@type attribute");
        }
        
        StyledElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);
        TimedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);
        AnimatedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);
        LayoutElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);
    };

    /*
     * TTML element utility functions
     * 
     */

    function ContentElement(kind) {
        this.kind = kind;
    }

    function IdentifiedElement(id) {
        this.id = id;
    }

    IdentifiedElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {
        this.id = elementGetXMLID(node);
    };

    function LayoutElement(id) {
        this.regionID = id;
    }

    LayoutElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {
        this.regionID = elementGetRegionID(node);
    };

    function StyledElement(styleAttrs) {
        this.styleAttrs = styleAttrs;
    }

    StyledElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {

        this.styleAttrs = elementGetStyles(node, errorHandler);

        if (doc.head !== null && doc.head.styling !== null) {
            mergeReferencedStyles(doc.head.styling, elementGetStyleRefs(node), this.styleAttrs, errorHandler);
        }

    };

    function AnimatedElement(sets) {
        this.sets = sets;
    }

    AnimatedElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {
        this.sets = [];
    };

    function ContainerElement(contents) {
        this.contents = contents;
    }

    ContainerElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {
        this.contents = [];
    };

    function TimedElement(explicit_begin, explicit_end, explicit_dur) {
        this.explicit_begin = explicit_begin;
        this.explicit_end = explicit_end;
        this.explicit_dur = explicit_dur;
    }

    TimedElement.prototype.initFromNode = function (doc, parent, node, errorHandler) {
        var t = processTiming(doc, parent, node, errorHandler);
        this.explicit_begin = t.explicit_begin;
        this.explicit_end = t.explicit_end;
        this.explicit_dur = t.explicit_dur;

        this.timeContainer = elementGetTimeContainer(node, errorHandler);
    };


    /*
     * Represents a TTML body element
     */



    function Body() {
        ContentElement.call(this, 'body');
    }


    Body.prototype.initFromNode = function (doc, node, errorHandler) {
        StyledElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);
        TimedElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);
        AnimatedElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);
        LayoutElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);
        ContainerElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);
    };

    /*
     * Represents a TTML div element
     */

    function Div() {
        ContentElement.call(this, 'div');
    }

    Div.prototype.initFromNode = function (doc, parent, node, errorHandler) {
        StyledElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);
        TimedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);
        AnimatedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);
        LayoutElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);
        ContainerElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);
    };

    /*
     * Represents a TTML p element
     */

    function P() {
        ContentElement.call(this, 'p');
    }

    P.prototype.initFromNode = function (doc, parent, node, errorHandler) {
        StyledElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);
        TimedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);
        AnimatedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);
        LayoutElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);
        ContainerElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);
    };

    /*
     * Represents a TTML span element
     */

    function Span() {
        ContentElement.call(this, 'span');
    }

    Span.prototype.initFromNode = function (doc, parent, node, xmlspace, errorHandler) {
        StyledElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);
        TimedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);
        AnimatedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);
        LayoutElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);
        ContainerElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);

        this.space = xmlspace;
    };

    /*
     * Represents a TTML anonymous span element
     */

    function AnonymousSpan() {
        ContentElement.call(this, 'span');
    }

    AnonymousSpan.prototype.initFromText = function (doc, parent, text, xmlspace, errorHandler) {
        TimedElement.prototype.initFromNode.call(this, doc, parent, null, errorHandler);

        this.text = text;
        this.space = xmlspace;
    };

    /*
     * Represents a TTML br element
     */

    function Br() {
        ContentElement.call(this, 'br');
    }

    Br.prototype.initFromNode = function (doc, parent, node, errorHandler) {
        LayoutElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);
        TimedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);
    };

    /*
     * Represents a TTML Region element
     * 
     */

    function Region() {
    }

    Region.prototype.createDefaultRegion = function () {
        var r = new Region();

        IdentifiedElement.call(r, '');
        StyledElement.call(r, {});
        AnimatedElement.call(r, []);
        TimedElement.call(r, 0, Number.POSITIVE_INFINITY, null);

        return r;
    };

    Region.prototype.initFromNode = function (doc, node, errorHandler) {
        IdentifiedElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);
        StyledElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);
        TimedElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);
        AnimatedElement.prototype.initFromNode.call(this, doc, null, node, errorHandler);

        /* immediately merge referenced styles */

        if (doc.head !== null && doc.head.styling !== null) {
            mergeReferencedStyles(doc.head.styling, elementGetStyleRefs(node), this.styleAttrs, errorHandler);
        }

    };

    /*
     * Represents a TTML Set element
     * 
     */

    function Set() {
    }

    Set.prototype.initFromNode = function (doc, parent, node, errorHandler) {

        TimedElement.prototype.initFromNode.call(this, doc, parent, node, errorHandler);

        var styles = elementGetStyles(node, errorHandler);

        this.qname = null;
        this.value = null;

        for (var qname in styles) {

            if (this.qname) {

                reportError(errorHandler, "More than one style specified on set");
                break;

            }

            this.qname = qname;
            this.value = styles[qname];

        }

    };

    /*
     * Utility functions
     * 
     */


    function elementGetXMLID(node) {
        return node && 'xml:id' in node.attributes ? node.attributes['xml:id'].value || null : null;
    }

    function elementGetRegionID(node) {
        return node && 'region' in node.attributes ? node.attributes.region.value : '';
    }

    function elementGetTimeContainer(node, errorHandler) {

        var tc = node && 'timeContainer' in node.attributes ? node.attributes.timeContainer.value : null;

        if ((!tc) || tc === "par") {

            return "par";

        } else if (tc === "seq") {

            return "seq";

        } else {

            reportError(errorHandler, "Illegal value of timeContainer (assuming 'par')");

            return "par";

        }

    }

    function elementGetStyleRefs(node) {

        return node && 'style' in node.attributes ? node.attributes.style.value.split(" ") : [];

    }

    function elementGetStyles(node, errorHandler) {

        var s = {};

        if (node !== null) {

            for (var i in node.attributes) {

                var qname = node.attributes[i].uri + " " + node.attributes[i].local;

                var sa = imscStyles.byQName[qname];

                if (sa !== undefined) {

                    var val = sa.parse(node.attributes[i].value);

                    if (val !== null) {

                        s[qname] = val;

                        /* TODO: consider refactoring errorHandler into parse and compute routines */

                        if (sa === imscStyles.byName.zIndex) {
                            reportWarning(errorHandler, "zIndex attribute present but not used by IMSC1 since regions do not overlap");
                        }

                    } else {

                        reportError(errorHandler, "Cannot parse styling attribute " + qname + " --> " + node.attributes[i].value);

                    }

                }

            }

        }

        return s;
    }

    function findAttribute(node, ns, name) {
        for (var i in node.attributes) {

            if (node.attributes[i].uri === ns &&
                    node.attributes[i].local === name) {

                return node.attributes[i].value;
            }
        }

        return null;
    }

    function extractAspectRatio(node, errorHandler) {

        var ar = findAttribute(node, imscNames.ns_ittp, "aspectRatio");

        if (ar === null) {
            
            ar = findAttribute(node, imscNames.ns_ttp, "displayAspectRatio");
            
        }

        var rslt = null;

        if (ar !== null) {

            var ASPECT_RATIO_RE = /(\d+)\s+(\d+)/;

            var m = ASPECT_RATIO_RE.exec(ar);

            if (m !== null) {

                var w = parseInt(m[1]);

                var h = parseInt(m[2]);

                if (w !== 0 && h !== 0) {

                    rslt = w / h;

                } else {

                    reportError(errorHandler, "Illegal aspectRatio values (ignoring)");
                }

            } else {

                reportError(errorHandler, "Malformed aspectRatio attribute (ignoring)");
            }

        }

        return rslt;

    }

    /*
     * Returns the cellResolution attribute from a node
     * 
     */
    function extractCellResolution(node, errorHandler) {

        var cr = findAttribute(node, imscNames.ns_ttp, "cellResolution");

        // initial value

        var h = 15;
        var w = 32;

        if (cr !== null) {

            var CELL_RESOLUTION_RE = /(\d+) (\d+)/;

            var m = CELL_RESOLUTION_RE.exec(cr);

            if (m !== null) {

                w = parseInt(m[1]);

                h = parseInt(m[2]);

            } else {

                reportWarning(errorHandler, "Malformed cellResolution value (using initial value instead)");

            }

        }

        return {'w': w, 'h': h};

    }


    function extractFrameAndTickRate(node, errorHandler) {

        // subFrameRate is ignored per IMSC1 specification

        // extract frame rate

        var fps_attr = findAttribute(node, imscNames.ns_ttp, "frameRate");

        // initial value

        var fps = 30;

        // match variable

        var m;

        if (fps_attr !== null) {

            var FRAME_RATE_RE = /(\d+)/;

            m = FRAME_RATE_RE.exec(fps_attr);

            if (m !== null) {

                fps = parseInt(m[1]);

            } else {

                reportWarning(errorHandler, "Malformed frame rate attribute (using initial value instead)");
            }

        }

        // extract frame rate multiplier

        var frm_attr = findAttribute(node, imscNames.ns_ttp, "frameRateMultiplier");

        // initial value

        var frm = 1;

        if (frm_attr !== null) {

            var FRAME_RATE_MULT_RE = /(\d+) (\d+)/;

            m = FRAME_RATE_MULT_RE.exec(frm_attr);

            if (m !== null) {

                frm = parseInt(m[1]) / parseInt(m[2]);

            } else {

                reportWarning(errorHandler, "Malformed frame rate multiplier attribute (using initial value instead)");
            }

        }

        var efps = frm * fps;

        // extract tick rate

        var tr = 1;

        var trattr = findAttribute(node, imscNames.ns_ttp, "tickRate");

        if (trattr === null) {

            if (fps_attr !== null)
                tr = efps;

        } else {

            var TICK_RATE_RE = /(\d+)/;

            m = TICK_RATE_RE.exec(trattr);

            if (m !== null) {

                tr = parseInt(m[1]);

            } else {

                reportWarning(errorHandler, "Malformed tick rate attribute (using initial value instead)");
            }

        }

        return {effectiveFrameRate: efps, tickRate: tr};

    }

    function extractExtent(node, errorHandler) {

        var attr = findAttribute(node, imscNames.ns_tts, "extent");

        if (attr === null)
            return null;

        var s = attr.split(" ");

        if (s.length !== 2) {

            reportWarning(errorHandler, "Malformed extent (ignoring)");

            return null;
        }

        var w = imscUtils.parseLength(s[0]);

        var h = imscUtils.parseLength(s[1]);

        if (!h || !w) {

            reportWarning(errorHandler, "Malformed extent values (ignoring)");

            return null;
        }

        return {'h': h, 'w': w};

    }

    function parseTimeExpression(tickRate, effectiveFrameRate, str) {

        var CLOCK_TIME_FRACTION_RE = /^(\d{2,}):(\d\d):(\d\d(?:\.\d+)?)$/;
        var CLOCK_TIME_FRAMES_RE = /^(\d{2,}):(\d\d):(\d\d)\:(\d{2,})$/;
        var OFFSET_FRAME_RE = /^(\d+(?:\.\d+)?)f$/;
        var OFFSET_TICK_RE = /^(\d+(?:\.\d+)?)t$/;
        var OFFSET_MS_RE = /^(\d+(?:\.\d+)?)ms$/;
        var OFFSET_S_RE = /^(\d+(?:\.\d+)?)s$/;
        var OFFSET_H_RE = /^(\d+(?:\.\d+)?)h$/;
        var OFFSET_M_RE = /^(\d+(?:\.\d+)?)m$/;
        var m;
        var r = null;
        if ((m = OFFSET_FRAME_RE.exec(str)) !== null) {

            if (effectiveFrameRate !== null) {

                r = parseFloat(m[1]) / effectiveFrameRate;
            }

        } else if ((m = OFFSET_TICK_RE.exec(str)) !== null) {

            if (tickRate !== null) {

                r = parseFloat(m[1]) / tickRate;
            }

        } else if ((m = OFFSET_MS_RE.exec(str)) !== null) {

            r = parseFloat(m[1]) / 1000.0;

        } else if ((m = OFFSET_S_RE.exec(str)) !== null) {

            r = parseFloat(m[1]);

        } else if ((m = OFFSET_H_RE.exec(str)) !== null) {

            r = parseFloat(m[1]) * 3600.0;

        } else if ((m = OFFSET_M_RE.exec(str)) !== null) {

            r = parseFloat(m[1]) * 60.0;

        } else if ((m = CLOCK_TIME_FRACTION_RE.exec(str)) !== null) {

            r = parseInt(m[1]) * 3600 +
                    parseInt(m[2]) * 60 +
                    parseFloat(m[3]);

        } else if ((m = CLOCK_TIME_FRAMES_RE.exec(str)) !== null) {

            /* this assumes that HH:MM:SS is a clock-time-with-fraction */

            if (effectiveFrameRate !== null) {

                r = parseInt(m[1]) * 3600 +
                        parseInt(m[2]) * 60 +
                        parseInt(m[3]) +
                        (m[4] === null ? 0 : parseInt(m[4]) / effectiveFrameRate);
            }

        }

        return r;
    }

    function processTiming(doc, parent, node, errorHandler) {

        /* determine explicit begin */

        var explicit_begin = null;

        if (node && 'begin' in node.attributes) {

            explicit_begin = parseTimeExpression(doc.tickRate, doc.effectiveFrameRate, node.attributes.begin.value);

            if (explicit_begin === null) {

                reportWarning(errorHandler, "Malformed begin value " + node.attributes.begin.value + " (using 0)");

            }

        }

        /* determine explicit duration */

        var explicit_dur = null;

        if (node && 'dur' in node.attributes) {

            explicit_dur = parseTimeExpression(doc.tickRate, doc.effectiveFrameRate, node.attributes.dur.value);

            if (explicit_dur === null) {

                reportWarning(errorHandler, "Malformed dur value " + node.attributes.dur.value + " (ignoring)");

            }

        }

        /* determine explicit end */

        var explicit_end = null;

        if (node && 'end' in node.attributes) {

            explicit_end = parseTimeExpression(doc.tickRate, doc.effectiveFrameRate, node.attributes.end.value);

            if (explicit_end === null) {

                reportWarning(errorHandler, "Malformed end value (ignoring)");

            }

        }

        return {explicit_begin: explicit_begin,
            explicit_end: explicit_end,
            explicit_dur: explicit_dur};

    }



    function mergeChainedStyles(styling, style, errorHandler) {

        while (style.styleRefs.length > 0) {

            var sref = style.styleRefs.pop();

            if (!(sref in styling.styles)) {
                reportError(errorHandler, "Non-existant style id referenced");
                continue;
            }

            mergeChainedStyles(styling, styling.styles[sref], errorHandler);

            mergeStylesIfNotPresent(styling.styles[sref].styleAttrs, style.styleAttrs);

        }

    }

    function mergeReferencedStyles(styling, stylerefs, styleattrs, errorHandler) {

        for (var i = stylerefs.length - 1; i >= 0; i--) {

            var sref = stylerefs[i];

            if (!(sref in styling.styles)) {
                reportError(errorHandler, "Non-existant style id referenced");
                continue;
            }

            mergeStylesIfNotPresent(styling.styles[sref].styleAttrs, styleattrs);

        }

    }

    function mergeStylesIfNotPresent(from_styles, into_styles) {

        for (var sname in from_styles) {

            if (sname in into_styles)
                continue;

            into_styles[sname] = from_styles[sname];

        }

    }

    /* TODO: validate style format at parsing */


    /*
     * ERROR HANDLING UTILITY FUNCTIONS
     * 
     */

    function reportInfo(errorHandler, msg) {

        if (errorHandler && errorHandler.info && errorHandler.info(msg))
            throw msg;

    }

    function reportWarning(errorHandler, msg) {

        if (errorHandler && errorHandler.warn && errorHandler.warn(msg))
            throw msg;

    }

    function reportError(errorHandler, msg) {

        if (errorHandler && errorHandler.error && errorHandler.error(msg))
            throw msg;

    }

    function reportFatal(errorHandler, msg) {

        if (errorHandler && errorHandler.fatal)
            errorHandler.fatal(msg);

        throw msg;

    }

    /*
     * Binary search utility function
     * 
     * @typedef {Object} BinarySearchResult
     * @property {boolean} found Was an exact match found?
     * @property {number} index Position of the exact match or insert position
     * 
     * @returns {BinarySearchResult}
     */

    function indexOf(arr, searchval) {

        var min = 0;
        var max = arr.length - 1;
        var cur;

        while (min <= max) {

            cur = Math.floor((min + max) / 2);

            var curval = arr[cur];

            if (curval < searchval) {

                min = cur + 1;

            } else if (curval > searchval) {

                max = cur - 1;

            } else {

                return {found: true, index: cur};

            }

        }

        return {found: false, index: min};
    }


})(typeof exports === 'undefined' ? this.imscDoc = {} : exports,
        typeof sax === 'undefined' ? require("sax") : sax,
        typeof imscNames === 'undefined' ? require("./names") : imscNames,
        typeof imscStyles === 'undefined' ? require("./styles") : imscStyles,
        typeof imscUtils === 'undefined' ? require("./utils") : imscUtils);

},{"sax":"../node_modules/imsc/node_modules/sax/lib/sax.js","./names":"../node_modules/imsc/src/main/js/names.js","./styles":"../node_modules/imsc/src/main/js/styles.js","./utils":"../node_modules/imsc/src/main/js/utils.js"}],"../node_modules/imsc/src/main/js/html.js":[function(require,module,exports) {
/* 
 * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

/**
 * @module imscHTML
 */

;
(function (imscHTML, imscNames, imscStyles) {

    /**
     * Function that maps <pre>smpte:background</pre> URIs to URLs resolving to image resource
     * @callback IMGResolver
     * @param {string} <pre>smpte:background</pre> URI
     * @return {string} PNG resource URL
     */


    /**
     * Renders an ISD object (returned by <pre>generateISD()</pre>) into a 
     * parent element, that must be attached to the DOM. The ISD will be rendered
     * into a child <pre>div</pre>
     * with heigh and width equal to the clientHeight and clientWidth of the element,
     * unless explicitly specified otherwise by the caller. Images URIs specified 
     * by <pre>smpte:background</pre> attributes are mapped to image resource URLs
     * by an <pre>imgResolver</pre> function. The latter takes the value of <code>smpte:background</code>
     * attribute and an <code>img</code> DOM element as input, and is expected to
     * set the <code>src</code> attribute of the <code>img</code> to the absolute URI of the image.
     * <pre>displayForcedOnlyMode</pre> sets the (boolean)
     * value of the IMSC1 displayForcedOnlyMode parameter. The function returns
     * an opaque object that should passed in <code>previousISDState</code> when this function
     * is called for the next ISD, otherwise <code>previousISDState</code> should be set to 
     * <code>null</code>.
     * 
     * @param {Object} isd ISD to be rendered
     * @param {Object} element Element into which the ISD is rendered
     * @param {?IMGResolver} imgResolver Resolve <pre>smpte:background</pre> URIs into URLs.
     * @param {?number} eheight Height (in pixel) of the child <div>div</div> or null 
     *                  to use clientHeight of the parent element
     * @param {?number} ewidth Width (in pixel) of the child <div>div</div> or null
     *                  to use clientWidth of the parent element
     * @param {?boolean} displayForcedOnlyMode Value of the IMSC1 displayForcedOnlyMode parameter,
     *                   or false if null         
     * @param {?module:imscUtils.ErrorHandler} errorHandler Error callback
     * @param {Object} previousISDState State saved during processing of the previous ISD, or null if initial call
     * @param {?boolean} enableRollUp Enables roll-up animations (see CEA 708)
     * @return {Object} ISD state to be provided when this funtion is called for the next ISD
     */

    imscHTML.render = function (isd,
            element,
            imgResolver,
            eheight,
            ewidth,
            displayForcedOnlyMode,
            errorHandler,
            previousISDState,
            enableRollUp
            ) {

        /* maintain aspect ratio if specified */

        var height = eheight || element.clientHeight;
        var width = ewidth || element.clientWidth;

        if (isd.aspectRatio !== null) {

            var twidth = height * isd.aspectRatio;

            if (twidth > width) {

                height = Math.round(width / isd.aspectRatio);

            } else {

                width = twidth;

            }

        }

        var rootcontainer = document.createElement("div");

        rootcontainer.style.position = "relative";
        rootcontainer.style.width = width + "px";
        rootcontainer.style.height = height + "px";
        rootcontainer.style.margin = "auto";
        rootcontainer.style.top = 0;
        rootcontainer.style.bottom = 0;
        rootcontainer.style.left = 0;
        rootcontainer.style.right = 0;
        rootcontainer.style.zIndex = 0;

        var context = {
            h: height,
            w: width,
            regionH: null,
            regionW: null,
            imgResolver: imgResolver,
            displayForcedOnlyMode: displayForcedOnlyMode || false,
            isd: isd,
            errorHandler: errorHandler,
            previousISDState: previousISDState,
            enableRollUp: enableRollUp || false,
            currentISDState: {},
            flg: null, /* current fillLineGap value if active, null otherwise */
            lp: null, /* current linePadding value if active, null otherwise */
            mra: null, /* current multiRowAlign value if active, null otherwise */
            ipd: null, /* inline progression direction (lr, rl, tb) */
            bpd: null, /* block progression direction (lr, rl, tb) */
            ruby: null, /* is ruby present in a <p> */
            textEmphasis: null, /* is textEmphasis present in a <p> */
            rubyReserve: null /* is rubyReserve applicable to a <p> */
        };

        element.appendChild(rootcontainer);

        for (var i in isd.contents) {

            processElement(context, rootcontainer, isd.contents[i]);

        }

        return context.currentISDState;

    };

    function processElement(context, dom_parent, isd_element) {

        var e;

        if (isd_element.kind === 'region') {

            e = document.createElement("div");
            e.style.position = "absolute";

        } else if (isd_element.kind === 'body') {

            e = document.createElement("div");

        } else if (isd_element.kind === 'div') {

            e = document.createElement("div");

        } else if (isd_element.kind === 'image') {

            e = document.createElement("img");

            if (context.imgResolver !== null && isd_element.src !== null) {

                var uri = context.imgResolver(isd_element.src, e);

                if (uri)
                    e.src = uri;

                e.height = context.regionH;
                e.width = context.regionW;

            }

        } else if (isd_element.kind === 'p') {

            e = document.createElement("p");

        } else if (isd_element.kind === 'span') {

            if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === "container") {

                e = document.createElement("ruby");

                context.ruby = true;

            } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === "base") {

                e = document.createElement("rb");

            } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === "text") {

                e = document.createElement("rt");


            } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === "baseContainer") {

                e = document.createElement("rbc");


            } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === "textContainer") {

                e = document.createElement("rtc");


            } else if (isd_element.styleAttrs[imscStyles.byName.ruby.qname] === "delimiter") {

                /* ignore rp */

                return;

            } else {

                e = document.createElement("span");

            }

            var te = isd_element.styleAttrs[imscStyles.byName.textEmphasis.qname];

            if (te && te.style !== "none") {

                context.textEmphasis = true;

            }

            //e.textContent = isd_element.text;

        } else if (isd_element.kind === 'br') {

            e = document.createElement("br");

        }

        if (!e) {

            reportError(context.errorHandler, "Error processing ISD element kind: " + isd_element.kind);

            return;

        }

        /* add to parent */

        dom_parent.appendChild(e);

        /* override UA default margin */
        /* TODO: should apply to <p> only */

        e.style.margin = "0";

        /* tranform TTML styles to CSS styles */

        for (var i in STYLING_MAP_DEFS) {

            var sm = STYLING_MAP_DEFS[i];

            var attr = isd_element.styleAttrs[sm.qname];

            if (attr !== undefined && sm.map !== null) {

                sm.map(context, e, isd_element, attr);

            }

        }

        var proc_e = e;

        /* remember writing direction */

        if (isd_element.kind === "region") {

            var wdir = isd_element.styleAttrs[imscStyles.byName.writingMode.qname];

            if (wdir === "lrtb" || wdir === "lr") {

                context.ipd = "lr";
                context.bpd = "tb";

            } else if (wdir === "rltb" || wdir === "rl") {

                context.ipd = "rl";
                context.bpd = "tb";

            } else if (wdir === "tblr") {

                context.ipd = "tb";
                context.bpd = "lr";

            } else if (wdir === "tbrl" || wdir === "tb") {

                context.ipd = "tb";
                context.bpd = "rl";

            }

        }

        /* do we have linePadding ? */

        var lp = isd_element.styleAttrs[imscStyles.byName.linePadding.qname];

        if (lp && (! lp.isZero())) {

            var plength = lp.toUsedLength(context.w, context.h);


            if (plength > 0) {
                
                /* apply padding to the <p> so that line padding does not cause line wraps */

                var padmeasure = Math.ceil(plength) + "px";

                if (context.bpd === "tb") {

                    proc_e.style.paddingLeft = padmeasure;
                    proc_e.style.paddingRight = padmeasure;

                } else {

                    proc_e.style.paddingTop = padmeasure;
                    proc_e.style.paddingBottom = padmeasure;

                }

                context.lp = lp;
            }
        }

        // do we have multiRowAlign?

        var mra = isd_element.styleAttrs[imscStyles.byName.multiRowAlign.qname];

        if (mra && mra !== "auto") {

            /* create inline block to handle multirowAlign */

            var s = document.createElement("span");

            s.style.display = "inline-block";

            s.style.textAlign = mra;

            e.appendChild(s);

            proc_e = s;

            context.mra = mra;

        }

        /* do we have rubyReserve? */

        var rr = isd_element.styleAttrs[imscStyles.byName.rubyReserve.qname];

        if (rr && rr[0] !== "none") {
            context.rubyReserve = rr;
        }


        /* remember we are filling line gaps */

        if (isd_element.styleAttrs[imscStyles.byName.fillLineGap.qname]) {
            context.flg = true;
        }


        if (isd_element.kind === "span" && isd_element.text) {

            if (imscStyles.byName.textCombine.qname in isd_element.styleAttrs &&
                    isd_element.styleAttrs[imscStyles.byName.textCombine.qname][0] === "all") {

                /* ignore tate-chu-yoku since line break cannot happen within */
                e.textContent = isd_element.text;

            } else {

                // wrap characters in spans to find the line wrap locations

                var cbuf = '';

                for (var j = 0; j < isd_element.text.length; j++) {

                    cbuf += isd_element.text.charAt(j);

                    var cc = isd_element.text.charCodeAt(j);

                    if (cc < 0xD800 || cc > 0xDBFF || j === isd_element.text.length) {

                        /* wrap the character(s) in a span unless it is a high surrogate */

                        var span = document.createElement("span");

                        span.textContent = cbuf;
    
                        e.appendChild(span);

                        cbuf = '';

                    }

                }

            }
        }

        /* process the children of the ISD element */

        for (var k in isd_element.contents) {

            processElement(context, proc_e, isd_element.contents[k]);

        }

        /* list of lines */

        var linelist = [];


        /* paragraph processing */
        /* TODO: linePadding only supported for horizontal scripts */

        if ((context.lp || context.mra || context.flg || context.ruby || context.textEmphasis || context.rubyReserve) &&
                isd_element.kind === "p") {

            constructLineList(context, proc_e, linelist, null);

            /* apply rubyReserve */

            if (context.rubyReserve) {

                applyRubyReserve(linelist, context);

                context.rubyReserve = null;

            }

            /* apply tts:rubyPosition="outside" */

            if (context.ruby || context.rubyReserve) {

                applyRubyPosition(linelist, context);

                context.ruby = null;

            }

            /* apply text emphasis "outside" position */

            if (context.textEmphasis) {

                applyTextEmphasis(linelist, context);

                context.textEmphasis = null;

            }

            /* insert line breaks for multirowalign */

            if (context.mra) {

                applyMultiRowAlign(linelist);

                context.mra = null;

            }

            /* add linepadding */

            if (context.lp) {

                applyLinePadding(linelist, context.lp.toUsedLength(context.w, context.h), context);

                context.lp = null;

            }

            /* fill line gaps linepadding */

            if (context.flg) {

                var par_edges = rect2edges(proc_e.getBoundingClientRect(), context);

                applyFillLineGap(linelist, par_edges.before, par_edges.after, context);

                context.flg = null;

            }

        }


        /* region processing */

        if (isd_element.kind === "region") {

            /* build line list */

            constructLineList(context, proc_e, linelist);

            /* perform roll up if needed */

            if ((context.bpd === "tb") &&
                    context.enableRollUp &&
                    isd_element.contents.length > 0 &&
                    isd_element.styleAttrs[imscStyles.byName.displayAlign.qname] === 'after') {

                /* horrible hack, perhaps default region id should be underscore everywhere? */

                var rid = isd_element.id === '' ? '_' : isd_element.id;

                var rb = new RegionPBuffer(rid, linelist);

                context.currentISDState[rb.id] = rb;

                if (context.previousISDState &&
                        rb.id in context.previousISDState &&
                        context.previousISDState[rb.id].plist.length > 0 &&
                        rb.plist.length > 1 &&
                        rb.plist[rb.plist.length - 2].text ===
                        context.previousISDState[rb.id].plist[context.previousISDState[rb.id].plist.length - 1].text) {

                    var body_elem = e.firstElementChild;

                    var h = rb.plist[rb.plist.length - 1].after - rb.plist[rb.plist.length - 1].before;

                    body_elem.style.bottom = "-" + h + "px";
                    body_elem.style.transition = "transform 0.4s";
                    body_elem.style.position = "relative";
                    body_elem.style.transform = "translateY(-" + h + "px)";

                }

            }

            /* TODO: clean-up the spans ? */

        }
    }

    function applyLinePadding(lineList, lp, context) {

        for (var i in lineList) {

            var l = lineList[i].elements.length;

            var se = lineList[i].elements[lineList[i].start_elem];

            var ee = lineList[i].elements[lineList[i].end_elem];

            var pospadpxlen = Math.ceil(lp) + "px";

            var negpadpxlen = "-" + Math.ceil(lp) + "px";

            if (l !== 0) {

                if (context.ipd === "lr") {

                    se.node.style.borderLeftColor = se.bgcolor || "#00000000";
                    se.node.style.borderLeftStyle = "solid";
                    se.node.style.borderLeftWidth = pospadpxlen;
                    se.node.style.marginLeft = negpadpxlen;

                } else if (context.ipd === "rl") {

                    se.node.style.borderRightColor = se.bgcolor || "#00000000";
                    se.node.style.borderRightStyle = "solid";
                    se.node.style.borderRightWidth = pospadpxlen;
                    se.node.style.marginRight = negpadpxlen;

                } else if (context.ipd === "tb") {

                    se.node.style.borderTopColor = se.bgcolor || "#00000000";
                    se.node.style.borderTopStyle = "solid";
                    se.node.style.borderTopWidth = pospadpxlen;
                    se.node.style.marginTop = negpadpxlen;

                }

                if (context.ipd === "lr") {

                    ee.node.style.borderRightColor = ee.bgcolor  || "#00000000";
                    ee.node.style.borderRightStyle = "solid";
                    ee.node.style.borderRightWidth = pospadpxlen;
                    ee.node.style.marginRight = negpadpxlen;

                } else if (context.ipd === "rl") {

                    ee.node.style.borderLeftColor = ee.bgcolor || "#00000000";
                    ee.node.style.borderLeftStyle = "solid";
                    ee.node.style.borderLeftWidth = pospadpxlen;
                    ee.node.style.marginLeft = negpadpxlen;

                } else if (context.ipd === "tb") {

                    ee.node.style.borderBottomColor = ee.bgcolor || "#00000000";
                    ee.node.style.borderBottomStyle = "solid";
                    ee.node.style.borderBottomWidth = pospadpxlen;
                    ee.node.style.marginBottom = negpadpxlen;

                }

            }

        }

    }

    function applyMultiRowAlign(lineList) {

        /* apply an explicit br to all but the last line */

        for (var i = 0; i < lineList.length - 1; i++) {

            var l = lineList[i].elements.length;

            if (l !== 0 && lineList[i].br === false) {
                var br = document.createElement("br");

                var lastnode = lineList[i].elements[l - 1].node;

                lastnode.parentElement.insertBefore(br, lastnode.nextSibling);
            }

        }

    }

    function applyTextEmphasis(lineList, context) {

        /* supports "outside" only */

        for (var i = 0; i < lineList.length; i++) {

            for (var j = 0; j < lineList[i].te.length; j++) {

                /* skip if position already set */

                if (lineList[i].te[j].style.textEmphasisPosition &&
                    lineList[i].te[j].style.textEmphasisPosition !== "none")
                    continue;

                var pos;

                if (context.bpd === "tb") {

                    pos = (i === 0) ? "left over" : "left under";


                } else {

                    if (context.bpd === "rl") {

                        pos = (i === 0) ? "right under" : "left under";

                    } else {

                        pos = (i === 0) ? "left under" : "right under";

                    }

                }

                lineList[i].te[j].style.textEmphasisPosition = pos;

            }

        }

    }

    function applyRubyPosition(lineList, context) {

        for (var i = 0; i < lineList.length; i++) {

            for (var j = 0; j < lineList[i].rbc.length; j++) {

                /* skip if ruby-position already set */

                if (lineList[i].rbc[j].style.rubyPosition)
                    continue;

                var pos;

                if (context.bpd === "tb") {

                    pos = (i === 0) ? "over" : "under";


                } else {

                    if (context.bpd === "rl") {

                        pos = (i === 0) ? "over" : "under";

                    } else {

                        pos = (i === 0) ? "under" : "over";

                    }

                }

                lineList[i].rbc[j].style.rubyPosition = pos;

            }

        }

    }

    function applyRubyReserve(lineList, context) {

        for (var i = 0; i < lineList.length; i++) {

            var ruby = document.createElement("ruby");

            var rb = document.createElement("rb");
            rb.textContent = "\u200B";

            ruby.appendChild(rb);

            var rt1;
            var rt2;

            var fs = context.rubyReserve[1].toUsedLength(context.w, context.h) + "px";

            if (context.rubyReserve[0] === "both") {

                rt1 = document.createElement("rtc");
                rt1.style.rubyPosition = "under";
                rt1.textContent = "\u200B";
                rt1.style.fontSize = fs;

                rt2 = document.createElement("rtc");
                rt2.style.rubyPosition = "over";
                rt2.textContent = "\u200B";
                rt2.style.fontSize = fs;

                ruby.appendChild(rt1);
                ruby.appendChild(rt2);

            } else {

                rt1 = document.createElement("rtc");
                rt1.textContent = "\u200B";
                rt1.style.fontSize = fs;

                if (context.rubyReserve[0] === "after" || (context.rubyReserve[0] === "outside" && i > 0)) {

                    rt1.style.rubyPosition = (context.bpd === "tb" || context.bpd === "rl") ? "under" : "over";

                } else {

                    rt1.style.rubyPosition = (context.bpd === "tb" || context.bpd === "rl") ? "over" : "under";

                }

                ruby.appendChild(rt1);

            }

            var e = lineList[i].elements[0].node.parentElement.insertBefore(
                    ruby,
                    lineList[i].elements[0].node
                    );

        }

    }

    function applyFillLineGap(lineList, par_before, par_after, context) {

        /* positive for BPD = lr and tb, negative for BPD = rl */
        var s = Math.sign(par_after - par_before);

        for (var i = 0; i <= lineList.length; i++) {

            /* compute frontier between lines */

            var frontier;

            if (i === 0) {

                frontier = par_before;

            } else if (i === lineList.length) {

                frontier = par_after;

            } else {

                frontier = (lineList[i].before + lineList[i - 1].after) / 2;

            }

            /* padding amount */

            var pad;

            /* current element */

            var e;

            /* before line */

            if (i > 0) {

                for (var j = 0; j < lineList[i - 1].elements.length; j++) {

                    if (lineList[i - 1].elements[j].bgcolor === null)
                        continue;

                    e = lineList[i - 1].elements[j];

                    if (s * (e.after - frontier) < 0) {

                        pad = Math.ceil(Math.abs(frontier - e.after)) + "px";

                        e.node.style.backgroundColor = e.bgcolor;

                        if (context.bpd === "lr") {

                            e.node.style.paddingRight = pad;


                        } else if (context.bpd === "rl") {

                            e.node.style.paddingLeft = pad;

                        } else if (context.bpd === "tb") {

                            e.node.style.paddingBottom = pad;

                        }

                    }

                }

            }

            /* after line */

            if (i < lineList.length) {

                for (var k = 0; k < lineList[i].elements.length; k++) {

                    e = lineList[i].elements[k];

                    if (e.bgcolor === null)
                        continue;

                    if (s * (e.before - frontier) > 0) {

                        pad = Math.ceil(Math.abs(e.before - frontier)) + "px";

                        e.node.style.backgroundColor = e.bgcolor;

                        if (context.bpd === "lr") {

                            e.node.style.paddingLeft = pad;


                        } else if (context.bpd === "rl") {

                            e.node.style.paddingRight = pad;


                        } else if (context.bpd === "tb") {

                            e.node.style.paddingTop = pad;

                        }

                    }

                }

            }

        }

    }

    function RegionPBuffer(id, lineList) {

        this.id = id;

        this.plist = lineList;

    }

    function pruneEmptySpans(element) {

        var child = element.firstChild;

        while (child) {

            var nchild = child.nextSibling;

            if (child.nodeType === Node.ELEMENT_NODE &&
                    child.localName === 'span') {

                pruneEmptySpans(child);

                if (child.childElementCount === 0 &&
                        child.textContent.length === 0) {

                    element.removeChild(child);

                }
            }

            child = nchild;
        }

    }

    function rect2edges(rect, context) {

        var edges = {before: null, after: null, start: null, end: null};

        if (context.bpd === "tb") {

            edges.before = rect.top;
            edges.after = rect.bottom;

            if (context.ipd === "lr") {

                edges.start = rect.left;
                edges.end = rect.right;

            } else {

                edges.start = rect.right;
                edges.end = rect.left;
            }

        } else if (context.bpd === "lr") {

            edges.before = rect.left;
            edges.after = rect.right;
            edges.start = rect.top;
            edges.end = rect.bottom;

        } else if (context.bpd === "rl") {

            edges.before = rect.right;
            edges.after = rect.left;
            edges.start = rect.top;
            edges.end = rect.bottom;

        }

        return edges;

    }

    function constructLineList(context, element, llist, bgcolor) {

        if (element.localName === "rt" || element.localName === "rtc") {

            /* skip ruby annotations */

            return;

        }

        var curbgcolor = element.style.backgroundColor || bgcolor;

        if (element.childElementCount === 0) {

            if (element.localName === 'span' || element.localName === 'rb') {

                var r = element.getBoundingClientRect();

                /* skip if span is not displayed */

                if (r.height === 0 || r.width === 0)
                    return;

                var edges = rect2edges(r, context);

                if (llist.length === 0 ||
                        (!isSameLine(edges.before, edges.after, llist[llist.length - 1].before, llist[llist.length - 1].after))
                        ) {

                    llist.push({
                        before: edges.before,
                        after: edges.after,
                        start: edges.start,
                        end: edges.end,
                        start_elem: 0,
                        end_elem: 0,
                        elements: [],
                        rbc: [],
                        te: [],
                        text: "",
                        br: false
                    });

                } else {

                    /* positive for BPD = lr and tb, negative for BPD = rl */
                    var bpd_dir = Math.sign(edges.after - edges.before);

                    /* positive for IPD = lr and tb, negative for IPD = rl */
                    var ipd_dir = Math.sign(edges.end - edges.start);

                    /* check if the line height has increased */

                    if (bpd_dir * (edges.before - llist[llist.length - 1].before) < 0) {
                        llist[llist.length - 1].before = edges.before;
                    }

                    if (bpd_dir * (edges.after - llist[llist.length - 1].after) > 0) {
                        llist[llist.length - 1].after = edges.after;
                    }

                    if (ipd_dir * (edges.start - llist[llist.length - 1].start) < 0) {
                        llist[llist.length - 1].start = edges.start;
                        llist[llist.length - 1].start_elem = llist[llist.length - 1].elements.length;
                    }

                    if (ipd_dir * (edges.end - llist[llist.length - 1].end) > 0) {
                        llist[llist.length - 1].end = edges.end;
                        llist[llist.length - 1].end_elem = llist[llist.length - 1].elements.length;
                    }

                }

                llist[llist.length - 1].text += element.textContent;

                llist[llist.length - 1].elements.push(
                        {
                            node: element,
                            bgcolor: curbgcolor,
                            before: edges.before,
                            after: edges.after
                        }
                );

            } else if (element.localName === 'br' && llist.length !== 0) {

                llist[llist.length - 1].br = true;

            }

        } else {

            var child = element.firstChild;

            while (child) {

                if (child.nodeType === Node.ELEMENT_NODE) {

                    constructLineList(context, child, llist, curbgcolor);

                    if (child.localName === 'ruby' || child.localName === 'rtc') {

                        /* remember non-empty ruby and rtc elements so that tts:rubyPosition can be applied */

                        if (llist.length > 0) {

                            llist[llist.length - 1].rbc.push(child);

                        }

                    } else if (child.localName === 'span' &&
                            child.style.textEmphasisStyle &&
                            child.style.textEmphasisStyle !== "none") {

                        /* remember non-empty span elements with textEmphasis */

                        if (llist.length > 0) {

                            llist[llist.length - 1].te.push(child);

                        }

                    }
                    

                }

                child = child.nextSibling;
            }
        }

    }

    function isSameLine(before1, after1, before2, after2) {

        return ((after1 < after2) && (before1 > before2)) || ((after2 <= after1) && (before2 >= before1));

    }

    function HTMLStylingMapDefintion(qName, mapFunc) {
        this.qname = qName;
        this.map = mapFunc;
    }

    var STYLING_MAP_DEFS = [

        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling backgroundColor",
                function (context, dom_element, isd_element, attr) {

                    /* skip if transparent */
                    if (attr[3] === 0)
                        return;

                    dom_element.style.backgroundColor = "rgba(" +
                            attr[0].toString() + "," +
                            attr[1].toString() + "," +
                            attr[2].toString() + "," +
                            (attr[3] / 255).toString() +
                            ")";
                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling color",
                function (context, dom_element, isd_element, attr) {
                    dom_element.style.color = "rgba(" +
                            attr[0].toString() + "," +
                            attr[1].toString() + "," +
                            attr[2].toString() + "," +
                            (attr[3] / 255).toString() +
                            ")";
                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling direction",
                function (context, dom_element, isd_element, attr) {
                    dom_element.style.direction = attr;
                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling display",
                function (context, dom_element, isd_element, attr) {}
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling displayAlign",
                function (context, dom_element, isd_element, attr) {

                    /* see https://css-tricks.com/snippets/css/a-guide-to-flexbox/ */

                    /* TODO: is this affected by writing direction? */

                    dom_element.style.display = "flex";
                    dom_element.style.flexDirection = "column";


                    if (attr === "before") {

                        dom_element.style.justifyContent = "flex-start";

                    } else if (attr === "center") {

                        dom_element.style.justifyContent = "center";

                    } else if (attr === "after") {

                        dom_element.style.justifyContent = "flex-end";
                    }

                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling extent",
                function (context, dom_element, isd_element, attr) {
                    /* TODO: this is super ugly */

                    context.regionH = attr.h.toUsedLength(context.w, context.h);
                    context.regionW = attr.w.toUsedLength(context.w, context.h);

                    /* 
                     * CSS height/width are measured against the content rectangle,
                     * whereas TTML height/width include padding
                     */

                    var hdelta = 0;
                    var wdelta = 0;

                    var p = isd_element.styleAttrs["http://www.w3.org/ns/ttml#styling padding"];

                    if (!p) {

                        /* error */

                    } else {

                        hdelta = p[0].toUsedLength(context.w, context.h) + p[2].toUsedLength(context.w, context.h);
                        wdelta = p[1].toUsedLength(context.w, context.h) + p[3].toUsedLength(context.w, context.h);

                    }

                    dom_element.style.height = (context.regionH - hdelta) + "px";
                    dom_element.style.width = (context.regionW - wdelta) + "px";

                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling fontFamily",
                function (context, dom_element, isd_element, attr) {

                    var rslt = [];

                    /* per IMSC1 */

                    for (var i in attr) {

                        if (attr[i] === "monospaceSerif") {

                            rslt.push("Courier New");
                            rslt.push('"Liberation Mono"');
                            rslt.push("Courier");
                            rslt.push("monospace");

                        } else if (attr[i] === "proportionalSansSerif") {

                            rslt.push("Arial");
                            rslt.push("Helvetica");
                            rslt.push('"Liberation Sans"');
                            rslt.push("sans-serif");

                        } else if (attr[i] === "monospace") {

                            rslt.push("monospace");

                        } else if (attr[i] === "sansSerif") {

                            rslt.push("sans-serif");

                        } else if (attr[i] === "serif") {

                            rslt.push("serif");

                        } else if (attr[i] === "monospaceSansSerif") {

                            rslt.push("Consolas");
                            rslt.push("monospace");

                        } else if (attr[i] === "proportionalSerif") {

                            rslt.push("serif");

                        } else {

                            rslt.push(attr[i]);

                        }

                    }

                    dom_element.style.fontFamily = rslt.join(",");
                }
        ),

        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling shear",
                function (context, dom_element, isd_element, attr) {

                    /* return immediately if tts:shear is 0% since CSS transforms are not inherited*/

                    if (attr === 0)
                        return;

                    var angle = attr * -0.9;

                    /* context.writingMode is needed since writing mode is not inherited and sets the inline progression */

                    if (context.bpd === "tb") {

                        dom_element.style.transform = "skewX(" + angle + "deg)";

                    } else {

                        dom_element.style.transform = "skewY(" + angle + "deg)";

                    }

                }
        ),

        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling fontSize",
                function (context, dom_element, isd_element, attr) {
                    dom_element.style.fontSize = attr.toUsedLength(context.w, context.h) + "px";
                }
        ),

        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling fontStyle",
                function (context, dom_element, isd_element, attr) {
                    dom_element.style.fontStyle = attr;
                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling fontWeight",
                function (context, dom_element, isd_element, attr) {
                    dom_element.style.fontWeight = attr;
                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling lineHeight",
                function (context, dom_element, isd_element, attr) {
                    if (attr === "normal") {

                        dom_element.style.lineHeight = "normal";

                    } else {

                        dom_element.style.lineHeight = attr.toUsedLength(context.w, context.h) + "px";
                    }
                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling opacity",
                function (context, dom_element, isd_element, attr) {
                    dom_element.style.opacity = attr;
                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling origin",
                function (context, dom_element, isd_element, attr) {
                    dom_element.style.top = attr.h.toUsedLength(context.w, context.h) + "px";
                    dom_element.style.left = attr.w.toUsedLength(context.w, context.h) + "px";
                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling overflow",
                function (context, dom_element, isd_element, attr) {
                    dom_element.style.overflow = attr;
                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling padding",
                function (context, dom_element, isd_element, attr) {

                    /* attr: top,left,bottom,right*/

                    /* style: top right bottom left*/

                    var rslt = [];

                    rslt[0] = attr[0].toUsedLength(context.w, context.h) + "px";
                    rslt[1] = attr[3].toUsedLength(context.w, context.h) + "px";
                    rslt[2] = attr[2].toUsedLength(context.w, context.h) + "px";
                    rslt[3] = attr[1].toUsedLength(context.w, context.h) + "px";

                    dom_element.style.padding = rslt.join(" ");
                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling position",
                function (context, dom_element, isd_element, attr) {
                    dom_element.style.top = attr.h.toUsedLength(context.w, context.h) + "px";
                    dom_element.style.left = attr.w.toUsedLength(context.w, context.h) + "px";
                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling rubyAlign",
                function (context, dom_element, isd_element, attr) {
                    dom_element.style.rubyAlign = attr;
                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling rubyPosition",
                function (context, dom_element, isd_element, attr) {

                    /* skip if "outside", which is handled by applyRubyPosition() */

                    if (attr === "before" || attr === "after") {

                        var pos;

                        if (context.bpd === "tb") {

                            pos = (attr === "before") ? "over" : "under";


                        } else {

                            if (context.bpd === "rl") {

                                pos = (attr === "before") ? "over" : "under";

                            } else {

                                pos = (attr === "before") ? "under" : "over";

                            }

                        }

                        /* apply position to the parent dom_element, i.e. ruby or rtc */

                        dom_element.parentElement.style.rubyPosition = pos;
                    }
                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling showBackground",
                null
                ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling textAlign",
                function (context, dom_element, isd_element, attr) {

                    var ta;
                    var dir = isd_element.styleAttrs[imscStyles.byName.direction.qname];

                    /* handle UAs that do not understand start or end */

                    if (attr === "start") {

                        ta = (dir === "rtl") ? "right" : "left";

                    } else if (attr === "end") {

                        ta = (dir === "rtl") ? "left" : "right";

                    } else {

                        ta = attr;

                    }

                    dom_element.style.textAlign = ta;

                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling textDecoration",
                function (context, dom_element, isd_element, attr) {
                    dom_element.style.textDecoration = attr.join(" ").replace("lineThrough", "line-through");
                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling textOutline",
                function (context, dom_element, isd_element, attr) {

                    /* defer to tts:textShadow */
                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling textShadow",
                function (context, dom_element, isd_element, attr) {

                    var txto = isd_element.styleAttrs[imscStyles.byName.textOutline.qname];

                    if (attr === "none" && txto === "none") {

                        dom_element.style.textShadow = "";

                    } else {

                        var s = [];

                        if (txto !== "none") {

                            /* emulate text outline */

                            s.push(
                                    "rgba(" +
                                    txto.color[0].toString() + "," +
                                    txto.color[1].toString() + "," +
                                    txto.color[2].toString() + "," +
                                    (txto.color[3] / 255).toString() +
                                    ")" + " 0px 0px " +
                                    txto.thickness.toUsedLength(context.w, context.h) + "px"
                                    );

                        }

                        /* add text shadow */

                        if (attr !== "none") {

                            for (var i in attr) {


                                s.push(attr[i].x_off.toUsedLength(context.w, context.h) + "px " +
                                        attr[i].y_off.toUsedLength(context.w, context.h) + "px " +
                                        attr[i].b_radius.toUsedLength(context.w, context.h) + "px " +
                                        "rgba(" +
                                        attr[i].color[0].toString() + "," +
                                        attr[i].color[1].toString() + "," +
                                        attr[i].color[2].toString() + "," +
                                        (attr[i].color[3] / 255).toString() +
                                        ")"
                                        );

                            }

                        }

                        dom_element.style.textShadow = s.join(",");

                    }
                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling textCombine",
                function (context, dom_element, isd_element, attr) {

                    dom_element.style.textCombineUpright = attr.join(" ");

                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling textEmphasis",
                function (context, dom_element, isd_element, attr) {

                    /* ignore color (not used in IMSC 1.1) */

                    if (attr.style === "none") {

                        dom_element.style.textEmphasisStyle = "none";

                        /* no need to set position, so return */
                        
                        return;
                    
                    } else if (attr.style === "auto") {

                        dom_element.style.textEmphasisStyle = "filled";
                    
                    } else {

                        dom_element.style.textEmphasisStyle =  attr.style + " " + attr.symbol;
                    }

                    /* ignore "outside" position (set in postprocessing) */

                    if (attr.position === "before" || attr.position === "after") {

                        var pos;

                        if (context.bpd === "tb") {

                            pos = (attr.position === "before") ? "left over" : "left under";


                        } else {

                            if (context.bpd === "rl") {

                                pos = (attr.position === "before") ? "right under" : "left under";

                            } else {

                                pos = (attr.position === "before") ? "left under" : "right under";

                            }

                        }

                        dom_element.style.textEmphasisPosition = pos;
                    }
                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling unicodeBidi",
                function (context, dom_element, isd_element, attr) {

                    var ub;

                    if (attr === 'bidiOverride') {
                        ub = "bidi-override";
                    } else {
                        ub = attr;
                    }

                    dom_element.style.unicodeBidi = ub;
                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling visibility",
                function (context, dom_element, isd_element, attr) {
                    dom_element.style.visibility = attr;
                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling wrapOption",
                function (context, dom_element, isd_element, attr) {

                    if (attr === "wrap") {

                        if (isd_element.space === "preserve") {
                            dom_element.style.whiteSpace = "pre-wrap";
                        } else {
                            dom_element.style.whiteSpace = "normal";
                        }

                    } else {

                        if (isd_element.space === "preserve") {

                            dom_element.style.whiteSpace = "pre";

                        } else {
                            dom_element.style.whiteSpace = "noWrap";
                        }

                    }

                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling writingMode",
                function (context, dom_element, isd_element, attr) {
                    if (attr === "lrtb" || attr === "lr") {

                        context.writingMode = "horizontal-tb";

                    } else if (attr === "rltb" || attr === "rl") {

                        context.writingMode = "horizontal-tb";

                    } else if (attr === "tblr") {

                        context.writingMode = "vertical-lr";

                    } else if (attr === "tbrl" || attr === "tb") {

                        context.writingMode = "vertical-rl";

                    }

                    dom_element.style.writingMode = context.writingMode;
                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml#styling zIndex",
                function (context, dom_element, isd_element, attr) {
                    dom_element.style.zIndex = attr;
                }
        ),
        new HTMLStylingMapDefintion(
                "http://www.w3.org/ns/ttml/profile/imsc1#styling forcedDisplay",
                function (context, dom_element, isd_element, attr) {

                    if (context.displayForcedOnlyMode && attr === false) {
                        dom_element.style.visibility = "hidden";
                    }

                }
        )
    ];

    var STYLMAP_BY_QNAME = {};

    for (var i in STYLING_MAP_DEFS) {

        STYLMAP_BY_QNAME[STYLING_MAP_DEFS[i].qname] = STYLING_MAP_DEFS[i];
    }

    function reportError(errorHandler, msg) {

        if (errorHandler && errorHandler.error && errorHandler.error(msg))
            throw msg;

    }

})(typeof exports === 'undefined' ? this.imscHTML = {} : exports,
        typeof imscNames === 'undefined' ? require("./names") : imscNames,
        typeof imscStyles === 'undefined' ? require("./styles") : imscStyles,
        typeof imscUtils === 'undefined' ? require("./utils") : imscUtils);
},{"./names":"../node_modules/imsc/src/main/js/names.js","./styles":"../node_modules/imsc/src/main/js/styles.js","./utils":"../node_modules/imsc/src/main/js/utils.js"}],"../node_modules/imsc/src/main/js/main.js":[function(require,module,exports) {
/* 
 * Copyright (c) 2016, Pierre-Anthony Lemieux <pal@sandflow.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * * Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * * Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

exports.generateISD = require('./isd').generateISD;
exports.fromXML = require('./doc').fromXML;
exports.renderHTML = require('./html').render;
},{"./isd":"../node_modules/imsc/src/main/js/isd.js","./doc":"../node_modules/imsc/src/main/js/doc.js","./html":"../node_modules/imsc/src/main/js/html.js"}],"../node_modules/dashjs/build/es5/src/streaming/text/TextTracks.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Debug=require('../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _imsc=require('imsc');var _SupervisorTools=require('../utils/SupervisorTools');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function TextTracks(){var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var instance=void 0,logger=void 0,Cue=void 0,videoModel=void 0,textTrackQueue=void 0,trackElementArr=void 0,currentTrackIdx=void 0,actualVideoLeft=void 0,actualVideoTop=void 0,actualVideoWidth=void 0,actualVideoHeight=void 0,captionContainer=void 0,videoSizeCheckInterval=void 0,fullscreenAttribute=void 0,displayCCOnTop=void 0,previousISDState=void 0,topZIndex=void 0,resizeObserver=void 0;function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);}function initialize(){if(typeof window==='undefined'||typeof navigator==='undefined'){return;}Cue=window.VTTCue||window.TextTrackCue;textTrackQueue=[];trackElementArr=[];currentTrackIdx=-1;actualVideoLeft=0;actualVideoTop=0;actualVideoWidth=0;actualVideoHeight=0;captionContainer=null;videoSizeCheckInterval=null;displayCCOnTop=false;topZIndex=2147483647;previousISDState=null;if(document.fullscreenElement!==undefined){fullscreenAttribute='fullscreenElement';// Standard and Edge
}else if(document.webkitIsFullScreen!==undefined){fullscreenAttribute='webkitIsFullScreen';// Chrome and Safari (and Edge)
}else if(document.msFullscreenElement){// IE11
fullscreenAttribute='msFullscreenElement';}else if(document.mozFullScreen){// Firefox
fullscreenAttribute='mozFullScreen';}}function createTrackForUserAgent(i){var kind=textTrackQueue[i].kind;var label=textTrackQueue[i].id!==undefined?textTrackQueue[i].id:textTrackQueue[i].lang;var lang=textTrackQueue[i].lang;var isTTML=textTrackQueue[i].isTTML;var isEmbedded=textTrackQueue[i].isEmbedded;var track=videoModel.addTextTrack(kind,label,lang,isTTML,isEmbedded);return track;}function setDisplayCConTop(value){(0,_SupervisorTools.checkParameterType)(value,'boolean');displayCCOnTop=value;if(!captionContainer||document[fullscreenAttribute]){return;}captionContainer.style.zIndex=value?topZIndex:null;}function addTextTrack(textTrackInfoVO,totalTextTracks){if(textTrackQueue.length===totalTextTracks){logger.error('Trying to add too many tracks.');return;}textTrackQueue.push(textTrackInfoVO);if(textTrackQueue.length===totalTextTracks){textTrackQueue.sort(function(a,b){//Sort in same order as in manifest
return a.index-b.index;});captionContainer=videoModel.getTTMLRenderingDiv();var defaultIndex=-1;for(var i=0;i<textTrackQueue.length;i++){var track=createTrackForUserAgent.call(this,i);trackElementArr.push(track);//used to remove tracks from video element when added manually
if(textTrackQueue[i].defaultTrack){// track.default is an object property identifier that is a reserved word
// The following jshint directive is used to suppressed the warning "Expected an identifier and instead saw 'default' (a reserved word)"
/*jshint -W024 */track.default=true;defaultIndex=i;}var textTrack=getTrackByIdx(i);if(textTrack){//each time a track is created, its mode should be showing by default
//sometime, it's not on Chrome
textTrack.mode=_Constants2.default.TEXT_SHOWING;if(captionContainer&&(textTrackQueue[i].isTTML||textTrackQueue[i].isEmbedded)){textTrack.renderingType='html';}else{textTrack.renderingType='default';}}this.addCaptions(i,0,textTrackQueue[i].captionData);eventBus.trigger(_Events2.default.TEXT_TRACK_ADDED);}//set current track index in textTrackQueue array
setCurrentTrackIdx.call(this,defaultIndex);if(defaultIndex>=0){var onMetadataLoaded=function onMetadataLoaded(){var track=getTrackByIdx(defaultIndex);if(track){checkVideoSize.call(this,track,true);}eventBus.off(_Events2.default.PLAYBACK_METADATA_LOADED,onMetadataLoaded,this);};eventBus.on(_Events2.default.PLAYBACK_METADATA_LOADED,onMetadataLoaded,this);for(var idx=0;idx<textTrackQueue.length;idx++){var videoTextTrack=getTrackByIdx(idx);if(videoTextTrack){videoTextTrack.mode=idx===defaultIndex?_Constants2.default.TEXT_SHOWING:_Constants2.default.TEXT_HIDDEN;}}}eventBus.trigger(_Events2.default.TEXT_TRACKS_QUEUE_INITIALIZED,{index:currentTrackIdx,tracks:textTrackQueue});//send default idx.
}}function getVideoVisibleVideoSize(viewWidth,viewHeight,videoWidth,videoHeight,aspectRatio,use80Percent){var viewAspectRatio=viewWidth/viewHeight;var videoAspectRatio=videoWidth/videoHeight;var videoPictureWidth=0;var videoPictureHeight=0;if(viewAspectRatio>videoAspectRatio){videoPictureHeight=viewHeight;videoPictureWidth=videoPictureHeight/videoHeight*videoWidth;}else{videoPictureWidth=viewWidth;videoPictureHeight=videoPictureWidth/videoWidth*videoHeight;}var videoPictureXAspect=0;var videoPictureYAspect=0;var videoPictureWidthAspect=0;var videoPictureHeightAspect=0;var videoPictureAspect=videoPictureWidth/videoPictureHeight;if(videoPictureAspect>aspectRatio){videoPictureHeightAspect=videoPictureHeight;videoPictureWidthAspect=videoPictureHeight*aspectRatio;}else{videoPictureWidthAspect=videoPictureWidth;videoPictureHeightAspect=videoPictureWidth/aspectRatio;}videoPictureXAspect=(viewWidth-videoPictureWidthAspect)/2;videoPictureYAspect=(viewHeight-videoPictureHeightAspect)/2;if(use80Percent){return{x:videoPictureXAspect+videoPictureWidthAspect*0.1,y:videoPictureYAspect+videoPictureHeightAspect*0.1,w:videoPictureWidthAspect*0.8,h:videoPictureHeightAspect*0.8};/* Maximal picture size in videos aspect ratio */}else{return{x:videoPictureXAspect,y:videoPictureYAspect,w:videoPictureWidthAspect,h:videoPictureHeightAspect};/* Maximal picture size in videos aspect ratio */}}function checkVideoSize(track,forceDrawing){var clientWidth=videoModel.getClientWidth();var clientHeight=videoModel.getClientHeight();var videoWidth=videoModel.getVideoWidth();var videoHeight=videoModel.getVideoHeight();var videoOffsetTop=videoModel.getVideoRelativeOffsetTop();var videoOffsetLeft=videoModel.getVideoRelativeOffsetLeft();if(videoWidth!==0&&videoHeight!==0){var aspectRatio=videoWidth/videoHeight;var use80Percent=false;if(track.isFromCEA608){// If this is CEA608 then use predefined aspect ratio
aspectRatio=3.5/3.0;use80Percent=true;}var realVideoSize=getVideoVisibleVideoSize.call(this,clientWidth,clientHeight,videoWidth,videoHeight,aspectRatio,use80Percent);var newVideoWidth=realVideoSize.w;var newVideoHeight=realVideoSize.h;var newVideoLeft=realVideoSize.x;var newVideoTop=realVideoSize.y;if(newVideoWidth!=actualVideoWidth||newVideoHeight!=actualVideoHeight||newVideoLeft!=actualVideoLeft||newVideoTop!=actualVideoTop||forceDrawing){actualVideoLeft=newVideoLeft+videoOffsetLeft;actualVideoTop=newVideoTop+videoOffsetTop;actualVideoWidth=newVideoWidth;actualVideoHeight=newVideoHeight;if(captionContainer){var containerStyle=captionContainer.style;if(containerStyle){containerStyle.left=actualVideoLeft+'px';containerStyle.top=actualVideoTop+'px';containerStyle.width=actualVideoWidth+'px';containerStyle.height=actualVideoHeight+'px';containerStyle.zIndex=fullscreenAttribute&&document[fullscreenAttribute]||displayCCOnTop?topZIndex:null;eventBus.trigger(_Events2.default.CAPTION_CONTAINER_RESIZE);}}// Video view has changed size, so resize any active cues
var activeCues=track.activeCues;if(activeCues){var len=activeCues.length;for(var i=0;i<len;++i){var cue=activeCues[i];cue.scaleCue(cue);}}}}}function scaleCue(activeCue){var videoWidth=actualVideoWidth;var videoHeight=actualVideoHeight;var key=void 0,replaceValue=void 0,valueFontSize=void 0,valueLineHeight=void 0,elements=void 0;if(activeCue.cellResolution){var cellUnit=[videoWidth/activeCue.cellResolution[0],videoHeight/activeCue.cellResolution[1]];if(activeCue.linePadding){for(key in activeCue.linePadding){if(activeCue.linePadding.hasOwnProperty(key)){var valueLinePadding=activeCue.linePadding[key];replaceValue=(valueLinePadding*cellUnit[0]).toString();// Compute the CellResolution unit in order to process properties using sizing (fontSize, linePadding, etc).
var elementsSpan=document.getElementsByClassName('spanPadding');for(var i=0;i<elementsSpan.length;i++){elementsSpan[i].style.cssText=elementsSpan[i].style.cssText.replace(/(padding-left\s*:\s*)[\d.,]+(?=\s*px)/gi,'$1'+replaceValue);elementsSpan[i].style.cssText=elementsSpan[i].style.cssText.replace(/(padding-right\s*:\s*)[\d.,]+(?=\s*px)/gi,'$1'+replaceValue);}}}}if(activeCue.fontSize){for(key in activeCue.fontSize){if(activeCue.fontSize.hasOwnProperty(key)){if(activeCue.fontSize[key][0]==='%'){valueFontSize=activeCue.fontSize[key][1]/100;}else if(activeCue.fontSize[key][0]==='c'){valueFontSize=activeCue.fontSize[key][1];}replaceValue=(valueFontSize*cellUnit[1]).toString();if(key!=='defaultFontSize'){elements=document.getElementsByClassName(key);}else{elements=document.getElementsByClassName('paragraph');}for(var j=0;j<elements.length;j++){elements[j].style.cssText=elements[j].style.cssText.replace(/(font-size\s*:\s*)[\d.,]+(?=\s*px)/gi,'$1'+replaceValue);}}}if(activeCue.lineHeight){for(key in activeCue.lineHeight){if(activeCue.lineHeight.hasOwnProperty(key)){if(activeCue.lineHeight[key][0]==='%'){valueLineHeight=activeCue.lineHeight[key][1]/100;}else if(activeCue.fontSize[key][0]==='c'){valueLineHeight=activeCue.lineHeight[key][1];}replaceValue=(valueLineHeight*cellUnit[1]).toString();elements=document.getElementsByClassName(key);for(var k=0;k<elements.length;k++){elements[k].style.cssText=elements[k].style.cssText.replace(/(line-height\s*:\s*)[\d.,]+(?=\s*px)/gi,'$1'+replaceValue);}}}}}}if(activeCue.isd){var htmlCaptionDiv=document.getElementById(activeCue.cueID);if(htmlCaptionDiv){captionContainer.removeChild(htmlCaptionDiv);}renderCaption(activeCue);}}function renderCaption(cue){if(captionContainer){var finalCue=document.createElement('div');captionContainer.appendChild(finalCue);previousISDState=(0,_imsc.renderHTML)(cue.isd,finalCue,function(uri){var imsc1ImgUrnTester=/^(urn:)(mpeg:[a-z0-9][a-z0-9-]{0,31}:)(subs:)([0-9]+)$/;var smpteImgUrnTester=/^#(.*)$/;if(imsc1ImgUrnTester.test(uri)){var match=imsc1ImgUrnTester.exec(uri);var imageId=parseInt(match[4],10)-1;var imageData=btoa(cue.images[imageId]);var dataUrl='data:image/png;base64,'+imageData;return dataUrl;}else if(smpteImgUrnTester.test(uri)){var _match=smpteImgUrnTester.exec(uri);var _imageId=_match[1];var _dataUrl='data:image/png;base64,'+cue.embeddedImages[_imageId];return _dataUrl;}else{return null;}},captionContainer.clientHeight,captionContainer.clientWidth,false/*displayForcedOnlyMode*/,function(err){logger.info('renderCaption :',err);//TODO add ErrorHandler management
},previousISDState,true/*enableRollUp*/);finalCue.id=cue.cueID;eventBus.trigger(_Events2.default.CAPTION_RENDERED,{captionDiv:finalCue,currentTrackIdx:currentTrackIdx});}}/*
     * Add captions to track, store for later adding, or add captions added before
     */function addCaptions(trackIdx,timeOffset,captionData){var track=getTrackByIdx(trackIdx);var self=this;if(!track){return;}if(!Array.isArray(captionData)||captionData.length===0){return;}for(var item=0;item<captionData.length;item++){var cue=void 0;var currentItem=captionData[item];track.cellResolution=currentItem.cellResolution;track.isFromCEA608=currentItem.isFromCEA608;if(currentItem.type==='html'&&captionContainer){cue=new Cue(currentItem.start-timeOffset,currentItem.end-timeOffset,'');cue.cueHTMLElement=currentItem.cueHTMLElement;cue.isd=currentItem.isd;cue.images=currentItem.images;cue.embeddedImages=currentItem.embeddedImages;cue.cueID=currentItem.cueID;cue.scaleCue=scaleCue.bind(self);//useful parameters for cea608 subtitles, not for TTML one.
cue.cellResolution=currentItem.cellResolution;cue.lineHeight=currentItem.lineHeight;cue.linePadding=currentItem.linePadding;cue.fontSize=currentItem.fontSize;captionContainer.style.left=actualVideoLeft+'px';captionContainer.style.top=actualVideoTop+'px';captionContainer.style.width=actualVideoWidth+'px';captionContainer.style.height=actualVideoHeight+'px';cue.onenter=function(){if(track.mode===_Constants2.default.TEXT_SHOWING){if(this.isd){renderCaption(this);logger.debug('Cue enter id:'+this.cueID);}else{captionContainer.appendChild(this.cueHTMLElement);scaleCue.call(self,this);eventBus.trigger(_Events2.default.CAPTION_RENDERED,{captionDiv:this.cueHTMLElement,currentTrackIdx:currentTrackIdx});}}};cue.onexit=function(){if(captionContainer){var divs=captionContainer.childNodes;for(var i=0;i<divs.length;++i){if(divs[i].id===this.cueID){logger.debug('Cue exit id:'+divs[i].id);captionContainer.removeChild(divs[i]);--i;}}}};}else{if(currentItem.data){cue=new Cue(currentItem.start-timeOffset,currentItem.end-timeOffset,currentItem.data);if(currentItem.styles){if(currentItem.styles.align!==undefined&&'align'in cue){cue.align=currentItem.styles.align;}if(currentItem.styles.line!==undefined&&'line'in cue){cue.line=currentItem.styles.line;}if(currentItem.styles.position!==undefined&&'position'in cue){cue.position=currentItem.styles.position;}if(currentItem.styles.size!==undefined&&'size'in cue){cue.size=currentItem.styles.size;}}cue.onenter=function(){if(track.mode===_Constants2.default.TEXT_SHOWING){eventBus.trigger(_Events2.default.CAPTION_RENDERED,{currentTrackIdx:currentTrackIdx});}};}}try{if(cue){track.addCue(cue);}else{logger.error('impossible to display subtitles.');}}catch(e){// Edge crash, delete everything and start adding again
// @see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11979877/
deleteTrackCues(track);track.addCue(cue);throw e;}}}function getTrackByIdx(idx){return idx>=0&&textTrackQueue[idx]?videoModel.getTextTrack(textTrackQueue[idx].kind,textTrackQueue[idx].id,textTrackQueue[idx].lang,textTrackQueue[idx].isTTML,textTrackQueue[idx].isEmbedded):null;}function getCurrentTrackIdx(){return currentTrackIdx;}function getTrackIdxForId(trackId){var idx=-1;for(var i=0;i<textTrackQueue.length;i++){if(textTrackQueue[i].id===trackId){idx=i;break;}}return idx;}function setCurrentTrackIdx(idx){var _this=this;if(idx===currentTrackIdx){return;}currentTrackIdx=idx;var track=getTrackByIdx(currentTrackIdx);setCueStyleOnTrack.call(this,track);if(videoSizeCheckInterval){clearInterval(videoSizeCheckInterval);videoSizeCheckInterval=null;}if(track&&track.renderingType==='html'){checkVideoSize.call(this,track,true);if(window.ResizeObserver){resizeObserver=new window.ResizeObserver(function(){checkVideoSize.call(_this,track,true);});resizeObserver.observe(videoModel.getElement());}else{videoSizeCheckInterval=setInterval(checkVideoSize.bind(this,track),500);}}}function setCueStyleOnTrack(track){clearCaptionContainer.call(this);if(track){if(track.renderingType==='html'){setNativeCueStyle.call(this);}else{removeNativeCueStyle.call(this);}}else{removeNativeCueStyle.call(this);}}function cueInRange(cue,start,end){return(isNaN(start)||cue.startTime>=start)&&(isNaN(end)||cue.endTime<=end);}function deleteTrackCues(track,start,end){if(track.cues){var cues=track.cues;var lastIdx=cues.length-1;for(var r=lastIdx;r>=0;r--){if(cueInRange(cues[r],start,end)){track.removeCue(cues[r]);}}}}function deleteCuesFromTrackIdx(trackIdx,start,end){var track=getTrackByIdx(trackIdx);if(track){deleteTrackCues(track,start,end);}}function deleteAllTextTracks(){var ln=trackElementArr?trackElementArr.length:0;for(var i=0;i<ln;i++){var track=getTrackByIdx(i);if(track){deleteTrackCues.call(this,track);track.mode='disabled';}}trackElementArr=[];textTrackQueue=[];if(videoSizeCheckInterval){clearInterval(videoSizeCheckInterval);videoSizeCheckInterval=null;}if(resizeObserver&&videoModel){resizeObserver.unobserve(videoModel.getElement());resizeObserver=null;}currentTrackIdx=-1;clearCaptionContainer.call(this);}function deleteTextTrack(idx){videoModel.removeChild(trackElementArr[idx]);trackElementArr.splice(idx,1);}/* Set native cue style to transparent background to avoid it being displayed. */function setNativeCueStyle(){var styleElement=document.getElementById('native-cue-style');if(styleElement){return;//Already set
}styleElement=document.createElement('style');styleElement.id='native-cue-style';document.head.appendChild(styleElement);var stylesheet=styleElement.sheet;var video=videoModel.getElement();try{if(video){if(video.id){stylesheet.insertRule('#'+video.id+'::cue {background: transparent}',0);}else if(video.classList.length!==0){stylesheet.insertRule('.'+video.className+'::cue {background: transparent}',0);}else{stylesheet.insertRule('video::cue {background: transparent}',0);}}}catch(e){logger.info(''+e.message);}}/* Remove the extra cue style with transparent background for native cues. */function removeNativeCueStyle(){var styleElement=document.getElementById('native-cue-style');if(styleElement){document.head.removeChild(styleElement);}}function clearCaptionContainer(){if(captionContainer){while(captionContainer.firstChild){captionContainer.removeChild(captionContainer.firstChild);}}}function setConfig(config){if(!config){return;}if(config.videoModel){videoModel=config.videoModel;}}function setModeForTrackIdx(idx,mode){var track=getTrackByIdx(idx);if(track&&track.mode!==mode){track.mode=mode;}}function getCurrentTrackInfo(){return textTrackQueue[currentTrackIdx];}instance={initialize:initialize,setDisplayCConTop:setDisplayCConTop,addTextTrack:addTextTrack,addCaptions:addCaptions,getCurrentTrackIdx:getCurrentTrackIdx,setCurrentTrackIdx:setCurrentTrackIdx,getTrackIdxForId:getTrackIdxForId,getCurrentTrackInfo:getCurrentTrackInfo,setModeForTrackIdx:setModeForTrackIdx,deleteCuesFromTrackIdx:deleteCuesFromTrackIdx,deleteAllTextTracks:deleteAllTextTracks,deleteTextTrack:deleteTextTrack,setConfig:setConfig};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */TextTracks.__dashjs_factory_name='TextTracks';exports.default=_FactoryMaker2.default.getSingletonFactory(TextTracks);


},{"../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","imsc":"../node_modules/imsc/src/main/js/main.js","../utils/SupervisorTools":"../node_modules/dashjs/build/es5/src/streaming/utils/SupervisorTools.js"}],"../node_modules/dashjs/build/es5/src/streaming/text/EmbeddedTextHtmlRender.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function EmbeddedTextHtmlRender(){var captionId=0;var instance=void 0;/* HTML Rendering functions */function checkIndent(chars){var line='';for(var c=0;c<chars.length;++c){var uc=chars[c];line+=uc.uchar;}var l=line.length;var ll=line.replace(/^\s+/,'').length;return l-ll;}function getRegionProperties(region){return'left: '+region.x*3.125+'%; top: '+region.y1*6.66+'%; width: '+(100-region.x*3.125)+'%; height: '+Math.max(region.y2-1-region.y1,1)*6.66+'%; align-items: flex-start; overflow: visible; -webkit-writing-mode: horizontal-tb;';}function createRGB(color){if(color==='red'){return'rgb(255, 0, 0)';}else if(color==='green'){return'rgb(0, 255, 0)';}else if(color==='blue'){return'rgb(0, 0, 255)';}else if(color==='cyan'){return'rgb(0, 255, 255)';}else if(color==='magenta'){return'rgb(255, 0, 255)';}else if(color==='yellow'){return'rgb(255, 255, 0)';}else if(color==='white'){return'rgb(255, 255, 255)';}else if(color==='black'){return'rgb(0, 0, 0)';}return color;}function getStyle(videoElement,style){var fontSize=videoElement.videoHeight/15.0;if(style){return'font-size: '+fontSize+'px; font-family: Menlo, Consolas, \'Cutive Mono\', monospace; color: '+(style.foreground?createRGB(style.foreground):'rgb(255, 255, 255)')+'; font-style: '+(style.italics?'italic':'normal')+'; text-decoration: '+(style.underline?'underline':'none')+'; white-space: pre; background-color: '+(style.background?createRGB(style.background):'transparent')+';';}else{return'font-size: '+fontSize+'px; font-family: Menlo, Consolas, \'Cutive Mono\', monospace; justify-content: flex-start; text-align: left; color: rgb(255, 255, 255); font-style: normal; white-space: pre; line-height: normal; font-weight: normal; text-decoration: none; width: 100%; display: flex;';}}function ltrim(s){return s.replace(/^\s+/g,'');}function rtrim(s){return s.replace(/\s+$/g,'');}function createHTMLCaptionsFromScreen(videoElement,startTime,endTime,captionScreen){var currRegion=null;var existingRegion=null;var lastRowHasText=false;var lastRowIndentL=-1;var currP={start:startTime,end:endTime,spans:[]};var currentStyle='style_cea608_white_black';var seenRegions={};var styleStates={};var regions=[];var r=void 0,s=void 0;for(r=0;r<15;++r){var row=captionScreen.rows[r];var line='';var prevPenState=null;if(false===row.isEmpty()){/* Row is not empty *//* Get indentation of this row */var rowIndent=checkIndent(row.chars);/* Create a new region is there is none */if(currRegion===null){currRegion={x:rowIndent,y1:r,y2:r+1,p:[]};}/* Check if indentation has changed and we had text of last row */if(rowIndent!==lastRowIndentL&&lastRowHasText){currRegion.p.push(currP);currP={start:startTime,end:endTime,spans:[]};currRegion.y2=r;currRegion.name='region_'+currRegion.x+'_'+currRegion.y1+'_'+currRegion.y2;if(false===seenRegions.hasOwnProperty(currRegion.name)){regions.push(currRegion);seenRegions[currRegion.name]=currRegion;}else{existingRegion=seenRegions[currRegion.name];existingRegion.p.contat(currRegion.p);}currRegion={x:rowIndent,y1:r,y2:r+1,p:[]};}for(var c=0;c<row.chars.length;++c){var uc=row.chars[c];var currPenState=uc.penState;if(prevPenState===null||!currPenState.equals(prevPenState)){if(line.trim().length>0){currP.spans.push({name:currentStyle,line:line,row:r});line='';}var currPenStateString='style_cea608_'+currPenState.foreground+'_'+currPenState.background;if(currPenState.underline){currPenStateString+='_underline';}if(currPenState.italics){currPenStateString+='_italics';}if(!styleStates.hasOwnProperty(currPenStateString)){styleStates[currPenStateString]=JSON.parse(JSON.stringify(currPenState));}prevPenState=currPenState;currentStyle=currPenStateString;}line+=uc.uchar;}if(line.trim().length>0){currP.spans.push({name:currentStyle,line:line,row:r});}lastRowHasText=true;lastRowIndentL=rowIndent;}else{/* Row is empty */lastRowHasText=false;lastRowIndentL=-1;if(currRegion){currRegion.p.push(currP);currP={start:startTime,end:endTime,spans:[]};currRegion.y2=r;currRegion.name='region_'+currRegion.x+'_'+currRegion.y1+'_'+currRegion.y2;if(false===seenRegions.hasOwnProperty(currRegion.name)){regions.push(currRegion);seenRegions[currRegion.name]=currRegion;}else{existingRegion=seenRegions[currRegion.name];existingRegion.p.contat(currRegion.p);}currRegion=null;}}}if(currRegion){currRegion.p.push(currP);currRegion.y2=r+1;currRegion.name='region_'+currRegion.x+'_'+currRegion.y1+'_'+currRegion.y2;if(false===seenRegions.hasOwnProperty(currRegion.name)){regions.push(currRegion);seenRegions[currRegion.name]=currRegion;}else{existingRegion=seenRegions[currRegion.name];existingRegion.p.contat(currRegion.p);}currRegion=null;}var captionsArray=[];/* Loop thru regions */for(r=0;r<regions.length;++r){var region=regions[r];var cueID='sub_cea608_'+captionId++;var finalDiv=document.createElement('div');finalDiv.id=cueID;var cueRegionProperties=getRegionProperties(region);finalDiv.style.cssText='position: absolute; margin: 0; display: flex; box-sizing: border-box; pointer-events: none;'+cueRegionProperties;var bodyDiv=document.createElement('div');bodyDiv.className='paragraph bodyStyle';bodyDiv.style.cssText=getStyle(videoElement);var cueUniWrapper=document.createElement('div');cueUniWrapper.className='cueUniWrapper';cueUniWrapper.style.cssText='unicode-bidi: normal; direction: ltr;';for(var p=0;p<region.p.length;++p){var ptag=region.p[p];var lastSpanRow=0;for(s=0;s<ptag.spans.length;++s){var span=ptag.spans[s];if(span.line.length>0){if(s!==0&&lastSpanRow!=span.row){var brElement=document.createElement('br');brElement.className='lineBreak';cueUniWrapper.appendChild(brElement);}var sameRow=false;if(lastSpanRow===span.row){sameRow=true;}lastSpanRow=span.row;var spanStyle=styleStates[span.name];var spanElement=document.createElement('span');spanElement.className='spanPadding '+span.name+' customSpanColor';spanElement.style.cssText=getStyle(videoElement,spanStyle);/* If this is not the first span, and it's on the same
                         * row as the last one */if(s!==0&&sameRow){/* and it's the last span on this row */if(s===ptag.spans.length-1){/* trim only the right side */spanElement.textContent=rtrim(span.line);}else{/* don't trim at all */spanElement.textContent=span.line;}}else{/* if there is more than 1 span and this isn't the last span */if(ptag.spans.length>1&&s<ptag.spans.length-1){/* Check if next text is on same row */if(span.row===ptag.spans[s+1].row){/* Next element on same row, trim start */spanElement.textContent=ltrim(span.line);}else{/* Different rows, trim both */spanElement.textContent=span.line.trim();}}else{spanElement.textContent=span.line.trim();}}cueUniWrapper.appendChild(spanElement);}}}bodyDiv.appendChild(cueUniWrapper);finalDiv.appendChild(bodyDiv);var fontSize={'bodyStyle':['%',90]};for(var _s in styleStates){if(styleStates.hasOwnProperty(_s)){fontSize[_s]=['%',90];}}captionsArray.push({type:'html',start:startTime,end:endTime,cueHTMLElement:finalDiv,cueID:cueID,cellResolution:[32,15],isFromCEA608:true,fontSize:fontSize,lineHeight:{},linePadding:{}});}return captionsArray;}instance={createHTMLCaptionsFromScreen:createHTMLCaptionsFromScreen};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */EmbeddedTextHtmlRender.__dashjs_factory_name='EmbeddedTextHtmlRender';exports.default=_FactoryMaker2.default.getSingletonFactory(EmbeddedTextHtmlRender);


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/core/errors/ErrorsBase.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var ErrorsBase=function(){function ErrorsBase(){_classCallCheck(this,ErrorsBase);}_createClass(ErrorsBase,[{key:'extend',value:function extend(errors,config){if(!errors)return;var override=config?config.override:false;var publicOnly=config?config.publicOnly:false;for(var err in errors){if(!errors.hasOwnProperty(err)||this[err]&&!override)continue;if(publicOnly&&errors[err].indexOf('public_')===-1)continue;this[err]=errors[err];}}}]);return ErrorsBase;}();exports.default=ErrorsBase;


},{}],"../node_modules/dashjs/build/es5/src/core/errors/Errors.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _ErrorsBase2=require('./ErrorsBase');var _ErrorsBase3=_interopRequireDefault(_ErrorsBase2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * Errors declaration
 * @class
 */var Errors=function(_ErrorsBase){_inherits(Errors,_ErrorsBase);function Errors(){_classCallCheck(this,Errors);/**
         * Error code returned when a manifest parsing error occurs
         */var _this=_possibleConstructorReturn(this,(Errors.__proto__||Object.getPrototypeOf(Errors)).call(this));_this.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE=10;/**
         * Error code returned when a manifest loading error occurs
         */_this.MANIFEST_LOADER_LOADING_FAILURE_ERROR_CODE=11;/**
         * Error code returned when a xlink loading error occurs
         */_this.XLINK_LOADER_LOADING_FAILURE_ERROR_CODE=12;/**
         * Error code returned when the update of segments list has failed
         */_this.SEGMENTS_UPDATE_FAILED_ERROR_CODE=13;_this.SEGMENTS_UNAVAILABLE_ERROR_CODE=14;_this.SEGMENT_BASE_LOADER_ERROR_CODE=15;_this.TIME_SYNC_FAILED_ERROR_CODE=16;_this.FRAGMENT_LOADER_LOADING_FAILURE_ERROR_CODE=17;_this.FRAGMENT_LOADER_NULL_REQUEST_ERROR_CODE=18;_this.URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE=19;_this.APPEND_ERROR_CODE=20;_this.REMOVE_ERROR_CODE=21;_this.DATA_UPDATE_FAILED_ERROR_CODE=22;/**
         * Error code returned when MediaSource is not supported by the browser
         */_this.CAPABILITY_MEDIASOURCE_ERROR_CODE=23;/**
         * Error code returned when Protected contents are not supported
         */_this.CAPABILITY_MEDIAKEYS_ERROR_CODE=24;_this.DOWNLOAD_ERROR_ID_MANIFEST_CODE=25;_this.DOWNLOAD_ERROR_ID_SIDX_CODE=26;_this.DOWNLOAD_ERROR_ID_CONTENT_CODE=27;_this.DOWNLOAD_ERROR_ID_INITIALIZATION_CODE=28;_this.DOWNLOAD_ERROR_ID_XLINK_CODE=29;_this.MANIFEST_ERROR_ID_CODEC_CODE=30;_this.MANIFEST_ERROR_ID_PARSE_CODE=31;/**
         * Error code returned when no stream (period) has been detected in the manifest
         */_this.MANIFEST_ERROR_ID_NOSTREAMS_CODE=32;/**
         * Error code returned when something wrong has append during subtitles parsing (TTML or VTT)
         */_this.TIMED_TEXT_ERROR_ID_PARSE_CODE=33;/**
         * Error code returned when a 'muxed' media type has been detected in the manifest. This type is not supported
         */_this.MANIFEST_ERROR_ID_MULTIPLEXED_CODE=34;/**
         * Error code returned when a media source type is not supported
         */_this.MEDIASOURCE_TYPE_UNSUPPORTED_CODE=35;_this.MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE='parsing failed for ';_this.MANIFEST_LOADER_LOADING_FAILURE_ERROR_MESSAGE='Failed loading manifest: ';_this.XLINK_LOADER_LOADING_FAILURE_ERROR_MESSAGE='Failed loading Xlink element: ';_this.SEGMENTS_UPDATE_FAILED_ERROR_MESSAGE='Segments update failed';_this.SEGMENTS_UNAVAILABLE_ERROR_MESSAGE='no segments are available yet';_this.SEGMENT_BASE_LOADER_ERROR_MESSAGE='error loading segments';_this.TIME_SYNC_FAILED_ERROR_MESSAGE='Failed to synchronize time';_this.FRAGMENT_LOADER_NULL_REQUEST_ERROR_MESSAGE='request is null';_this.URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE='Failed to resolve a valid URL';_this.APPEND_ERROR_MESSAGE='chunk is not defined';_this.REMOVE_ERROR_MESSAGE='buffer is not defined';_this.DATA_UPDATE_FAILED_ERROR_MESSAGE='Data update failed';_this.CAPABILITY_MEDIASOURCE_ERROR_MESSAGE='mediasource is not supported';_this.CAPABILITY_MEDIAKEYS_ERROR_MESSAGE='mediakeys is not supported';_this.TIMED_TEXT_ERROR_MESSAGE_PARSE='parsing error :';_this.MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE='Error creating source buffer of type : ';return _this;}return Errors;}(_ErrorsBase3.default);var errors=new Errors();exports.default=errors;


},{"./ErrorsBase":"../node_modules/dashjs/build/es5/src/core/errors/ErrorsBase.js"}],"../node_modules/dashjs/build/es5/src/streaming/text/TextSourceBuffer.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _HTTPRequest=require('../vo/metrics/HTTPRequest');var _TextTrackInfo=require('../vo/TextTrackInfo');var _TextTrackInfo2=_interopRequireDefault(_TextTrackInfo);var _BoxParser=require('../utils/BoxParser');var _BoxParser2=_interopRequireDefault(_BoxParser);var _CustomTimeRanges=require('../utils/CustomTimeRanges');var _CustomTimeRanges2=_interopRequireDefault(_CustomTimeRanges);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Debug=require('../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _TextTracks=require('./TextTracks');var _TextTracks2=_interopRequireDefault(_TextTracks);var _EmbeddedTextHtmlRender=require('./EmbeddedTextHtmlRender');var _EmbeddedTextHtmlRender2=_interopRequireDefault(_EmbeddedTextHtmlRender);var _codemIsoboxer=require('codem-isoboxer');var _codemIsoboxer2=_interopRequireDefault(_codemIsoboxer);var _cea608Parser=require('../../../externals/cea608-parser');var _cea608Parser2=_interopRequireDefault(_cea608Parser);var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _DashJSError=require('../vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);var _Errors=require('../../core/errors/Errors');var _Errors2=_interopRequireDefault(_Errors);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function TextSourceBuffer(){var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var embeddedInitialized=false;var instance=void 0,logger=void 0,boxParser=void 0,errHandler=void 0,adapter=void 0,manifestModel=void 0,mediaController=void 0,parser=void 0,vttParser=void 0,ttmlParser=void 0,mediaInfos=void 0,textTracks=void 0,fragmentedFragmentModel=void 0,initializationSegmentReceived=void 0,timescale=void 0,fragmentedTracks=void 0,videoModel=void 0,streamController=void 0,firstFragmentedSubtitleStart=void 0,currFragmentedTrackIdx=void 0,embeddedTracks=void 0,embeddedTimescale=void 0,embeddedLastSequenceNumber=void 0,embeddedCea608FieldParsers=void 0,embeddedTextHtmlRender=void 0,mseTimeOffset=void 0;function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);resetInitialSettings();}function resetFragmented(){fragmentedFragmentModel=null;timescale=NaN;fragmentedTracks=[];firstFragmentedSubtitleStart=null;initializationSegmentReceived=false;}function resetInitialSettings(){resetFragmented();mediaInfos=[];parser=null;}function initialize(mimeType,streamInfo,mediaInfoArr,fragmentModel){if(!embeddedInitialized){initEmbedded();}textTracks.setConfig({videoModel:videoModel});textTracks.initialize();if(!boxParser){boxParser=(0,_BoxParser2.default)(context).getInstance();}addMediaInfos(mimeType,streamInfo,mediaInfoArr,fragmentModel);}function addMediaInfos(mimeType,streamInfo,mediaInfoArr,fragmentModel){var isFragmented=!adapter.getIsTextTrack(mimeType);mediaInfos=mediaInfos.concat(mediaInfoArr);if(isFragmented){fragmentedFragmentModel=fragmentModel;instance.buffered=(0,_CustomTimeRanges2.default)(context).create();fragmentedTracks=mediaController.getTracksFor(_Constants2.default.FRAGMENTED_TEXT,streamInfo);var currFragTrack=mediaController.getCurrentTrackFor(_Constants2.default.FRAGMENTED_TEXT,streamInfo);for(var i=0;i<fragmentedTracks.length;i++){if(fragmentedTracks[i]===currFragTrack){setCurrentFragmentedTrackIdx(i);break;}}}for(var _i=0;_i<mediaInfos.length;_i++){createTextTrackFromMediaInfo(null,mediaInfos[_i]);}}function abort(){textTracks.deleteAllTextTracks();resetFragmented();boxParser=null;mediaInfos=[];}function reset(){resetInitialSettings();streamController=null;videoModel=null;textTracks=null;}function onVideoChunkReceived(e){var chunk=e.chunk;if(chunk.mediaInfo.embeddedCaptions){append(chunk.bytes,chunk);}}function initEmbedded(){embeddedTracks=[];textTracks=(0,_TextTracks2.default)(context).getInstance();textTracks.setConfig({videoModel:videoModel});textTracks.initialize();boxParser=(0,_BoxParser2.default)(context).getInstance();currFragmentedTrackIdx=null;embeddedTimescale=0;embeddedCea608FieldParsers=[];embeddedLastSequenceNumber=null;embeddedInitialized=true;embeddedTextHtmlRender=(0,_EmbeddedTextHtmlRender2.default)(context).getInstance();var streamProcessors=streamController.getActiveStreamProcessors();for(var i in streamProcessors){if(streamProcessors[i].getType()==='video'){mseTimeOffset=streamProcessors[i].getRepresentationInfo().MSETimeOffset;break;}}eventBus.on(_Events2.default.VIDEO_CHUNK_RECEIVED,onVideoChunkReceived,this);eventBus.on(_Events2.default.BUFFER_CLEARED,onVideoBufferCleared,this);}function resetEmbedded(){eventBus.off(_Events2.default.VIDEO_CHUNK_RECEIVED,onVideoChunkReceived,this);eventBus.off(_Events2.default.BUFFER_CLEARED,onVideoBufferCleared,this);if(textTracks){textTracks.deleteAllTextTracks();}embeddedInitialized=false;embeddedTracks=[];embeddedCea608FieldParsers=[null,null];embeddedLastSequenceNumber=null;}function addEmbeddedTrack(mediaInfo){if(!embeddedInitialized){initEmbedded();}if(mediaInfo){if(mediaInfo.id===_Constants2.default.CC1||mediaInfo.id===_Constants2.default.CC3){for(var i=0;i<embeddedTracks.length;i++){if(embeddedTracks[i].id===mediaInfo.id){return;}}embeddedTracks.push(mediaInfo);}else{logger.warn('Embedded track '+mediaInfo.id+' not supported!');}}}function setConfig(config){if(!config){return;}if(config.errHandler){errHandler=config.errHandler;}if(config.adapter){adapter=config.adapter;}if(config.manifestModel){manifestModel=config.manifestModel;}if(config.mediaController){mediaController=config.mediaController;}if(config.videoModel){videoModel=config.videoModel;}if(config.streamController){streamController=config.streamController;}if(config.textTracks){textTracks=config.textTracks;}if(config.vttParser){vttParser=config.vttParser;}if(config.ttmlParser){ttmlParser=config.ttmlParser;}}function getConfig(){var config={fragmentModel:fragmentedFragmentModel,fragmentedTracks:fragmentedTracks,videoModel:videoModel};return config;}function setCurrentFragmentedTrackIdx(idx){currFragmentedTrackIdx=idx;}function createTextTrackFromMediaInfo(captionData,mediaInfo){var textTrackInfo=new _TextTrackInfo2.default();var trackKindMap={subtitle:'subtitles',caption:'captions'};//Dash Spec has no "s" on end of KIND but HTML needs plural.
var getKind=function getKind(){var kind=mediaInfo.roles.length>0?trackKindMap[mediaInfo.roles[0]]:trackKindMap.caption;kind=kind===trackKindMap.caption||kind===trackKindMap.subtitle?kind:trackKindMap.caption;return kind;};var checkTTML=function checkTTML(){var ttml=false;if(mediaInfo.codec&&mediaInfo.codec.search(_Constants2.default.STPP)>=0){ttml=true;}if(mediaInfo.mimeType&&mediaInfo.mimeType.search(_Constants2.default.TTML)>=0){ttml=true;}return ttml;};textTrackInfo.captionData=captionData;textTrackInfo.lang=mediaInfo.lang;textTrackInfo.labels=mediaInfo.labels;textTrackInfo.id=mediaInfo.id?mediaInfo.id:mediaInfo.index;// AdaptationSet id (an unsigned int) as it's optional parameter, use mediaInfo.index
textTrackInfo.index=mediaInfo.index;// AdaptationSet index in manifest
textTrackInfo.isTTML=checkTTML();textTrackInfo.defaultTrack=getIsDefault(mediaInfo);textTrackInfo.isFragmented=!adapter.getIsTextTrack(mediaInfo.mimeType);textTrackInfo.isEmbedded=mediaInfo.isEmbedded?true:false;textTrackInfo.kind=getKind();textTrackInfo.roles=mediaInfo.roles;textTrackInfo.accessibility=mediaInfo.accessibility;var totalNrTracks=(mediaInfos?mediaInfos.length:0)+embeddedTracks.length;textTracks.addTextTrack(textTrackInfo,totalNrTracks);}function append(bytes,chunk){var result=void 0,sampleList=void 0,i=void 0,j=void 0,k=void 0,samplesInfo=void 0,ccContent=void 0;var mediaInfo=chunk.mediaInfo;var mediaType=mediaInfo.type;var mimeType=mediaInfo.mimeType;var codecType=mediaInfo.codec||mimeType;if(!codecType){logger.error('No text type defined');return;}if(mediaType===_Constants2.default.FRAGMENTED_TEXT){if(!initializationSegmentReceived&&chunk.segmentType==='InitializationSegment'){initializationSegmentReceived=true;timescale=boxParser.getMediaTimescaleFromMoov(bytes);}else{if(!initializationSegmentReceived){return;}samplesInfo=boxParser.getSamplesInfo(bytes);sampleList=samplesInfo.sampleList;if(firstFragmentedSubtitleStart===null&&sampleList.length>0){firstFragmentedSubtitleStart=sampleList[0].cts-chunk.start*timescale;}if(codecType.search(_Constants2.default.STPP)>=0){parser=parser!==null?parser:getParser(codecType);for(i=0;i<sampleList.length;i++){var sample=sampleList[i];var sampleStart=sample.cts;var sampleRelStart=sampleStart-firstFragmentedSubtitleStart;this.buffered.add(sampleRelStart/timescale,(sampleRelStart+sample.duration)/timescale);var dataView=new DataView(bytes,sample.offset,sample.subSizes[0]);ccContent=_codemIsoboxer2.default.Utils.dataViewToString(dataView,_Constants2.default.UTF8);var images=[];var subOffset=sample.offset+sample.subSizes[0];for(j=1;j<sample.subSizes.length;j++){var inData=new Uint8Array(bytes,subOffset,sample.subSizes[j]);var raw=String.fromCharCode.apply(null,inData);images.push(raw);subOffset+=sample.subSizes[j];}try{// Only used for Miscrosoft Smooth Streaming support - caption time is relative to sample time. In this case, we apply an offset.
var manifest=manifestModel.getValue();var offsetTime=manifest.ttmlTimeIsRelative?sampleStart/timescale:0;result=parser.parse(ccContent,offsetTime,sampleStart/timescale,(sampleStart+sample.duration)/timescale,images);textTracks.addCaptions(currFragmentedTrackIdx,firstFragmentedSubtitleStart/timescale,result);}catch(e){fragmentedFragmentModel.removeExecutedRequestsBeforeTime();this.remove();logger.error('TTML parser error: '+e.message);}}}else{// WebVTT case
var captionArray=[];for(i=0;i<sampleList.length;i++){var _sample=sampleList[i];_sample.cts-=firstFragmentedSubtitleStart;this.buffered.add(_sample.cts/timescale,(_sample.cts+_sample.duration)/timescale);var sampleData=bytes.slice(_sample.offset,_sample.offset+_sample.size);// There are boxes inside the sampleData, so we need a ISOBoxer to get at it.
var sampleBoxes=_codemIsoboxer2.default.parseBuffer(sampleData);for(j=0;j<sampleBoxes.boxes.length;j++){var box1=sampleBoxes.boxes[j];logger.debug('VTT box1: '+box1.type);if(box1.type==='vtte'){continue;//Empty box
}if(box1.type==='vttc'){logger.debug('VTT vttc boxes.length = '+box1.boxes.length);for(k=0;k<box1.boxes.length;k++){var box2=box1.boxes[k];logger.debug('VTT box2: '+box2.type);if(box2.type==='payl'){var cue_text=box2.cue_text;logger.debug('VTT cue_text = '+cue_text);var start_time=_sample.cts/timescale;var end_time=(_sample.cts+_sample.duration)/timescale;captionArray.push({start:start_time,end:end_time,data:cue_text,styles:{}});logger.debug('VTT '+start_time+'-'+end_time+' : '+cue_text);}}}}}if(captionArray.length>0){textTracks.addCaptions(currFragmentedTrackIdx,0,captionArray);}}}}else if(mediaType===_Constants2.default.TEXT){var _dataView=new DataView(bytes,0,bytes.byteLength);ccContent=_codemIsoboxer2.default.Utils.dataViewToString(_dataView,_Constants2.default.UTF8);try{result=getParser(codecType).parse(ccContent,0);textTracks.addCaptions(textTracks.getCurrentTrackIdx(),0,result);}catch(e){errHandler.error(new _DashJSError2.default(_Errors2.default.TIMED_TEXT_ERROR_ID_PARSE_CODE,_Errors2.default.TIMED_TEXT_ERROR_MESSAGE_PARSE+e.message,ccContent));}}else if(mediaType===_Constants2.default.VIDEO){//embedded text
if(chunk.segmentType===_HTTPRequest.HTTPRequest.INIT_SEGMENT_TYPE){if(embeddedTimescale===0){embeddedTimescale=boxParser.getMediaTimescaleFromMoov(bytes);for(i=0;i<embeddedTracks.length;i++){createTextTrackFromMediaInfo(null,embeddedTracks[i]);}}}else{// MediaSegment
if(embeddedTimescale===0){logger.warn('CEA-608: No timescale for embeddedTextTrack yet');return;}var makeCueAdderForIndex=function makeCueAdderForIndex(self,trackIndex){function newCue(startTime,endTime,captionScreen){var captionsArray=null;if(videoModel.getTTMLRenderingDiv()){captionsArray=embeddedTextHtmlRender.createHTMLCaptionsFromScreen(videoModel.getElement(),startTime,endTime,captionScreen);}else{var text=captionScreen.getDisplayText();captionsArray=[{start:startTime,end:endTime,data:text,styles:{}}];}if(captionsArray){textTracks.addCaptions(trackIndex,0,captionsArray);}}return newCue;};samplesInfo=boxParser.getSamplesInfo(bytes);var sequenceNumber=samplesInfo.lastSequenceNumber;if(!embeddedCea608FieldParsers[0]&&!embeddedCea608FieldParsers[1]){// Time to setup the CEA-608 parsing
var field=void 0,handler=void 0,trackIdx=void 0;for(i=0;i<embeddedTracks.length;i++){if(embeddedTracks[i].id===_Constants2.default.CC1){field=0;trackIdx=textTracks.getTrackIdxForId(_Constants2.default.CC1);}else if(embeddedTracks[i].id===_Constants2.default.CC3){field=1;trackIdx=textTracks.getTrackIdxForId(_Constants2.default.CC3);}if(trackIdx===-1){logger.warn('CEA-608: data before track is ready.');return;}handler=makeCueAdderForIndex(this,trackIdx);embeddedCea608FieldParsers[i]=new _cea608Parser2.default.Cea608Parser(i+1,{'newCue':handler},null);}}if(embeddedTimescale){if(embeddedLastSequenceNumber!==null&&sequenceNumber!==embeddedLastSequenceNumber+samplesInfo.numSequences){for(i=0;i<embeddedCea608FieldParsers.length;i++){if(embeddedCea608FieldParsers[i]){embeddedCea608FieldParsers[i].reset();}}}var allCcData=extractCea608Data(bytes,samplesInfo.sampleList);for(var fieldNr=0;fieldNr<embeddedCea608FieldParsers.length;fieldNr++){var ccData=allCcData.fields[fieldNr];var fieldParser=embeddedCea608FieldParsers[fieldNr];if(fieldParser){for(i=0;i<ccData.length;i++){fieldParser.addData(ccData[i][0]/embeddedTimescale,ccData[i][1]);}}}embeddedLastSequenceNumber=sequenceNumber;}}}}/**
     * Extract CEA-608 data from a buffer of data.
     * @param {ArrayBuffer} data
     * @param {Array} samples cue information
     * @returns {Object|null} ccData corresponding to one segment.
     */function extractCea608Data(data,samples){if(samples.length===0){return null;}var allCcData={splits:[],fields:[[],[]]};var raw=new DataView(data);for(var i=0;i<samples.length;i++){var sample=samples[i];var cea608Ranges=_cea608Parser2.default.findCea608Nalus(raw,sample.offset,sample.size);var lastSampleTime=null;var idx=0;for(var j=0;j<cea608Ranges.length;j++){var ccData=_cea608Parser2.default.extractCea608DataFromRange(raw,cea608Ranges[j]);for(var k=0;k<2;k++){if(ccData[k].length>0){if(sample.cts!==lastSampleTime){idx=0;}else{idx+=1;}allCcData.fields[k].push([sample.cts+mseTimeOffset*embeddedTimescale,ccData[k],idx]);lastSampleTime=sample.cts;}}}}// Sort by sampleTime ascending order
// If two packets have the same sampleTime, use them in the order
// they were received
allCcData.fields.forEach(function sortField(field){field.sort(function(a,b){if(a[0]===b[0]){return a[2]-b[2];}return a[0]-b[0];});});return allCcData;}function getIsDefault(mediaInfo){//TODO How to tag default. currently same order as listed in manifest.
// Is there a way to mark a text adaptation set as the default one? DASHIF meeting talk about using role which is being used for track KIND
// Eg subtitles etc. You can have multiple role tags per adaptation Not defined in the spec yet.
var isDefault=false;if(embeddedTracks.length>1&&mediaInfo.isEmbedded){isDefault=mediaInfo.id&&mediaInfo.id===_Constants2.default.CC1;// CC1 if both CC1 and CC3 exist
}else if(embeddedTracks.length===1){if(mediaInfo.id&&typeof mediaInfo.id==='string'&&mediaInfo.id.substring(0,2)==='CC'){// Either CC1 or CC3
isDefault=true;}}else if(embeddedTracks.length===0){isDefault=mediaInfo.index===mediaInfos[0].index;}return isDefault;}function getParser(codecType){var parser=void 0;if(codecType.search(_Constants2.default.VTT)>=0){parser=vttParser;}else if(codecType.search(_Constants2.default.TTML)>=0||codecType.search(_Constants2.default.STPP)>=0){parser=ttmlParser;}return parser;}function remove(start,end){//if start and end are not defined, remove all
if(start===undefined&&start===end){start=this.buffered.start(0);end=this.buffered.end(this.buffered.length-1);}this.buffered.remove(start,end);}function onVideoBufferCleared(e){embeddedTracks.forEach(function(track){var trackIdx=textTracks.getTrackIdxForId(track.id);if(trackIdx>=0){textTracks.deleteCuesFromTrackIdx(trackIdx,e.from,e.to);}});}instance={initialize:initialize,append:append,abort:abort,addEmbeddedTrack:addEmbeddedTrack,resetEmbedded:resetEmbedded,setConfig:setConfig,getConfig:getConfig,setCurrentFragmentedTrackIdx:setCurrentFragmentedTrackIdx,remove:remove,reset:reset};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */TextSourceBuffer.__dashjs_factory_name='TextSourceBuffer';exports.default=_FactoryMaker2.default.getSingletonFactory(TextSourceBuffer);


},{"../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../vo/metrics/HTTPRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/HTTPRequest.js","../vo/TextTrackInfo":"../node_modules/dashjs/build/es5/src/streaming/vo/TextTrackInfo.js","../utils/BoxParser":"../node_modules/dashjs/build/es5/src/streaming/utils/BoxParser.js","../utils/CustomTimeRanges":"../node_modules/dashjs/build/es5/src/streaming/utils/CustomTimeRanges.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","./TextTracks":"../node_modules/dashjs/build/es5/src/streaming/text/TextTracks.js","./EmbeddedTextHtmlRender":"../node_modules/dashjs/build/es5/src/streaming/text/EmbeddedTextHtmlRender.js","codem-isoboxer":"../node_modules/codem-isoboxer/dist/iso_boxer.js","../../../externals/cea608-parser":"../node_modules/dashjs/build/es5/externals/cea608-parser.js","../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js","../../core/errors/Errors":"../node_modules/dashjs/build/es5/src/core/errors/Errors.js"}],"../node_modules/dashjs/build/es5/src/streaming/utils/VTTParser.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Debug=require('../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var WEBVTT='WEBVTT';function VTTParser(){var context=this.context;var instance=void 0,logger=void 0,regExNewLine=void 0,regExToken=void 0,regExWhiteSpace=void 0,regExWhiteSpaceWordBoundary=void 0;function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);regExNewLine=/(?:\r\n|\r|\n)/gm;regExToken=/-->/;regExWhiteSpace=/(^[\s]+|[\s]+$)/g;regExWhiteSpaceWordBoundary=/\s\b/g;}function parse(data){var captionArray=[];var len=void 0,lastStartTime=void 0;if(!data){return captionArray;}data=data.split(regExNewLine);len=data.length;lastStartTime=-1;for(var i=0;i<len;i++){var item=data[i];if(item.length>0&&item!==WEBVTT){if(item.match(regExToken)){var attributes=parseItemAttributes(item);var cuePoints=attributes.cuePoints;var styles=attributes.styles;var text=getSublines(data,i+1);var startTime=convertCuePointTimes(cuePoints[0].replace(regExWhiteSpace,''));var endTime=convertCuePointTimes(cuePoints[1].replace(regExWhiteSpace,''));if(!isNaN(startTime)&&!isNaN(endTime)&&startTime>=lastStartTime&&endTime>startTime){if(text!==''){lastStartTime=startTime;//TODO Make VO external so other parsers can use.
captionArray.push({start:startTime,end:endTime,data:text,styles:styles});}else{logger.error('Skipping cue due to empty/malformed cue text');}}else{logger.error('Skipping cue due to incorrect cue timing');}}}}return captionArray;}function convertCuePointTimes(time){var timeArray=time.split(':');var len=timeArray.length-1;time=parseInt(timeArray[len-1],10)*60+parseFloat(timeArray[len]);if(len===2){time+=parseInt(timeArray[0],10)*3600;}return time;}function parseItemAttributes(data){var vttCuePoints=data.split(regExToken);var arr=vttCuePoints[1].split(regExWhiteSpaceWordBoundary);arr.shift();//remove first array index it is empty...
vttCuePoints[1]=arr[0];arr.shift();return{cuePoints:vttCuePoints,styles:getCaptionStyles(arr)};}function getCaptionStyles(arr){var styleObject={};arr.forEach(function(element){if(element.split(/:/).length>1){var val=element.split(/:/)[1];if(val&&val.search(/%/)!=-1){val=parseInt(val.replace(/%/,''),10);}if(element.match(/align/)||element.match(/A/)){styleObject.align=val;}if(element.match(/line/)||element.match(/L/)){styleObject.line=val;}if(element.match(/position/)||element.match(/P/)){styleObject.position=val;}if(element.match(/size/)||element.match(/S/)){styleObject.size=val;}}});return styleObject;}/*
    * VTT can have multiple lines to display per cuepoint.
    */function getSublines(data,idx){var i=idx;var subline='';var lineData='';var lineCount=void 0;while(data[i]!==''&&i<data.length){i++;}lineCount=i-idx;if(lineCount>1){for(var j=0;j<lineCount;j++){lineData=data[idx+j];if(!lineData.match(regExToken)){subline+=lineData;if(j!==lineCount-1){subline+='\n';}}else{// caption text should not have '-->' in it
subline='';break;}}}else{lineData=data[idx];if(!lineData.match(regExToken))subline=lineData;}return subline;}instance={parse:parse};setup();return instance;}VTTParser.__dashjs_factory_name='VTTParser';exports.default=_FactoryMaker2.default.getSingletonFactory(VTTParser);


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js"}],"../node_modules/dashjs/build/es5/src/streaming/utils/TTMLParser.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Debug=require('../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _imsc=require('imsc');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function TTMLParser(){var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();/*
     * This TTML parser follows "EBU-TT-D SUBTITLING DISTRIBUTION FORMAT - tech3380" spec - https://tech.ebu.ch/docs/tech/tech3380.pdf.
     * */var instance=void 0,logger=void 0;var cueCounter=0;// Used to give every cue a unique ID.
function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);}function getCueID(){var id='cue_TTML_'+cueCounter;cueCounter++;return id;}/**
     * Parse the raw data and process it to return the HTML element representing the cue.
     * Return the region to be processed and controlled (hide/show) by the caption controller.
     * @param {string} data - raw data received from the TextSourceBuffer
     * @param {number} offsetTime - offset time to apply to cue time
     * @param {integer} startTimeSegment - startTime for the current segment
     * @param {integer} endTimeSegment - endTime for the current segment
     * @param {Array} images - images array referenced by subs MP4 box
     */function parse(data,offsetTime,startTimeSegment,endTimeSegment,images){var errorMsg='';var captionArray=[];var startTime=void 0,endTime=void 0,i=void 0;var content={};var embeddedImages={};var currentImageId='';var accumulated_image_data='';var metadataHandler={onOpenTag:function onOpenTag(ns,name,attrs){// cope with existing non-compliant content
if(attrs[' imagetype']&&!attrs[' imageType']){attrs[' imageType']=attrs[' imagetype'];}if(name==='image'&&(ns==='http://www.smpte-ra.org/schemas/2052-1/2010/smpte-tt'||ns==='http://www.smpte-ra.org/schemas/2052-1/2013/smpte-tt')){if(!attrs[' imageType']||attrs[' imageType'].value!=='PNG'){logger.warn('smpte-tt imageType != PNG. Discarded');return;}currentImageId=attrs['http://www.w3.org/XML/1998/namespace id'].value;}},onCloseTag:function onCloseTag(){if(currentImageId){embeddedImages[currentImageId]=accumulated_image_data.trim();}accumulated_image_data='';currentImageId='';},onText:function onText(contents){if(currentImageId){accumulated_image_data=accumulated_image_data+contents;}}};if(!data){errorMsg='no ttml data to parse';throw new Error(errorMsg);}content.data=data;eventBus.trigger(_Events2.default.TTML_TO_PARSE,content);var imsc1doc=(0,_imsc.fromXML)(content.data,function(msg){errorMsg=msg;},metadataHandler);eventBus.trigger(_Events2.default.TTML_PARSED,{ttmlString:content.data,ttmlDoc:imsc1doc});var mediaTimeEvents=imsc1doc.getMediaTimeEvents();for(i=0;i<mediaTimeEvents.length;i++){var isd=(0,_imsc.generateISD)(imsc1doc,mediaTimeEvents[i],function(error){errorMsg=error;});if(isd.contents.some(function(topLevelContents){return topLevelContents.contents.length;})){//be sure that mediaTimeEvents values are in the mp4 segment time ranges.
startTime=mediaTimeEvents[i]+offsetTime<startTimeSegment?startTimeSegment:mediaTimeEvents[i]+offsetTime;endTime=mediaTimeEvents[i+1]+offsetTime>endTimeSegment?endTimeSegment:mediaTimeEvents[i+1]+offsetTime;if(startTime<endTime){captionArray.push({start:startTime,end:endTime,type:'html',cueID:getCueID(),isd:isd,images:images,embeddedImages:embeddedImages});}}}if(errorMsg!==''){logger.error(errorMsg);throw new Error(errorMsg);}return captionArray;}instance={parse:parse};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */TTMLParser.__dashjs_factory_name='TTMLParser';exports.default=_FactoryMaker2.default.getSingletonFactory(TTMLParser);


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","imsc":"../node_modules/imsc/src/main/js/main.js"}],"../node_modules/dashjs/build/es5/src/streaming/text/TextController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _TextSourceBuffer=require('./TextSourceBuffer');var _TextSourceBuffer2=_interopRequireDefault(_TextSourceBuffer);var _TextTracks=require('./TextTracks');var _TextTracks2=_interopRequireDefault(_TextTracks);var _VTTParser=require('../utils/VTTParser');var _VTTParser2=_interopRequireDefault(_VTTParser);var _TTMLParser=require('../utils/TTMLParser');var _TTMLParser2=_interopRequireDefault(_TTMLParser);var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _SupervisorTools=require('../utils/SupervisorTools');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function TextController(){var context=this.context;var instance=void 0,textSourceBuffer=void 0,errHandler=void 0,adapter=void 0,manifestModel=void 0,mediaController=void 0,videoModel=void 0,streamController=void 0,textTracks=void 0,vttParser=void 0,ttmlParser=void 0,eventBus=void 0,defaultSettings=void 0,initialSettingsSet=void 0,lastEnabledIndex=void 0,textDefaultEnabled=void 0,// this is used for default settings (each time a file is loaded, we check value of this settings )
allTracksAreDisabled=void 0,// this is used for one session (when a file has been loaded, we use this settings to enable/disable text)
forceTextStreaming=void 0,textTracksAdded=void 0,disableTextBeforeTextTracksAdded=void 0,previousPeriodSelectedTrack=void 0;function setup(){defaultSettings=null;lastEnabledIndex=-1;forceTextStreaming=false;textTracksAdded=false;initialSettingsSet=false;disableTextBeforeTextTracksAdded=false;textTracks=(0,_TextTracks2.default)(context).getInstance();vttParser=(0,_VTTParser2.default)(context).getInstance();ttmlParser=(0,_TTMLParser2.default)(context).getInstance();textSourceBuffer=(0,_TextSourceBuffer2.default)(context).getInstance();eventBus=(0,_EventBus2.default)(context).getInstance();textTracks.initialize();eventBus.on(_Events2.default.TEXT_TRACKS_QUEUE_INITIALIZED,onTextTracksAdded,instance);eventBus.on(_Events2.default.CURRENT_TRACK_CHANGED,onCurrentTrackChanged,instance);/*
        * register those event callbacks in order to detect switch of periods and set
        * correctly the selected track index in the new period.
        * there is different cases :
        *   - switch occurs after a seek command from the user
        *   - switch occurs but codecs in streams are different
        *   - switch occurs and codecs in streams are not different
        */eventBus.on(_Events2.default.PERIOD_SWITCH_STARTED,onPeriodSwitchStarted,instance);eventBus.on(_Events2.default.STREAM_COMPLETED,onStreamCompleted,instance);eventBus.on(_Events2.default.PERIOD_SWITCH_COMPLETED,onPeriodSwitchCompleted,instance);resetInitialSettings();}function onPeriodSwitchStarted(e){if(previousPeriodSelectedTrack===undefined&&e.fromStreamInfo!==null/* test if this is the first period */){previousPeriodSelectedTrack=this.getCurrentTrackIdx();}}function onStreamCompleted(){if(previousPeriodSelectedTrack===undefined){previousPeriodSelectedTrack=this.getCurrentTrackIdx();}}function onPeriodSwitchCompleted(){if(previousPeriodSelectedTrack!==undefined){this.setTextTrack(previousPeriodSelectedTrack);previousPeriodSelectedTrack=undefined;}}function setConfig(config){if(!config){return;}if(config.errHandler){errHandler=config.errHandler;}if(config.adapter){adapter=config.adapter;}if(config.manifestModel){manifestModel=config.manifestModel;}if(config.mediaController){mediaController=config.mediaController;}if(config.videoModel){videoModel=config.videoModel;}if(config.streamController){streamController=config.streamController;}if(config.textTracks){textTracks=config.textTracks;}if(config.vttParser){vttParser=config.vttParser;}if(config.ttmlParser){ttmlParser=config.ttmlParser;}// create config for source buffer
textSourceBuffer.setConfig({errHandler:errHandler,adapter:adapter,manifestModel:manifestModel,mediaController:mediaController,videoModel:videoModel,streamController:streamController,textTracks:textTracks,vttParser:vttParser,ttmlParser:ttmlParser});}function getTextSourceBuffer(){return textSourceBuffer;}function getAllTracksAreDisabled(){return allTracksAreDisabled;}function addEmbeddedTrack(mediaInfo){textSourceBuffer.addEmbeddedTrack(mediaInfo);}function setTextDefaultLanguage(lang){(0,_SupervisorTools.checkParameterType)(lang,'string');if(!defaultSettings){defaultSettings={};}defaultSettings.lang=lang;initialSettingsSet=true;}function setInitialSettings(settings){defaultSettings=settings;initialSettingsSet=true;}function getTextDefaultLanguage(){return defaultSettings&&defaultSettings.lang||'';}function onTextTracksAdded(e){var _this=this;var tracks=e.tracks;var index=e.index;if(defaultSettings){tracks.some(function(item,idx){// matchSettings is compatible with setTextDefaultLanguage and setInitialSettings
if(mediaController.matchSettings(defaultSettings,item)){_this.setTextTrack(idx);index=idx;return true;}});}if(textDefaultEnabled===false||textDefaultEnabled===undefined&&!defaultSettings||disableTextBeforeTextTracksAdded){// disable text at startup if explicitely configured with setTextDefaultEnabled(false) or if there is no defaultSettings (configuration or from domStorage)
this.setTextTrack(-1);}lastEnabledIndex=index;eventBus.trigger(_Events2.default.TEXT_TRACKS_ADDED,{enabled:isTextEnabled(),index:index,tracks:tracks});textTracksAdded=true;}function onCurrentTrackChanged(event){if(!initialSettingsSet&&event&&event.newMediaInfo){var mediaInfo=event.newMediaInfo;if(mediaInfo.type===_Constants2.default.FRAGMENTED_TEXT){defaultSettings={lang:mediaInfo.lang,role:mediaInfo.roles[0],accessibility:mediaInfo.accessibility[0]};}}}function setTextDefaultEnabled(enable){(0,_SupervisorTools.checkParameterType)(enable,'boolean');textDefaultEnabled=enable;if(!textDefaultEnabled){// disable text at startup
this.setTextTrack(-1);}else{allTracksAreDisabled=false;}}function getTextDefaultEnabled(){return textDefaultEnabled===undefined?false:textDefaultEnabled;}function enableText(enable){(0,_SupervisorTools.checkParameterType)(enable,'boolean');if(!textDefaultEnabled&&enable){textDefaultEnabled=true;}if(isTextEnabled()!==enable){// change track selection
if(enable){// apply last enabled track
this.setTextTrack(lastEnabledIndex);}if(!enable){// keep last index and disable text track
lastEnabledIndex=this.getCurrentTrackIdx();if(!textTracksAdded){disableTextBeforeTextTracksAdded=true;}else{this.setTextTrack(-1);}}}}function isTextEnabled(){var enabled=true;if(allTracksAreDisabled&&!forceTextStreaming){enabled=false;}return enabled;}// when set to true ScheduleController will allow schedule of chunks even if tracks are all disabled. Allowing streaming to hidden track for external players to work with.
function enableForcedTextStreaming(enable){(0,_SupervisorTools.checkParameterType)(enable,'boolean');forceTextStreaming=enable;}function setTextTrack(idx){//For external time text file, the only action needed to change a track is marking the track mode to showing.
// Fragmented text tracks need the additional step of calling TextController.setTextTrack();
var config=textSourceBuffer.getConfig();var fragmentModel=config.fragmentModel;var fragmentedTracks=config.fragmentedTracks;var videoModel=config.videoModel;var mediaInfosArr=void 0,streamProcessor=void 0;allTracksAreDisabled=idx===-1?true:false;var oldTrackIdx=textTracks.getCurrentTrackIdx();if(oldTrackIdx!==idx){if(allTracksAreDisabled&&mediaController){mediaController.saveTextSettingsDisabled();}textTracks.setModeForTrackIdx(oldTrackIdx,_Constants2.default.TEXT_HIDDEN);textTracks.setCurrentTrackIdx(idx);textTracks.setModeForTrackIdx(idx,_Constants2.default.TEXT_SHOWING);var currentTrackInfo=textTracks.getCurrentTrackInfo();if(currentTrackInfo&&currentTrackInfo.isFragmented&&!currentTrackInfo.isEmbedded){for(var i=0;i<fragmentedTracks.length;i++){var mediaInfo=fragmentedTracks[i];if(currentTrackInfo.lang===mediaInfo.lang&&currentTrackInfo.index===mediaInfo.index&&(mediaInfo.id?currentTrackInfo.id===mediaInfo.id:currentTrackInfo.id===mediaInfo.index)){var currentFragTrack=mediaController.getCurrentTrackFor(_Constants2.default.FRAGMENTED_TEXT,streamController.getActiveStreamInfo());if(mediaInfo!==currentFragTrack){fragmentModel.abortRequests();fragmentModel.removeExecutedRequestsBeforeTime();textSourceBuffer.remove();textTracks.deleteCuesFromTrackIdx(oldTrackIdx);mediaController.setTrack(mediaInfo);textSourceBuffer.setCurrentFragmentedTrackIdx(i);}else if(oldTrackIdx===-1){//in fragmented use case, if the user selects the older track (the one selected before disabled text track)
//no CURRENT_TRACK_CHANGED event will be trigger, so dashHandler current time has to be updated and the scheduleController
//has to be restarted.
var streamProcessors=streamController.getActiveStreamProcessors();for(var _i=0;_i<streamProcessors.length;_i++){if(streamProcessors[_i].getType()===_Constants2.default.FRAGMENTED_TEXT){streamProcessor=streamProcessors[_i];break;}}streamProcessor.setBufferingTime(videoModel.getTime());streamProcessor.getScheduleController().start();}}}}else if(currentTrackInfo&&!currentTrackInfo.isFragmented){var _streamProcessors=streamController.getActiveStreamProcessors();for(var _i2=0;_i2<_streamProcessors.length;_i2++){if(_streamProcessors[_i2].getType()===_Constants2.default.TEXT){streamProcessor=_streamProcessors[_i2];mediaInfosArr=streamProcessor.getMediaInfoArr();break;}}if(streamProcessor&&mediaInfosArr){for(var _i3=0;_i3<mediaInfosArr.length;_i3++){if(mediaInfosArr[_i3].index===currentTrackInfo.index&&mediaInfosArr[_i3].lang===currentTrackInfo.lang){streamProcessor.selectMediaInfo(mediaInfosArr[_i3]);break;}}}}}}function getCurrentTrackIdx(){return textTracks.getCurrentTrackIdx();}function resetInitialSettings(){allTracksAreDisabled=true;textTracksAdded=false;disableTextBeforeTextTracksAdded=false;}function reset(){resetInitialSettings();textSourceBuffer.resetEmbedded();textSourceBuffer.reset();}instance={setConfig:setConfig,getTextSourceBuffer:getTextSourceBuffer,getAllTracksAreDisabled:getAllTracksAreDisabled,addEmbeddedTrack:addEmbeddedTrack,getTextDefaultLanguage:getTextDefaultLanguage,setTextDefaultLanguage:setTextDefaultLanguage,setTextDefaultEnabled:setTextDefaultEnabled,getTextDefaultEnabled:getTextDefaultEnabled,setInitialSettings:setInitialSettings,enableText:enableText,isTextEnabled:isTextEnabled,setTextTrack:setTextTrack,getCurrentTrackIdx:getCurrentTrackIdx,enableForcedTextStreaming:enableForcedTextStreaming,reset:reset};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */TextController.__dashjs_factory_name='TextController';exports.default=_FactoryMaker2.default.getSingletonFactory(TextController);


},{"../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","./TextSourceBuffer":"../node_modules/dashjs/build/es5/src/streaming/text/TextSourceBuffer.js","./TextTracks":"../node_modules/dashjs/build/es5/src/streaming/text/TextTracks.js","../utils/VTTParser":"../node_modules/dashjs/build/es5/src/streaming/utils/VTTParser.js","../utils/TTMLParser":"../node_modules/dashjs/build/es5/src/streaming/utils/TTMLParser.js","../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../utils/SupervisorTools":"../node_modules/dashjs/build/es5/src/streaming/utils/SupervisorTools.js"}],"../node_modules/dashjs/build/es5/src/streaming/SourceBufferSink.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Debug=require('../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _DashJSError=require('./vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);var _EventBus=require('../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _FactoryMaker=require('../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _TextController=require('./text/TextController');var _TextController2=_interopRequireDefault(_TextController);var _Errors=require('../core/errors/Errors');var _Errors2=_interopRequireDefault(_Errors);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var MAX_ALLOWED_DISCONTINUITY=0.1;// 100 milliseconds
/**
 * @class SourceBufferSink
 * @ignore
 * @implements FragmentSink
 *//**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function SourceBufferSink(mediaSource,mediaInfo,onAppendedCallback,oldBuffer){var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var instance=void 0,type=void 0,logger=void 0,buffer=void 0,isAppendingInProgress=void 0,intervalId=void 0;var callbacks=[];var appendQueue=[];var onAppended=onAppendedCallback;function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);isAppendingInProgress=false;type=mediaInfo.type;var codec=mediaInfo.codec;try{// Safari claims to support anything starting 'application/mp4'.
// it definitely doesn't understand 'application/mp4;codecs="stpp"'
// - currently no browser does, so check for it and use our own
// implementation. The same is true for codecs="wvtt".
if(codec.match(/application\/mp4;\s*codecs="(stpp|wvtt).*"/i)){throw new Error('not really supported');}buffer=oldBuffer?oldBuffer:mediaSource.addSourceBuffer(codec);if(buffer.changeType&&oldBuffer){logger.debug('Doing period transition with changeType');buffer.changeType(codec);}updateAppendWindow();var CHECK_INTERVAL=50;// use updateend event if possible
if(typeof buffer.addEventListener==='function'){try{buffer.addEventListener('updateend',updateEndHandler,false);buffer.addEventListener('error',errHandler,false);buffer.addEventListener('abort',errHandler,false);}catch(err){// use setInterval to periodically check if updating has been completed
intervalId=setInterval(checkIsUpdateEnded,CHECK_INTERVAL);}}else{// use setInterval to periodically check if updating has been completed
intervalId=setInterval(checkIsUpdateEnded,CHECK_INTERVAL);}}catch(ex){// Note that in the following, the quotes are open to allow for extra text after stpp and wvtt
if(mediaInfo.isText||codec.indexOf('codecs="stpp')!==-1||codec.indexOf('codecs="wvtt')!==-1){var textController=(0,_TextController2.default)(context).getInstance();buffer=textController.getTextSourceBuffer();}else{throw ex;}}}function getType(){return type;}function reset(keepBuffer){if(buffer){if(typeof buffer.removeEventListener==='function'){buffer.removeEventListener('updateend',updateEndHandler,false);buffer.removeEventListener('error',errHandler,false);buffer.removeEventListener('abort',errHandler,false);}clearInterval(intervalId);callbacks=[];if(!keepBuffer){try{if(!buffer.getClassName||buffer.getClassName()!=='TextSourceBuffer'){logger.debug('Removing sourcebuffer from media source');mediaSource.removeSourceBuffer(buffer);}}catch(e){logger.error('Failed to remove source buffer from media source.');}buffer=null;}isAppendingInProgress=false;}appendQueue=[];onAppended=null;}function getBuffer(){return buffer;}function getAllBufferRanges(){try{return buffer.buffered;}catch(e){logger.error('getAllBufferRanges exception: '+e.message);return null;}}function hasDiscontinuitiesAfter(time){try{var ranges=getAllBufferRanges();if(ranges&&ranges.length>1){for(var i=0,len=ranges.length;i<len;i++){if(i>0){if(time<ranges.start(i)&&ranges.start(i)>ranges.end(i-1)+MAX_ALLOWED_DISCONTINUITY){return true;}}}}}catch(e){logger.error('hasDiscontinuities exception: '+e.message);}return false;}function append(chunk){if(!chunk){onAppended({chunk:chunk,error:new _DashJSError2.default(_Errors2.default.APPEND_ERROR_CODE,_Errors2.default.APPEND_ERROR_MESSAGE)});return;}appendQueue.push(chunk);if(!isAppendingInProgress){waitForUpdateEnd(appendNextInQueue.bind(this));}}function updateTimestampOffset(MSETimeOffset){if(buffer.timestampOffset!==MSETimeOffset&&!isNaN(MSETimeOffset)){waitForUpdateEnd(function(){if(MSETimeOffset<0){MSETimeOffset+=0.001;}buffer.timestampOffset=MSETimeOffset;});}}function updateAppendWindow(sInfo){if(!buffer){return;}waitForUpdateEnd(function(){try{var appendWindowEnd=mediaSource.duration;var appendWindowStart=0;if(sInfo&&!isNaN(sInfo.start)&&!isNaN(sInfo.duration)&&isFinite(sInfo.duration)){appendWindowEnd=sInfo.start+sInfo.duration;}if(sInfo&&!isNaN(sInfo.start)){appendWindowStart=sInfo.start;}buffer.appendWindowStart=0;buffer.appendWindowEnd=appendWindowEnd;buffer.appendWindowStart=appendWindowStart;logger.debug('Updated append window. Set start to '+buffer.appendWindowStart+' and end to '+buffer.appendWindowEnd);}catch(e){logger.warn('Failed to set append window');}});}function remove(start,end,forceRemoval){var sourceBufferSink=this;// make sure that the given time range is correct. Otherwise we will get InvalidAccessError
waitForUpdateEnd(function(){try{if(start>=0&&end>start&&(forceRemoval||mediaSource.readyState!=='ended')){buffer.remove(start,end);}// updating is in progress, we should wait for it to complete before signaling that this operation is done
waitForUpdateEnd(function(){eventBus.trigger(_Events2.default.SOURCEBUFFER_REMOVE_COMPLETED,{buffer:sourceBufferSink,from:start,to:end,unintended:false});});}catch(err){eventBus.trigger(_Events2.default.SOURCEBUFFER_REMOVE_COMPLETED,{buffer:sourceBufferSink,from:start,to:end,unintended:false,error:new _DashJSError2.default(err.code,err.message)});}});}function appendNextInQueue(){var sourceBufferSink=this;if(appendQueue.length>0){isAppendingInProgress=true;var nextChunk=appendQueue[0];appendQueue.splice(0,1);var oldRanges=[];var afterSuccess=function afterSuccess(){// Safari sometimes drops a portion of a buffer after appending. Handle these situations here
var newRanges=getAllBufferRanges();checkBufferGapsAfterAppend(sourceBufferSink,oldRanges,newRanges,nextChunk);if(appendQueue.length>0){appendNextInQueue.call(this);}else{isAppendingInProgress=false;if(onAppended){onAppended({chunk:nextChunk});}}};try{if(nextChunk.bytes.length===0){afterSuccess.call(this);}else{oldRanges=getAllBufferRanges();if(buffer.appendBuffer){buffer.appendBuffer(nextChunk.bytes);}else{buffer.append(nextChunk.bytes,nextChunk);}// updating is in progress, we should wait for it to complete before signaling that this operation is done
waitForUpdateEnd(afterSuccess.bind(this));}}catch(err){logger.fatal('SourceBuffer append failed "'+err+'"');if(appendQueue.length>0){appendNextInQueue();}else{isAppendingInProgress=false;}if(onAppended){onAppended({chunk:nextChunk,error:new _DashJSError2.default(err.code,err.message)});}}}}function checkBufferGapsAfterAppend(buffer,oldRanges,newRanges,chunk){if(oldRanges&&oldRanges.length>0&&oldRanges.length<newRanges.length&&isChunkAlignedWithRange(oldRanges,chunk)){// A split in the range was created while appending
eventBus.trigger(_Events2.default.SOURCEBUFFER_REMOVE_COMPLETED,{buffer:buffer,from:newRanges.end(newRanges.length-2),to:newRanges.start(newRanges.length-1),unintended:true});}}function isChunkAlignedWithRange(oldRanges,chunk){for(var i=0;i<oldRanges.length;i++){var start=Math.round(oldRanges.start(i));var end=Math.round(oldRanges.end(i));if(end===chunk.start||start===chunk.end||chunk.start>=start&&chunk.end<=end){return true;}}return false;}function abort(){try{if(mediaSource.readyState==='open'){buffer.abort();}else if(buffer.setTextTrack&&mediaSource.readyState==='ended'){buffer.abort();//The cues need to be removed from the TextSourceBuffer via a call to abort()
}}catch(ex){logger.error('SourceBuffer append abort failed: "'+ex+'"');}appendQueue=[];}function executeCallback(){if(callbacks.length>0){var cb=callbacks.shift();if(buffer.updating){waitForUpdateEnd(cb);}else{cb();// Try to execute next callback if still not updating
executeCallback();}}}function checkIsUpdateEnded(){// if updating is still in progress do nothing and wait for the next check again.
if(buffer.updating)return;// updating is completed, now we can stop checking and resolve the promise
executeCallback();}function updateEndHandler(){if(buffer.updating)return;executeCallback();}function errHandler(){logger.error('SourceBufferSink error');}function waitForUpdateEnd(callback){callbacks.push(callback);if(!buffer.updating){executeCallback();}}instance={getType:getType,getAllBufferRanges:getAllBufferRanges,getBuffer:getBuffer,append:append,remove:remove,abort:abort,reset:reset,updateTimestampOffset:updateTimestampOffset,hasDiscontinuitiesAfter:hasDiscontinuitiesAfter,waitForUpdateEnd:waitForUpdateEnd,updateAppendWindow:updateAppendWindow};setup();return instance;}SourceBufferSink.__dashjs_factory_name='SourceBufferSink';var factory=_FactoryMaker2.default.getClassFactory(SourceBufferSink);exports.default=factory;


},{"../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","./vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js","../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","./text/TextController":"../node_modules/dashjs/build/es5/src/streaming/text/TextController.js","../core/errors/Errors":"../node_modules/dashjs/build/es5/src/core/errors/Errors.js"}],"../node_modules/dashjs/build/es5/src/streaming/PreBufferSink.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Debug=require('../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _FactoryMaker=require('../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * This is a sink that is used to temporarily hold onto media chunks before a video element is added.
 * The discharge() function is used to get the chunks out of the PreBuffer for adding to a real SourceBuffer.
 *
 * @class PreBufferSink
 * @ignore
 * @implements FragmentSink
 *//**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function PreBufferSink(onAppendedCallback){var context=this.context;var instance=void 0,logger=void 0,outstandingInit=void 0;var chunks=[];var onAppended=onAppendedCallback;function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);}function reset(){chunks=[];outstandingInit=null;onAppended=null;}function append(chunk){if(chunk.segmentType!=='InitializationSegment'){//Init segments are stored in the initCache.
chunks.push(chunk);chunks.sort(function(a,b){return a.start-b.start;});outstandingInit=null;}else{//We need to hold an init chunk for when a corresponding media segment is being downloaded when the discharge happens.
outstandingInit=chunk;}logger.debug('PreBufferSink appended chunk s: '+chunk.start+'; e: '+chunk.end);if(onAppended){onAppended({chunk:chunk});}}function remove(start,end){chunks=chunks.filter(function(a){return!((isNaN(end)||a.start<end)&&(isNaN(start)||a.end>start));});//The opposite of the getChunks predicate.
}//Nothing async, nothing to abort.
function abort(){}function getAllBufferRanges(){var ranges=[];for(var i=0;i<chunks.length;i++){var chunk=chunks[i];if(ranges.length===0||chunk.start>ranges[ranges.length-1].end){ranges.push({start:chunk.start,end:chunk.end});}else{ranges[ranges.length-1].end=chunk.end;}}//Implements TimeRanges interface. So acts just like sourceBuffer.buffered.
var timeranges={start:function start(n){return ranges[n].start;},end:function end(n){return ranges[n].end;}};Object.defineProperty(timeranges,'length',{get:function get(){return ranges.length;}});return timeranges;}function hasDiscontinuitiesAfter(){return false;}function updateTimestampOffset(){// Nothing to do
}function getBuffer(){return this;}/**
     * Return the all chunks in the buffer the lie between times start and end.
     * Because a chunk cannot be split, this returns the full chunk if any part of its time lies in the requested range.
     * Chunks are removed from the buffer when they are discharged.
     * @function PreBufferSink#discharge
     * @param {?Number} start The start time from which to discharge from the buffer. If NaN, it is regarded as unbounded.
     * @param {?Number} end The end time from which to discharge from the buffer. If NaN, it is regarded as unbounded.
     * @returns {Array} The set of chunks from the buffer within the time ranges.
     */function discharge(start,end){var result=getChunksAt(start,end);if(outstandingInit){result.push(outstandingInit);outstandingInit=null;}remove(start,end);return result;}function getChunksAt(start,end){return chunks.filter(function(a){return(isNaN(end)||a.start<end)&&(isNaN(start)||a.end>start);});}function waitForUpdateEnd(callback){callback();}instance={getAllBufferRanges:getAllBufferRanges,append:append,remove:remove,abort:abort,discharge:discharge,reset:reset,updateTimestampOffset:updateTimestampOffset,hasDiscontinuitiesAfter:hasDiscontinuitiesAfter,waitForUpdateEnd:waitForUpdateEnd,getBuffer:getBuffer};setup();return instance;}PreBufferSink.__dashjs_factory_name='PreBufferSink';var factory=_FactoryMaker2.default.getClassFactory(PreBufferSink);exports.default=factory;


},{"../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/streaming/rules/SwitchRequest.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var NO_CHANGE=-1;/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var PRIORITY={DEFAULT:0.5,STRONG:1,WEAK:0};function SwitchRequest(q,r,p){//TODO refactor all the calls to this to use config to be like everything else.
var instance=void 0,quality=void 0,priority=void 0,reason=void 0;// check priority value
function getPriority(p){var ret=PRIORITY.DEFAULT;// check that p is one of declared priority value
if(p===PRIORITY.DEFAULT||p===PRIORITY.STRONG||p===PRIORITY.WEAK){ret=p;}return ret;}// init attributes
quality=q===undefined?NO_CHANGE:q;priority=getPriority(p);reason=r===undefined?null:r;instance={quality:quality,reason:reason,priority:priority};return instance;}SwitchRequest.__dashjs_factory_name='SwitchRequest';var factory=_FactoryMaker2.default.getClassFactory(SwitchRequest);factory.NO_CHANGE=NO_CHANGE;factory.PRIORITY=PRIORITY;_FactoryMaker2.default.updateClassFactory(SwitchRequest.__dashjs_factory_name,factory);exports.default=factory;


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/streaming/rules/abr/ThroughputRule.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Debug=require('../../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _SwitchRequest=require('../SwitchRequest');var _SwitchRequest2=_interopRequireDefault(_SwitchRequest);var _Constants=require('../../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _MetricsConstants=require('../../constants/MetricsConstants');var _MetricsConstants2=_interopRequireDefault(_MetricsConstants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function ThroughputRule(config){config=config||{};var context=this.context;var dashMetrics=config.dashMetrics;var instance=void 0,logger=void 0;function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);}function checkConfig(){if(!dashMetrics||!dashMetrics.hasOwnProperty('getCurrentBufferState')){throw new Error(_Constants2.default.MISSING_CONFIG_ERROR);}}function getMaxIndex(rulesContext){var switchRequest=(0,_SwitchRequest2.default)(context).create();if(!rulesContext||!rulesContext.hasOwnProperty('getMediaInfo')||!rulesContext.hasOwnProperty('getMediaType')||!rulesContext.hasOwnProperty('useBufferOccupancyABR')||!rulesContext.hasOwnProperty('getAbrController')||!rulesContext.hasOwnProperty('getScheduleController')){return switchRequest;}checkConfig();var mediaInfo=rulesContext.getMediaInfo();var mediaType=rulesContext.getMediaType();var currentBufferState=dashMetrics.getCurrentBufferState(mediaType);var scheduleController=rulesContext.getScheduleController();var abrController=rulesContext.getAbrController();var streamInfo=rulesContext.getStreamInfo();var isDynamic=streamInfo&&streamInfo.manifestInfo?streamInfo.manifestInfo.isDynamic:null;var throughputHistory=abrController.getThroughputHistory();var throughput=throughputHistory.getSafeAverageThroughput(mediaType,isDynamic);var latency=throughputHistory.getAverageLatency(mediaType);var useBufferOccupancyABR=rulesContext.useBufferOccupancyABR();if(isNaN(throughput)||!currentBufferState||useBufferOccupancyABR){return switchRequest;}if(abrController.getAbandonmentStateFor(mediaType)!==_MetricsConstants2.default.ABANDON_LOAD){if(currentBufferState.state===_MetricsConstants2.default.BUFFER_LOADED||isDynamic){switchRequest.quality=abrController.getQualityForBitrate(mediaInfo,throughput,latency);scheduleController.setTimeToLoadDelay(0);logger.debug('['+mediaType+'] requesting switch to index: ',switchRequest.quality,'Average throughput',Math.round(throughput),'kbps');switchRequest.reason={throughput:throughput,latency:latency};}}return switchRequest;}function reset(){// no persistent information to reset
}instance={getMaxIndex:getMaxIndex,reset:reset};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */ThroughputRule.__dashjs_factory_name='ThroughputRule';exports.default=_FactoryMaker2.default.getClassFactory(ThroughputRule);


},{"../../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","../SwitchRequest":"../node_modules/dashjs/build/es5/src/streaming/rules/SwitchRequest.js","../../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../../constants/MetricsConstants":"../node_modules/dashjs/build/es5/src/streaming/constants/MetricsConstants.js"}],"../node_modules/dashjs/build/es5/src/streaming/rules/abr/InsufficientBufferRule.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _EventBus=require('../../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _FactoryMaker=require('../../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Debug=require('../../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _SwitchRequest=require('../SwitchRequest');var _SwitchRequest2=_interopRequireDefault(_SwitchRequest);var _Constants=require('../../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _MetricsConstants=require('../../constants/MetricsConstants');var _MetricsConstants2=_interopRequireDefault(_MetricsConstants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function InsufficientBufferRule(config){config=config||{};var INSUFFICIENT_BUFFER_SAFETY_FACTOR=0.5;var SEGMENT_IGNORE_COUNT=2;var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var dashMetrics=config.dashMetrics;var instance=void 0,logger=void 0,bufferStateDict=void 0;function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);resetInitialSettings();eventBus.on(_Events2.default.PLAYBACK_SEEKING,onPlaybackSeeking,instance);eventBus.on(_Events2.default.BYTES_APPENDED_END_FRAGMENT,onEndFragment,instance);}function checkConfig(){if(!dashMetrics||!dashMetrics.hasOwnProperty('getCurrentBufferLevel')||!dashMetrics.hasOwnProperty('getCurrentBufferState')){throw new Error(_Constants2.default.MISSING_CONFIG_ERROR);}}/*
     * InsufficientBufferRule does not kick in before the first BUFFER_LOADED event happens. This is reset at every seek.
     *
     * If a BUFFER_EMPTY event happens, then InsufficientBufferRule returns switchRequest.quality=0 until BUFFER_LOADED happens.
     *
     * Otherwise InsufficientBufferRule gives a maximum bitrate depending on throughput and bufferLevel such that
     * a whole fragment can be downloaded before the buffer runs out, subject to a conservative safety factor of 0.5.
     * If the bufferLevel is low, then InsufficientBufferRule avoids rebuffering risk.
     * If the bufferLevel is high, then InsufficientBufferRule give a high MaxIndex allowing other rules to take over.
     */function getMaxIndex(rulesContext){var switchRequest=(0,_SwitchRequest2.default)(context).create();if(!rulesContext||!rulesContext.hasOwnProperty('getMediaType')){return switchRequest;}checkConfig();var mediaType=rulesContext.getMediaType();var currentBufferState=dashMetrics.getCurrentBufferState(mediaType);var representationInfo=rulesContext.getRepresentationInfo();var fragmentDuration=representationInfo.fragmentDuration;// Don't ask for a bitrate change if there is not info about buffer state or if fragmentDuration is not defined
if(shouldIgnore(mediaType)||!fragmentDuration){return switchRequest;}if(currentBufferState&&currentBufferState.state===_MetricsConstants2.default.BUFFER_EMPTY){logger.debug('['+mediaType+'] Switch to index 0; buffer is empty.');switchRequest.quality=0;switchRequest.reason='InsufficientBufferRule: Buffer is empty';}else{var mediaInfo=rulesContext.getMediaInfo();var abrController=rulesContext.getAbrController();var throughputHistory=abrController.getThroughputHistory();var bufferLevel=dashMetrics.getCurrentBufferLevel(mediaType);var throughput=throughputHistory.getAverageThroughput(mediaType);var latency=throughputHistory.getAverageLatency(mediaType);var bitrate=throughput*(bufferLevel/fragmentDuration)*INSUFFICIENT_BUFFER_SAFETY_FACTOR;switchRequest.quality=abrController.getQualityForBitrate(mediaInfo,bitrate,latency);switchRequest.reason='InsufficientBufferRule: being conservative to avoid immediate rebuffering';}return switchRequest;}function shouldIgnore(mediaType){return bufferStateDict[mediaType].ignoreCount>0;}function resetInitialSettings(){bufferStateDict={};bufferStateDict[_Constants2.default.VIDEO]={ignoreCount:SEGMENT_IGNORE_COUNT};bufferStateDict[_Constants2.default.AUDIO]={ignoreCount:SEGMENT_IGNORE_COUNT};}function onPlaybackSeeking(){resetInitialSettings();}function onEndFragment(e){if(!isNaN(e.startTime)&&(e.mediaType===_Constants2.default.AUDIO||e.mediaType===_Constants2.default.VIDEO)){if(bufferStateDict[e.mediaType].ignoreCount>0){bufferStateDict[e.mediaType].ignoreCount--;}}}function reset(){resetInitialSettings();eventBus.off(_Events2.default.PLAYBACK_SEEKING,onPlaybackSeeking,instance);eventBus.off(_Events2.default.BYTES_APPENDED_END_FRAGMENT,onEndFragment,instance);}instance={getMaxIndex:getMaxIndex,reset:reset};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */InsufficientBufferRule.__dashjs_factory_name='InsufficientBufferRule';exports.default=_FactoryMaker2.default.getClassFactory(InsufficientBufferRule);


},{"../../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","../SwitchRequest":"../node_modules/dashjs/build/es5/src/streaming/rules/SwitchRequest.js","../../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../../constants/MetricsConstants":"../node_modules/dashjs/build/es5/src/streaming/constants/MetricsConstants.js"}],"../node_modules/dashjs/build/es5/src/streaming/rules/abr/AbandonRequestsRule.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _SwitchRequest=require('../SwitchRequest');var _SwitchRequest2=_interopRequireDefault(_SwitchRequest);var _FactoryMaker=require('../../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Debug=require('../../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function AbandonRequestsRule(config){config=config||{};var ABANDON_MULTIPLIER=1.8;var GRACE_TIME_THRESHOLD=500;var MIN_LENGTH_TO_AVERAGE=5;var context=this.context;var mediaPlayerModel=config.mediaPlayerModel;var dashMetrics=config.dashMetrics;var settings=config.settings;var instance=void 0,logger=void 0,fragmentDict=void 0,abandonDict=void 0,throughputArray=void 0;function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);reset();}function setFragmentRequestDict(type,id){fragmentDict[type]=fragmentDict[type]||{};fragmentDict[type][id]=fragmentDict[type][id]||{};}function storeLastRequestThroughputByType(type,throughput){throughputArray[type]=throughputArray[type]||[];throughputArray[type].push(throughput);}function shouldAbandon(rulesContext){var switchRequest=(0,_SwitchRequest2.default)(context).create(_SwitchRequest2.default.NO_CHANGE,{name:AbandonRequestsRule.__dashjs_factory_name});if(!rulesContext||!rulesContext.hasOwnProperty('getMediaInfo')||!rulesContext.hasOwnProperty('getMediaType')||!rulesContext.hasOwnProperty('getCurrentRequest')||!rulesContext.hasOwnProperty('getRepresentationInfo')||!rulesContext.hasOwnProperty('getAbrController')){return switchRequest;}var mediaInfo=rulesContext.getMediaInfo();var mediaType=rulesContext.getMediaType();var req=rulesContext.getCurrentRequest();if(!isNaN(req.index)){setFragmentRequestDict(mediaType,req.index);var stableBufferTime=mediaPlayerModel.getStableBufferTime();var bufferLevel=dashMetrics.getCurrentBufferLevel(mediaType);if(bufferLevel>stableBufferTime){return switchRequest;}var fragmentInfo=fragmentDict[mediaType][req.index];if(fragmentInfo===null||req.firstByteDate===null||abandonDict.hasOwnProperty(fragmentInfo.id)){return switchRequest;}//setup some init info based on first progress event
if(fragmentInfo.firstByteTime===undefined){throughputArray[mediaType]=[];fragmentInfo.firstByteTime=req.firstByteDate.getTime();fragmentInfo.segmentDuration=req.duration;fragmentInfo.bytesTotal=req.bytesTotal;fragmentInfo.id=req.index;}fragmentInfo.bytesLoaded=req.bytesLoaded;fragmentInfo.elapsedTime=new Date().getTime()-fragmentInfo.firstByteTime;if(fragmentInfo.bytesLoaded>0&&fragmentInfo.elapsedTime>0){storeLastRequestThroughputByType(mediaType,Math.round(fragmentInfo.bytesLoaded*8/fragmentInfo.elapsedTime));}if(throughputArray[mediaType].length>=MIN_LENGTH_TO_AVERAGE&&fragmentInfo.elapsedTime>GRACE_TIME_THRESHOLD&&fragmentInfo.bytesLoaded<fragmentInfo.bytesTotal){var totalSampledValue=throughputArray[mediaType].reduce(function(a,b){return a+b;},0);fragmentInfo.measuredBandwidthInKbps=Math.round(totalSampledValue/throughputArray[mediaType].length);fragmentInfo.estimatedTimeOfDownload=+(fragmentInfo.bytesTotal*8/fragmentInfo.measuredBandwidthInKbps/1000).toFixed(2);if(fragmentInfo.estimatedTimeOfDownload<fragmentInfo.segmentDuration*ABANDON_MULTIPLIER||rulesContext.getRepresentationInfo().quality===0){return switchRequest;}else if(!abandonDict.hasOwnProperty(fragmentInfo.id)){var abrController=rulesContext.getAbrController();var bytesRemaining=fragmentInfo.bytesTotal-fragmentInfo.bytesLoaded;var bitrateList=abrController.getBitrateList(mediaInfo);var quality=abrController.getQualityForBitrate(mediaInfo,fragmentInfo.measuredBandwidthInKbps*settings.get().streaming.abr.bandwidthSafetyFactor);var minQuality=abrController.getMinAllowedIndexFor(mediaType);var newQuality=minQuality!==undefined?Math.max(minQuality,quality):quality;var estimateOtherBytesTotal=fragmentInfo.bytesTotal*bitrateList[newQuality].bitrate/bitrateList[abrController.getQualityFor(mediaType)].bitrate;if(bytesRemaining>estimateOtherBytesTotal){switchRequest.quality=newQuality;switchRequest.reason.throughput=fragmentInfo.measuredBandwidthInKbps;switchRequest.reason.fragmentID=fragmentInfo.id;abandonDict[fragmentInfo.id]=fragmentInfo;logger.debug('['+mediaType+'] frag id',fragmentInfo.id,' is asking to abandon and switch to quality to ',newQuality,' measured bandwidth was',fragmentInfo.measuredBandwidthInKbps);delete fragmentDict[mediaType][fragmentInfo.id];}}}else if(fragmentInfo.bytesLoaded===fragmentInfo.bytesTotal){delete fragmentDict[mediaType][fragmentInfo.id];}}return switchRequest;}function reset(){fragmentDict={};abandonDict={};throughputArray=[];}instance={shouldAbandon:shouldAbandon,reset:reset};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */AbandonRequestsRule.__dashjs_factory_name='AbandonRequestsRule';exports.default=_FactoryMaker2.default.getClassFactory(AbandonRequestsRule);


},{"../SwitchRequest":"../node_modules/dashjs/build/es5/src/streaming/rules/SwitchRequest.js","../../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js"}],"../node_modules/dashjs/build/es5/src/streaming/rules/abr/DroppedFramesRule.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _SwitchRequest=require('../SwitchRequest');var _SwitchRequest2=_interopRequireDefault(_SwitchRequest);var _Debug=require('../../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function DroppedFramesRule(){var context=this.context;var instance=void 0,logger=void 0;var DROPPED_PERCENTAGE_FORBID=0.15;var GOOD_SAMPLE_SIZE=375;//Don't apply the rule until this many frames have been rendered(and counted under those indices).
function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);}function getMaxIndex(rulesContext){var switchRequest=(0,_SwitchRequest2.default)(context).create();if(!rulesContext||!rulesContext.hasOwnProperty('getDroppedFramesHistory')){return switchRequest;}var droppedFramesHistory=rulesContext.getDroppedFramesHistory();if(droppedFramesHistory){var dfh=droppedFramesHistory.getFrameHistory();var droppedFrames=0;var totalFrames=0;var maxIndex=_SwitchRequest2.default.NO_CHANGE;for(var i=1;i<dfh.length;i++){//No point in measuring dropped frames for the zeroeth index.
if(dfh[i]){droppedFrames=dfh[i].droppedVideoFrames;totalFrames=dfh[i].totalVideoFrames;if(totalFrames>GOOD_SAMPLE_SIZE&&droppedFrames/totalFrames>DROPPED_PERCENTAGE_FORBID){maxIndex=i-1;logger.debug('index: '+maxIndex+' Dropped Frames: '+droppedFrames+' Total Frames: '+totalFrames);break;}}}return(0,_SwitchRequest2.default)(context).create(maxIndex,{droppedFrames:droppedFrames});}return switchRequest;}instance={getMaxIndex:getMaxIndex};setup();return instance;}DroppedFramesRule.__dashjs_factory_name='DroppedFramesRule';exports.default=_FactoryMaker2.default.getClassFactory(DroppedFramesRule);


},{"../../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../SwitchRequest":"../node_modules/dashjs/build/es5/src/streaming/rules/SwitchRequest.js","../../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js"}],"../node_modules/dashjs/build/es5/src/streaming/rules/abr/SwitchHistoryRule.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Debug=require('../../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _SwitchRequest=require('../SwitchRequest');var _SwitchRequest2=_interopRequireDefault(_SwitchRequest);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function SwitchHistoryRule(){var context=this.context;var instance=void 0,logger=void 0;//MAX_SWITCH is the number of drops made. It doesn't consider the size of the drop.
var MAX_SWITCH=0.075;//Before this number of switch requests(no switch or actual), don't apply the rule.
//must be < SwitchRequestHistory SWITCH_REQUEST_HISTORY_DEPTH to enable rule
var SAMPLE_SIZE=6;function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);}function getMaxIndex(rulesContext){var switchRequestHistory=rulesContext?rulesContext.getSwitchHistory():null;var switchRequests=switchRequestHistory?switchRequestHistory.getSwitchRequests():[];var drops=0;var noDrops=0;var dropSize=0;var switchRequest=(0,_SwitchRequest2.default)(context).create();for(var i=0;i<switchRequests.length;i++){if(switchRequests[i]!==undefined){drops+=switchRequests[i].drops;noDrops+=switchRequests[i].noDrops;dropSize+=switchRequests[i].dropSize;if(drops+noDrops>=SAMPLE_SIZE&&drops/noDrops>MAX_SWITCH){switchRequest.quality=i>0&&switchRequests[i].drops>0?i-1:i;switchRequest.reason={index:switchRequest.quality,drops:drops,noDrops:noDrops,dropSize:dropSize};logger.debug('Switch history rule index: '+switchRequest.quality+' samples: '+(drops+noDrops)+' drops: '+drops);break;}}}return switchRequest;}instance={getMaxIndex:getMaxIndex};setup();return instance;}SwitchHistoryRule.__dashjs_factory_name='SwitchHistoryRule';exports.default=_FactoryMaker2.default.getClassFactory(SwitchHistoryRule);


},{"../../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","../SwitchRequest":"../node_modules/dashjs/build/es5/src/streaming/rules/SwitchRequest.js"}],"../node_modules/dashjs/build/es5/src/streaming/rules/abr/BolaRule.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _MetricsConstants=require('../../constants/MetricsConstants');var _MetricsConstants2=_interopRequireDefault(_MetricsConstants);var _SwitchRequest=require('../SwitchRequest');var _SwitchRequest2=_interopRequireDefault(_SwitchRequest);var _FactoryMaker=require('../../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _HTTPRequest=require('../../vo/metrics/HTTPRequest');var _EventBus=require('../../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _Debug=require('../../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}// BOLA_STATE_ONE_BITRATE   : If there is only one bitrate (or initialization failed), always return NO_CHANGE.
// BOLA_STATE_STARTUP       : Set placeholder buffer such that we download fragments at most recently measured throughput.
// BOLA_STATE_STEADY        : Buffer primed, we switch to steady operation.
// TODO: add BOLA_STATE_SEEK and tune BOLA behavior on seeking
var BOLA_STATE_ONE_BITRATE=0;/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2016, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */// For a description of the BOLA adaptive bitrate (ABR) algorithm, see http://arxiv.org/abs/1601.06748
var BOLA_STATE_STARTUP=1;var BOLA_STATE_STEADY=2;var MINIMUM_BUFFER_S=10;// BOLA should never add artificial delays if buffer is less than MINIMUM_BUFFER_S.
var MINIMUM_BUFFER_PER_BITRATE_LEVEL_S=2;// E.g. if there are 5 bitrates, BOLA switches to top bitrate at buffer = 10 + 5 * 2 = 20s.
// If Schedule Controller does not allow buffer to reach that level, it can be achieved through the placeholder buffer level.
var PLACEHOLDER_BUFFER_DECAY=0.99;// Make sure placeholder buffer does not stick around too long.
function BolaRule(config){config=config||{};var context=this.context;var dashMetrics=config.dashMetrics;var mediaPlayerModel=config.mediaPlayerModel;var eventBus=(0,_EventBus2.default)(context).getInstance();var instance=void 0,logger=void 0,bolaStateDict=void 0;function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);resetInitialSettings();eventBus.on(_Events2.default.BUFFER_EMPTY,onBufferEmpty,instance);eventBus.on(_Events2.default.PLAYBACK_SEEKING,onPlaybackSeeking,instance);eventBus.on(_Events2.default.MEDIA_FRAGMENT_LOADED,onMediaFragmentLoaded,instance);eventBus.on(_Events2.default.METRIC_ADDED,onMetricAdded,instance);eventBus.on(_Events2.default.QUALITY_CHANGE_REQUESTED,onQualityChangeRequested,instance);eventBus.on(_Events2.default.FRAGMENT_LOADING_ABANDONED,onFragmentLoadingAbandoned,instance);}function utilitiesFromBitrates(bitrates){return bitrates.map(function(b){return Math.log(b);});// no need to worry about offset, utilities will be offset (uniformly) anyway later
}// NOTE: in live streaming, the real buffer level can drop below minimumBufferS, but bola should not stick to lowest bitrate by using a placeholder buffer level
function calculateBolaParameters(stableBufferTime,bitrates,utilities){var highestUtilityIndex=utilities.reduce(function(highestIndex,u,uIndex){return u>utilities[highestIndex]?uIndex:highestIndex;},0);if(highestUtilityIndex===0){// if highestUtilityIndex === 0, then always use lowest bitrate
return null;}var bufferTime=Math.max(stableBufferTime,MINIMUM_BUFFER_S+MINIMUM_BUFFER_PER_BITRATE_LEVEL_S*bitrates.length);// TODO: Investigate if following can be better if utilities are not the default Math.log utilities.
// If using Math.log utilities, we can choose Vp and gp to always prefer bitrates[0] at minimumBufferS and bitrates[max] at bufferTarget.
// (Vp * (utility + gp) - bufferLevel) / bitrate has the maxima described when:
// Vp * (utilities[0] + gp - 1) === minimumBufferS and Vp * (utilities[max] + gp - 1) === bufferTarget
// giving:
var gp=(utilities[highestUtilityIndex]-1)/(bufferTime/MINIMUM_BUFFER_S-1);var Vp=MINIMUM_BUFFER_S/gp;// note that expressions for gp and Vp assume utilities[0] === 1, which is true because of normalization
return{gp:gp,Vp:Vp};}function getInitialBolaState(rulesContext){var initialState={};var mediaInfo=rulesContext.getMediaInfo();var bitrates=mediaInfo.bitrateList.map(function(b){return b.bandwidth;});var utilities=utilitiesFromBitrates(bitrates);utilities=utilities.map(function(u){return u-utilities[0]+1;});// normalize
var stableBufferTime=mediaPlayerModel.getStableBufferTime();var params=calculateBolaParameters(stableBufferTime,bitrates,utilities);if(!params){// only happens when there is only one bitrate level
initialState.state=BOLA_STATE_ONE_BITRATE;}else{initialState.state=BOLA_STATE_STARTUP;initialState.bitrates=bitrates;initialState.utilities=utilities;initialState.stableBufferTime=stableBufferTime;initialState.Vp=params.Vp;initialState.gp=params.gp;initialState.lastQuality=0;clearBolaStateOnSeek(initialState);}return initialState;}function clearBolaStateOnSeek(bolaState){bolaState.placeholderBuffer=0;bolaState.mostAdvancedSegmentStart=NaN;bolaState.lastSegmentWasReplacement=false;bolaState.lastSegmentStart=NaN;bolaState.lastSegmentDurationS=NaN;bolaState.lastSegmentRequestTimeMs=NaN;bolaState.lastSegmentFinishTimeMs=NaN;}// If the buffer target is changed (can this happen mid-stream?), then adjust BOLA parameters accordingly.
function checkBolaStateStableBufferTime(bolaState,mediaType){var stableBufferTime=mediaPlayerModel.getStableBufferTime();if(bolaState.stableBufferTime!==stableBufferTime){var params=calculateBolaParameters(stableBufferTime,bolaState.bitrates,bolaState.utilities);if(params.Vp!==bolaState.Vp||params.gp!==bolaState.gp){// correct placeholder buffer using two criteria:
// 1. do not change effective buffer level at effectiveBufferLevel === MINIMUM_BUFFER_S ( === Vp * gp )
// 2. scale placeholder buffer by Vp subject to offset indicated in 1.
var bufferLevel=dashMetrics.getCurrentBufferLevel(mediaType);var effectiveBufferLevel=bufferLevel+bolaState.placeholderBuffer;effectiveBufferLevel-=MINIMUM_BUFFER_S;effectiveBufferLevel*=params.Vp/bolaState.Vp;effectiveBufferLevel+=MINIMUM_BUFFER_S;bolaState.stableBufferTime=stableBufferTime;bolaState.Vp=params.Vp;bolaState.gp=params.gp;bolaState.placeholderBuffer=Math.max(0,effectiveBufferLevel-bufferLevel);}}}function getBolaState(rulesContext){var mediaType=rulesContext.getMediaType();var bolaState=bolaStateDict[mediaType];if(!bolaState){bolaState=getInitialBolaState(rulesContext);bolaStateDict[mediaType]=bolaState;}else if(bolaState.state!==BOLA_STATE_ONE_BITRATE){checkBolaStateStableBufferTime(bolaState,mediaType);}return bolaState;}// The core idea of BOLA.
function getQualityFromBufferLevel(bolaState,bufferLevel){var bitrateCount=bolaState.bitrates.length;var quality=NaN;var score=NaN;for(var i=0;i<bitrateCount;++i){var s=(bolaState.Vp*(bolaState.utilities[i]+bolaState.gp)-bufferLevel)/bolaState.bitrates[i];if(isNaN(score)||s>=score){score=s;quality=i;}}return quality;}// maximum buffer level which prefers to download at quality rather than wait
function maxBufferLevelForQuality(bolaState,quality){return bolaState.Vp*(bolaState.utilities[quality]+bolaState.gp);}// the minimum buffer level that would cause BOLA to choose quality rather than a lower bitrate
function minBufferLevelForQuality(bolaState,quality){var qBitrate=bolaState.bitrates[quality];var qUtility=bolaState.utilities[quality];var min=0;for(var i=quality-1;i>=0;--i){// for each bitrate less than bitrates[quality], BOLA should prefer quality (unless other bitrate has higher utility)
if(bolaState.utilities[i]<bolaState.utilities[quality]){var iBitrate=bolaState.bitrates[i];var iUtility=bolaState.utilities[i];var level=bolaState.Vp*(bolaState.gp+(qBitrate*iUtility-iBitrate*qUtility)/(qBitrate-iBitrate));min=Math.max(min,level);// we want min to be small but at least level(i) for all i
}}return min;}/*
     * The placeholder buffer increases the effective buffer that is used to calculate the bitrate.
     * There are two main reasons we might want to increase the placeholder buffer:
     *
     * 1. When a segment finishes downloading, we would expect to get a call on getMaxIndex() regarding the quality for
     *    the next segment. However, there might be a delay before the next call. E.g. when streaming live content, the
     *    next segment might not be available yet. If the call to getMaxIndex() does happens after a delay, we don't
     *    want the delay to change the BOLA decision - we only want to factor download time to decide on bitrate level.
     *
     * 2. It is possible to get a call to getMaxIndex() without having a segment download. The buffer target in dash.js
     *    is different for top-quality segments and lower-quality segments. If getMaxIndex() returns a lower-than-top
     *    quality, then the buffer controller might decide not to download a segment. When dash.js is ready for the next
     *    segment, getMaxIndex() will be called again. We don't want this extra delay to factor in the bitrate decision.
     */function updatePlaceholderBuffer(bolaState,mediaType){var nowMs=Date.now();if(!isNaN(bolaState.lastSegmentFinishTimeMs)){// compensate for non-bandwidth-derived delays, e.g., live streaming availability, buffer controller
var delay=0.001*(nowMs-bolaState.lastSegmentFinishTimeMs);bolaState.placeholderBuffer+=Math.max(0,delay);}else if(!isNaN(bolaState.lastCallTimeMs)){// no download after last call, compensate for delay between calls
var _delay=0.001*(nowMs-bolaState.lastCallTimeMs);bolaState.placeholderBuffer+=Math.max(0,_delay);}bolaState.lastCallTimeMs=nowMs;bolaState.lastSegmentStart=NaN;bolaState.lastSegmentRequestTimeMs=NaN;bolaState.lastSegmentFinishTimeMs=NaN;checkBolaStateStableBufferTime(bolaState,mediaType);}function onBufferEmpty(){// if we rebuffer, we don't want the placeholder buffer to artificially raise BOLA quality
for(var mediaType in bolaStateDict){if(bolaStateDict.hasOwnProperty(mediaType)&&bolaStateDict[mediaType].state===BOLA_STATE_STEADY){bolaStateDict[mediaType].placeholderBuffer=0;}}}function onPlaybackSeeking(){// TODO: 1. Verify what happens if we seek mid-fragment.
// TODO: 2. If e.g. we have 10s fragments and seek, we might want to download the first fragment at a lower quality to restart playback quickly.
for(var mediaType in bolaStateDict){if(bolaStateDict.hasOwnProperty(mediaType)){var bolaState=bolaStateDict[mediaType];if(bolaState.state!==BOLA_STATE_ONE_BITRATE){bolaState.state=BOLA_STATE_STARTUP;// TODO: BOLA_STATE_SEEK?
clearBolaStateOnSeek(bolaState);}}}}function onMediaFragmentLoaded(e){if(e&&e.chunk&&e.chunk.mediaInfo){var bolaState=bolaStateDict[e.chunk.mediaInfo.type];if(bolaState&&bolaState.state!==BOLA_STATE_ONE_BITRATE){var start=e.chunk.start;if(isNaN(bolaState.mostAdvancedSegmentStart)||start>bolaState.mostAdvancedSegmentStart){bolaState.mostAdvancedSegmentStart=start;bolaState.lastSegmentWasReplacement=false;}else{bolaState.lastSegmentWasReplacement=true;}bolaState.lastSegmentStart=start;bolaState.lastSegmentDurationS=e.chunk.duration;bolaState.lastQuality=e.chunk.quality;checkNewSegment(bolaState,e.chunk.mediaInfo.type);}}}function onMetricAdded(e){if(e&&e.metric===_MetricsConstants2.default.HTTP_REQUEST&&e.value&&e.value.type===_HTTPRequest.HTTPRequest.MEDIA_SEGMENT_TYPE&&e.value.trace&&e.value.trace.length){var bolaState=bolaStateDict[e.mediaType];if(bolaState&&bolaState.state!==BOLA_STATE_ONE_BITRATE){bolaState.lastSegmentRequestTimeMs=e.value.trequest.getTime();bolaState.lastSegmentFinishTimeMs=e.value._tfinish.getTime();checkNewSegment(bolaState,e.mediaType);}}}/*
     * When a new segment is downloaded, we get two notifications: onMediaFragmentLoaded() and onMetricAdded(). It is
     * possible that the quality for the downloaded segment was lower (not higher) than the quality indicated by BOLA.
     * This might happen because of other rules such as the DroppedFramesRule. When this happens, we trim the
     * placeholder buffer to make BOLA more stable. This mechanism also avoids inflating the buffer when BOLA itself
     * decides not to increase the quality to avoid oscillations.
     *
     * We should also check for replacement segments (fast switching). In this case, a segment is downloaded but does
     * not grow the actual buffer. Fast switching might cause the buffer to deplete, causing BOLA to drop the bitrate.
     * We avoid this by growing the placeholder buffer.
     */function checkNewSegment(bolaState,mediaType){if(!isNaN(bolaState.lastSegmentStart)&&!isNaN(bolaState.lastSegmentRequestTimeMs)&&!isNaN(bolaState.placeholderBuffer)){bolaState.placeholderBuffer*=PLACEHOLDER_BUFFER_DECAY;// Find what maximum buffer corresponding to last segment was, and ensure placeholder is not relatively larger.
if(!isNaN(bolaState.lastSegmentFinishTimeMs)){var bufferLevel=dashMetrics.getCurrentBufferLevel(mediaType);var bufferAtLastSegmentRequest=bufferLevel+0.001*(bolaState.lastSegmentFinishTimeMs-bolaState.lastSegmentRequestTimeMs);// estimate
var maxEffectiveBufferForLastSegment=maxBufferLevelForQuality(bolaState,bolaState.lastQuality);var maxPlaceholderBuffer=Math.max(0,maxEffectiveBufferForLastSegment-bufferAtLastSegmentRequest);bolaState.placeholderBuffer=Math.min(maxPlaceholderBuffer,bolaState.placeholderBuffer);}// then see if we should grow placeholder buffer
if(bolaState.lastSegmentWasReplacement&&!isNaN(bolaState.lastSegmentDurationS)){// compensate for segments that were downloaded but did not grow the buffer
bolaState.placeholderBuffer+=bolaState.lastSegmentDurationS;}bolaState.lastSegmentStart=NaN;bolaState.lastSegmentRequestTimeMs=NaN;}}function onQualityChangeRequested(e){// Useful to store change requests when abandoning a download.
if(e){var bolaState=bolaStateDict[e.mediaType];if(bolaState&&bolaState.state!==BOLA_STATE_ONE_BITRATE){bolaState.abrQuality=e.newQuality;}}}function onFragmentLoadingAbandoned(e){if(e){var bolaState=bolaStateDict[e.mediaType];if(bolaState&&bolaState.state!==BOLA_STATE_ONE_BITRATE){// deflate placeholderBuffer - note that we want to be conservative when abandoning
var bufferLevel=dashMetrics.getCurrentBufferLevel(e.mediaType);var wantEffectiveBufferLevel=void 0;if(bolaState.abrQuality>0){// deflate to point where BOLA just chooses newQuality over newQuality-1
wantEffectiveBufferLevel=minBufferLevelForQuality(bolaState,bolaState.abrQuality);}else{wantEffectiveBufferLevel=MINIMUM_BUFFER_S;}var maxPlaceholderBuffer=Math.max(0,wantEffectiveBufferLevel-bufferLevel);bolaState.placeholderBuffer=Math.min(bolaState.placeholderBuffer,maxPlaceholderBuffer);}}}function getMaxIndex(rulesContext){var switchRequest=(0,_SwitchRequest2.default)(context).create();if(!rulesContext||!rulesContext.hasOwnProperty('getMediaInfo')||!rulesContext.hasOwnProperty('getMediaType')||!rulesContext.hasOwnProperty('getScheduleController')||!rulesContext.hasOwnProperty('getStreamInfo')||!rulesContext.hasOwnProperty('getAbrController')||!rulesContext.hasOwnProperty('useBufferOccupancyABR')){return switchRequest;}var mediaInfo=rulesContext.getMediaInfo();var mediaType=rulesContext.getMediaType();var scheduleController=rulesContext.getScheduleController();var streamInfo=rulesContext.getStreamInfo();var abrController=rulesContext.getAbrController();var throughputHistory=abrController.getThroughputHistory();var streamId=streamInfo?streamInfo.id:null;var isDynamic=streamInfo&&streamInfo.manifestInfo&&streamInfo.manifestInfo.isDynamic;var useBufferOccupancyABR=rulesContext.useBufferOccupancyABR();switchRequest.reason=switchRequest.reason||{};if(!useBufferOccupancyABR){return switchRequest;}scheduleController.setTimeToLoadDelay(0);var bolaState=getBolaState(rulesContext);if(bolaState.state===BOLA_STATE_ONE_BITRATE){// shouldn't even have been called
return switchRequest;}var bufferLevel=dashMetrics.getCurrentBufferLevel(mediaType);var throughput=throughputHistory.getAverageThroughput(mediaType,isDynamic);var safeThroughput=throughputHistory.getSafeAverageThroughput(mediaType,isDynamic);var latency=throughputHistory.getAverageLatency(mediaType);var quality=void 0;switchRequest.reason.state=bolaState.state;switchRequest.reason.throughput=throughput;switchRequest.reason.latency=latency;if(isNaN(throughput)){// isNaN(throughput) === isNaN(safeThroughput) === isNaN(latency)
// still starting up - not enough information
return switchRequest;}switch(bolaState.state){case BOLA_STATE_STARTUP:quality=abrController.getQualityForBitrate(mediaInfo,safeThroughput,latency);switchRequest.quality=quality;switchRequest.reason.throughput=safeThroughput;bolaState.placeholderBuffer=Math.max(0,minBufferLevelForQuality(bolaState,quality)-bufferLevel);bolaState.lastQuality=quality;if(!isNaN(bolaState.lastSegmentDurationS)&&bufferLevel>=bolaState.lastSegmentDurationS){bolaState.state=BOLA_STATE_STEADY;}break;// BOLA_STATE_STARTUP
case BOLA_STATE_STEADY:// NB: The placeholder buffer is added to bufferLevel to come up with a bitrate.
//     This might lead BOLA to be too optimistic and to choose a bitrate that would lead to rebuffering -
//     if the real buffer bufferLevel runs out, the placeholder buffer cannot prevent rebuffering.
//     However, the InsufficientBufferRule takes care of this scenario.
updatePlaceholderBuffer(bolaState,mediaType);quality=getQualityFromBufferLevel(bolaState,bufferLevel+bolaState.placeholderBuffer);// we want to avoid oscillations
// We implement the "BOLA-O" variant: when network bandwidth lies between two encoded bitrate levels, stick to the lowest level.
var qualityForThroughput=abrController.getQualityForBitrate(mediaInfo,safeThroughput,latency);if(quality>bolaState.lastQuality&&quality>qualityForThroughput){// only intervene if we are trying to *increase* quality to an *unsustainable* level
// we are only avoid oscillations - do not drop below last quality
quality=Math.max(qualityForThroughput,bolaState.lastQuality);}// We do not want to overfill buffer with low quality chunks.
// Note that there will be no delay if buffer level is below MINIMUM_BUFFER_S, probably even with some margin higher than MINIMUM_BUFFER_S.
var delayS=Math.max(0,bufferLevel+bolaState.placeholderBuffer-maxBufferLevelForQuality(bolaState,quality));// First reduce placeholder buffer, then tell schedule controller to pause.
if(delayS<=bolaState.placeholderBuffer){bolaState.placeholderBuffer-=delayS;delayS=0;}else{delayS-=bolaState.placeholderBuffer;bolaState.placeholderBuffer=0;if(quality<abrController.getTopQualityIndexFor(mediaType,streamId)){// At top quality, allow schedule controller to decide how far to fill buffer.
scheduleController.setTimeToLoadDelay(1000*delayS);}else{delayS=0;}}switchRequest.quality=quality;switchRequest.reason.throughput=throughput;switchRequest.reason.latency=latency;switchRequest.reason.bufferLevel=bufferLevel;switchRequest.reason.placeholderBuffer=bolaState.placeholderBuffer;switchRequest.reason.delay=delayS;bolaState.lastQuality=quality;// keep bolaState.state === BOLA_STATE_STEADY
break;// BOLA_STATE_STEADY
default:logger.debug('BOLA ABR rule invoked in bad state.');// should not arrive here, try to recover
switchRequest.quality=abrController.getQualityForBitrate(mediaInfo,safeThroughput,latency);switchRequest.reason.state=bolaState.state;switchRequest.reason.throughput=safeThroughput;switchRequest.reason.latency=latency;bolaState.state=BOLA_STATE_STARTUP;clearBolaStateOnSeek(bolaState);}return switchRequest;}function resetInitialSettings(){bolaStateDict={};}function reset(){resetInitialSettings();eventBus.off(_Events2.default.BUFFER_EMPTY,onBufferEmpty,instance);eventBus.off(_Events2.default.PLAYBACK_SEEKING,onPlaybackSeeking,instance);eventBus.off(_Events2.default.MEDIA_FRAGMENT_LOADED,onMediaFragmentLoaded,instance);eventBus.off(_Events2.default.METRIC_ADDED,onMetricAdded,instance);eventBus.off(_Events2.default.QUALITY_CHANGE_REQUESTED,onQualityChangeRequested,instance);eventBus.off(_Events2.default.FRAGMENT_LOADING_ABANDONED,onFragmentLoadingAbandoned,instance);}instance={getMaxIndex:getMaxIndex,reset:reset};setup();return instance;}BolaRule.__dashjs_factory_name='BolaRule';exports.default=_FactoryMaker2.default.getClassFactory(BolaRule);


},{"../../constants/MetricsConstants":"../node_modules/dashjs/build/es5/src/streaming/constants/MetricsConstants.js","../SwitchRequest":"../node_modules/dashjs/build/es5/src/streaming/rules/SwitchRequest.js","../../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../vo/metrics/HTTPRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/HTTPRequest.js","../../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js"}],"../node_modules/dashjs/build/es5/src/streaming/rules/abr/L2ARule.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _MetricsConstants=require('../../constants/MetricsConstants');var _MetricsConstants2=_interopRequireDefault(_MetricsConstants);var _SwitchRequest=require('../SwitchRequest');var _SwitchRequest2=_interopRequireDefault(_SwitchRequest);var _FactoryMaker=require('../../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _HTTPRequest=require('../../vo/metrics/HTTPRequest');var _EventBus=require('../../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _Debug=require('../../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _Constants=require('../../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2020, Unified Streaming.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */// For a description of the Learn2Adapt-LowLatency (L2A-LL) bitrate adaptation algorithm, see https://github.com/unifiedstreaming/Learn2Adapt-LowLatency/blob/master/Online_learning_for_bitrate_adaptation_in_low_latency_live_streaming_CR.pdf
var L2A_STATE_ONE_BITRATE=0;// If there is only one bitrate (or initialization failed), always return NO_CHANGE.
var L2A_STATE_STARTUP=1;// Set placeholder buffer such that we download fragments at most recently measured throughput.
var L2A_STATE_STEADY=2;// Buffer primed, we switch to steady operation.
function L2ARule(config){config=config||{};var context=this.context;var dashMetrics=config.dashMetrics;var eventBus=(0,_EventBus2.default)(context).getInstance();var instance=void 0,l2AStateDict=void 0,l2AParameterDict=void 0,logger=void 0;/**
     * Setup function to initialize L2ARule
     */function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);_resetInitialSettings();eventBus.on(_Events2.default.PLAYBACK_SEEKING,_onPlaybackSeeking,instance);eventBus.on(_Events2.default.MEDIA_FRAGMENT_LOADED,_onMediaFragmentLoaded,instance);eventBus.on(_Events2.default.METRIC_ADDED,_onMetricAdded,instance);eventBus.on(_Events2.default.QUALITY_CHANGE_REQUESTED,_onQualityChangeRequested,instance);}/**
     * Sets the initial state of the algorithm. Calls the initialize function for the paramteters.
     * @param {object} rulesContext
     * @return {object} initialState
     * @private
     */function _getInitialL2AState(rulesContext){var initialState={};var mediaInfo=rulesContext.getMediaInfo();var bitrates=mediaInfo.bitrateList.map(function(b){return b.bandwidth/1000;});initialState.state=L2A_STATE_STARTUP;initialState.bitrates=bitrates;initialState.lastQuality=0;_initializeL2AParameters(mediaInfo);_clearL2AStateOnSeek(initialState);return initialState;}/**
     * Initializes the parameters of the algorithm. This will be done once for each media type.
     * @param {object} mediaInfo
     * @private
     */function _initializeL2AParameters(mediaInfo){if(!mediaInfo||!mediaInfo.type){return;}l2AParameterDict[mediaInfo.type]={};l2AParameterDict[mediaInfo.type].w=[];//Vector of probabilities associated with bitrate decisions
l2AParameterDict[mediaInfo.type].prev_w=[];//Vector of probabilities associated with bitrate decisions calculated in the previous step
l2AParameterDict[mediaInfo.type].Q=0;//Initialization of Lagrangian multiplier (This keeps track of the buffer displacement)
l2AParameterDict[mediaInfo.type].segment_request_start_s=0;l2AParameterDict[mediaInfo.type].segment_download_finish_s=0;l2AParameterDict[mediaInfo.type].B_target=1.5;//Target buffer level
}/**
     * Clears the state object
     * @param {object} l2AState
     * @private
     */function _clearL2AStateOnSeek(l2AState){l2AState.placeholderBuffer=0;l2AState.mostAdvancedSegmentStart=NaN;l2AState.lastSegmentWasReplacement=false;l2AState.lastSegmentStart=NaN;l2AState.lastSegmentDurationS=NaN;l2AState.lastSegmentRequestTimeMs=NaN;l2AState.lastSegmentFinishTimeMs=NaN;}/**
     * Returns the state object for a fiven media type. If the state object is not yet defined _getInitialL2AState is called
     * @param {object} rulesContext
     * @return {object} l2AState
     * @private
     */function _getL2AState(rulesContext){var mediaType=rulesContext.getMediaType();var l2AState=l2AStateDict[mediaType];if(!l2AState){l2AState=_getInitialL2AState(rulesContext);l2AStateDict[mediaType]=l2AState;}return l2AState;}/**
     * Event handler for the seeking event.
     * @private
     */function _onPlaybackSeeking(){for(var mediaType in l2AStateDict){if(l2AStateDict.hasOwnProperty(mediaType)){var l2aState=l2AStateDict[mediaType];if(l2aState.state!==L2A_STATE_ONE_BITRATE){l2aState.state=L2A_STATE_STARTUP;_clearL2AStateOnSeek(l2aState);}}}}/**
     * Event handler for the mediaFragmentLoaded event
     * @param {object} e
     * @private
     */function _onMediaFragmentLoaded(e){if(e&&e.chunk&&e.chunk.mediaInfo){var l2AState=l2AStateDict[e.chunk.mediaInfo.type];var l2AParameters=l2AParameterDict[e.chunk.mediaInfo.type];if(l2AState&&l2AState.state!==L2A_STATE_ONE_BITRATE){var start=e.chunk.start;if(isNaN(l2AState.mostAdvancedSegmentStart)||start>l2AState.mostAdvancedSegmentStart){l2AState.mostAdvancedSegmentStart=start;l2AState.lastSegmentWasReplacement=false;}else{l2AState.lastSegmentWasReplacement=true;}l2AState.lastSegmentStart=start;l2AState.lastSegmentDurationS=e.chunk.duration;l2AState.lastQuality=e.chunk.quality;_checkNewSegment(l2AState,l2AParameters);}}}/**
     * Event handler for the metricAdded event
     * @param {object} e
     * @private
     */function _onMetricAdded(e){if(e&&e.metric===_MetricsConstants2.default.HTTP_REQUEST&&e.value&&e.value.type===_HTTPRequest.HTTPRequest.MEDIA_SEGMENT_TYPE&&e.value.trace&&e.value.trace.length){var l2AState=l2AStateDict[e.mediaType];var l2AParameters=l2AParameterDict[e.mediaType];if(l2AState&&l2AState.state!==L2A_STATE_ONE_BITRATE){l2AState.lastSegmentRequestTimeMs=e.value.trequest.getTime();l2AState.lastSegmentFinishTimeMs=e.value._tfinish.getTime();_checkNewSegment(l2AState,l2AParameters);}}}/**
     * When a new metric has been added or a media fragment has been loaded the state is adjusted accordingly
     * @param {object} L2AState
     * @param {object} l2AParameters
     * @private
     */function _checkNewSegment(L2AState,l2AParameters){if(!isNaN(L2AState.lastSegmentStart)&&!isNaN(L2AState.lastSegmentRequestTimeMs)){l2AParameters.segment_request_start_s=0.001*L2AState.lastSegmentRequestTimeMs;l2AParameters.segment_download_finish_s=0.001*L2AState.lastSegmentFinishTimeMs;L2AState.lastSegmentStart=NaN;L2AState.lastSegmentRequestTimeMs=NaN;}}/**
     * Event handler for the qualityChangeRequested event
     * @param {object} e
     * @private
     */function _onQualityChangeRequested(e){// Useful to store change requests when abandoning a download.
if(e&&e.mediaType){var L2AState=l2AStateDict[e.mediaType];if(L2AState&&L2AState.state!==L2A_STATE_ONE_BITRATE){L2AState.abrQuality=e.newQuality;}}}/**
     * Dot multiplication of two arrays
     * @param {array} arr1
     * @param {array} arr2
     * @return {number} sumdot
     * @private
     */function _dotmultiplication(arr1,arr2){if(arr1.length!==arr2.length){return-1;}var sumdot=0;for(var i=0;i<arr1.length;i++){sumdot=sumdot+arr1[i]*arr2[i];}return sumdot;}/**
     * Project an n-dim vector y to the simplex Dn
     * Dn = { x : x n-dim, 1 >= x >= 0, sum(x) = 1}
     * Algorithm is explained at http://arxiv.org/abs/1101.6081
     * @param {array} arr
     * @return {array}
     * @constructor
     */function euclideanProjection(arr){var m=arr.length;var bget=false;var arr2=[];for(var ii=0;ii<m;++ii){arr2[ii]=arr[ii];}var s=arr.sort(function(a,b){return b-a;});var tmpsum=0;var tmax=0;var x=[];for(var _ii=0;_ii<m-1;++_ii){tmpsum=tmpsum+s[_ii];tmax=(tmpsum-1)/(_ii+1);if(tmax>=s[_ii+1]){bget=true;break;}}if(!bget){tmax=(tmpsum+s[m-1]-1)/m;}for(var _ii2=0;_ii2<m;++_ii2){x[_ii2]=Math.max(arr2[_ii2]-tmax,0);}return x;}/**
     * Returns a switch request object indicating which quality is to be played
     * @param {object} rulesContext
     * @return {object}
     */function getMaxIndex(rulesContext){var switchRequest=(0,_SwitchRequest2.default)(context).create();var horizon=4;// Optimization horizon (The amount of steps required to achieve convergence)
var vl=Math.pow(horizon,0.99);// Cautiousness parameter, used to control aggressiveness of the bitrate decision process.
var alpha=Math.max(Math.pow(horizon,1),vl*Math.sqrt(horizon));// Step size, used for gradient descent exploration granularity
var mediaInfo=rulesContext.getMediaInfo();var mediaType=rulesContext.getMediaType();var bitrates=mediaInfo.bitrateList.map(function(b){return b.bandwidth;});var bitrateCount=bitrates.length;var scheduleController=rulesContext.getScheduleController();var streamInfo=rulesContext.getStreamInfo();var abrController=rulesContext.getAbrController();var throughputHistory=abrController.getThroughputHistory();var isDynamic=streamInfo&&streamInfo.manifestInfo&&streamInfo.manifestInfo.isDynamic;var useL2AABR=rulesContext.useL2AABR();var bufferLevel=dashMetrics.getCurrentBufferLevel(mediaType,true);var safeThroughput=throughputHistory.getSafeAverageThroughput(mediaType,isDynamic);var throughput=throughputHistory.getAverageThroughput(mediaType,isDynamic);// In kbits/s
var react=2;// Reactiveness to volatility (abrupt throughput drops), used to re-calibrate Lagrangian multiplier Q
var latency=throughputHistory.getAverageLatency(mediaType);var videoModel=rulesContext.getVideoModel();var quality=void 0;var currentPlaybackRate=videoModel.getPlaybackRate();if(!rulesContext||!rulesContext.hasOwnProperty('getMediaInfo')||!rulesContext.hasOwnProperty('getMediaType')||!rulesContext.hasOwnProperty('getScheduleController')||!rulesContext.hasOwnProperty('getStreamInfo')||!rulesContext.hasOwnProperty('getAbrController')||!rulesContext.hasOwnProperty('useL2AABR')){return switchRequest;}switchRequest.reason=switchRequest.reason||{};if(!useL2AABR||mediaType===_Constants2.default.AUDIO){// L2A decides bitrate only for video. Audio to be included in decision process in a later stage
return switchRequest;}scheduleController.setTimeToLoadDelay(0);var l2AState=_getL2AState(rulesContext);if(l2AState.state===L2A_STATE_ONE_BITRATE){// shouldn't even have been called
return switchRequest;}var l2AParameter=l2AParameterDict[mediaType];if(!l2AParameter){return switchRequest;}switchRequest.reason.state=l2AState.state;switchRequest.reason.throughput=throughput;switchRequest.reason.latency=latency;if(isNaN(throughput)){// still starting up - not enough information
return switchRequest;}switch(l2AState.state){case L2A_STATE_STARTUP:quality=abrController.getQualityForBitrate(mediaInfo,safeThroughput,latency);//During strat-up phase abr.controller is responsible for bitrate decisions.
switchRequest.quality=quality;switchRequest.reason.throughput=safeThroughput;l2AState.lastQuality=quality;if(!isNaN(l2AState.lastSegmentDurationS)&&bufferLevel>=l2AParameter.B_target){l2AState.state=L2A_STATE_STEADY;l2AParameter.Q=vl;// Initialization of Q langrangian multiplier
// Update of probability vector w, to be used in main adaptation logic of L2A below (steady state)
for(var i=0;i<bitrateCount;++i){if(i===l2AState.lastQuality){l2AParameter.prev_w[i]=1;}else{l2AParameter.prev_w[i]=0;}}}break;// L2A_STATE_STARTUP
case L2A_STATE_STEADY:var diff1=[];//Used to calculate the difference between consecutive decisions (w-w_prev)
// Manual calculation of latency and throughput during previous request
var throughputMeasureTime=dashMetrics.getCurrentHttpRequest(mediaType).trace.reduce(function(a,b){return a+b.d;},0);var downloadBytes=dashMetrics.getCurrentHttpRequest(mediaType).trace.reduce(function(a,b){return a+b.b[0];},0);var lastthroughput=Math.round(8*downloadBytes/throughputMeasureTime);// bits/ms = kbits/s
if(lastthroughput<1){lastthroughput=1;}//To avoid division with 0 (avoid infinity) in case of an absolute network outage
var V=l2AState.lastSegmentDurationS;var sign=1;//Main adaptation logic of L2A-LL
for(var _i=0;_i<bitrateCount;++_i){bitrates[_i]=bitrates[_i]/1000;// Originally in bps, now in Kbps
if(currentPlaybackRate*bitrates[_i]>lastthroughput){// In this case buffer would deplete, leading to a stall, which increases latency and thus the particular probability of selsection of bitrate[i] should be decreased.
sign=-1;}// The objective of L2A is to minimize the overall latency=request-response time + buffer length after download+ potential stalling (if buffer less than chunk downlad time)
l2AParameter.w[_i]=l2AParameter.prev_w[_i]+sign*(V/(2*alpha))*((l2AParameter.Q+vl)*(currentPlaybackRate*bitrates[_i]/lastthroughput));//Lagrangian descent
}// Apply euclidean projection on w to ensure w expresses a probability distribution
l2AParameter.w=euclideanProjection(l2AParameter.w);for(var _i2=0;_i2<bitrateCount;++_i2){diff1[_i2]=l2AParameter.w[_i2]-l2AParameter.prev_w[_i2];l2AParameter.prev_w[_i2]=l2AParameter.w[_i2];}// Lagrangian multiplier Q calculation:
l2AParameter.Q=Math.max(0,l2AParameter.Q-V+V*currentPlaybackRate*((_dotmultiplication(bitrates,l2AParameter.prev_w)+_dotmultiplication(bitrates,diff1))/lastthroughput));// Quality is calculated as argmin of the absolute difference between available bitrates (bitrates[i]) and bitrate estimation (dotmultiplication(w,bitrates)).
var temp=[];for(var _i3=0;_i3<bitrateCount;++_i3){temp[_i3]=Math.abs(bitrates[_i3]-_dotmultiplication(l2AParameter.w,bitrates));}// Quality is calculated based on the probability distribution w (the output of L2A)
quality=temp.indexOf(Math.min.apply(Math,temp));// We employ a cautious -stepwise- ascent
if(quality>l2AState.lastQuality){if(bitrates[l2AState.lastQuality+1]<=lastthroughput){quality=l2AState.lastQuality+1;}}// Provision against bitrate over-estimation, by re-calibrating the Lagrangian multiplier Q, to be taken into account for the next chunk
if(bitrates[quality]>=lastthroughput){l2AParameter.Q=react*Math.max(vl,l2AParameter.Q);}switchRequest.quality=quality;switchRequest.reason.throughput=throughput;switchRequest.reason.latency=latency;switchRequest.reason.bufferLevel=bufferLevel;l2AState.lastQuality=switchRequest.quality;break;default:// should not arrive here, try to recover
logger.debug('L2A ABR rule invoked in bad state.');switchRequest.quality=abrController.getQualityForBitrate(mediaInfo,safeThroughput,latency);switchRequest.reason.state=l2AState.state;switchRequest.reason.throughput=safeThroughput;switchRequest.reason.latency=latency;l2AState.state=L2A_STATE_STARTUP;_clearL2AStateOnSeek(l2AState);}return switchRequest;}/**
     * Reset objects to their initial state
     * @private
     */function _resetInitialSettings(){l2AStateDict={};l2AParameterDict={};}/**
     * Reset the rule
     */function reset(){_resetInitialSettings();eventBus.off(_Events2.default.PLAYBACK_SEEKING,_onPlaybackSeeking,instance);eventBus.off(_Events2.default.MEDIA_FRAGMENT_LOADED,_onMediaFragmentLoaded,instance);eventBus.off(_Events2.default.METRIC_ADDED,_onMetricAdded,instance);eventBus.off(_Events2.default.QUALITY_CHANGE_REQUESTED,_onQualityChangeRequested,instance);}instance={getMaxIndex:getMaxIndex,reset:reset};setup();return instance;}L2ARule.__dashjs_factory_name='L2ARule';exports.default=_FactoryMaker2.default.getClassFactory(L2ARule);


},{"../../constants/MetricsConstants":"../node_modules/dashjs/build/es5/src/streaming/constants/MetricsConstants.js","../SwitchRequest":"../node_modules/dashjs/build/es5/src/streaming/rules/SwitchRequest.js","../../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../vo/metrics/HTTPRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/HTTPRequest.js","../../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","../../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js"}],"../node_modules/dashjs/build/es5/src/streaming/rules/abr/lolp/LearningAbrController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Debug=require('../../../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * Authors:
 * Abdelhak Bentaleb | National University of Singapore | bentaleb@comp.nus.edu.sg
 * Mehmet N. Akcay | Ozyegin University | necmettin.akcay@ozu.edu.tr
 * May Lim | National University of Singapore | maylim@comp.nus.edu.sg
 */var WEIGHT_SELECTION_MODES={MANUAL:'manual_weight_selection',RANDOM:'random_weight_selection',DYNAMIC:'dynamic_weight_selection'};function LearningAbrController(){var context=this.context;var instance=void 0,logger=void 0,somBitrateNeurons=void 0,bitrateNormalizationFactor=void 0,latencyNormalizationFactor=void 0,minBitrate=void 0,minBitrateNeuron=void 0,weights=void 0,sortedCenters=void 0,weightSelectionMode=void 0;/**
     * Setup the class
     */function _setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);_resetInitialSettings();}/**
     * Reset all values
     */function reset(){_resetInitialSettings();}/**
     * Reset to initial settings
     * @private
     */function _resetInitialSettings(){somBitrateNeurons=null;bitrateNormalizationFactor=1;latencyNormalizationFactor=100;minBitrate=0;minBitrateNeuron=null;weights=null;sortedCenters=null;weightSelectionMode=WEIGHT_SELECTION_MODES.DYNAMIC;}/**
     * Returns the maximum throughput
     * @return {number}
     * @private
     */function _getMaxThroughput(){var maxThroughput=0;if(somBitrateNeurons){for(var i=0;i<somBitrateNeurons.length;i++){var neuron=somBitrateNeurons[i];if(neuron.state.throughput>maxThroughput){maxThroughput=neuron.state.throughput;}}}return maxThroughput;}/**
     *
     * @param {array} w
     * @return {number}
     * @private
     */function _getMagnitude(w){var magnitude=w.map(function(x){return Math.pow(x,2);}).reduce(function(sum,now){return sum+now;});return Math.sqrt(magnitude);}/**
     *
     * @param {array} a
     * @param {array} b
     * @param {array} w
     * @return {number}
     * @private
     */function _getDistance(a,b,w){var sum=a.map(function(x,i){return w[i]*Math.pow(x-b[i],2);})// square the difference*w
.reduce(function(sum,now){return sum+now;});// sum
var sign=sum<0?-1:1;return sign*Math.sqrt(Math.abs(sum));}/**
     *
     * @param {object} a
     * @param {object} b
     * @return {number}
     * @private
     */function _getNeuronDistance(a,b){var aState=[a.state.throughput,a.state.latency,a.state.rebuffer,a.state.switch];var bState=[b.state.throughput,b.state.latency,b.state.rebuffer,b.state.switch];return _getDistance(aState,bState,[1,1,1,1]);}/**
     *
     * @param {object} winnerNeuron
     * @param {array} somElements
     * @param {array} x
     * @private
     */function _updateNeurons(winnerNeuron,somElements,x){for(var i=0;i<somElements.length;i++){var somNeuron=somElements[i];var sigma=0.1;var neuronDistance=_getNeuronDistance(somNeuron,winnerNeuron);var neighbourHood=Math.exp(-1*Math.pow(neuronDistance,2)/(2*Math.pow(sigma,2)));_updateNeuronState(somNeuron,x,neighbourHood);}}/**
     *
     * @param {object} neuron
     * @param {array} x
     * @param {object} neighbourHood
     * @private
     */function _updateNeuronState(neuron,x,neighbourHood){var state=neuron.state;var w=[0.01,0.01,0.01,0.01];// learning rate
state.throughput=state.throughput+(x[0]-state.throughput)*w[0]*neighbourHood;state.latency=state.latency+(x[1]-state.latency)*w[1]*neighbourHood;state.rebuffer=state.rebuffer+(x[2]-state.rebuffer)*w[2]*neighbourHood;state.switch=state.switch+(x[3]-state.switch)*w[3]*neighbourHood;}/**
     *
     * @param {object} currentNeuron
     * @param {number} currentThroughput
     * @return {object}
     * @private
     */function _getDownShiftNeuron(currentNeuron,currentThroughput){var maxSuitableBitrate=0;var result=currentNeuron;if(somBitrateNeurons){for(var i=0;i<somBitrateNeurons.length;i++){var n=somBitrateNeurons[i];if(n.bitrate<currentNeuron.bitrate&&n.bitrate>maxSuitableBitrate&&currentThroughput>n.bitrate){// possible downshiftable neuron
maxSuitableBitrate=n.bitrate;result=n;}}}return result;}/**
     *
     * @param {object} mediaInfo
     * @param {number} throughput
     * @param {number} latency
     * @param {number} bufferSize
     * @param {number} playbackRate
     * @param {number} currentQualityIndex
     * @param {object} dynamicWeightsSelector
     * @return {null|*}
     */function getNextQuality(mediaInfo,throughput,latency,bufferSize,playbackRate,currentQualityIndex,dynamicWeightsSelector){// For Dynamic Weights Selector
var currentLatency=latency;var currentBuffer=bufferSize;var currentThroughput=throughput;var somElements=_getSomBitrateNeurons(mediaInfo);// normalize throughput
var throughputNormalized=throughput/bitrateNormalizationFactor;// saturate values higher than 1
if(throughputNormalized>1){throughputNormalized=_getMaxThroughput();}// normalize latency
latency=latency/latencyNormalizationFactor;var targetLatency=0;var targetRebufferLevel=0;var targetSwitch=0;// 10K + video encoding is the recommended throughput
var throughputDelta=10000;logger.debug('getNextQuality called throughput:'+throughputNormalized+' latency:'+latency+' bufferSize:'+bufferSize+' currentQualityIndex:'+currentQualityIndex+' playbackRate:'+playbackRate);var currentNeuron=somElements[currentQualityIndex];var downloadTime=currentNeuron.bitrate*dynamicWeightsSelector.getSegmentDuration()/currentThroughput;var rebuffer=Math.max(0,downloadTime-currentBuffer);// check buffer for possible stall
if(currentBuffer-downloadTime<dynamicWeightsSelector.getMinBuffer()){logger.debug('Buffer is low for bitrate= '+currentNeuron.bitrate+' downloadTime='+downloadTime+' currentBuffer='+currentBuffer+' rebuffer='+rebuffer);return _getDownShiftNeuron(currentNeuron,currentThroughput).qualityIndex;}switch(weightSelectionMode){case WEIGHT_SELECTION_MODES.MANUAL:_manualWeightSelection();break;case WEIGHT_SELECTION_MODES.RANDOM:_randomWeightSelection(somElements);break;case WEIGHT_SELECTION_MODES.DYNAMIC:_dynamicWeightSelection(dynamicWeightsSelector,somElements,currentLatency,currentBuffer,rebuffer,currentThroughput,playbackRate);break;default:_dynamicWeightSelection(dynamicWeightsSelector,somElements,currentLatency,currentBuffer,rebuffer,currentThroughput,playbackRate);}var minDistance=null;var minIndex=null;var winnerNeuron=null;var winnerWeights=null;for(var i=0;i<somElements.length;i++){var somNeuron=somElements[i];var somNeuronState=somNeuron.state;var somData=[somNeuronState.throughput,somNeuronState.latency,somNeuronState.rebuffer,somNeuronState.switch];var distanceWeights=weights.slice();var nextBuffer=dynamicWeightsSelector.getNextBufferWithBitrate(somNeuron.bitrate,currentBuffer,currentThroughput);var isBufferLow=nextBuffer<dynamicWeightsSelector.getMinBuffer();if(isBufferLow){logger.debug('Buffer is low for bitrate='+somNeuron.bitrate+' downloadTime='+downloadTime+' currentBuffer='+currentBuffer+' nextBuffer='+nextBuffer);}// special condition downshift immediately
if(somNeuron.bitrate>throughput-throughputDelta||isBufferLow){if(somNeuron.bitrate!==minBitrate){// encourage to pick smaller bitrates throughputWeight=100
distanceWeights[0]=100;}}// calculate the distance with the target
var distance=_getDistance(somData,[throughputNormalized,targetLatency,targetRebufferLevel,targetSwitch],distanceWeights);if(minDistance===null||distance<minDistance){minDistance=distance;minIndex=somNeuron.qualityIndex;winnerNeuron=somNeuron;winnerWeights=distanceWeights;}}// update current neuron and the neighbourhood with the calculated QoE
// will punish current if it is not picked
var bitrateSwitch=Math.abs(currentNeuron.bitrate-winnerNeuron.bitrate)/bitrateNormalizationFactor;_updateNeurons(currentNeuron,somElements,[throughputNormalized,latency,rebuffer,bitrateSwitch]);// update bmu and  neighbours with targetQoE=1, targetLatency=0
_updateNeurons(winnerNeuron,somElements,[throughputNormalized,targetLatency,targetRebufferLevel,bitrateSwitch]);return minIndex;}/**
     * Option 1: Manual weights
     * @private
     */function _manualWeightSelection(){var throughputWeight=0.4;var latencyWeight=0.4;var bufferWeight=0.4;var switchWeight=0.4;weights=[throughputWeight,latencyWeight,bufferWeight,switchWeight];// throughput, latency, buffer, switch
}/**
     * Option 2: Random (Xavier) weights
     * @param {array} somElements
     * @private
     */function _randomWeightSelection(somElements){weights=_getXavierWeights(somElements.length,4);}/**
     * Dynamic Weight Selector weights
     * @param {object} dynamicWeightsSelector
     * @param {array} somElements
     * @param {number} currentLatency
     * @param {number} currentBuffer
     * @param {number} rebuffer
     * @param {number} currentThroughput
     * @param {number} playbackRate
     * @private
     */function _dynamicWeightSelection(dynamicWeightsSelector,somElements,currentLatency,currentBuffer,rebuffer,currentThroughput,playbackRate){if(!weights){weights=sortedCenters[sortedCenters.length-1];}// Dynamic Weights Selector (step 2/2: find weights)
var weightVector=dynamicWeightsSelector.findWeightVector(somElements,currentLatency,currentBuffer,rebuffer,currentThroughput,playbackRate);if(weightVector!==null&&weightVector!==-1){// null: something went wrong, -1: constraints not met
weights=weightVector;}}/**
     *
     * @param {number }neuronCount
     * @param {number }weightCount
     * @return {array}
     * @private
     */function _getXavierWeights(neuronCount,weightCount){var W=[];var upperBound=Math.sqrt(2/neuronCount);for(var i=0;i<weightCount;i++){W.push(Math.random()*upperBound);}weights=W;return weights;}/**
     *
     * @param {object} mediaInfo
     * @return {array}
     * @private
     */function _getSomBitrateNeurons(mediaInfo){if(!somBitrateNeurons){somBitrateNeurons=[];var bitrateList=mediaInfo.bitrateList;var bitrateVector=[];minBitrate=bitrateList[0].bandwidth;bitrateList.forEach(function(element){bitrateVector.push(element.bandwidth);if(element.bandwidth<minBitrate){minBitrate=element.bandwidth;}});bitrateNormalizationFactor=_getMagnitude(bitrateVector);for(var i=0;i<bitrateList.length;i++){var neuron={qualityIndex:i,bitrate:bitrateList[i].bandwidth,state:{// normalize throughputs
throughput:bitrateList[i].bandwidth/bitrateNormalizationFactor,latency:0,rebuffer:0,switch:0}};somBitrateNeurons.push(neuron);if(neuron.bitrate===minBitrate){minBitrateNeuron=neuron;}}sortedCenters=_getInitialKmeansPlusPlusCenters(somBitrateNeurons);}return somBitrateNeurons;}/**
     *
     * @param {number} size
     * @return {array}
     * @private
     */function _getRandomData(size){var dataArray=[];for(var i=0;i<size;i++){var data=[Math.random()*_getMaxThroughput(),//throughput
Math.random(),//latency
Math.random(),//buffersize
Math.random()//switch
];dataArray.push(data);}return dataArray;}/**
     *
     * @param {array} somElements
     * @return {array}
     * @private
     */function _getInitialKmeansPlusPlusCenters(somElements){var centers=[];var randomDataSet=_getRandomData(Math.pow(somElements.length,2));centers.push(randomDataSet[0]);var distanceWeights=[1,1,1,1];for(var k=1;k<somElements.length;k++){var nextPoint=null;var _maxDistance=null;for(var i=0;i<randomDataSet.length;i++){var currentPoint=randomDataSet[i];var minDistance=null;for(var j=0;j<centers.length;j++){var distance=_getDistance(currentPoint,centers[j],distanceWeights);if(minDistance===null||distance<minDistance){minDistance=distance;}}if(_maxDistance===null||minDistance>_maxDistance){nextPoint=currentPoint;_maxDistance=minDistance;}}centers.push(nextPoint);}// find the least similar center
var maxDistance=null;var leastSimilarIndex=null;for(var _i=0;_i<centers.length;_i++){var _distance=0;for(var _j=0;_j<centers.length;_j++){if(_i===_j)continue;_distance+=_getDistance(centers[_i],centers[_j],distanceWeights);}if(maxDistance===null||_distance>maxDistance){maxDistance=_distance;leastSimilarIndex=_i;}}// move centers to sortedCenters
var sortedCenters=[];sortedCenters.push(centers[leastSimilarIndex]);centers.splice(leastSimilarIndex,1);while(centers.length>0){var _minDistance=null;var minIndex=null;for(var _i2=0;_i2<centers.length;_i2++){var _distance2=_getDistance(sortedCenters[0],centers[_i2],distanceWeights);if(_minDistance===null||_distance2<_minDistance){_minDistance=_distance2;minIndex=_i2;}}sortedCenters.push(centers[minIndex]);centers.splice(minIndex,1);}return sortedCenters;}instance={getNextQuality:getNextQuality,reset:reset};_setup();return instance;}LearningAbrController.__dashjs_factory_name='LearningAbrController';exports.default=_FactoryMaker2.default.getClassFactory(LearningAbrController);


},{"../../../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js"}],"../node_modules/dashjs/build/es5/src/streaming/rules/abr/lolp/QoeInfo.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var QoeInfo=function QoeInfo(){_classCallCheck(this,QoeInfo);// Type e.g. 'segment'
this.type=null;// Store lastBitrate for calculation of bitrateSwitchWSum
this.lastBitrate=null;// Weights for each Qoe factor
this.weights={};this.weights.bitrateReward=null;this.weights.bitrateSwitchPenalty=null;this.weights.rebufferPenalty=null;this.weights.latencyPenalty=null;this.weights.playbackSpeedPenalty=null;// Weighted Sum for each Qoe factor
this.bitrateWSum=0;// kbps
this.bitrateSwitchWSum=0;// kbps
this.rebufferWSum=0;// seconds
this.latencyWSum=0;// seconds
this.playbackSpeedWSum=0;// e.g. 0.95, 1.0, 1.05
// Store total Qoe value based on current Weighted Sum values
this.totalQoe=0;};exports.default=QoeInfo;


},{}],"../node_modules/dashjs/build/es5/src/streaming/rules/abr/lolp/LoLpQoEEvaluator.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _QoeInfo=require('./QoeInfo');var _QoeInfo2=_interopRequireDefault(_QoeInfo);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * Authors:
 * Abdelhak Bentaleb | National University of Singapore | bentaleb@comp.nus.edu.sg
 * Mehmet N. Akcay | Ozyegin University | necmettin.akcay@ozu.edu.tr
 * May Lim | National University of Singapore | maylim@comp.nus.edu.sg
 */function LoLpQoeEvaluator(){var instance=void 0,voPerSegmentQoeInfo=void 0,segmentDuration=void 0,maxBitrateKbps=void 0,minBitrateKbps=void 0;function _setup(){_resetInitialSettings();}function _resetInitialSettings(){voPerSegmentQoeInfo=null;segmentDuration=null;maxBitrateKbps=null;minBitrateKbps=null;}function setupPerSegmentQoe(sDuration,maxBrKbps,minBrKbps){// Set up Per Segment QoeInfo
voPerSegmentQoeInfo=_createQoeInfo('segment',sDuration,maxBrKbps,minBrKbps);segmentDuration=sDuration;maxBitrateKbps=maxBrKbps;minBitrateKbps=minBrKbps;}function _createQoeInfo(fragmentType,fragmentDuration,maxBitrateKbps,minBitrateKbps){/*
         * [Weights][Source: Abdelhak Bentaleb, 2020 (last updated: 30 Mar 2020)]
         * bitrateReward:           segment duration, e.g. 0.5s
         * bitrateSwitchPenalty:    0.02s or 1s if the bitrate switch is too important
         * rebufferPenalty:         max encoding bitrate, e.g. 1000kbps
         * latencyPenalty:          if L ≤ 1.1 seconds then = min encoding bitrate * 0.05, otherwise = max encoding bitrate * 0.1
         * playbackSpeedPenalty:    min encoding bitrate, e.g. 200kbps
         */// Create new QoeInfo object
var qoeInfo=new _QoeInfo2.default();qoeInfo.type=fragmentType;// Set weight: bitrateReward
// set some safe value, else consider throwing error
if(!fragmentDuration){qoeInfo.weights.bitrateReward=1;}else{qoeInfo.weights.bitrateReward=fragmentDuration;}// Set weight: bitrateSwitchPenalty
// qoeInfo.weights.bitrateSwitchPenalty = 0.02;
qoeInfo.weights.bitrateSwitchPenalty=1;// Set weight: rebufferPenalty
// set some safe value, else consider throwing error
if(!maxBitrateKbps){qoeInfo.weights.rebufferPenalty=1000;}else{qoeInfo.weights.rebufferPenalty=maxBitrateKbps;}// Set weight: latencyPenalty
qoeInfo.weights.latencyPenalty=[];qoeInfo.weights.latencyPenalty.push({threshold:1.1,penalty:minBitrateKbps*0.05});qoeInfo.weights.latencyPenalty.push({threshold:100000000,penalty:maxBitrateKbps*0.1});// Set weight: playbackSpeedPenalty
if(!minBitrateKbps)qoeInfo.weights.playbackSpeedPenalty=200;// set some safe value, else consider throwing error
else qoeInfo.weights.playbackSpeedPenalty=minBitrateKbps;return qoeInfo;}function logSegmentMetrics(segmentBitrate,segmentRebufferTime,currentLatency,currentPlaybackSpeed){if(voPerSegmentQoeInfo){_logMetricsInQoeInfo(segmentBitrate,segmentRebufferTime,currentLatency,currentPlaybackSpeed,voPerSegmentQoeInfo);}}function _logMetricsInQoeInfo(bitrate,rebufferTime,latency,playbackSpeed,qoeInfo){// Update: bitrate Weighted Sum value
qoeInfo.bitrateWSum+=qoeInfo.weights.bitrateReward*bitrate;// Update: bitrateSwitch Weighted Sum value
if(qoeInfo.lastBitrate){qoeInfo.bitrateSwitchWSum+=qoeInfo.weights.bitrateSwitchPenalty*Math.abs(bitrate-qoeInfo.lastBitrate);}qoeInfo.lastBitrate=bitrate;// Update: rebuffer Weighted Sum value
qoeInfo.rebufferWSum+=qoeInfo.weights.rebufferPenalty*rebufferTime;// Update: latency Weighted Sum value
for(var i=0;i<qoeInfo.weights.latencyPenalty.length;i++){var latencyRange=qoeInfo.weights.latencyPenalty[i];if(latency<=latencyRange.threshold){qoeInfo.latencyWSum+=latencyRange.penalty*latency;break;}}// Update: playbackSpeed Weighted Sum value
qoeInfo.playbackSpeedWSum+=qoeInfo.weights.playbackSpeedPenalty*Math.abs(1-playbackSpeed);// Update: Total Qoe value
qoeInfo.totalQoe=qoeInfo.bitrateWSum-qoeInfo.bitrateSwitchWSum-qoeInfo.rebufferWSum-qoeInfo.latencyWSum-qoeInfo.playbackSpeedWSum;}// Returns current Per Segment QoeInfo
function getPerSegmentQoe(){return voPerSegmentQoeInfo;}// For one-time use only
// Returns totalQoe based on a single set of metrics.
function calculateSingleUseQoe(segmentBitrate,segmentRebufferTime,currentLatency,currentPlaybackSpeed){var singleUseQoeInfo=null;if(segmentDuration&&maxBitrateKbps&&minBitrateKbps){singleUseQoeInfo=_createQoeInfo('segment',segmentDuration,maxBitrateKbps,minBitrateKbps);}if(singleUseQoeInfo){_logMetricsInQoeInfo(segmentBitrate,segmentRebufferTime,currentLatency,currentPlaybackSpeed,singleUseQoeInfo);return singleUseQoeInfo.totalQoe;}else{// Something went wrong..
return 0;}}function reset(){_resetInitialSettings();}instance={setupPerSegmentQoe:setupPerSegmentQoe,logSegmentMetrics:logSegmentMetrics,getPerSegmentQoe:getPerSegmentQoe,calculateSingleUseQoe:calculateSingleUseQoe,reset:reset};_setup();return instance;}LoLpQoeEvaluator.__dashjs_factory_name='LoLpQoeEvaluator';exports.default=_FactoryMaker2.default.getClassFactory(LoLpQoeEvaluator);


},{"../../../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","./QoeInfo":"../node_modules/dashjs/build/es5/src/streaming/rules/abr/lolp/QoeInfo.js"}],"../node_modules/dashjs/build/es5/src/streaming/rules/abr/lolp/LoLpWeightSelector.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function LoLpWeightSelector(config){var targetLatency=config.targetLatency;var bufferMin=config.bufferMin;var segmentDuration=config.segmentDuration;var qoeEvaluator=config.qoeEvaluator;var instance=void 0,valueList=void 0,weightTypeCount=void 0,weightOptions=void 0,previousLatency=void 0;/**
     *
     * @private
     */function _setup(){_resetInitialSettings();}/**
     *
     * @private
     */function _resetInitialSettings(){valueList=[0.2,0.4,0.6,0.8,1];weightTypeCount=4;weightOptions=_getPermutations(valueList,weightTypeCount);previousLatency=0;}/**
     * Next, at each segment boundary, ABR to input current neurons and target state (only used in Method II) to find the desired weight vector
     * @param {array} neurons
     * @param {number} currentLatency
     * @param {number} currentBuffer
     * @param {number} currentRebuffer
     * @param {number} currentThroughput
     * @param {number} playbackRate
     * @return {null}
     * @private
     */function findWeightVector(neurons,currentLatency,currentBuffer,currentRebuffer,currentThroughput,playbackRate){var maxQoE=null;var winnerWeights=null;var winnerBitrate=null;var deltaLatency=Math.abs(currentLatency-previousLatency);// For each neuron, m
neurons.forEach(function(neuron){// For each possible weight vector, z
// E.g. For [ throughput, latency, buffer, playbackRate, QoE ]
//      Possible weightVector = [ 0.2, 0.4, 0.2, 0, 0.2 ]
weightOptions.forEach(function(weightVector){// Apply weightVector to neuron, compute utility and determine winnerWeights
// Method I: Utility based on QoE given current state
var weightsObj={throughput:weightVector[0],latency:weightVector[1],buffer:weightVector[2],switch:weightVector[3]};var downloadTime=neuron.bitrate*segmentDuration/currentThroughput;var nextBuffer=getNextBuffer(currentBuffer,downloadTime);var rebuffer=Math.max(0.00001,downloadTime-nextBuffer);var wt=void 0;if(weightsObj.buffer===0){wt=10;}else{wt=1/weightsObj.buffer;}var weightedRebuffer=wt*rebuffer;if(weightsObj.latency===0){wt=10;}else{wt=1/weightsObj.latency;// inverse the weight because wt and latency should have positive relationship, i.e., higher latency = higher wt
}var weightedLatency=wt*neuron.state.latency;var totalQoE=qoeEvaluator.calculateSingleUseQoe(neuron.bitrate,weightedRebuffer,weightedLatency,playbackRate);if((maxQoE===null||totalQoE>maxQoE)&&_checkConstraints(currentLatency,nextBuffer,deltaLatency)){maxQoE=totalQoE;winnerWeights=weightVector;winnerBitrate=neuron.bitrate;}});});// winnerWeights was found, check if constraints are satisfied
if(winnerWeights===null&&winnerBitrate===null){winnerWeights=-1;}previousLatency=currentLatency;return winnerWeights;}/**
     *
     * @param {number} nextLatency
     * @param {number} nextBuffer
     * @param {number} deltaLatency
     * @return {boolean}
     * @private
     */function _checkConstraints(nextLatency,nextBuffer,deltaLatency){// A1
// disabled till we find a better way of estimating latency
// fails for all with current value
if(nextLatency>targetLatency+deltaLatency){return false;}return nextBuffer>=bufferMin;}/**
     *
     * @param {array} list
     * @param {number} length
     * @return {*}
     * @private
     */function _getPermutations(list,length){// Copy initial values as arrays
var perm=list.map(function(val){return[val];});// Our permutation generator
var generate=function generate(perm,length,currLen){// Reached desired length
if(currLen===length){return perm;}// For each existing permutation
var len=perm.length;for(var i=0;i<len;i++){var currPerm=perm.shift();// Create new permutation
for(var k=0;k<list.length;k++){perm.push(currPerm.concat(list[k]));}}// Recurse
return generate(perm,length,currLen+1);};// Start with size 1 because of initial values
return generate(perm,length,1);}/**
     *
     * @return {number}
     */function getMinBuffer(){return bufferMin;}/**
     *
     * @return {number}
     */function getSegmentDuration(){return segmentDuration;}/**
     *
     * @param {number} bitrateToDownload
     * @param {number} currentBuffer
     * @param {number} currentThroughput
     * @return {number}
     */function getNextBufferWithBitrate(bitrateToDownload,currentBuffer,currentThroughput){var downloadTime=bitrateToDownload*segmentDuration/currentThroughput;return getNextBuffer(currentBuffer,downloadTime);}/**
     *
     * @param {number} currentBuffer
     * @param {number} downloadTime
     * @return {number}
     */function getNextBuffer(currentBuffer,downloadTime){var segmentDuration=getSegmentDuration();var nextBuffer=void 0;if(downloadTime>segmentDuration){nextBuffer=currentBuffer-segmentDuration;}else{nextBuffer=currentBuffer+segmentDuration-downloadTime;}return nextBuffer;}instance={getMinBuffer:getMinBuffer,getSegmentDuration:getSegmentDuration,getNextBufferWithBitrate:getNextBufferWithBitrate,getNextBuffer:getNextBuffer,findWeightVector:findWeightVector};_setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * Authors:
 * Abdelhak Bentaleb | National University of Singapore | bentaleb@comp.nus.edu.sg
 * Mehmet N. Akcay | Ozyegin University | necmettin.akcay@ozu.edu.tr
 * May Lim | National University of Singapore | maylim@comp.nus.edu.sg
 */LoLpWeightSelector.__dashjs_factory_name='LoLpWeightSelector';exports.default=_FactoryMaker2.default.getClassFactory(LoLpWeightSelector);


},{"../../../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/streaming/rules/abr/lolp/LoLpRule.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Debug=require('../../../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _FactoryMaker=require('../../../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _LearningAbrController=require('./LearningAbrController');var _LearningAbrController2=_interopRequireDefault(_LearningAbrController);var _LoLpQoEEvaluator=require('./LoLpQoEEvaluator');var _LoLpQoEEvaluator2=_interopRequireDefault(_LoLpQoEEvaluator);var _SwitchRequest=require('../../SwitchRequest');var _SwitchRequest2=_interopRequireDefault(_SwitchRequest);var _MetricsConstants=require('../../../constants/MetricsConstants');var _MetricsConstants2=_interopRequireDefault(_MetricsConstants);var _LoLpWeightSelector=require('./LoLpWeightSelector');var _LoLpWeightSelector2=_interopRequireDefault(_LoLpWeightSelector);var _Constants=require('../../../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * Authors:
 * Abdelhak Bentaleb | National University of Singapore | bentaleb@comp.nus.edu.sg
 * Mehmet N. Akcay | Ozyegin University | necmettin.akcay@ozu.edu.tr
 * May Lim | National University of Singapore | maylim@comp.nus.edu.sg
 */var DWS_TARGET_LATENCY=1.5;var DWS_BUFFER_MIN=0.3;function LoLPRule(config){config=config||{};var dashMetrics=config.dashMetrics;var context=this.context;var logger=void 0,instance=void 0,learningController=void 0,qoeEvaluator=void 0;function _setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);learningController=(0,_LearningAbrController2.default)(context).create();qoeEvaluator=(0,_LoLpQoEEvaluator2.default)(context).create();}function getMaxIndex(rulesContext){try{var switchRequest=(0,_SwitchRequest2.default)(context).create();var mediaType=rulesContext.getMediaInfo().type;var abrController=rulesContext.getAbrController();var streamInfo=rulesContext.getStreamInfo();var currentQuality=abrController.getQualityFor(mediaType,streamInfo);var mediaInfo=rulesContext.getMediaInfo();var bufferStateVO=dashMetrics.getCurrentBufferState(mediaType);var scheduleController=rulesContext.getScheduleController();var currentBufferLevel=dashMetrics.getCurrentBufferLevel(mediaType,true);var isDynamic=streamInfo&&streamInfo.manifestInfo?streamInfo.manifestInfo.isDynamic:null;var playbackController=scheduleController.getPlaybackController();var latency=playbackController.getCurrentLiveLatency();if(!rulesContext.useLoLPABR()||mediaType===_Constants2.default.AUDIO){return switchRequest;}if(!latency){latency=0;}var playbackRate=playbackController.getPlaybackRate();var throughputHistory=abrController.getThroughputHistory();var throughput=throughputHistory.getSafeAverageThroughput(mediaType,isDynamic);logger.debug('Throughput '+Math.round(throughput)+' kbps');if(isNaN(throughput)||!bufferStateVO){return switchRequest;}if(abrController.getAbandonmentStateFor(mediaType)===_MetricsConstants2.default.ABANDON_LOAD){return switchRequest;}// QoE parameters
var bitrateList=mediaInfo.bitrateList;// [{bandwidth: 200000, width: 640, height: 360}, ...]
var segmentDuration=rulesContext.getRepresentationInfo().fragmentDuration;var minBitrateKbps=bitrateList[0].bandwidth/1000.0;// min bitrate level
var maxBitrateKbps=bitrateList[bitrateList.length-1].bandwidth/1000.0;// max bitrate level
for(var i=0;i<bitrateList.length;i++){// in case bitrateList is not sorted as expected
var b=bitrateList[i].bandwidth/1000.0;if(b>maxBitrateKbps)maxBitrateKbps=b;else if(b<minBitrateKbps){minBitrateKbps=b;}}// Learning rule pre-calculations
var currentBitrate=bitrateList[currentQuality].bandwidth;var currentBitrateKbps=currentBitrate/1000.0;var httpRequest=dashMetrics.getCurrentHttpRequest(mediaType,true);var lastFragmentDownloadTime=(httpRequest.tresponse.getTime()-httpRequest.trequest.getTime())/1000;var segmentRebufferTime=lastFragmentDownloadTime>segmentDuration?lastFragmentDownloadTime-segmentDuration:0;qoeEvaluator.setupPerSegmentQoe(segmentDuration,maxBitrateKbps,minBitrateKbps);qoeEvaluator.logSegmentMetrics(currentBitrateKbps,segmentRebufferTime,latency,playbackRate);/*
            * Dynamic Weights Selector (step 1/2: initialization)
            */var dynamicWeightsSelector=(0,_LoLpWeightSelector2.default)(context).create({targetLatency:DWS_TARGET_LATENCY,bufferMin:DWS_BUFFER_MIN,segmentDuration:segmentDuration,qoeEvaluator:qoeEvaluator});/*
             * Select next quality
             */switchRequest.quality=learningController.getNextQuality(mediaInfo,throughput*1000,latency,currentBufferLevel,playbackRate,currentQuality,dynamicWeightsSelector);switchRequest.reason={throughput:throughput,latency:latency};switchRequest.priority=_SwitchRequest2.default.PRIORITY.STRONG;scheduleController.setTimeToLoadDelay(0);if(switchRequest.quality!==currentQuality){console.log('[TgcLearningRule]['+mediaType+'] requesting switch to index: ',switchRequest.quality,'Average throughput',Math.round(throughput),'kbps');}return switchRequest;}catch(e){throw e;}}/**
     * Reset objects to their initial state
     * @private
     */function _resetInitialSettings(){learningController.reset();qoeEvaluator.reset();}/**
     * Reset the rule
     */function reset(){_resetInitialSettings();}instance={getMaxIndex:getMaxIndex,reset:reset};_setup();return instance;}LoLPRule.__dashjs_factory_name='LoLPRule';exports.default=_FactoryMaker2.default.getClassFactory(LoLPRule);


},{"../../../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","../../../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","./LearningAbrController":"../node_modules/dashjs/build/es5/src/streaming/rules/abr/lolp/LearningAbrController.js","./LoLpQoEEvaluator":"../node_modules/dashjs/build/es5/src/streaming/rules/abr/lolp/LoLpQoEEvaluator.js","../../SwitchRequest":"../node_modules/dashjs/build/es5/src/streaming/rules/SwitchRequest.js","../../../constants/MetricsConstants":"../node_modules/dashjs/build/es5/src/streaming/constants/MetricsConstants.js","./LoLpWeightSelector":"../node_modules/dashjs/build/es5/src/streaming/rules/abr/lolp/LoLpWeightSelector.js","../../../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js"}],"../node_modules/dashjs/build/es5/src/streaming/rules/abr/ABRRulesCollection.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _ThroughputRule=require('./ThroughputRule');var _ThroughputRule2=_interopRequireDefault(_ThroughputRule);var _InsufficientBufferRule=require('./InsufficientBufferRule');var _InsufficientBufferRule2=_interopRequireDefault(_InsufficientBufferRule);var _AbandonRequestsRule=require('./AbandonRequestsRule');var _AbandonRequestsRule2=_interopRequireDefault(_AbandonRequestsRule);var _DroppedFramesRule=require('./DroppedFramesRule');var _DroppedFramesRule2=_interopRequireDefault(_DroppedFramesRule);var _SwitchHistoryRule=require('./SwitchHistoryRule');var _SwitchHistoryRule2=_interopRequireDefault(_SwitchHistoryRule);var _BolaRule=require('./BolaRule');var _BolaRule2=_interopRequireDefault(_BolaRule);var _L2ARule=require('./L2ARule.js');var _L2ARule2=_interopRequireDefault(_L2ARule);var _LoLpRule=require('./lolp/LoLpRule.js');var _LoLpRule2=_interopRequireDefault(_LoLpRule);var _FactoryMaker=require('../../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _SwitchRequest=require('../SwitchRequest');var _SwitchRequest2=_interopRequireDefault(_SwitchRequest);var _Constants=require('../../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var QUALITY_SWITCH_RULES='qualitySwitchRules';/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var ABANDON_FRAGMENT_RULES='abandonFragmentRules';function ABRRulesCollection(config){config=config||{};var context=this.context;var mediaPlayerModel=config.mediaPlayerModel;var dashMetrics=config.dashMetrics;var settings=config.settings;var instance=void 0,qualitySwitchRules=void 0,abandonFragmentRules=void 0;function initialize(){qualitySwitchRules=[];abandonFragmentRules=[];if(settings.get().streaming.abr.useDefaultABRRules){// If L2A is used we only need this one rule
if(settings.get().streaming.abr.ABRStrategy===_Constants2.default.ABR_STRATEGY_L2A){qualitySwitchRules.push((0,_L2ARule2.default)(context).create({dashMetrics:dashMetrics,mediaPlayerModel:mediaPlayerModel,settings:settings}));}// If LoLP is used we only need this one rule
else if(settings.get().streaming.abr.ABRStrategy===_Constants2.default.ABR_STRATEGY_LoLP){qualitySwitchRules.push((0,_LoLpRule2.default)(context).create({dashMetrics:dashMetrics}));}else{// Only one of BolaRule and ThroughputRule will give a switchRequest.quality !== SwitchRequest.NO_CHANGE.
// This is controlled by useBufferOccupancyABR mechanism in AbrController.
qualitySwitchRules.push((0,_BolaRule2.default)(context).create({dashMetrics:dashMetrics,mediaPlayerModel:mediaPlayerModel,settings:settings}));qualitySwitchRules.push((0,_ThroughputRule2.default)(context).create({dashMetrics:dashMetrics}));qualitySwitchRules.push((0,_InsufficientBufferRule2.default)(context).create({dashMetrics:dashMetrics}));qualitySwitchRules.push((0,_SwitchHistoryRule2.default)(context).create());qualitySwitchRules.push((0,_DroppedFramesRule2.default)(context).create());abandonFragmentRules.push((0,_AbandonRequestsRule2.default)(context).create({dashMetrics:dashMetrics,mediaPlayerModel:mediaPlayerModel,settings:settings}));}}// add custom ABR rules if any
var customRules=mediaPlayerModel.getABRCustomRules();customRules.forEach(function(rule){if(rule.type===QUALITY_SWITCH_RULES){qualitySwitchRules.push(rule.rule(context).create());}if(rule.type===ABANDON_FRAGMENT_RULES){abandonFragmentRules.push(rule.rule(context).create());}});}function getActiveRules(srArray){return srArray.filter(function(sr){return sr.quality>_SwitchRequest2.default.NO_CHANGE;});}function getMinSwitchRequest(srArray){var values={};var i=void 0,len=void 0,req=void 0,newQuality=void 0,quality=void 0;if(srArray.length===0){return;}values[_SwitchRequest2.default.PRIORITY.STRONG]=_SwitchRequest2.default.NO_CHANGE;values[_SwitchRequest2.default.PRIORITY.WEAK]=_SwitchRequest2.default.NO_CHANGE;values[_SwitchRequest2.default.PRIORITY.DEFAULT]=_SwitchRequest2.default.NO_CHANGE;for(i=0,len=srArray.length;i<len;i+=1){req=srArray[i];if(req.quality!==_SwitchRequest2.default.NO_CHANGE){values[req.priority]=values[req.priority]>_SwitchRequest2.default.NO_CHANGE?Math.min(values[req.priority],req.quality):req.quality;}}if(values[_SwitchRequest2.default.PRIORITY.WEAK]!==_SwitchRequest2.default.NO_CHANGE){newQuality=values[_SwitchRequest2.default.PRIORITY.WEAK];}if(values[_SwitchRequest2.default.PRIORITY.DEFAULT]!==_SwitchRequest2.default.NO_CHANGE){newQuality=values[_SwitchRequest2.default.PRIORITY.DEFAULT];}if(values[_SwitchRequest2.default.PRIORITY.STRONG]!==_SwitchRequest2.default.NO_CHANGE){newQuality=values[_SwitchRequest2.default.PRIORITY.STRONG];}if(newQuality!==_SwitchRequest2.default.NO_CHANGE){quality=newQuality;}return(0,_SwitchRequest2.default)(context).create(quality);}function getMaxQuality(rulesContext){var switchRequestArray=qualitySwitchRules.map(function(rule){return rule.getMaxIndex(rulesContext);});var activeRules=getActiveRules(switchRequestArray);var maxQuality=getMinSwitchRequest(activeRules);return maxQuality||(0,_SwitchRequest2.default)(context).create();}function shouldAbandonFragment(rulesContext){var abandonRequestArray=abandonFragmentRules.map(function(rule){return rule.shouldAbandon(rulesContext);});var activeRules=getActiveRules(abandonRequestArray);var shouldAbandon=getMinSwitchRequest(activeRules);return shouldAbandon||(0,_SwitchRequest2.default)(context).create();}function reset(){[qualitySwitchRules,abandonFragmentRules].forEach(function(rules){if(rules&&rules.length){rules.forEach(function(rule){return rule.reset&&rule.reset();});}});qualitySwitchRules=[];abandonFragmentRules=[];}function getQualitySwitchRules(){return qualitySwitchRules;}instance={initialize:initialize,reset:reset,getMaxQuality:getMaxQuality,shouldAbandonFragment:shouldAbandonFragment,getQualitySwitchRules:getQualitySwitchRules};return instance;}ABRRulesCollection.__dashjs_factory_name='ABRRulesCollection';var factory=_FactoryMaker2.default.getClassFactory(ABRRulesCollection);factory.QUALITY_SWITCH_RULES=QUALITY_SWITCH_RULES;factory.ABANDON_FRAGMENT_RULES=ABANDON_FRAGMENT_RULES;_FactoryMaker2.default.updateSingletonFactory(ABRRulesCollection.__dashjs_factory_name,factory);exports.default=factory;


},{"./ThroughputRule":"../node_modules/dashjs/build/es5/src/streaming/rules/abr/ThroughputRule.js","./InsufficientBufferRule":"../node_modules/dashjs/build/es5/src/streaming/rules/abr/InsufficientBufferRule.js","./AbandonRequestsRule":"../node_modules/dashjs/build/es5/src/streaming/rules/abr/AbandonRequestsRule.js","./DroppedFramesRule":"../node_modules/dashjs/build/es5/src/streaming/rules/abr/DroppedFramesRule.js","./SwitchHistoryRule":"../node_modules/dashjs/build/es5/src/streaming/rules/abr/SwitchHistoryRule.js","./BolaRule":"../node_modules/dashjs/build/es5/src/streaming/rules/abr/BolaRule.js","./L2ARule.js":"../node_modules/dashjs/build/es5/src/streaming/rules/abr/L2ARule.js","./lolp/LoLpRule.js":"../node_modules/dashjs/build/es5/src/streaming/rules/abr/lolp/LoLpRule.js","../../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../SwitchRequest":"../node_modules/dashjs/build/es5/src/streaming/rules/SwitchRequest.js","../../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js"}],"../node_modules/dashjs/build/es5/src/streaming/vo/BitrateInfo.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var BitrateInfo=function BitrateInfo(){_classCallCheck(this,BitrateInfo);this.mediaType=null;this.bitrate=null;this.width=null;this.height=null;this.scanType=null;this.qualityIndex=NaN;};exports.default=BitrateInfo;


},{}],"../node_modules/dashjs/build/es5/src/streaming/rules/RulesContext.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function RulesContext(config){config=config||{};var instance=void 0;var abrController=config.abrController;var switchHistory=config.switchHistory;var droppedFramesHistory=config.droppedFramesHistory;var currentRequest=config.currentRequest;var bufferOccupancyABR=config.useBufferOccupancyABR;var l2AABR=config.useL2AABR;var loLP=config.useLoLPABR;var scheduleController=config.streamProcessor?config.streamProcessor.getScheduleController():null;var representationInfo=config.streamProcessor?config.streamProcessor.getRepresentationInfo():null;var videoModel=config.videoModel?config.videoModel:null;function getMediaType(){var mediaInfo=getMediaInfo();return mediaInfo?mediaInfo.type:null;}function getStreamInfo(){var mediaInfo=getMediaInfo();return mediaInfo?mediaInfo.streamInfo:null;}function getMediaInfo(){return representationInfo?representationInfo.mediaInfo:null;}function getRepresentationInfo(){return representationInfo;}function getScheduleController(){return scheduleController;}function getAbrController(){return abrController;}function getSwitchHistory(){return switchHistory;}function getVideoModel(){return videoModel;}function getDroppedFramesHistory(){return droppedFramesHistory;}function getCurrentRequest(){return currentRequest;}function useBufferOccupancyABR(){return bufferOccupancyABR;}function useL2AABR(){return l2AABR;}function useLoLPABR(){return loLP;}instance={getMediaType:getMediaType,getMediaInfo:getMediaInfo,getDroppedFramesHistory:getDroppedFramesHistory,getCurrentRequest:getCurrentRequest,getSwitchHistory:getSwitchHistory,getStreamInfo:getStreamInfo,getScheduleController:getScheduleController,getAbrController:getAbrController,getRepresentationInfo:getRepresentationInfo,useBufferOccupancyABR:useBufferOccupancyABR,useL2AABR:useL2AABR,useLoLPABR:useLoLPABR,getVideoModel:getVideoModel};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */RulesContext.__dashjs_factory_name='RulesContext';exports.default=_FactoryMaker2.default.getClassFactory(RulesContext);


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/streaming/rules/SwitchRequestHistory.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _SwitchRequest=require('./SwitchRequest');var _SwitchRequest2=_interopRequireDefault(_SwitchRequest);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var SWITCH_REQUEST_HISTORY_DEPTH=8;// must be > SwitchHistoryRule SAMPLE_SIZE to enable rule
function SwitchRequestHistory(){var switchRequests=[];// running total
var srHistory=[];// history of each switch
function push(switchRequest){if(switchRequest.newValue===_SwitchRequest2.default.NO_CHANGE){switchRequest.newValue=switchRequest.oldValue;}if(!switchRequests[switchRequest.oldValue]){switchRequests[switchRequest.oldValue]={noDrops:0,drops:0,dropSize:0};}// Set switch details
var indexDiff=switchRequest.newValue-switchRequest.oldValue;var drop=indexDiff<0?1:0;var dropSize=drop?-indexDiff:0;var noDrop=drop?0:1;// Update running totals
switchRequests[switchRequest.oldValue].drops+=drop;switchRequests[switchRequest.oldValue].dropSize+=dropSize;switchRequests[switchRequest.oldValue].noDrops+=noDrop;// Save to history
srHistory.push({idx:switchRequest.oldValue,noDrop:noDrop,drop:drop,dropSize:dropSize});// Shift earliest switch off srHistory and readjust to keep depth of running totals constant
if(srHistory.length>SWITCH_REQUEST_HISTORY_DEPTH){var srHistoryFirst=srHistory.shift();switchRequests[srHistoryFirst.idx].drops-=srHistoryFirst.drop;switchRequests[srHistoryFirst.idx].dropSize-=srHistoryFirst.dropSize;switchRequests[srHistoryFirst.idx].noDrops-=srHistoryFirst.noDrop;}}function getSwitchRequests(){return switchRequests;}function reset(){switchRequests=[];srHistory=[];}return{push:push,getSwitchRequests:getSwitchRequests,reset:reset};}SwitchRequestHistory.__dashjs_factory_name='SwitchRequestHistory';var factory=_FactoryMaker2.default.getClassFactory(SwitchRequestHistory);exports.default=factory;


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","./SwitchRequest":"../node_modules/dashjs/build/es5/src/streaming/rules/SwitchRequest.js"}],"../node_modules/dashjs/build/es5/src/streaming/rules/DroppedFramesHistory.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function DroppedFramesHistory(){var values=[];var lastDroppedFrames=0;var lastTotalFrames=0;function push(index,playbackQuality){var droppedVideoFrames=playbackQuality&&playbackQuality.droppedVideoFrames?playbackQuality.droppedVideoFrames:0;var totalVideoFrames=playbackQuality&&playbackQuality.totalVideoFrames?playbackQuality.totalVideoFrames:0;var intervalDroppedFrames=droppedVideoFrames-lastDroppedFrames;lastDroppedFrames=droppedVideoFrames;var intervalTotalFrames=totalVideoFrames-lastTotalFrames;lastTotalFrames=totalVideoFrames;if(!isNaN(index)){if(!values[index]){values[index]={droppedVideoFrames:intervalDroppedFrames,totalVideoFrames:intervalTotalFrames};}else{values[index].droppedVideoFrames+=intervalDroppedFrames;values[index].totalVideoFrames+=intervalTotalFrames;}}}function getDroppedFrameHistory(){return values;}function reset(playbackQuality){values=[];lastDroppedFrames=playbackQuality.droppedVideoFrames;lastTotalFrames=playbackQuality.totalVideoFrames;}return{push:push,getFrameHistory:getDroppedFrameHistory,reset:reset};}DroppedFramesHistory.__dashjs_factory_name='DroppedFramesHistory';var factory=_FactoryMaker2.default.getClassFactory(DroppedFramesHistory);exports.default=factory;


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/streaming/rules/ThroughputHistory.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}// throughput generally stored in kbit/s
// latency generally stored in ms
/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2017, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function ThroughputHistory(config){config=config||{};// sliding window constants
var MAX_MEASUREMENTS_TO_KEEP=20;var AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_LIVE=3;var AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_VOD=4;var AVERAGE_LATENCY_SAMPLE_AMOUNT=4;var THROUGHPUT_DECREASE_SCALE=1.3;var THROUGHPUT_INCREASE_SCALE=1.3;// EWMA constants
var EWMA_THROUGHPUT_SLOW_HALF_LIFE_SECONDS=8;var EWMA_THROUGHPUT_FAST_HALF_LIFE_SECONDS=3;var EWMA_LATENCY_SLOW_HALF_LIFE_COUNT=2;var EWMA_LATENCY_FAST_HALF_LIFE_COUNT=1;var settings=config.settings;var throughputDict=void 0,latencyDict=void 0,ewmaThroughputDict=void 0,ewmaLatencyDict=void 0,ewmaHalfLife=void 0;function setup(){ewmaHalfLife={throughputHalfLife:{fast:EWMA_THROUGHPUT_FAST_HALF_LIFE_SECONDS,slow:EWMA_THROUGHPUT_SLOW_HALF_LIFE_SECONDS},latencyHalfLife:{fast:EWMA_LATENCY_FAST_HALF_LIFE_COUNT,slow:EWMA_LATENCY_SLOW_HALF_LIFE_COUNT}};reset();}function isCachedResponse(mediaType,latencyMs,downloadTimeMs){if(mediaType===_Constants2.default.VIDEO){return downloadTimeMs<settings.get().streaming.cacheLoadThresholds[_Constants2.default.VIDEO];}else if(mediaType===_Constants2.default.AUDIO){return downloadTimeMs<settings.get().streaming.cacheLoadThresholds[_Constants2.default.AUDIO];}}function push(mediaType,httpRequest,useDeadTimeLatency){if(!httpRequest.trace||!httpRequest.trace.length){return;}var latencyTimeInMilliseconds=httpRequest.tresponse.getTime()-httpRequest.trequest.getTime()||1;var downloadTimeInMilliseconds=httpRequest._tfinish.getTime()-httpRequest.tresponse.getTime()||1;//Make sure never 0 we divide by this value. Avoid infinity!
var downloadBytes=httpRequest.trace.reduce(function(a,b){return a+b.b[0];},0);var throughputMeasureTime=void 0;if(settings.get().streaming.lowLatencyEnabled){throughputMeasureTime=httpRequest.trace.reduce(function(a,b){return a+b.d;},0);}else{throughputMeasureTime=useDeadTimeLatency?downloadTimeInMilliseconds:latencyTimeInMilliseconds+downloadTimeInMilliseconds;}var throughput=Math.round(8*downloadBytes/throughputMeasureTime);// bits/ms = kbits/s
checkSettingsForMediaType(mediaType);if(isCachedResponse(mediaType,latencyTimeInMilliseconds,downloadTimeInMilliseconds)){if(throughputDict[mediaType].length>0&&!throughputDict[mediaType].hasCachedEntries){// already have some entries which are not cached entries
// prevent cached fragment loads from skewing the average values
return;}else{// have no entries || have cached entries
// no uncached entries yet, rely on cached entries because ABR rules need something to go by
throughputDict[mediaType].hasCachedEntries=true;}}else if(throughputDict[mediaType]&&throughputDict[mediaType].hasCachedEntries){// if we are here then we have some entries already, but they are cached, and now we have a new uncached entry
clearSettingsForMediaType(mediaType);}throughputDict[mediaType].push(throughput);if(throughputDict[mediaType].length>MAX_MEASUREMENTS_TO_KEEP){throughputDict[mediaType].shift();}latencyDict[mediaType].push(latencyTimeInMilliseconds);if(latencyDict[mediaType].length>MAX_MEASUREMENTS_TO_KEEP){latencyDict[mediaType].shift();}updateEwmaEstimate(ewmaThroughputDict[mediaType],throughput,0.001*downloadTimeInMilliseconds,ewmaHalfLife.throughputHalfLife);updateEwmaEstimate(ewmaLatencyDict[mediaType],latencyTimeInMilliseconds,1,ewmaHalfLife.latencyHalfLife);}function updateEwmaEstimate(ewmaObj,value,weight,halfLife){// Note about startup:
// Estimates start at 0, so early values are underestimated.
// This effect is countered in getAverageEwma() by dividing the estimates by:
//     1 - Math.pow(0.5, ewmaObj.totalWeight / halfLife)
var fastAlpha=Math.pow(0.5,weight/halfLife.fast);ewmaObj.fastEstimate=(1-fastAlpha)*value+fastAlpha*ewmaObj.fastEstimate;var slowAlpha=Math.pow(0.5,weight/halfLife.slow);ewmaObj.slowEstimate=(1-slowAlpha)*value+slowAlpha*ewmaObj.slowEstimate;ewmaObj.totalWeight+=weight;}function getSampleSize(isThroughput,mediaType,isLive){var arr=void 0,sampleSize=void 0;if(isThroughput){arr=throughputDict[mediaType];sampleSize=isLive?AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_LIVE:AVERAGE_THROUGHPUT_SAMPLE_AMOUNT_VOD;}else{arr=latencyDict[mediaType];sampleSize=AVERAGE_LATENCY_SAMPLE_AMOUNT;}if(!arr){sampleSize=0;}else if(sampleSize>=arr.length){sampleSize=arr.length;}else if(isThroughput){// if throughput samples vary a lot, average over a wider sample
for(var i=1;i<sampleSize;++i){var ratio=arr[arr.length-i]/arr[arr.length-i-1];if(ratio>=THROUGHPUT_INCREASE_SCALE||ratio<=1/THROUGHPUT_DECREASE_SCALE){sampleSize+=1;if(sampleSize===arr.length){// cannot increase sampleSize beyond arr.length
break;}}}}return sampleSize;}function getAverage(isThroughput,mediaType,isDynamic){// only two moving average methods defined at the moment
return settings.get().streaming.abr.movingAverageMethod!==_Constants2.default.MOVING_AVERAGE_SLIDING_WINDOW?getAverageEwma(isThroughput,mediaType):getAverageSlidingWindow(isThroughput,mediaType,isDynamic);}function getAverageSlidingWindow(isThroughput,mediaType,isDynamic){var sampleSize=getSampleSize(isThroughput,mediaType,isDynamic);var dict=isThroughput?throughputDict:latencyDict;var arr=dict[mediaType];if(sampleSize===0||!arr||arr.length===0){return NaN;}arr=arr.slice(-sampleSize);// still works if sampleSize too large
// arr.length >= 1
return arr.reduce(function(total,elem){return total+elem;})/arr.length;}function getAverageEwma(isThroughput,mediaType){var halfLife=isThroughput?ewmaHalfLife.throughputHalfLife:ewmaHalfLife.latencyHalfLife;var ewmaObj=isThroughput?ewmaThroughputDict[mediaType]:ewmaLatencyDict[mediaType];if(!ewmaObj||ewmaObj.totalWeight<=0){return NaN;}// to correct for startup, divide by zero factor = 1 - Math.pow(0.5, ewmaObj.totalWeight / halfLife)
var fastEstimate=ewmaObj.fastEstimate/(1-Math.pow(0.5,ewmaObj.totalWeight/halfLife.fast));var slowEstimate=ewmaObj.slowEstimate/(1-Math.pow(0.5,ewmaObj.totalWeight/halfLife.slow));return isThroughput?Math.min(fastEstimate,slowEstimate):Math.max(fastEstimate,slowEstimate);}function getAverageThroughput(mediaType,isDynamic){return getAverage(true,mediaType,isDynamic);}function getSafeAverageThroughput(mediaType,isDynamic){var average=getAverageThroughput(mediaType,isDynamic);if(!isNaN(average)){average*=settings.get().streaming.abr.bandwidthSafetyFactor;}return average;}function getAverageLatency(mediaType){return getAverage(false,mediaType);}function checkSettingsForMediaType(mediaType){throughputDict[mediaType]=throughputDict[mediaType]||[];latencyDict[mediaType]=latencyDict[mediaType]||[];ewmaThroughputDict[mediaType]=ewmaThroughputDict[mediaType]||{fastEstimate:0,slowEstimate:0,totalWeight:0};ewmaLatencyDict[mediaType]=ewmaLatencyDict[mediaType]||{fastEstimate:0,slowEstimate:0,totalWeight:0};}function clearSettingsForMediaType(mediaType){delete throughputDict[mediaType];delete latencyDict[mediaType];delete ewmaThroughputDict[mediaType];delete ewmaLatencyDict[mediaType];checkSettingsForMediaType(mediaType);}function reset(){throughputDict={};latencyDict={};ewmaThroughputDict={};ewmaLatencyDict={};}var instance={push:push,getAverageThroughput:getAverageThroughput,getSafeAverageThroughput:getSafeAverageThroughput,getAverageLatency:getAverageLatency,reset:reset};setup();return instance;}ThroughputHistory.__dashjs_factory_name='ThroughputHistory';exports.default=_FactoryMaker2.default.getClassFactory(ThroughputHistory);


},{"../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/streaming/controllers/AbrController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _ABRRulesCollection=require('../rules/abr/ABRRulesCollection');var _ABRRulesCollection2=_interopRequireDefault(_ABRRulesCollection);var _Constants=require('../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _MetricsConstants=require('../constants/MetricsConstants');var _MetricsConstants2=_interopRequireDefault(_MetricsConstants);var _BitrateInfo=require('../vo/BitrateInfo');var _BitrateInfo2=_interopRequireDefault(_BitrateInfo);var _FragmentModel=require('../models/FragmentModel');var _FragmentModel2=_interopRequireDefault(_FragmentModel);var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _RulesContext=require('../rules/RulesContext');var _RulesContext2=_interopRequireDefault(_RulesContext);var _SwitchRequest=require('../rules/SwitchRequest');var _SwitchRequest2=_interopRequireDefault(_SwitchRequest);var _SwitchRequestHistory=require('../rules/SwitchRequestHistory');var _SwitchRequestHistory2=_interopRequireDefault(_SwitchRequestHistory);var _DroppedFramesHistory=require('../rules/DroppedFramesHistory');var _DroppedFramesHistory2=_interopRequireDefault(_DroppedFramesHistory);var _ThroughputHistory=require('../rules/ThroughputHistory');var _ThroughputHistory2=_interopRequireDefault(_ThroughputHistory);var _Debug=require('../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _HTTPRequest=require('../vo/metrics/HTTPRequest');var _SupervisorTools=require('../utils/SupervisorTools');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var DEFAULT_VIDEO_BITRATE=1000;var DEFAULT_AUDIO_BITRATE=100;var QUALITY_DEFAULT=0;function AbrController(){var context=this.context;var debug=(0,_Debug2.default)(context).getInstance();var eventBus=(0,_EventBus2.default)(context).getInstance();var instance=void 0,logger=void 0,abrRulesCollection=void 0,streamController=void 0,topQualities=void 0,qualityDict=void 0,streamProcessorDict=void 0,abandonmentStateDict=void 0,abandonmentTimeout=void 0,windowResizeEventCalled=void 0,elementWidth=void 0,elementHeight=void 0,adapter=void 0,videoModel=void 0,mediaPlayerModel=void 0,domStorage=void 0,playbackIndex=void 0,switchHistoryDict=void 0,droppedFramesHistory=void 0,throughputHistory=void 0,isUsingBufferOccupancyABRDict=void 0,isUsingL2AABRDict=void 0,isUsingLoLPBRDict=void 0,dashMetrics=void 0,settings=void 0;function setup(){logger=debug.getLogger(instance);resetInitialSettings();}function registerStreamType(type,streamProcessor){switchHistoryDict[type]=switchHistoryDict[type]||(0,_SwitchRequestHistory2.default)(context).create();streamProcessorDict[type]=streamProcessor;abandonmentStateDict[type]=abandonmentStateDict[type]||{};abandonmentStateDict[type].state=_MetricsConstants2.default.ALLOW_LOAD;isUsingBufferOccupancyABRDict[type]=false;isUsingL2AABRDict[type]=false;isUsingLoLPBRDict[type]=false;eventBus.on(_Events2.default.LOADING_PROGRESS,onFragmentLoadProgress,instance);if(type===_Constants2.default.VIDEO){eventBus.on(_Events2.default.QUALITY_CHANGE_RENDERED,onQualityChangeRendered,instance);droppedFramesHistory=droppedFramesHistory||(0,_DroppedFramesHistory2.default)(context).create();setElementSize();}eventBus.on(_Events2.default.METRIC_ADDED,onMetricAdded,instance);eventBus.on(_Events2.default.PERIOD_SWITCH_COMPLETED,createAbrRulesCollection,instance);throughputHistory=throughputHistory||(0,_ThroughputHistory2.default)(context).create({settings:settings});}function unRegisterStreamType(type){delete streamProcessorDict[type];}function createAbrRulesCollection(){abrRulesCollection=(0,_ABRRulesCollection2.default)(context).create({dashMetrics:dashMetrics,mediaPlayerModel:mediaPlayerModel,settings:settings});abrRulesCollection.initialize();}function resetInitialSettings(){topQualities={};qualityDict={};abandonmentStateDict={};streamProcessorDict={};switchHistoryDict={};isUsingBufferOccupancyABRDict={};isUsingL2AABRDict={};isUsingLoLPBRDict={};if(windowResizeEventCalled===undefined){windowResizeEventCalled=false;}playbackIndex=undefined;droppedFramesHistory=undefined;throughputHistory=undefined;clearTimeout(abandonmentTimeout);abandonmentTimeout=null;}function reset(){resetInitialSettings();eventBus.off(_Events2.default.LOADING_PROGRESS,onFragmentLoadProgress,instance);eventBus.off(_Events2.default.QUALITY_CHANGE_RENDERED,onQualityChangeRendered,instance);eventBus.off(_Events2.default.METRIC_ADDED,onMetricAdded,instance);eventBus.off(_Events2.default.PERIOD_SWITCH_COMPLETED,createAbrRulesCollection,instance);if(abrRulesCollection){abrRulesCollection.reset();}}function setConfig(config){if(!config)return;if(config.streamController){streamController=config.streamController;}if(config.domStorage){domStorage=config.domStorage;}if(config.mediaPlayerModel){mediaPlayerModel=config.mediaPlayerModel;}if(config.dashMetrics){dashMetrics=config.dashMetrics;}if(config.adapter){adapter=config.adapter;}if(config.videoModel){videoModel=config.videoModel;}if(config.settings){settings=config.settings;}}function checkConfig(){if(!domStorage||!domStorage.hasOwnProperty('getSavedBitrateSettings')){throw new Error(_Constants2.default.MISSING_CONFIG_ERROR);}}function onQualityChangeRendered(e){if(e.mediaType===_Constants2.default.VIDEO){playbackIndex=e.oldQuality;droppedFramesHistory.push(playbackIndex,videoModel.getPlaybackQuality());}}function onMetricAdded(e){if(e.metric===_MetricsConstants2.default.HTTP_REQUEST&&e.value&&e.value.type===_HTTPRequest.HTTPRequest.MEDIA_SEGMENT_TYPE&&(e.mediaType===_Constants2.default.AUDIO||e.mediaType===_Constants2.default.VIDEO)){throughputHistory.push(e.mediaType,e.value,settings.get().streaming.abr.useDeadTimeLatency);}if(e.metric===_MetricsConstants2.default.BUFFER_LEVEL&&(e.mediaType===_Constants2.default.AUDIO||e.mediaType===_Constants2.default.VIDEO)){_updateAbrStrategy(e.mediaType,0.001*e.value.level);}}function getTopQualityIndexFor(type,id){var idx=void 0;topQualities[id]=topQualities[id]||{};if(!topQualities[id].hasOwnProperty(type)){topQualities[id][type]=0;}idx=checkMaxBitrate(topQualities[id][type],type);idx=checkMaxRepresentationRatio(idx,type,topQualities[id][type]);idx=checkPortalSize(idx,type);return idx;}/**
     * Gets top BitrateInfo for the player
     * @param {string} type - 'video' or 'audio' are the type options.
     * @returns {BitrateInfo | null}
     */function getTopBitrateInfoFor(type){if(type&&streamProcessorDict&&streamProcessorDict[type]){var streamInfo=streamProcessorDict[type].getStreamInfo();if(streamInfo&&streamInfo.id){var idx=getTopQualityIndexFor(type,streamInfo.id);var bitrates=getBitrateList(streamProcessorDict[type].getMediaInfo());return bitrates[idx]?bitrates[idx]:null;}}return null;}/**
     * @param {string} type
     * @returns {number} A value of the initial bitrate, kbps
     * @memberof AbrController#
     */function getInitialBitrateFor(type){checkConfig();if(type===_Constants2.default.TEXT||type===_Constants2.default.FRAGMENTED_TEXT){return NaN;}var savedBitrate=domStorage.getSavedBitrateSettings(type);var configBitrate=settings.get().streaming.abr.initialBitrate[type];var configRatio=settings.get().streaming.abr.initialRepresentationRatio[type];if(configBitrate===-1){if(configRatio>-1){var representation=adapter.getAdaptationForType(0,type).Representation;if(Array.isArray(representation)){var repIdx=Math.max(Math.round(representation.length*configRatio)-1,0);configBitrate=representation[repIdx].bandwidth;}else{configBitrate=0;}}else if(!isNaN(savedBitrate)){configBitrate=savedBitrate;}else{configBitrate=type===_Constants2.default.VIDEO?DEFAULT_VIDEO_BITRATE:DEFAULT_AUDIO_BITRATE;}}return configBitrate;}function getMaxAllowedBitrateFor(type){return settings.get().streaming.abr.maxBitrate[type];}function getMinAllowedBitrateFor(type){return settings.get().streaming.abr.minBitrate[type];}function getMaxAllowedIndexFor(type){var maxBitrate=getMaxAllowedBitrateFor(type);if(maxBitrate>-1){return getQualityForBitrate(streamProcessorDict[type].getMediaInfo(),maxBitrate);}else{return undefined;}}function getMinAllowedIndexFor(type){var minBitrate=getMinAllowedBitrateFor(type);if(minBitrate>-1){var mediaInfo=streamProcessorDict[type].getMediaInfo();var bitrateList=getBitrateList(mediaInfo);// This returns the quality index <= for the given bitrate
var minIdx=getQualityForBitrate(mediaInfo,minBitrate);if(bitrateList[minIdx]&&minIdx<bitrateList.length-1&&bitrateList[minIdx].bitrate<minBitrate*1000){minIdx++;// Go to the next bitrate
}return minIdx;}else{return undefined;}}function checkPlaybackQuality(type){if(type&&streamProcessorDict&&streamProcessorDict[type]){var streamInfo=streamProcessorDict[type].getStreamInfo();var streamId=streamInfo?streamInfo.id:null;var oldQuality=getQualityFor(type);var rulesContext=(0,_RulesContext2.default)(context).create({abrController:instance,streamProcessor:streamProcessorDict[type],currentValue:oldQuality,switchHistory:switchHistoryDict[type],droppedFramesHistory:droppedFramesHistory,useBufferOccupancyABR:useBufferOccupancyABR(type),useL2AABR:useL2AABR(type),useLoLPABR:useLoLPABR(type),videoModel:videoModel});if(droppedFramesHistory){var playbackQuality=videoModel.getPlaybackQuality();if(playbackQuality){droppedFramesHistory.push(playbackIndex,playbackQuality);}}if(!!settings.get().streaming.abr.autoSwitchBitrate[type]){var minIdx=getMinAllowedIndexFor(type);var topQualityIdx=getTopQualityIndexFor(type,streamId);var switchRequest=abrRulesCollection.getMaxQuality(rulesContext);var newQuality=switchRequest.quality;if(minIdx!==undefined&&(newQuality>_SwitchRequest2.default.NO_CHANGE?newQuality:oldQuality)<minIdx){newQuality=minIdx;}if(newQuality>topQualityIdx){newQuality=topQualityIdx;}switchHistoryDict[type].push({oldValue:oldQuality,newValue:newQuality});if(newQuality>_SwitchRequest2.default.NO_CHANGE&&newQuality!=oldQuality){if(abandonmentStateDict[type].state===_MetricsConstants2.default.ALLOW_LOAD||newQuality>oldQuality){changeQuality(type,oldQuality,newQuality,topQualityIdx,switchRequest.reason);}}else if(settings.get().debug.logLevel===_Debug2.default.LOG_LEVEL_DEBUG){var bufferLevel=dashMetrics.getCurrentBufferLevel(type,true);logger.debug('['+type+'] stay on '+oldQuality+'/'+topQualityIdx+' (buffer: '+bufferLevel+')');}}}}function setPlaybackQuality(type,streamInfo,newQuality,reason){var id=streamInfo.id;var oldQuality=getQualityFor(type);(0,_SupervisorTools.checkInteger)(newQuality);var topQualityIdx=getTopQualityIndexFor(type,id);if(newQuality!==oldQuality&&newQuality>=0&&newQuality<=topQualityIdx){changeQuality(type,oldQuality,newQuality,topQualityIdx,reason);}}function changeQuality(type,oldQuality,newQuality,topQualityIdx,reason){if(type&&streamProcessorDict[type]){var streamInfo=streamProcessorDict[type].getStreamInfo();var id=streamInfo?streamInfo.id:null;if(settings.get().debug.logLevel===_Debug2.default.LOG_LEVEL_DEBUG){var bufferLevel=dashMetrics.getCurrentBufferLevel(type);logger.info('['+type+'] switch from '+oldQuality+' to '+newQuality+'/'+topQualityIdx+' (buffer: '+bufferLevel+') '+(reason?JSON.stringify(reason):'.'));}setQualityFor(type,id,newQuality);eventBus.trigger(_Events2.default.QUALITY_CHANGE_REQUESTED,{oldQuality:oldQuality,newQuality:newQuality,reason:reason},{streamId:streamInfo.id,mediaType:type});var bitrate=throughputHistory.getAverageThroughput(type);if(!isNaN(bitrate)){domStorage.setSavedBitrateSettings(type,bitrate);}}}function setAbandonmentStateFor(type,state){abandonmentStateDict[type].state=state;}function getAbandonmentStateFor(type){return abandonmentStateDict[type]?abandonmentStateDict[type].state:null;}/**
     * @param {MediaInfo} mediaInfo
     * @param {number} bitrate A bitrate value, kbps
     * @param {number} latency Expected latency of connection, ms
     * @returns {number} A quality index <= for the given bitrate
     * @memberof AbrController#
     */function getQualityForBitrate(mediaInfo,bitrate,latency){var voRepresentation=mediaInfo&&mediaInfo.type?streamProcessorDict[mediaInfo.type].getRepresentationInfo():null;if(settings.get().streaming.abr.useDeadTimeLatency&&latency&&voRepresentation&&voRepresentation.fragmentDuration){latency=latency/1000;var fragmentDuration=voRepresentation.fragmentDuration;if(latency>fragmentDuration){return 0;}else{var deadTimeRatio=latency/fragmentDuration;bitrate=bitrate*(1-deadTimeRatio);}}var bitrateList=getBitrateList(mediaInfo);for(var i=bitrateList.length-1;i>=0;i--){var bitrateInfo=bitrateList[i];if(bitrate*1000>=bitrateInfo.bitrate){return i;}}return QUALITY_DEFAULT;}/**
     * @param {MediaInfo} mediaInfo
     * @returns {Array|null} A list of {@link BitrateInfo} objects
     * @memberof AbrController#
     */function getBitrateList(mediaInfo){var infoList=[];if(!mediaInfo||!mediaInfo.bitrateList)return infoList;var bitrateList=mediaInfo.bitrateList;var type=mediaInfo.type;var bitrateInfo=void 0;for(var i=0,ln=bitrateList.length;i<ln;i++){bitrateInfo=new _BitrateInfo2.default();bitrateInfo.mediaType=type;bitrateInfo.qualityIndex=i;bitrateInfo.bitrate=bitrateList[i].bandwidth;bitrateInfo.width=bitrateList[i].width;bitrateInfo.height=bitrateList[i].height;bitrateInfo.scanType=bitrateList[i].scanType;infoList.push(bitrateInfo);}return infoList;}function _updateAbrStrategy(mediaType,bufferLevel){var strategy=settings.get().streaming.abr.ABRStrategy;if(strategy===_Constants2.default.ABR_STRATEGY_L2A){isUsingBufferOccupancyABRDict[mediaType]=false;isUsingLoLPBRDict[mediaType]=false;isUsingL2AABRDict[mediaType]=true;return;}if(strategy===_Constants2.default.ABR_STRATEGY_LoLP){isUsingBufferOccupancyABRDict[mediaType]=false;isUsingLoLPBRDict[mediaType]=true;isUsingL2AABRDict[mediaType]=false;return;}else if(strategy===_Constants2.default.ABR_STRATEGY_BOLA){isUsingBufferOccupancyABRDict[mediaType]=true;isUsingLoLPBRDict[mediaType]=false;isUsingL2AABRDict[mediaType]=false;return;}else if(strategy===_Constants2.default.ABR_STRATEGY_THROUGHPUT){isUsingBufferOccupancyABRDict[mediaType]=false;isUsingLoLPBRDict[mediaType]=false;isUsingL2AABRDict[mediaType]=false;return;}// else ABR_STRATEGY_DYNAMIC
_updateDynamicAbrStrategy(mediaType,bufferLevel);}function _updateDynamicAbrStrategy(mediaType,bufferLevel){var stableBufferTime=mediaPlayerModel.getStableBufferTime();var switchOnThreshold=stableBufferTime;var switchOffThreshold=0.5*stableBufferTime;var useBufferABR=isUsingBufferOccupancyABRDict[mediaType];var newUseBufferABR=bufferLevel>(useBufferABR?switchOffThreshold:switchOnThreshold);// use hysteresis to avoid oscillating rules
isUsingBufferOccupancyABRDict[mediaType]=newUseBufferABR;if(newUseBufferABR!==useBufferABR){if(newUseBufferABR){logger.info('['+mediaType+'] switching from throughput to buffer occupancy ABR rule (buffer: '+bufferLevel.toFixed(3)+').');}else{logger.info('['+mediaType+'] switching from buffer occupancy to throughput ABR rule (buffer: '+bufferLevel.toFixed(3)+').');}}}function useBufferOccupancyABR(mediaType){return isUsingBufferOccupancyABRDict[mediaType];}function useL2AABR(mediaType){return isUsingL2AABRDict[mediaType];}function useLoLPABR(mediaType){return isUsingLoLPBRDict[mediaType];}function getThroughputHistory(){return throughputHistory;}function updateTopQualityIndex(mediaInfo){var type=mediaInfo.type;var streamId=mediaInfo.streamInfo.id;var max=mediaInfo.representationCount-1;setTopQualityIndex(type,streamId,max);return max;}function isPlayingAtTopQuality(streamInfo){var streamId=streamInfo?streamInfo.id:null;var audioQuality=getQualityFor(_Constants2.default.AUDIO);var videoQuality=getQualityFor(_Constants2.default.VIDEO);var isAtTop=audioQuality===getTopQualityIndexFor(_Constants2.default.AUDIO,streamId)&&videoQuality===getTopQualityIndexFor(_Constants2.default.VIDEO,streamId);return isAtTop;}function getQualityFor(type){if(type&&streamProcessorDict[type]){var streamInfo=streamProcessorDict[type].getStreamInfo();var id=streamInfo?streamInfo.id:null;var quality=void 0;if(id){qualityDict[id]=qualityDict[id]||{};if(!qualityDict[id].hasOwnProperty(type)){qualityDict[id][type]=QUALITY_DEFAULT;}quality=qualityDict[id][type];return quality;}}return QUALITY_DEFAULT;}function setQualityFor(type,id,value){qualityDict[id]=qualityDict[id]||{};qualityDict[id][type]=value;}function setTopQualityIndex(type,id,value){topQualities[id]=topQualities[id]||{};topQualities[id][type]=value;}function checkMaxBitrate(idx,type){var newIdx=idx;if(!streamProcessorDict[type]){return newIdx;}var minIdx=getMinAllowedIndexFor(type);if(minIdx!==undefined){newIdx=Math.max(idx,minIdx);}var maxIdx=getMaxAllowedIndexFor(type);if(maxIdx!==undefined){newIdx=Math.min(newIdx,maxIdx);}return newIdx;}function checkMaxRepresentationRatio(idx,type,maxIdx){var maxRepresentationRatio=settings.get().streaming.abr.maxRepresentationRatio[type];if(isNaN(maxRepresentationRatio)||maxRepresentationRatio>=1||maxRepresentationRatio<0){return idx;}return Math.min(idx,Math.round(maxIdx*maxRepresentationRatio));}function setWindowResizeEventCalled(value){windowResizeEventCalled=value;}function setElementSize(){if(videoModel){var hasPixelRatio=settings.get().streaming.abr.usePixelRatioInLimitBitrateByPortal&&window.hasOwnProperty('devicePixelRatio');var pixelRatio=hasPixelRatio?window.devicePixelRatio:1;elementWidth=videoModel.getClientWidth()*pixelRatio;elementHeight=videoModel.getClientHeight()*pixelRatio;}}function checkPortalSize(idx,type){if(type!==_Constants2.default.VIDEO||!settings.get().streaming.abr.limitBitrateByPortal||!streamProcessorDict[type]){return idx;}if(!windowResizeEventCalled){setElementSize();}var representation=adapter.getAdaptationForType(0,type).Representation;var newIdx=idx;if(elementWidth>0&&elementHeight>0){while(newIdx>0&&representation[newIdx]&&elementWidth<representation[newIdx].width&&elementWidth-representation[newIdx-1].width<representation[newIdx].width-elementWidth){newIdx=newIdx-1;}// Make sure that in case of multiple representation elements have same
// resolution, every such element is included
while(newIdx<representation.length-1&&representation[newIdx].width===representation[newIdx+1].width){newIdx=newIdx+1;}}return newIdx;}function onFragmentLoadProgress(e){var type=e.request.mediaType;if(!!settings.get().streaming.abr.autoSwitchBitrate[type]){var streamProcessor=streamProcessorDict[type];if(!streamProcessor)return;// There may be a fragment load in progress when we switch periods and recreated some controllers.
var rulesContext=(0,_RulesContext2.default)(context).create({abrController:instance,streamProcessor:streamProcessor,currentRequest:e.request,useBufferOccupancyABR:useBufferOccupancyABR(type),useL2AABR:useL2AABR(type),useLoLPABR:useLoLPABR(type),videoModel:videoModel});var switchRequest=abrRulesCollection.shouldAbandonFragment(rulesContext);if(switchRequest.quality>_SwitchRequest2.default.NO_CHANGE){var fragmentModel=streamProcessor.getFragmentModel();var request=fragmentModel.getRequests({state:_FragmentModel2.default.FRAGMENT_MODEL_LOADING,index:e.request.index})[0];if(request){//TODO Check if we should abort or if better to finish download. check bytesLoaded/Total
fragmentModel.abortRequests();setAbandonmentStateFor(type,_MetricsConstants2.default.ABANDON_LOAD);switchHistoryDict[type].reset();switchHistoryDict[type].push({oldValue:getQualityFor(type),newValue:switchRequest.quality,confidence:1,reason:switchRequest.reason});setPlaybackQuality(type,streamController.getActiveStreamInfo(),switchRequest.quality,switchRequest.reason);clearTimeout(abandonmentTimeout);abandonmentTimeout=setTimeout(function(){setAbandonmentStateFor(type,_MetricsConstants2.default.ALLOW_LOAD);abandonmentTimeout=null;},settings.get().streaming.abandonLoadTimeout);}}}}instance={isPlayingAtTopQuality:isPlayingAtTopQuality,updateTopQualityIndex:updateTopQualityIndex,getThroughputHistory:getThroughputHistory,getBitrateList:getBitrateList,getQualityForBitrate:getQualityForBitrate,getTopBitrateInfoFor:getTopBitrateInfoFor,getMaxAllowedIndexFor:getMaxAllowedIndexFor,getMinAllowedIndexFor:getMinAllowedIndexFor,getInitialBitrateFor:getInitialBitrateFor,getQualityFor:getQualityFor,getAbandonmentStateFor:getAbandonmentStateFor,setPlaybackQuality:setPlaybackQuality,checkPlaybackQuality:checkPlaybackQuality,getTopQualityIndexFor:getTopQualityIndexFor,setElementSize:setElementSize,setWindowResizeEventCalled:setWindowResizeEventCalled,createAbrRulesCollection:createAbrRulesCollection,registerStreamType:registerStreamType,unRegisterStreamType:unRegisterStreamType,setConfig:setConfig,reset:reset};setup();return instance;}AbrController.__dashjs_factory_name='AbrController';var factory=_FactoryMaker2.default.getSingletonFactory(AbrController);factory.QUALITY_DEFAULT=QUALITY_DEFAULT;_FactoryMaker2.default.updateSingletonFactory(AbrController.__dashjs_factory_name,factory);exports.default=factory;


},{"../rules/abr/ABRRulesCollection":"../node_modules/dashjs/build/es5/src/streaming/rules/abr/ABRRulesCollection.js","../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../constants/MetricsConstants":"../node_modules/dashjs/build/es5/src/streaming/constants/MetricsConstants.js","../vo/BitrateInfo":"../node_modules/dashjs/build/es5/src/streaming/vo/BitrateInfo.js","../models/FragmentModel":"../node_modules/dashjs/build/es5/src/streaming/models/FragmentModel.js","../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../rules/RulesContext":"../node_modules/dashjs/build/es5/src/streaming/rules/RulesContext.js","../rules/SwitchRequest":"../node_modules/dashjs/build/es5/src/streaming/rules/SwitchRequest.js","../rules/SwitchRequestHistory":"../node_modules/dashjs/build/es5/src/streaming/rules/SwitchRequestHistory.js","../rules/DroppedFramesHistory":"../node_modules/dashjs/build/es5/src/streaming/rules/DroppedFramesHistory.js","../rules/ThroughputHistory":"../node_modules/dashjs/build/es5/src/streaming/rules/ThroughputHistory.js","../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","../vo/metrics/HTTPRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/HTTPRequest.js","../utils/SupervisorTools":"../node_modules/dashjs/build/es5/src/streaming/utils/SupervisorTools.js"}],"../node_modules/dashjs/build/es5/src/streaming/utils/InitCache.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function InitCache(){var data={};function save(chunk){var id=chunk.streamId;var representationId=chunk.representationId;data[id]=data[id]||{};data[id][representationId]=chunk;}function extract(streamId,representationId){if(data&&data[streamId]&&data[streamId][representationId]){return data[streamId][representationId];}else{return null;}}function reset(){data={};}var instance={save:save,extract:extract,reset:reset};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * Represents data structure to keep and drive {DataChunk}
 */InitCache.__dashjs_factory_name='InitCache';exports.default=_FactoryMaker2.default.getSingletonFactory(InitCache);


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/streaming/controllers/BufferController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _MetricsConstants=require('../constants/MetricsConstants');var _MetricsConstants2=_interopRequireDefault(_MetricsConstants);var _FragmentModel=require('../models/FragmentModel');var _FragmentModel2=_interopRequireDefault(_FragmentModel);var _SourceBufferSink=require('../SourceBufferSink');var _SourceBufferSink2=_interopRequireDefault(_SourceBufferSink);var _PreBufferSink=require('../PreBufferSink');var _PreBufferSink2=_interopRequireDefault(_PreBufferSink);var _AbrController=require('./AbrController');var _AbrController2=_interopRequireDefault(_AbrController);var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Debug=require('../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _InitCache=require('../utils/InitCache');var _InitCache2=_interopRequireDefault(_InitCache);var _DashJSError=require('../vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);var _Errors=require('../../core/errors/Errors');var _Errors2=_interopRequireDefault(_Errors);var _HTTPRequest=require('../vo/metrics/HTTPRequest');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var BUFFERING_COMPLETED_THRESHOLD=0.1;var BUFFER_END_THRESHOLD=0.5;var BUFFER_RANGE_CALCULATION_THRESHOLD=0.01;var QUOTA_EXCEEDED_ERROR_CODE=22;var BUFFER_CONTROLLER_TYPE='BufferController';function BufferController(config){config=config||{};var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var errHandler=config.errHandler;var fragmentModel=config.fragmentModel;var representationController=config.representationController;var mediaController=config.mediaController;var adapter=config.adapter;var textController=config.textController;var abrController=config.abrController;var playbackController=config.playbackController;var streamInfo=config.streamInfo;var type=config.type;var settings=config.settings;var instance=void 0,logger=void 0,requiredQuality=void 0,isBufferingCompleted=void 0,bufferLevel=void 0,criticalBufferLevel=void 0,mediaSource=void 0,maxAppendedIndex=void 0,lastIndex=void 0,buffer=void 0,dischargeBuffer=void 0,bufferState=void 0,appendedBytesInfo=void 0,wallclockTicked=void 0,isPruningInProgress=void 0,isQuotaExceeded=void 0,initCache=void 0,seekTarget=void 0,seekClearedBufferingCompleted=void 0,pendingPruningRanges=void 0,replacingBuffer=void 0,mediaChunk=void 0;function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);initCache=(0,_InitCache2.default)(context).getInstance();resetInitialSettings();}function getBufferControllerType(){return BUFFER_CONTROLLER_TYPE;}function initialize(Source){setMediaSource(Source);requiredQuality=abrController.getQualityFor(type);eventBus.on(_Events2.default.DATA_UPDATE_COMPLETED,onDataUpdateCompleted,this);eventBus.on(_Events2.default.INIT_FRAGMENT_LOADED,onInitFragmentLoaded,this);eventBus.on(_Events2.default.MEDIA_FRAGMENT_LOADED,onMediaFragmentLoaded,this);eventBus.on(_Events2.default.QUALITY_CHANGE_REQUESTED,onQualityChanged,this);eventBus.on(_Events2.default.STREAM_COMPLETED,onStreamCompleted,this);eventBus.on(_Events2.default.PLAYBACK_PLAYING,onPlaybackPlaying,this);eventBus.on(_Events2.default.PLAYBACK_PROGRESS,onPlaybackProgression,this);eventBus.on(_Events2.default.PLAYBACK_TIME_UPDATED,onPlaybackProgression,this);eventBus.on(_Events2.default.PLAYBACK_RATE_CHANGED,onPlaybackRateChanged,this);eventBus.on(_Events2.default.PLAYBACK_SEEKING,onPlaybackSeeking,this);eventBus.on(_Events2.default.PLAYBACK_SEEKED,onPlaybackSeeked,this);eventBus.on(_Events2.default.PLAYBACK_STALLED,onPlaybackStalled,this);eventBus.on(_Events2.default.WALLCLOCK_TIME_UPDATED,onWallclockTimeUpdated,this);eventBus.on(_Events2.default.CURRENT_TRACK_CHANGED,onCurrentTrackChanged,this,{priority:_EventBus2.default.EVENT_PRIORITY_HIGH});eventBus.on(_Events2.default.SOURCEBUFFER_REMOVE_COMPLETED,onRemoved,this);}function getStreamId(){return streamInfo.id;}function getType(){return type;}function getRepresentationInfo(quality){return adapter.convertDataToRepresentationInfo(representationController.getRepresentationForQuality(quality));}function createBuffer(mediaInfoArr,oldBuffers){if(!initCache||!mediaInfoArr)return null;var mediaInfo=mediaInfoArr[0];if(mediaSource){try{if(oldBuffers&&oldBuffers[type]){buffer=(0,_SourceBufferSink2.default)(context).create(mediaSource,mediaInfo,onAppended.bind(this),oldBuffers[type]);}else{buffer=(0,_SourceBufferSink2.default)(context).create(mediaSource,mediaInfo,onAppended.bind(this),null);}if(settings.get().streaming.useAppendWindow){buffer.updateAppendWindow(streamInfo);}if(typeof buffer.getBuffer().initialize==='function'){buffer.getBuffer().initialize(type,streamInfo,mediaInfoArr,fragmentModel);}}catch(e){logger.fatal('Caught error on create SourceBuffer: '+e);errHandler.error(new _DashJSError2.default(_Errors2.default.MEDIASOURCE_TYPE_UNSUPPORTED_CODE,_Errors2.default.MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE+type));}}else{buffer=(0,_PreBufferSink2.default)(context).create(onAppended.bind(this));}updateBufferTimestampOffset(getRepresentationInfo(requiredQuality));return buffer;}function dischargePreBuffer(){if(buffer&&dischargeBuffer&&typeof dischargeBuffer.discharge==='function'){var ranges=dischargeBuffer.getAllBufferRanges();if(ranges.length>0){var rangeStr='Beginning '+type+'PreBuffer discharge, adding buffer for:';for(var i=0;i<ranges.length;i++){rangeStr+=' start: '+ranges.start(i)+', end: '+ranges.end(i)+';';}logger.debug(rangeStr);}else{logger.debug('PreBuffer discharge requested, but there were no media segments in the PreBuffer.');}var chunks=dischargeBuffer.discharge();var lastInit=null;for(var j=0;j<chunks.length;j++){var chunk=chunks[j];var initChunk=initCache.extract(chunk.streamId,chunk.representationId);if(initChunk){if(lastInit!==initChunk){buffer.append(initChunk);lastInit=initChunk;}buffer.append(chunk);//TODO Think about supressing buffer events the second time round after a discharge?
}}dischargeBuffer.reset();dischargeBuffer=null;}}function onInitFragmentLoaded(e){logger.info('Init fragment finished loading saving to',type+'\'s init cache');initCache.save(e.chunk);logger.debug('Append Init fragment',type,' with representationId:',e.chunk.representationId,' and quality:',e.chunk.quality,', data size:',e.chunk.bytes.byteLength);appendToBuffer(e.chunk);}function appendInitSegment(representationId){// Get init segment from cache
var chunk=initCache.extract(streamInfo.id,representationId);if(!chunk){// Init segment not in cache, shall be requested
return false;}// Append init segment into buffer
logger.info('Append Init fragment',type,' with representationId:',chunk.representationId,' and quality:',chunk.quality,', data size:',chunk.bytes.byteLength);appendToBuffer(chunk);return true;}function onMediaFragmentLoaded(e){var chunk=e.chunk;if(replacingBuffer){mediaChunk=chunk;var ranges=buffer&&buffer.getAllBufferRanges();if(ranges&&ranges.length>0&&playbackController.getTimeToStreamEnd()>settings.get().streaming.stallThreshold){logger.debug('Clearing buffer because track changed - '+(ranges.end(ranges.length-1)+BUFFER_END_THRESHOLD));clearBuffers([{start:0,end:ranges.end(ranges.length-1)+BUFFER_END_THRESHOLD,force:true// Force buffer removal even when buffering is completed and MediaSource is ended
}]);}}else{appendToBuffer(chunk);}}function appendToBuffer(chunk){buffer.append(chunk);if(chunk.mediaInfo.type===_Constants2.default.VIDEO){triggerEvent(_Events2.default.VIDEO_CHUNK_RECEIVED,{chunk:chunk});}}function showBufferRanges(ranges){if(ranges&&ranges.length>0){for(var i=0,len=ranges.length;i<len;i++){logger.debug('Buffered range: '+ranges.start(i)+' - '+ranges.end(i)+', currentTime = ',playbackController.getTime());}}}function onAppended(e){if(e.error){if(e.error.code===QUOTA_EXCEEDED_ERROR_CODE){isQuotaExceeded=true;criticalBufferLevel=getTotalBufferedTime()*0.8;logger.warn('Quota exceeded, Critical Buffer: '+criticalBufferLevel);if(criticalBufferLevel>0){// recalculate buffer lengths according to criticalBufferLevel
var bufferToKeep=Math.max(0.2*criticalBufferLevel,1);var bufferAhead=criticalBufferLevel-bufferToKeep;var bufferTimeAtTopQuality=Math.min(settings.get().streaming.bufferTimeAtTopQuality,bufferAhead*0.9);var bufferTimeAtTopQualityLongForm=Math.min(settings.get().streaming.bufferTimeAtTopQualityLongForm,bufferAhead*0.9);var s={streaming:{bufferToKeep:parseFloat(bufferToKeep.toFixed(5)),bufferTimeAtTopQuality:parseFloat(bufferTimeAtTopQuality.toFixed(5)),bufferTimeAtTopQualityLongForm:parseFloat(bufferTimeAtTopQualityLongForm.toFixed(5))}};settings.update(s);}}if(e.error.code===QUOTA_EXCEEDED_ERROR_CODE||!hasEnoughSpaceToAppend()){logger.warn('Clearing playback buffer to overcome quota exceed situation');// Notify Schedulecontroller to stop scheduling until buffer has been pruned
triggerEvent(_Events2.default.QUOTA_EXCEEDED,{criticalBufferLevel:criticalBufferLevel});clearBuffers(getClearRanges());}return;}isQuotaExceeded=false;appendedBytesInfo=e.chunk;if(appendedBytesInfo&&!isNaN(appendedBytesInfo.index)){maxAppendedIndex=Math.max(appendedBytesInfo.index,maxAppendedIndex);checkIfBufferingCompleted();}var ranges=buffer.getAllBufferRanges();if(appendedBytesInfo.segmentType===_HTTPRequest.HTTPRequest.MEDIA_SEGMENT_TYPE){showBufferRanges(ranges);onPlaybackProgression();adjustSeekTarget();}else if(replacingBuffer){// When replacing buffer due to switch track, and once new initialization segment has been appended
// (and previous buffered data removed) then seek stream to current time
var currentTime=playbackController.getTime();logger.debug('AppendToBuffer seek target should be '+currentTime);triggerEvent(_Events2.default.SEEK_TARGET,{time:currentTime});}if(appendedBytesInfo){triggerEvent(appendedBytesInfo.endFragment?_Events2.default.BYTES_APPENDED_END_FRAGMENT:_Events2.default.BYTES_APPENDED,{quality:appendedBytesInfo.quality,startTime:appendedBytesInfo.start,index:appendedBytesInfo.index,bufferedRanges:ranges,mediaType:type});}}function adjustSeekTarget(){// Check buffered data only for audio and video
if(type!==_Constants2.default.AUDIO&&type!==_Constants2.default.VIDEO)return;if(isNaN(seekTarget))return;// Check if current buffered range already contains seek target (and current video element time)
var currentTime=playbackController.getTime();var range=getRangeAt(seekTarget,0);if(currentTime===seekTarget&&range)return;// Get buffered range corresponding to the seek target
var segmentDuration=representationController.getCurrentRepresentation().segmentDuration;range=getRangeAt(seekTarget,segmentDuration);if(!range)return;if(Math.abs(currentTime-seekTarget)>segmentDuration){// If current video model time is decorrelated from seek target (and appended buffer) then seek video element
// (in case of live streams on some browsers/devices for which we can't set video element time at unavalaible range)
// Check if appended segment is not anterior from seek target (segments timeline/template tolerance)
if(seekTarget<=range.end){// Seek video element to seek target or range start if appended buffer starts after seek target (segments timeline/template tolerance)
playbackController.seek(Math.max(seekTarget,range.start),false,true);seekTarget=NaN;}}else if(currentTime<range.start){// If appended buffer starts after seek target (segments timeline/template tolerance) then seek to range start
playbackController.seek(range.start,false,true);seekTarget=NaN;}}function onQualityChanged(e){if(requiredQuality===e.newQuality)return;updateBufferTimestampOffset(this.getRepresentationInfo(e.newQuality));requiredQuality=e.newQuality;}//**********************************************************************
// START Buffer Level, State & Sufficiency Handling.
//**********************************************************************
function onPlaybackSeeking(e){seekTarget=e.seekTime;if(isBufferingCompleted){seekClearedBufferingCompleted=true;isBufferingCompleted=false;//a seek command has occured, reset lastIndex value, it will be set next time that onStreamCompleted will be called.
lastIndex=Number.POSITIVE_INFINITY;}if(type!==_Constants2.default.FRAGMENTED_TEXT){// remove buffer after seeking operations
pruneAllSafely();}else{onPlaybackProgression();}}function onPlaybackSeeked(){seekTarget=NaN;}// Prune full buffer but what is around current time position
function pruneAllSafely(){buffer.waitForUpdateEnd(function(){var ranges=getAllRangesWithSafetyFactor();if(!ranges||ranges.length===0){onPlaybackProgression();}clearBuffers(ranges);});}// Get all buffer ranges but a range around current time position
function getAllRangesWithSafetyFactor(){var clearRanges=[];var ranges=buffer.getAllBufferRanges();if(!ranges||ranges.length===0){return clearRanges;}var currentTime=playbackController.getTime();var endOfBuffer=ranges.end(ranges.length-1)+BUFFER_END_THRESHOLD;var currentTimeRequest=fragmentModel.getRequests({state:_FragmentModel2.default.FRAGMENT_MODEL_EXECUTED,time:currentTime,threshold:BUFFER_RANGE_CALCULATION_THRESHOLD})[0];// There is no request in current time position yet. Let's remove everything
if(!currentTimeRequest){logger.debug('getAllRangesWithSafetyFactor - No request found in current time position, removing full buffer 0 -',endOfBuffer);clearRanges.push({start:0,end:endOfBuffer});}else{// Build buffer behind range. To avoid pruning time around current time position,
// we include fragment right behind the one in current time position
var behindRange={start:0,end:currentTimeRequest.startTime-settings.get().streaming.stallThreshold};var prevReq=fragmentModel.getRequests({state:_FragmentModel2.default.FRAGMENT_MODEL_EXECUTED,time:currentTimeRequest.startTime-currentTimeRequest.duration/2,threshold:BUFFER_RANGE_CALCULATION_THRESHOLD})[0];if(prevReq&&prevReq.startTime!=currentTimeRequest.startTime){behindRange.end=prevReq.startTime;}if(behindRange.start<behindRange.end&&behindRange.end>ranges.start(0)){clearRanges.push(behindRange);}// Build buffer ahead range. To avoid pruning time around current time position,
// we include fragment right after the one in current time position
var aheadRange={start:currentTimeRequest.startTime+currentTimeRequest.duration+settings.get().streaming.stallThreshold,end:endOfBuffer};var nextReq=fragmentModel.getRequests({state:_FragmentModel2.default.FRAGMENT_MODEL_EXECUTED,time:currentTimeRequest.startTime+currentTimeRequest.duration+settings.get().streaming.stallThreshold,threshold:BUFFER_RANGE_CALCULATION_THRESHOLD})[0];if(nextReq&&nextReq.startTime!==currentTimeRequest.startTime){aheadRange.start=nextReq.startTime+nextReq.duration+settings.get().streaming.stallThreshold;}if(aheadRange.start<aheadRange.end&&aheadRange.start<endOfBuffer){clearRanges.push(aheadRange);}}return clearRanges;}function getWorkingTime(){return isNaN(seekTarget)?playbackController.getTime():seekTarget;}function onPlaybackProgression(){if(!replacingBuffer||type===_Constants2.default.FRAGMENTED_TEXT&&textController.isTextEnabled()){updateBufferLevel();}}function onPlaybackStalled(){checkIfSufficientBuffer();}function onPlaybackPlaying(){seekTarget=NaN;checkIfSufficientBuffer();}function getRangeAt(time,tolerance){var ranges=buffer.getAllBufferRanges();var start=0;var end=0;var firstStart=null;var lastEnd=null;var gap=0;var len=void 0,i=void 0;var toler=!isNaN(tolerance)?tolerance:0.15;if(ranges!==null&&ranges!==undefined){for(i=0,len=ranges.length;i<len;i++){start=ranges.start(i);end=ranges.end(i);if(firstStart===null){gap=Math.abs(start-time);if(time>=start&&time<end){// start the range
firstStart=start;lastEnd=end;}else if(gap<=toler){// start the range even though the buffer does not contain time 0
firstStart=start;lastEnd=end;}}else{gap=start-lastEnd;if(gap<=toler){// the discontinuity is smaller than the tolerance, combine the ranges
lastEnd=end;}else{break;}}}if(firstStart!==null){return{start:firstStart,end:lastEnd};}}return null;}function getBufferLength(time,tolerance){var range=void 0,length=void 0;// Consider gap/discontinuity limit as tolerance
if(settings.get().streaming.jumpGaps){tolerance=settings.get().streaming.smallGapLimit;}range=getRangeAt(time,tolerance);if(range===null){length=0;}else{length=range.end-time;}return length;}function updateBufferLevel(){if(playbackController){bufferLevel=getBufferLength(getWorkingTime()||0);triggerEvent(_Events2.default.BUFFER_LEVEL_UPDATED,{bufferLevel:bufferLevel});checkIfSufficientBuffer();}}function checkIfBufferingCompleted(){var isLastIdxAppended=maxAppendedIndex>=lastIndex-1;// Handles 0 and non 0 based request index
if(isLastIdxAppended&&!isBufferingCompleted&&buffer.discharge===undefined){isBufferingCompleted=true;logger.debug('checkIfBufferingCompleted trigger BUFFERING_COMPLETED for '+type);triggerEvent(_Events2.default.BUFFERING_COMPLETED);}}function checkIfSufficientBuffer(){// No need to check buffer if type is not audio or video (for example if several errors occur during text parsing, so that the buffer cannot be filled, no error must occur on video playback)
if(type!==_Constants2.default.AUDIO&&type!==_Constants2.default.VIDEO)return;if(seekClearedBufferingCompleted&&!isBufferingCompleted&&bufferLevel>0&&playbackController&&playbackController.getTimeToStreamEnd()-bufferLevel<BUFFERING_COMPLETED_THRESHOLD){seekClearedBufferingCompleted=false;isBufferingCompleted=true;logger.debug('checkIfSufficientBuffer trigger BUFFERING_COMPLETED for type '+type);triggerEvent(_Events2.default.BUFFERING_COMPLETED);}// When the player is working in low latency mode, the buffer is often below settings.get().streaming.stallThreshold.
// So, when in low latency mode, change dash.js behavior so it notifies a stall just when
// buffer reach 0 seconds
if((!settings.get().streaming.lowLatencyEnabled&&bufferLevel<settings.get().streaming.stallThreshold||bufferLevel===0)&&!isBufferingCompleted){notifyBufferStateChanged(_MetricsConstants2.default.BUFFER_EMPTY);}else{if(isBufferingCompleted||bufferLevel>=streamInfo.manifestInfo.minBufferTime){notifyBufferStateChanged(_MetricsConstants2.default.BUFFER_LOADED);}}}function notifyBufferStateChanged(state){if(bufferState===state||state===_MetricsConstants2.default.BUFFER_EMPTY&&playbackController.getTime()===0||// Don't trigger BUFFER_EMPTY if it's initial loading
type===_Constants2.default.FRAGMENTED_TEXT&&!textController.isTextEnabled()){return;}bufferState=state;triggerEvent(_Events2.default.BUFFER_LEVEL_STATE_CHANGED,{state:state});triggerEvent(state===_MetricsConstants2.default.BUFFER_LOADED?_Events2.default.BUFFER_LOADED:_Events2.default.BUFFER_EMPTY);logger.debug(state===_MetricsConstants2.default.BUFFER_LOADED?'Got enough buffer to start':'Waiting for more buffer before starting playback');}/* prune buffer on our own in background to avoid browsers pruning buffer silently */function pruneBuffer(){if(!buffer||type===_Constants2.default.FRAGMENTED_TEXT){return;}if(!isBufferingCompleted){clearBuffers(getClearRanges());}}function getClearRanges(){var clearRanges=[];var ranges=buffer.getAllBufferRanges();if(!ranges||ranges.length===0){return clearRanges;}var currentTime=playbackController.getTime();var startRangeToKeep=Math.max(0,currentTime-settings.get().streaming.bufferToKeep);var currentTimeRequest=fragmentModel.getRequests({state:_FragmentModel2.default.FRAGMENT_MODEL_EXECUTED,time:currentTime,threshold:BUFFER_RANGE_CALCULATION_THRESHOLD})[0];// Ensure we keep full range of current fragment
if(currentTimeRequest){startRangeToKeep=Math.min(currentTimeRequest.startTime,startRangeToKeep);}else if(currentTime===0&&playbackController.getIsDynamic()){// Don't prune before the live stream starts, it messes with low latency
return[];}if(ranges.start(0)<=startRangeToKeep){var behindRange={start:0,end:startRangeToKeep};for(var i=0;i<ranges.length&&ranges.end(i)<=startRangeToKeep;i++){behindRange.end=ranges.end(i);}if(behindRange.start<behindRange.end){clearRanges.push(behindRange);}}return clearRanges;}function clearBuffers(ranges){if(!ranges||!buffer||ranges.length===0)return;pendingPruningRanges.push.apply(pendingPruningRanges,ranges);if(isPruningInProgress){return;}clearNextRange();}function clearNextRange(){// If there's nothing to prune reset state
if(pendingPruningRanges.length===0||!buffer){logger.debug('Nothing to prune, halt pruning');pendingPruningRanges=[];isPruningInProgress=false;return;}var sourceBuffer=buffer.getBuffer();// If there's nothing buffered any pruning is invalid, so reset our state
if(!sourceBuffer||!sourceBuffer.buffered||sourceBuffer.buffered.length===0){logger.debug('SourceBuffer is empty (or does not exist), halt pruning');pendingPruningRanges=[];isPruningInProgress=false;return;}var range=pendingPruningRanges.shift();logger.debug('Removing buffer from:',range.start,'to',range.end);isPruningInProgress=true;// If removing buffer ahead current playback position, update maxAppendedIndex
var currentTime=playbackController.getTime();if(currentTime<range.end){isBufferingCompleted=false;maxAppendedIndex=0;}buffer.remove(range.start,range.end,range.force);}function onRemoved(e){if(buffer!==e.buffer)return;logger.debug('onRemoved buffer from:',e.from,'to',e.to);var ranges=buffer.getAllBufferRanges();showBufferRanges(ranges);if(pendingPruningRanges.length===0){isPruningInProgress=false;}if(e.unintended){logger.warn('Detected unintended removal from:',e.from,'to',e.to,'setting index handler time to',e.from);triggerEvent(_Events2.default.SEEK_TARGET,{time:e.from,mediaType:type,streamId:streamInfo.id});}if(isPruningInProgress){clearNextRange();}else{if(!replacingBuffer){updateBufferLevel();}else{replacingBuffer=false;if(mediaChunk){appendToBuffer(mediaChunk);}}triggerEvent(_Events2.default.BUFFER_CLEARED,{from:e.from,to:e.to,unintended:e.unintended,hasEnoughSpaceToAppend:hasEnoughSpaceToAppend(),quotaExceeded:isQuotaExceeded});}}function updateBufferTimestampOffset(representationInfo){if(!representationInfo||representationInfo.MSETimeOffset===undefined)return;// Each track can have its own @presentationTimeOffset, so we should set the offset
// if it has changed after switching the quality or updating an mpd
if(buffer&&buffer.updateTimestampOffset){buffer.updateTimestampOffset(representationInfo.MSETimeOffset);}}function updateAppendWindow(){if(buffer&&!isBufferingCompleted){buffer.updateAppendWindow(streamInfo);}}function onDataUpdateCompleted(e){if(e.error||isBufferingCompleted)return;updateBufferTimestampOffset(e.currentRepresentation);}function onStreamCompleted(e){lastIndex=e.request.index;checkIfBufferingCompleted();}function onCurrentTrackChanged(e){if(e.newMediaInfo.streamInfo.id!==streamInfo.id||e.newMediaInfo.type!==type)return;var ranges=buffer&&buffer.getAllBufferRanges();if(!ranges)return;logger.info('Track change asked');if(mediaController.getSwitchMode(type)===_Constants2.default.TRACK_SWITCH_MODE_ALWAYS_REPLACE){if(ranges&&ranges.length>0&&playbackController.getTimeToStreamEnd()>settings.get().streaming.stallThreshold){isBufferingCompleted=false;lastIndex=Number.POSITIVE_INFINITY;}}}function onWallclockTimeUpdated(){wallclockTicked++;var secondsElapsed=wallclockTicked*(settings.get().streaming.wallclockTimeUpdateInterval/1000);if(secondsElapsed>=settings.get().streaming.bufferPruningInterval){wallclockTicked=0;pruneBuffer();}}function onPlaybackRateChanged(){checkIfSufficientBuffer();}function getBuffer(){return buffer;}function setBuffer(newBuffer){buffer=newBuffer;}function getBufferLevel(){return bufferLevel;}function setMediaSource(value,mediaInfo){mediaSource=value;if(buffer&&mediaInfo){//if we have a prebuffer, we should prepare to discharge it, and make a new sourceBuffer ready
if(typeof buffer.discharge==='function'){dischargeBuffer=buffer;createBuffer(mediaInfo);}}}function getMediaSource(){return mediaSource;}function replaceBuffer(){replacingBuffer=true;}function getIsBufferingCompleted(){return isBufferingCompleted;}function getIsPruningInProgress(){return isPruningInProgress;}function getTotalBufferedTime(){var ranges=buffer.getAllBufferRanges();var totalBufferedTime=0;var ln=void 0,i=void 0;if(!ranges)return totalBufferedTime;for(i=0,ln=ranges.length;i<ln;i++){totalBufferedTime+=ranges.end(i)-ranges.start(i);}return totalBufferedTime;}function hasEnoughSpaceToAppend(){var totalBufferedTime=getTotalBufferedTime();return totalBufferedTime<criticalBufferLevel;}function triggerEvent(eventType,data){var payload=data||{};eventBus.trigger(eventType,payload,{streamId:streamInfo.id,mediaType:type});}function resetInitialSettings(errored,keepBuffers){criticalBufferLevel=Number.POSITIVE_INFINITY;bufferState=undefined;requiredQuality=_AbrController2.default.QUALITY_DEFAULT;lastIndex=Number.POSITIVE_INFINITY;maxAppendedIndex=0;appendedBytesInfo=null;isBufferingCompleted=false;isPruningInProgress=false;isQuotaExceeded=false;seekClearedBufferingCompleted=false;bufferLevel=0;wallclockTicked=0;pendingPruningRanges=[];seekTarget=NaN;if(buffer){if(!errored){buffer.abort();}buffer.reset(keepBuffers);buffer=null;}replacingBuffer=false;}function reset(errored,keepBuffers){eventBus.off(_Events2.default.DATA_UPDATE_COMPLETED,onDataUpdateCompleted,this);eventBus.off(_Events2.default.INIT_FRAGMENT_LOADED,onInitFragmentLoaded,this);eventBus.off(_Events2.default.MEDIA_FRAGMENT_LOADED,onMediaFragmentLoaded,this);eventBus.off(_Events2.default.QUALITY_CHANGE_REQUESTED,onQualityChanged,this);eventBus.off(_Events2.default.STREAM_COMPLETED,onStreamCompleted,this);eventBus.off(_Events2.default.PLAYBACK_PLAYING,onPlaybackPlaying,this);eventBus.off(_Events2.default.PLAYBACK_PROGRESS,onPlaybackProgression,this);eventBus.off(_Events2.default.PLAYBACK_TIME_UPDATED,onPlaybackProgression,this);eventBus.off(_Events2.default.PLAYBACK_RATE_CHANGED,onPlaybackRateChanged,this);eventBus.off(_Events2.default.PLAYBACK_SEEKING,onPlaybackSeeking,this);eventBus.off(_Events2.default.PLAYBACK_SEEKED,onPlaybackSeeked,this);eventBus.off(_Events2.default.PLAYBACK_STALLED,onPlaybackStalled,this);eventBus.off(_Events2.default.WALLCLOCK_TIME_UPDATED,onWallclockTimeUpdated,this);eventBus.off(_Events2.default.CURRENT_TRACK_CHANGED,onCurrentTrackChanged,this);eventBus.off(_Events2.default.SOURCEBUFFER_REMOVE_COMPLETED,onRemoved,this);resetInitialSettings(errored,keepBuffers);}instance={initialize:initialize,getStreamId:getStreamId,getType:getType,getBufferControllerType:getBufferControllerType,getRepresentationInfo:getRepresentationInfo,createBuffer:createBuffer,dischargePreBuffer:dischargePreBuffer,getBuffer:getBuffer,setBuffer:setBuffer,getBufferLevel:getBufferLevel,getRangeAt:getRangeAt,setMediaSource:setMediaSource,getMediaSource:getMediaSource,appendInitSegment:appendInitSegment,replaceBuffer:replaceBuffer,getIsBufferingCompleted:getIsBufferingCompleted,getIsPruningInProgress:getIsPruningInProgress,reset:reset,updateAppendWindow:updateAppendWindow};setup();return instance;}BufferController.__dashjs_factory_name=BUFFER_CONTROLLER_TYPE;exports.default=_FactoryMaker2.default.getClassFactory(BufferController);


},{"../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../constants/MetricsConstants":"../node_modules/dashjs/build/es5/src/streaming/constants/MetricsConstants.js","../models/FragmentModel":"../node_modules/dashjs/build/es5/src/streaming/models/FragmentModel.js","../SourceBufferSink":"../node_modules/dashjs/build/es5/src/streaming/SourceBufferSink.js","../PreBufferSink":"../node_modules/dashjs/build/es5/src/streaming/PreBufferSink.js","./AbrController":"../node_modules/dashjs/build/es5/src/streaming/controllers/AbrController.js","../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","../utils/InitCache":"../node_modules/dashjs/build/es5/src/streaming/utils/InitCache.js","../vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js","../../core/errors/Errors":"../node_modules/dashjs/build/es5/src/core/errors/Errors.js","../vo/metrics/HTTPRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/HTTPRequest.js"}],"../node_modules/dashjs/build/es5/src/streaming/text/NotFragmentedTextBufferController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _InitCache=require('../utils/InitCache');var _InitCache2=_interopRequireDefault(_InitCache);var _SourceBufferSink=require('../SourceBufferSink');var _SourceBufferSink2=_interopRequireDefault(_SourceBufferSink);var _TextController=require('../../streaming/text/TextController');var _TextController2=_interopRequireDefault(_TextController);var _DashJSError=require('../../streaming/vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);var _Errors=require('../../core/errors/Errors');var _Errors2=_interopRequireDefault(_Errors);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var BUFFER_CONTROLLER_TYPE='NotFragmentedTextBufferController';/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function NotFragmentedTextBufferController(config){config=config||{};var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var textController=(0,_TextController2.default)(context).getInstance();var errHandler=config.errHandler;var streamInfo=config.streamInfo;var type=config.type;var mimeType=config.mimeType;var fragmentModel=config.fragmentModel;var instance=void 0,isBufferingCompleted=void 0,initialized=void 0,mediaSource=void 0,buffer=void 0,initCache=void 0;function setup(){initialized=false;mediaSource=null;isBufferingCompleted=false;eventBus.on(_Events2.default.DATA_UPDATE_COMPLETED,onDataUpdateCompleted,instance);eventBus.on(_Events2.default.INIT_FRAGMENT_LOADED,onInitFragmentLoaded,instance);}function getBufferControllerType(){return BUFFER_CONTROLLER_TYPE;}function initialize(source){setMediaSource(source);initCache=(0,_InitCache2.default)(context).getInstance();}function createBuffer(mediaInfoArr){var mediaInfo=mediaInfoArr[0];try{buffer=(0,_SourceBufferSink2.default)(context).create(mediaSource,mediaInfo);if(!initialized){var textBuffer=buffer.getBuffer();if(textBuffer.hasOwnProperty(_Constants2.default.INITIALIZE)){textBuffer.initialize(mimeType,streamInfo,mediaInfoArr,fragmentModel);}initialized=true;}return buffer;}catch(e){if(mediaInfo&&(mediaInfo.isText||mediaInfo.codec.indexOf('codecs="stpp')!==-1||mediaInfo.codec.indexOf('codecs="wvtt')!==-1)){try{buffer=textController.getTextSourceBuffer();}catch(e){errHandler.error(new _DashJSError2.default(_Errors2.default.MEDIASOURCE_TYPE_UNSUPPORTED_CODE,_Errors2.default.MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE+type+' : '+e.message));}}else{errHandler.error(new _DashJSError2.default(_Errors2.default.MEDIASOURCE_TYPE_UNSUPPORTED_CODE,_Errors2.default.MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE+type));}}}function getStreamId(){return streamInfo.id;}function getType(){return type;}function getBuffer(){return buffer;}function setMediaSource(value){mediaSource=value;}function getMediaSource(){return mediaSource;}function getIsPruningInProgress(){return false;}function dischargePreBuffer(){}function getBufferLevel(){return 0;}function getIsBufferingCompleted(){return isBufferingCompleted;}function reset(errored){eventBus.off(_Events2.default.DATA_UPDATE_COMPLETED,onDataUpdateCompleted,instance);eventBus.off(_Events2.default.INIT_FRAGMENT_LOADED,onInitFragmentLoaded,instance);if(!errored&&buffer){buffer.abort();buffer.reset();buffer=null;}}function onDataUpdateCompleted(e){if(initCache.extract(streamInfo.id,e.currentRepresentation.id)!==null){return;}// Representation has changed, clear buffer
isBufferingCompleted=false;// // Text data file is contained in initialization segment
eventBus.trigger(_Events2.default.INIT_FRAGMENT_NEEDED,{representationId:e.currentRepresentation.id,sender:instance},{streamId:streamInfo.id,mediaType:type});}function appendInitSegment(representationId){// If text data file already in cache then no need to append it again
return initCache.extract(streamInfo.id,representationId)!==null;}function onInitFragmentLoaded(e){if(!e.chunk.bytes)return;initCache.save(e.chunk);buffer.append(e.chunk);isBufferingCompleted=true;eventBus.trigger(_Events2.default.STREAM_COMPLETED,{request:e.request},{streamId:streamInfo.id,mediaType:type});}function getRangeAt(){return null;}function updateTimestampOffset(MSETimeOffset){if(buffer.timestampOffset!==MSETimeOffset&&!isNaN(MSETimeOffset)){buffer.timestampOffset=MSETimeOffset;}}instance={getBufferControllerType:getBufferControllerType,initialize:initialize,createBuffer:createBuffer,getStreamId:getStreamId,getType:getType,getBuffer:getBuffer,getBufferLevel:getBufferLevel,setMediaSource:setMediaSource,getMediaSource:getMediaSource,getIsBufferingCompleted:getIsBufferingCompleted,getIsPruningInProgress:getIsPruningInProgress,dischargePreBuffer:dischargePreBuffer,appendInitSegment:appendInitSegment,getRangeAt:getRangeAt,reset:reset,updateTimestampOffset:updateTimestampOffset};setup();return instance;}NotFragmentedTextBufferController.__dashjs_factory_name=BUFFER_CONTROLLER_TYPE;exports.default=_FactoryMaker2.default.getClassFactory(NotFragmentedTextBufferController);


},{"../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../utils/InitCache":"../node_modules/dashjs/build/es5/src/streaming/utils/InitCache.js","../SourceBufferSink":"../node_modules/dashjs/build/es5/src/streaming/SourceBufferSink.js","../../streaming/text/TextController":"../node_modules/dashjs/build/es5/src/streaming/text/TextController.js","../../streaming/vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js","../../core/errors/Errors":"../node_modules/dashjs/build/es5/src/core/errors/Errors.js"}],"../node_modules/dashjs/build/es5/src/streaming/text/TextBufferController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _BufferController=require('./../controllers/BufferController');var _BufferController2=_interopRequireDefault(_BufferController);var _NotFragmentedTextBufferController=require('./NotFragmentedTextBufferController');var _NotFragmentedTextBufferController2=_interopRequireDefault(_NotFragmentedTextBufferController);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function TextBufferController(config){config=config||{};var context=this.context;var _BufferControllerImpl=void 0,instance=void 0;function setup(){// according to text type, we create corresponding buffer controller
if(config.type===_Constants2.default.FRAGMENTED_TEXT){// in this case, internal buffer ocntroller is a classical BufferController object
_BufferControllerImpl=(0,_BufferController2.default)(context).create({streamInfo:config.streamInfo,type:config.type,mediaPlayerModel:config.mediaPlayerModel,manifestModel:config.manifestModel,fragmentModel:config.fragmentModel,errHandler:config.errHandler,mediaController:config.mediaController,representationController:config.representationController,adapter:config.adapter,textController:config.textController,abrController:config.abrController,playbackController:config.playbackController,settings:config.settings});}else{// in this case, internal buffer controller is a not fragmented text controller object
_BufferControllerImpl=(0,_NotFragmentedTextBufferController2.default)(context).create({streamInfo:config.streamInfo,type:config.type,mimeType:config.mimeType,fragmentModel:config.fragmentModel,errHandler:config.errHandler});}}function getBufferControllerType(){return _BufferControllerImpl.getBufferControllerType();}function initialize(source,StreamProcessor){return _BufferControllerImpl.initialize(source,StreamProcessor);}function createBuffer(mediaInfoArr,previousBuffers){return _BufferControllerImpl.createBuffer(mediaInfoArr,previousBuffers);}function getType(){return _BufferControllerImpl.getType();}function getBuffer(){return _BufferControllerImpl.getBuffer();}function setBuffer(value){_BufferControllerImpl.setBuffer(value);}function getMediaSource(){return _BufferControllerImpl.getMediaSource();}function setMediaSource(value){_BufferControllerImpl.setMediaSource(value);}function getBufferLevel(){return _BufferControllerImpl.getBufferLevel();}function reset(errored){_BufferControllerImpl.reset(errored);}function getIsBufferingCompleted(){return _BufferControllerImpl.getIsBufferingCompleted();}function appendInitSegment(representationId){_BufferControllerImpl.appendInitSegment(representationId);}function getIsPruningInProgress(){return _BufferControllerImpl.getIsPruningInProgress();}function dischargePreBuffer(){return _BufferControllerImpl.dischargePreBuffer();}function getRangeAt(time){return _BufferControllerImpl.getRangeAt(time);}function updateTimestampOffset(MSETimeOffset){var buffer=getBuffer();if(buffer.timestampOffset!==MSETimeOffset&&!isNaN(MSETimeOffset)){buffer.timestampOffset=MSETimeOffset;}}function updateAppendWindow(){_BufferControllerImpl.updateAppendWindow();}instance={getBufferControllerType:getBufferControllerType,initialize:initialize,createBuffer:createBuffer,getType:getType,getBuffer:getBuffer,setBuffer:setBuffer,getBufferLevel:getBufferLevel,setMediaSource:setMediaSource,getMediaSource:getMediaSource,getIsBufferingCompleted:getIsBufferingCompleted,getIsPruningInProgress:getIsPruningInProgress,dischargePreBuffer:dischargePreBuffer,appendInitSegment:appendInitSegment,getRangeAt:getRangeAt,reset:reset,updateTimestampOffset:updateTimestampOffset,updateAppendWindow:updateAppendWindow};setup();return instance;}TextBufferController.__dashjs_factory_name='TextBufferController';exports.default=_FactoryMaker2.default.getClassFactory(TextBufferController);


},{"../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","./../controllers/BufferController":"../node_modules/dashjs/build/es5/src/streaming/controllers/BufferController.js","./NotFragmentedTextBufferController":"../node_modules/dashjs/build/es5/src/streaming/text/NotFragmentedTextBufferController.js"}],"../node_modules/dashjs/build/es5/src/streaming/rules/scheduling/BufferLevelRule.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('../../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _FactoryMaker=require('../../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _MetricsConstants=require('../../constants/MetricsConstants');var _MetricsConstants2=_interopRequireDefault(_MetricsConstants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function BufferLevelRule(config){config=config||{};var dashMetrics=config.dashMetrics;var mediaPlayerModel=config.mediaPlayerModel;var textController=config.textController;var abrController=config.abrController;var settings=config.settings;function setup(){}function execute(type,representationInfo,hasVideoTrack){if(!type||!representationInfo){return true;}var bufferLevel=dashMetrics.getCurrentBufferLevel(type);return bufferLevel<getBufferTarget(type,representationInfo,hasVideoTrack);}function getBufferTarget(type,representationInfo,hasVideoTrack){var bufferTarget=NaN;if(!type||!representationInfo){return bufferTarget;}if(type===_Constants2.default.FRAGMENTED_TEXT){if(textController.isTextEnabled()){if(isNaN(representationInfo.fragmentDuration)){//fragmentDuration of representationInfo is not defined,
// call metrics function to have data in the latest scheduling info...
// if no metric, returns 0. In this case, rule will return false.
var schedulingInfo=dashMetrics.getCurrentSchedulingInfo(_MetricsConstants2.default.SCHEDULING_INFO);bufferTarget=schedulingInfo?schedulingInfo.duration:0;}else{bufferTarget=representationInfo.fragmentDuration;}}else{// text is disabled, rule will return false
bufferTarget=0;}}else if(type===_Constants2.default.AUDIO&&hasVideoTrack){var videoBufferLevel=dashMetrics.getCurrentBufferLevel(_Constants2.default.VIDEO);if(isNaN(representationInfo.fragmentDuration)){bufferTarget=videoBufferLevel;}else{bufferTarget=Math.max(videoBufferLevel,representationInfo.fragmentDuration);}}else{var streamInfo=representationInfo.mediaInfo.streamInfo;if(abrController.isPlayingAtTopQuality(streamInfo)){var isLongFormContent=streamInfo.manifestInfo.duration>=settings.get().streaming.longFormContentDurationThreshold;bufferTarget=isLongFormContent?settings.get().streaming.bufferTimeAtTopQualityLongForm:settings.get().streaming.bufferTimeAtTopQuality;}else{bufferTarget=mediaPlayerModel.getStableBufferTime();}}return bufferTarget;}var instance={execute:execute,getBufferTarget:getBufferTarget};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */BufferLevelRule.__dashjs_factory_name='BufferLevelRule';exports.default=_FactoryMaker2.default.getClassFactory(BufferLevelRule);


},{"../../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../constants/MetricsConstants":"../node_modules/dashjs/build/es5/src/streaming/constants/MetricsConstants.js"}],"../node_modules/dashjs/build/es5/src/streaming/controllers/ScheduleController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _MetricsConstants=require('../constants/MetricsConstants');var _MetricsConstants2=_interopRequireDefault(_MetricsConstants);var _BufferLevelRule=require('../rules/scheduling/BufferLevelRule');var _BufferLevelRule2=_interopRequireDefault(_BufferLevelRule);var _FragmentModel=require('../models/FragmentModel');var _FragmentModel2=_interopRequireDefault(_FragmentModel);var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Debug=require('../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function ScheduleController(config){config=config||{};var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var adapter=config.adapter;var dashMetrics=config.dashMetrics;var mediaPlayerModel=config.mediaPlayerModel;var fragmentModel=config.fragmentModel;var abrController=config.abrController;var playbackController=config.playbackController;var textController=config.textController;var streamInfo=config.streamInfo;var type=config.type;var mimeType=config.mimeType;var mediaController=config.mediaController;var bufferController=config.bufferController;var settings=config.settings;var instance=void 0,logger=void 0,currentRepresentationInfo=void 0,initialRequest=void 0,isStopped=void 0,isFragmentProcessingInProgress=void 0,timeToLoadDelay=void 0,scheduleTimeout=void 0,seekTarget=void 0,hasVideoTrack=void 0,bufferLevelRule=void 0,lastFragmentRequest=void 0,topQualityIndex=void 0,lastInitQuality=void 0,replaceRequestArray=void 0,switchTrack=void 0,replacingBuffer=void 0,mediaRequest=void 0,checkPlaybackQuality=void 0,isReplacementRequest=void 0;function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);resetInitialSettings();}function initialize(_hasVideoTrack){hasVideoTrack=_hasVideoTrack;bufferLevelRule=(0,_BufferLevelRule2.default)(context).create({abrController:abrController,dashMetrics:dashMetrics,mediaPlayerModel:mediaPlayerModel,textController:textController,settings:settings});//eventBus.on(Events.LIVE_EDGE_SEARCH_COMPLETED, onLiveEdgeSearchCompleted, this);
eventBus.on(_Events2.default.DATA_UPDATE_STARTED,onDataUpdateStarted,this);eventBus.on(_Events2.default.FRAGMENT_LOADING_COMPLETED,onFragmentLoadingCompleted,this);eventBus.on(_Events2.default.STREAM_COMPLETED,onStreamCompleted,this);eventBus.on(_Events2.default.BUFFER_CLEARED,onBufferCleared,this);eventBus.on(_Events2.default.BYTES_APPENDED_END_FRAGMENT,onBytesAppended,this);eventBus.on(_Events2.default.QUOTA_EXCEEDED,onQuotaExceeded,this);eventBus.on(_Events2.default.PLAYBACK_SEEKING,onPlaybackSeeking,this);eventBus.on(_Events2.default.PLAYBACK_STARTED,onPlaybackStarted,this);eventBus.on(_Events2.default.PLAYBACK_RATE_CHANGED,onPlaybackRateChanged,this);eventBus.on(_Events2.default.PLAYBACK_TIME_UPDATED,onPlaybackTimeUpdated,this);eventBus.on(_Events2.default.URL_RESOLUTION_FAILED,onURLResolutionFailed,this);eventBus.on(_Events2.default.FRAGMENT_LOADING_ABANDONED,onFragmentLoadingAbandoned,this);eventBus.on(_Events2.default.BUFFERING_COMPLETED,onBufferingCompleted,this);}function getType(){return type;}function getStreamId(){return streamInfo.id;}function setCurrentRepresentation(representationInfo){currentRepresentationInfo=representationInfo;}function isStarted(){return isStopped===false;}function start(){if(isStarted())return;if(!currentRepresentationInfo||bufferController.getIsBufferingCompleted())return;logger.debug('Schedule Controller starts');isStopped=false;dashMetrics.createPlaylistTraceMetrics(currentRepresentationInfo.id,playbackController.getTime()*1000,playbackController.getPlaybackRate());if(initialRequest){initialRequest=false;}startScheduleTimer(0);}function stop(){if(isStopped)return;logger.debug('Schedule Controller stops');logger.debug(type+' Schedule Controller stops');isStopped=true;clearTimeout(scheduleTimeout);}function hasTopQualityChanged(type,id){topQualityIndex[id]=topQualityIndex[id]||{};var newTopQualityIndex=abrController.getTopQualityIndexFor(type,id);if(topQualityIndex[id][type]!=newTopQualityIndex){logger.info('Top quality '+type+' index has changed from '+topQualityIndex[id][type]+' to '+newTopQualityIndex);topQualityIndex[id][type]=newTopQualityIndex;return true;}return false;}function schedule(){if(isStopped||isFragmentProcessingInProgress||playbackController.isPaused()&&!settings.get().streaming.scheduleWhilePaused||(type===_Constants2.default.FRAGMENTED_TEXT||type===_Constants2.default.TEXT)&&!textController.isTextEnabled()||bufferController.getIsBufferingCompleted()){stop();return;}validateExecutedFragmentRequest();var isReplacement=replaceRequestArray.length>0;if(replacingBuffer||isNaN(lastInitQuality)||switchTrack||isReplacement||hasTopQualityChanged(type,streamInfo.id)||bufferLevelRule.execute(type,currentRepresentationInfo,hasVideoTrack)){var getNextFragment=function getNextFragment(){if((currentRepresentationInfo.quality!==lastInitQuality||switchTrack)&&!replacingBuffer){if(switchTrack){logger.debug('Switch track for '+type+', representation id = '+currentRepresentationInfo.id);replacingBuffer=mediaController.getSwitchMode(type)===_Constants2.default.TRACK_SWITCH_MODE_ALWAYS_REPLACE;if(replacingBuffer&&bufferController.replaceBuffer){bufferController.replaceBuffer();}switchTrack=false;}else{logger.debug('Quality has changed, get init request for representationid = '+currentRepresentationInfo.id);}eventBus.trigger(_Events2.default.INIT_FRAGMENT_NEEDED,{representationId:currentRepresentationInfo.id,sender:instance},{streamId:streamInfo.id,mediaType:type});lastInitQuality=currentRepresentationInfo.quality;checkPlaybackQuality=false;}else{var replacement=replaceRequestArray.shift();if(replacement&&replacement.isInitializationRequest()){// To be sure the specific init segment had not already been loaded
eventBus.trigger(_Events2.default.INIT_FRAGMENT_NEEDED,{representationId:replacement.representationId,sender:instance},{streamId:streamInfo.id,mediaType:type});checkPlaybackQuality=false;}else{eventBus.trigger(_Events2.default.MEDIA_FRAGMENT_NEEDED,{seekTarget:seekTarget,replacement:replacement},{streamId:streamInfo.id,mediaType:type});checkPlaybackQuality=true;}}};setFragmentProcessState(true);if(!isReplacement&&checkPlaybackQuality){abrController.checkPlaybackQuality(type);}getNextFragment();}else{startScheduleTimer(500);}}function validateExecutedFragmentRequest(){// Validate that the fragment request executed and appended into the source buffer is as
// good of quality as the current quality and is the correct media track.
var time=playbackController.getTime();var safeBufferLevel=1.5;if(isNaN(currentRepresentationInfo.fragmentDuration)){//fragmentDuration of representationInfo is not defined,
// call metrics function to have data in the latest scheduling info...
// if no metric, returns 0. In this case, rule will return false.
var schedulingInfo=dashMetrics.getCurrentSchedulingInfo(currentRepresentationInfo.mediaInfo.type);safeBufferLevel=schedulingInfo?schedulingInfo.duration*1.5:1.5;}var request=fragmentModel.getRequests({state:_FragmentModel2.default.FRAGMENT_MODEL_EXECUTED,time:time+safeBufferLevel,threshold:0})[0];if(request&&replaceRequestArray.indexOf(request)===-1&&!adapter.getIsTextTrack(mimeType)){var fastSwitchModeEnabled=settings.get().streaming.fastSwitchEnabled;var bufferLevel=bufferController.getBufferLevel();var abandonmentState=abrController.getAbandonmentStateFor(type);// Only replace on track switch when NEVER_REPLACE
var trackChanged=!mediaController.isCurrentTrack(request.mediaInfo)&&mediaController.getSwitchMode(request.mediaInfo.type)===_Constants2.default.TRACK_SWITCH_MODE_NEVER_REPLACE;var qualityChanged=request.quality<currentRepresentationInfo.quality;if(fastSwitchModeEnabled&&(trackChanged||qualityChanged)&&bufferLevel>=safeBufferLevel&&abandonmentState!==_MetricsConstants2.default.ABANDON_LOAD){replaceRequest(request);isReplacementRequest=true;logger.debug('Reloading outdated fragment at index: ',request.index);}else if(request.quality>currentRepresentationInfo.quality&&!replacingBuffer){// The buffer has better quality it in then what we would request so set append point to end of buffer!!
setSeekTarget(playbackController.getTime()+bufferLevel);}}}function startScheduleTimer(value){clearTimeout(scheduleTimeout);scheduleTimeout=setTimeout(schedule,value);}function setFragmentProcessState(state){if(isFragmentProcessingInProgress!==state){isFragmentProcessingInProgress=state;}else{logger.debug('isFragmentProcessingInProgress is already equal to',state);}}function processInitRequest(request){if(request){setFragmentProcessState(true);fragmentModel.executeRequest(request);}}function processMediaRequest(request){if(request){logger.debug('Next fragment request url is '+request.url);fragmentModel.executeRequest(request);}else{// Use case - Playing at the bleeding live edge and frag is not available yet. Cycle back around.
if(playbackController.getIsDynamic()){logger.debug('Next fragment seems to be at the bleeding live edge and is not available yet. Rescheduling.');}setFragmentProcessState(false);startScheduleTimer(settings.get().streaming.lowLatencyEnabled?100:500);}}function switchTrackAsked(){switchTrack=true;}function replaceRequest(request){replaceRequestArray.push(request);}function completeQualityChange(trigger){if(playbackController&&fragmentModel){var item=fragmentModel.getRequests({state:_FragmentModel2.default.FRAGMENT_MODEL_EXECUTED,time:playbackController.getTime(),threshold:0})[0];if(item&&playbackController.getTime()>=item.startTime){if((!lastFragmentRequest.mediaInfo||item.mediaInfo.type===lastFragmentRequest.mediaInfo.type&&item.mediaInfo.id!==lastFragmentRequest.mediaInfo.id)&&trigger){eventBus.trigger(_Events2.default.TRACK_CHANGE_RENDERED,{mediaType:type,oldMediaInfo:lastFragmentRequest.mediaInfo,newMediaInfo:item.mediaInfo});}if((item.quality!==lastFragmentRequest.quality||item.adaptationIndex!==lastFragmentRequest.adaptationIndex)&&trigger){eventBus.trigger(_Events2.default.QUALITY_CHANGE_RENDERED,{mediaType:type,oldQuality:lastFragmentRequest.quality,newQuality:item.quality});}lastFragmentRequest={mediaInfo:item.mediaInfo,quality:item.quality,adaptationIndex:item.adaptationIndex};}}}function onStreamCompleted(){stop();setFragmentProcessState(false);logger.info('Stream '+streamInfo.id+' is complete');}function onFragmentLoadingCompleted(e){if(e.request.mediaInfo.streamInfo.id!==streamInfo.id||e.request.mediaType!==type)return;logger.info('OnFragmentLoadingCompleted - Url:',e.request?e.request.url:'undefined',e.request.range?', Range:'+e.request.range:'');if(adapter.getIsTextTrack(mimeType)){setFragmentProcessState(false);}if(e.error&&e.request.serviceLocation&&!isStopped){replaceRequest(e.request);setFragmentProcessState(false);startScheduleTimer(0);}if(replacingBuffer){mediaRequest=e.request;}}function onPlaybackTimeUpdated(){completeQualityChange(true);}function onBytesAppended(e){if(replacingBuffer&&!isNaN(e.startTime)){replacingBuffer=false;fragmentModel.addExecutedRequest(mediaRequest);}setFragmentProcessState(false);if(isReplacementRequest&&!isNaN(e.startTime)){//replace requests process is in progress, call schedule in n seconds.
//it is done in order to not add a fragment at the new quality at the end of the buffer before replace process is over.
//Indeed, if schedule is called too early, the executed request tested is the same that the one tested during previous schedule (at the new quality).
var currentTime=playbackController.getTime();var fragEndTime=e.startTime+currentRepresentationInfo.fragmentDuration;var safeBufferLevel=currentRepresentationInfo.fragmentDuration*1.5;if(currentTime+safeBufferLevel>=fragEndTime){startScheduleTimer(0);}else{startScheduleTimer((fragEndTime-(currentTime+safeBufferLevel))*1000);}isReplacementRequest=false;}else{startScheduleTimer(0);}}function onFragmentLoadingAbandoned(e){logger.info('onFragmentLoadingAbandoned request: '+e.request.url+' has been aborted');if(!playbackController.isSeeking()&&!switchTrack){logger.info('onFragmentLoadingAbandoned request: '+e.request.url+' has to be downloaded again, origin is not seeking process or switch track call');replaceRequest(e.request);}setFragmentProcessState(false);startScheduleTimer(0);}function onDataUpdateStarted()/*e*/{// stop();
}function onBufferingCompleted()/*e*/{stop();}function onBufferCleared(e){if(replacingBuffer&&settings.get().streaming.flushBufferAtTrackSwitch){// For some devices (like chromecast) it is necessary to seek the video element to reset the internal decoding buffer,
// otherwise audio track switch will be effective only once after previous buffered track is consumed
playbackController.seek(playbackController.getTime()+0.001,false,true);}// (Re)start schedule once buffer has been pruned after a QuotaExceededError
if(e.hasEnoughSpaceToAppend&&e.quotaExceeded){start();}}function onQuotaExceeded()/*e*/{// Stop scheduler (will be restarted once buffer is pruned)
stop();setFragmentProcessState(false);}function onURLResolutionFailed(){fragmentModel.abortRequests();stop();}function onPlaybackStarted(){if(isStopped||!settings.get().streaming.scheduleWhilePaused){start();}}function onPlaybackSeeking(e){setSeekTarget(e.seekTime);setTimeToLoadDelay(0);if(isStopped){start();}var latency=currentRepresentationInfo.DVRWindow&&playbackController?currentRepresentationInfo.DVRWindow.end-playbackController.getTime():NaN;dashMetrics.updateManifestUpdateInfo({latency:latency});if(!isFragmentProcessingInProgress){// No pending request, request next segment at seek target
startScheduleTimer(0);}else{// Abort current request
fragmentModel.abortRequests();}}function onPlaybackRateChanged(e){dashMetrics.updatePlayListTraceMetrics({playbackspeed:e.playbackRate.toString()});}function setSeekTarget(value){seekTarget=value;}function setTimeToLoadDelay(value){timeToLoadDelay=value;}function getTimeToLoadDelay(){return timeToLoadDelay;}function getBufferTarget(){return bufferLevelRule.getBufferTarget(type,currentRepresentationInfo,hasVideoTrack);}function resetInitialSettings(){checkPlaybackQuality=true;isFragmentProcessingInProgress=false;timeToLoadDelay=0;seekTarget=NaN;initialRequest=true;lastInitQuality=NaN;lastFragmentRequest={mediaInfo:undefined,quality:NaN,adaptationIndex:NaN};topQualityIndex={};replaceRequestArray=[];isStopped=true;switchTrack=false;replacingBuffer=false;mediaRequest=null;isReplacementRequest=false;}function reset(){//eventBus.off(Events.LIVE_EDGE_SEARCH_COMPLETED, onLiveEdgeSearchCompleted, this);
eventBus.off(_Events2.default.DATA_UPDATE_STARTED,onDataUpdateStarted,this);eventBus.off(_Events2.default.FRAGMENT_LOADING_COMPLETED,onFragmentLoadingCompleted,this);eventBus.off(_Events2.default.STREAM_COMPLETED,onStreamCompleted,this);eventBus.off(_Events2.default.BUFFER_CLEARED,onBufferCleared,this);eventBus.off(_Events2.default.BYTES_APPENDED_END_FRAGMENT,onBytesAppended,this);eventBus.off(_Events2.default.QUOTA_EXCEEDED,onQuotaExceeded,this);eventBus.off(_Events2.default.PLAYBACK_SEEKING,onPlaybackSeeking,this);eventBus.off(_Events2.default.PLAYBACK_STARTED,onPlaybackStarted,this);eventBus.off(_Events2.default.PLAYBACK_RATE_CHANGED,onPlaybackRateChanged,this);eventBus.off(_Events2.default.PLAYBACK_TIME_UPDATED,onPlaybackTimeUpdated,this);eventBus.off(_Events2.default.URL_RESOLUTION_FAILED,onURLResolutionFailed,this);eventBus.off(_Events2.default.FRAGMENT_LOADING_ABANDONED,onFragmentLoadingAbandoned,this);eventBus.off(_Events2.default.BUFFERING_COMPLETED,onBufferingCompleted,this);stop();completeQualityChange(false);resetInitialSettings();}function getPlaybackController(){return playbackController;}instance={initialize:initialize,getType:getType,getStreamId:getStreamId,setCurrentRepresentation:setCurrentRepresentation,setSeekTarget:setSeekTarget,setTimeToLoadDelay:setTimeToLoadDelay,getTimeToLoadDelay:getTimeToLoadDelay,switchTrackAsked:switchTrackAsked,isStarted:isStarted,start:start,stop:stop,reset:reset,getBufferTarget:getBufferTarget,processInitRequest:processInitRequest,processMediaRequest:processMediaRequest,getPlaybackController:getPlaybackController};setup();return instance;}ScheduleController.__dashjs_factory_name='ScheduleController';exports.default=_FactoryMaker2.default.getClassFactory(ScheduleController);


},{"../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../constants/MetricsConstants":"../node_modules/dashjs/build/es5/src/streaming/constants/MetricsConstants.js","../rules/scheduling/BufferLevelRule":"../node_modules/dashjs/build/es5/src/streaming/rules/scheduling/BufferLevelRule.js","../models/FragmentModel":"../node_modules/dashjs/build/es5/src/streaming/models/FragmentModel.js","../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js"}],"../node_modules/dashjs/build/es5/src/dash/controllers/RepresentationController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('../../streaming/constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _DashJSError=require('../../streaming/vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function RepresentationController(config){config=config||{};var eventBus=config.eventBus;var events=config.events;var errors=config.errors;var abrController=config.abrController;var dashMetrics=config.dashMetrics;var playbackController=config.playbackController;var timelineConverter=config.timelineConverter;var type=config.type;var streamInfo=config.streamInfo;var dashConstants=config.dashConstants;var instance=void 0,realAdaptation=void 0,updating=void 0,voAvailableRepresentations=void 0,currentVoRepresentation=void 0;function setup(){resetInitialSettings();eventBus.on(events.QUALITY_CHANGE_REQUESTED,onQualityChanged,instance);eventBus.on(events.REPRESENTATION_UPDATE_COMPLETED,onRepresentationUpdated,instance);eventBus.on(events.WALLCLOCK_TIME_UPDATED,onWallclockTimeUpdated,instance);eventBus.on(events.MANIFEST_VALIDITY_CHANGED,onManifestValidityChanged,instance);}function getStreamId(){return streamInfo.id;}function getType(){return type;}function checkConfig(){if(!abrController||!dashMetrics||!playbackController||!timelineConverter){throw new Error(_Constants2.default.MISSING_CONFIG_ERROR);}}function getData(){return realAdaptation;}function isUpdating(){return updating;}function getCurrentRepresentation(){return currentVoRepresentation;}function resetInitialSettings(){realAdaptation=null;updating=true;voAvailableRepresentations=[];}function reset(){eventBus.off(events.QUALITY_CHANGE_REQUESTED,onQualityChanged,instance);eventBus.off(events.REPRESENTATION_UPDATE_COMPLETED,onRepresentationUpdated,instance);eventBus.off(events.WALLCLOCK_TIME_UPDATED,onWallclockTimeUpdated,instance);eventBus.off(events.MANIFEST_VALIDITY_CHANGED,onManifestValidityChanged,instance);resetInitialSettings();}function updateData(newRealAdaptation,availableRepresentations,type,quality){checkConfig();startDataUpdate();voAvailableRepresentations=availableRepresentations;currentVoRepresentation=getRepresentationForQuality(quality);realAdaptation=newRealAdaptation;if(type!==_Constants2.default.VIDEO&&type!==_Constants2.default.AUDIO&&type!==_Constants2.default.FRAGMENTED_TEXT){endDataUpdate();return;}updateAvailabilityWindow(playbackController.getIsDynamic(),true);}function addRepresentationSwitch(){checkConfig();var now=new Date();var currentRepresentation=getCurrentRepresentation();var currentVideoTimeMs=playbackController.getTime()*1000;if(currentRepresentation){dashMetrics.addRepresentationSwitch(currentRepresentation.adaptation.type,now,currentVideoTimeMs,currentRepresentation.id);}}function getRepresentationForQuality(quality){return quality===null||quality===undefined||quality>=voAvailableRepresentations.length?null:voAvailableRepresentations[quality];}function getQualityForRepresentation(voRepresentation){return voAvailableRepresentations.indexOf(voRepresentation);}function isAllRepresentationsUpdated(){for(var i=0,ln=voAvailableRepresentations.length;i<ln;i++){var segmentInfoType=voAvailableRepresentations[i].segmentInfoType;if(voAvailableRepresentations[i].segmentAvailabilityRange===null||!voAvailableRepresentations[i].hasInitialization()||(segmentInfoType===dashConstants.SEGMENT_BASE||segmentInfoType===dashConstants.BASE_URL)&&!voAvailableRepresentations[i].segments){return false;}}return true;}function setExpectedLiveEdge(liveEdge){timelineConverter.setExpectedLiveEdge(liveEdge);dashMetrics.updateManifestUpdateInfo({presentationStartTime:liveEdge});}function updateRepresentation(representation,isDynamic){representation.segmentAvailabilityRange=timelineConverter.calcSegmentAvailabilityRange(representation,isDynamic);if(representation.segmentAvailabilityRange.end<representation.segmentAvailabilityRange.start){var error=new _DashJSError2.default(errors.SEGMENTS_UNAVAILABLE_ERROR_CODE,errors.SEGMENTS_UNAVAILABLE_ERROR_MESSAGE,{availabilityDelay:representation.segmentAvailabilityRange.start-representation.segmentAvailabilityRange.end});endDataUpdate(error);return;}if(isDynamic){setExpectedLiveEdge(representation.segmentAvailabilityRange.end);}}function updateAvailabilityWindow(isDynamic,notifyUpdate){checkConfig();for(var i=0,ln=voAvailableRepresentations.length;i<ln;i++){updateRepresentation(voAvailableRepresentations[i],isDynamic);if(notifyUpdate){eventBus.trigger(events.REPRESENTATION_UPDATE_STARTED,{representation:voAvailableRepresentations[i]},{streamId:streamInfo.id,mediaType:type});}}}function resetAvailabilityWindow(){voAvailableRepresentations.forEach(function(rep){rep.segmentAvailabilityRange=null;});}function startDataUpdate(){updating=true;eventBus.trigger(events.DATA_UPDATE_STARTED,{},{streamId:streamInfo.id,mediaType:type});}function endDataUpdate(error){updating=false;eventBus.trigger(events.DATA_UPDATE_COMPLETED,{data:realAdaptation,currentRepresentation:currentVoRepresentation,error:error},{streamId:streamInfo.id,mediaType:type});}function postponeUpdate(postponeTimePeriod){var delay=postponeTimePeriod;var update=function update(){if(isUpdating())return;startDataUpdate();// clear the segmentAvailabilityRange for all reps.
// this ensures all are updated before the live edge search starts
resetAvailabilityWindow();updateAvailabilityWindow(playbackController.getIsDynamic(),true);};eventBus.trigger(events.AST_IN_FUTURE,{delay:delay});setTimeout(update,delay);}function onRepresentationUpdated(e){if(!isUpdating())return;if(e.error){endDataUpdate(e.error);return;}var r=e.representation;var manifestUpdateInfo=dashMetrics.getCurrentManifestUpdate();var alreadyAdded=false;var postponeTimePeriod=0;var repInfo=void 0,err=void 0,repSwitch=void 0;if(r.adaptation.period.mpd.manifest.type===dashConstants.DYNAMIC&&!r.adaptation.period.mpd.manifest.ignorePostponeTimePeriod&&playbackController.getStreamController().getStreams().length<=1){// We must put things to sleep unless till e.g. the startTime calculation in ScheduleController.onLiveEdgeSearchCompleted fall after the segmentAvailabilityRange.start
postponeTimePeriod=getRepresentationUpdatePostponeTimePeriod(r);}if(postponeTimePeriod>0){postponeUpdate(postponeTimePeriod);err=new _DashJSError2.default(errors.SEGMENTS_UPDATE_FAILED_ERROR_CODE,errors.SEGMENTS_UPDATE_FAILED_ERROR_MESSAGE);endDataUpdate(err);return;}if(manifestUpdateInfo){for(var i=0;i<manifestUpdateInfo.representationInfo.length;i++){repInfo=manifestUpdateInfo.representationInfo[i];if(repInfo.index===r.index&&repInfo.mediaType===getType()){alreadyAdded=true;break;}}if(!alreadyAdded){dashMetrics.addManifestUpdateRepresentationInfo(r,getType());}}if(isAllRepresentationsUpdated()){abrController.setPlaybackQuality(getType(),streamInfo,getQualityForRepresentation(currentVoRepresentation));dashMetrics.updateManifestUpdateInfo({latency:currentVoRepresentation.segmentAvailabilityRange.end-playbackController.getTime()});repSwitch=dashMetrics.getCurrentRepresentationSwitch(getCurrentRepresentation().adaptation.type);if(!repSwitch){addRepresentationSwitch();}endDataUpdate();}}function getRepresentationUpdatePostponeTimePeriod(representation){try{var streamController=playbackController.getStreamController();var activeStreamInfo=streamController.getActiveStreamInfo();var startTimeAnchor=representation.segmentAvailabilityRange.start;if(activeStreamInfo&&activeStreamInfo.id&&activeStreamInfo.id!==streamInfo.id){// We need to consider the currently playing period if a period switch is performed.
startTimeAnchor=Math.min(playbackController.getTime(),startTimeAnchor);}var segmentAvailabilityTimePeriod=representation.segmentAvailabilityRange.end-startTimeAnchor;var liveDelay=playbackController.getLiveDelay();return(liveDelay-segmentAvailabilityTimePeriod)*1000;}catch(e){return 0;}}function onWallclockTimeUpdated(e){if(e.isDynamic){updateAvailabilityWindow(e.isDynamic);}}function onQualityChanged(e){currentVoRepresentation=getRepresentationForQuality(e.newQuality);addRepresentationSwitch();}function onManifestValidityChanged(e){if(e.newDuration){var representation=getCurrentRepresentation();if(representation&&representation.adaptation.period){var period=representation.adaptation.period;period.duration=e.newDuration;}}}instance={getStreamId:getStreamId,getType:getType,getData:getData,isUpdating:isUpdating,updateData:updateData,updateRepresentation:updateRepresentation,getCurrentRepresentation:getCurrentRepresentation,getRepresentationForQuality:getRepresentationForQuality,reset:reset};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */RepresentationController.__dashjs_factory_name='RepresentationController';exports.default=_FactoryMaker2.default.getClassFactory(RepresentationController);


},{"../../streaming/constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../../streaming/vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/streaming/utils/LiveEdgeFinder.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Constants=require('../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * @param {Object} config
 * @returns {{initialize: initialize, getLiveEdge: getLiveEdge, reset: reset}|*}
 * @constructor
 * @ignore
 *//**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function LiveEdgeFinder(config){config=config||{};var instance=void 0;var timelineConverter=config.timelineConverter;function checkConfig(){if(!timelineConverter||!timelineConverter.hasOwnProperty('getExpectedLiveEdge')){throw new Error(_Constants2.default.MISSING_CONFIG_ERROR);}}function getLiveEdge(representationInfo){checkConfig();return representationInfo.DVRWindow?representationInfo.DVRWindow.end:0;}function reset(){timelineConverter=null;}instance={getLiveEdge:getLiveEdge,reset:reset};return instance;}LiveEdgeFinder.__dashjs_factory_name='LiveEdgeFinder';exports.default=_FactoryMaker2.default.getClassFactory(LiveEdgeFinder);


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js"}],"../node_modules/dashjs/build/es5/src/dash/vo/Segment.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var Segment=function Segment(){_classCallCheck(this,Segment);this.indexRange=null;this.index=null;this.mediaRange=null;this.media=null;this.duration=NaN;// this is the time that should be inserted into the media url
this.replacementTime=null;// this is the number that should be inserted into the media url
this.replacementNumber=NaN;// This is supposed to match the time encoded in the media Segment
this.mediaStartTime=NaN;// When the source buffer timeOffset is set to MSETimeOffset this is the
// time that will match the seekTarget and video.currentTime
this.presentationStartTime=NaN;// Do not schedule this segment until
this.availabilityStartTime=NaN;// Ignore and  discard this segment after
this.availabilityEndTime=NaN;// The index of the segment inside the availability window
this.availabilityIdx=NaN;// For dynamic mpd's, this is the wall clock time that the video
// element currentTime should be presentationStartTime
this.wallStartTime=NaN;this.representation=null;};exports.default=Segment;


},{}],"../node_modules/dashjs/build/es5/src/dash/utils/SegmentsUtils.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.unescapeDollarsInTemplate=unescapeDollarsInTemplate;exports.replaceIDForTemplate=replaceIDForTemplate;exports.replaceTokenForTemplate=replaceTokenForTemplate;exports.getIndexBasedSegment=getIndexBasedSegment;exports.getTimeBasedSegment=getTimeBasedSegment;var _Segment=require('./../vo/Segment');var _Segment2=_interopRequireDefault(_Segment);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function zeroPadToLength(numStr,minStrLength){while(numStr.length<minStrLength){numStr='0'+numStr;}return numStr;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function getNumberForSegment(segment,segmentIndex){return segment.representation.startNumber+segmentIndex;}function unescapeDollarsInTemplate(url){return url?url.split('$$').join('$'):url;}function replaceIDForTemplate(url,value){if(!value||!url||url.indexOf('$RepresentationID$')===-1){return url;}var v=value.toString();return url.split('$RepresentationID$').join(v);}function replaceTokenForTemplate(url,token,value){var formatTag='%0';var startPos=void 0,endPos=void 0,formatTagPos=void 0,specifier=void 0,width=void 0,paddedValue=void 0;var tokenLen=token.length;var formatTagLen=formatTag.length;if(!url){return url;}// keep looping round until all instances of <token> have been
// replaced. once that has happened, startPos below will be -1
// and the completed url will be returned.
while(true){// check if there is a valid $<token>...$ identifier
// if not, return the url as is.
startPos=url.indexOf('$'+token);if(startPos<0){return url;}// the next '$' must be the end of the identifier
// if there isn't one, return the url as is.
endPos=url.indexOf('$',startPos+tokenLen);if(endPos<0){return url;}// now see if there is an additional format tag suffixed to
// the identifier within the enclosing '$' characters
formatTagPos=url.indexOf(formatTag,startPos+tokenLen);if(formatTagPos>startPos&&formatTagPos<endPos){specifier=url.charAt(endPos-1);width=parseInt(url.substring(formatTagPos+formatTagLen,endPos-1),10);// support the minimum specifiers required by IEEE 1003.1
// (d, i , o, u, x, and X) for completeness
switch(specifier){// treat all int types as uint,
// hence deliberate fallthrough
case'd':case'i':case'u':paddedValue=zeroPadToLength(value.toString(),width);break;case'x':paddedValue=zeroPadToLength(value.toString(16),width);break;case'X':paddedValue=zeroPadToLength(value.toString(16),width).toUpperCase();break;case'o':paddedValue=zeroPadToLength(value.toString(8),width);break;default:return url;}}else{paddedValue=value;}url=url.substring(0,startPos)+paddedValue+url.substring(endPos+1);}}function getSegment(representation,duration,presentationStartTime,mediaStartTime,availabilityStartTime,timelineConverter,presentationEndTime,isDynamic,index){var seg=new _Segment2.default();seg.representation=representation;seg.duration=duration;seg.presentationStartTime=presentationStartTime;seg.mediaStartTime=mediaStartTime;seg.availabilityStartTime=availabilityStartTime;seg.availabilityEndTime=timelineConverter.calcAvailabilityEndTimeFromPresentationTime(presentationEndTime,representation.adaptation.period.mpd,isDynamic);seg.wallStartTime=timelineConverter.calcWallTimeForSegment(seg,isDynamic);seg.replacementNumber=getNumberForSegment(seg,index);seg.availabilityIdx=index;return seg;}function isSegmentAvailable(timelineConverter,representation,segment,isDynamic){var periodEnd=timelineConverter.getPeriodEnd(representation,isDynamic);var periodRelativeEnd=timelineConverter.calcPeriodRelativeTimeFromMpdRelativeTime(representation,periodEnd);var segmentTime=timelineConverter.calcPeriodRelativeTimeFromMpdRelativeTime(representation,segment.presentationStartTime);if(segmentTime>=periodRelativeEnd){if(isDynamic){// segment is not available in current period, but it may be segment available in another period that current one (in DVR window)
// if not (time > segmentAvailabilityRange.end), then return false
if(representation.segmentAvailabilityRange&&segment.presentationStartTime>=representation.segmentAvailabilityRange.end){return false;}}else{return false;}}return true;}function getIndexBasedSegment(timelineConverter,isDynamic,representation,index){var duration=void 0,presentationStartTime=void 0,presentationEndTime=void 0;duration=representation.segmentDuration;/*
     * From spec - If neither @duration attribute nor SegmentTimeline element is present, then the Representation
     * shall contain exactly one Media Segment. The MPD start time is 0 and the MPD duration is obtained
     * in the same way as for the last Media Segment in the Representation.
     */if(isNaN(duration)){duration=representation.adaptation.period.duration;}presentationStartTime=parseFloat((representation.adaptation.period.start+index*duration).toFixed(5));presentationEndTime=parseFloat((presentationStartTime+duration).toFixed(5));var segment=getSegment(representation,duration,presentationStartTime,timelineConverter.calcMediaTimeFromPresentationTime(presentationStartTime,representation),timelineConverter.calcAvailabilityStartTimeFromPresentationTime(presentationStartTime,representation.adaptation.period.mpd,isDynamic),timelineConverter,presentationEndTime,isDynamic,index);if(!isSegmentAvailable(timelineConverter,representation,segment,isDynamic)){return null;}return segment;}function getTimeBasedSegment(timelineConverter,isDynamic,representation,time,duration,fTimescale,url,range,index,tManifest){var scaledTime=time/fTimescale;var scaledDuration=Math.min(duration/fTimescale,representation.adaptation.period.mpd.maxSegmentDuration);var presentationStartTime=void 0,presentationEndTime=void 0,seg=void 0;presentationStartTime=timelineConverter.calcPresentationTimeFromMediaTime(scaledTime,representation);presentationEndTime=presentationStartTime+scaledDuration;seg=getSegment(representation,scaledDuration,presentationStartTime,scaledTime,representation.adaptation.period.mpd.manifest.loadedTime,timelineConverter,presentationEndTime,isDynamic,index);if(!isSegmentAvailable(timelineConverter,representation,seg,isDynamic)){return null;}seg.replacementTime=tManifest?tManifest:time;url=replaceTokenForTemplate(url,'Number',seg.replacementNumber);url=replaceTokenForTemplate(url,'Time',seg.replacementTime);seg.media=url;seg.mediaRange=range;return seg;}


},{"./../vo/Segment":"../node_modules/dashjs/build/es5/src/dash/vo/Segment.js"}],"../node_modules/dashjs/build/es5/src/dash/utils/TimelineSegmentsGetter.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Constants=require('../../streaming/constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _SegmentsUtils=require('./SegmentsUtils');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function TimelineSegmentsGetter(config,isDynamic){config=config||{};var timelineConverter=config.timelineConverter;var instance=void 0;function checkConfig(){if(!timelineConverter||!timelineConverter.hasOwnProperty('calcMediaTimeFromPresentationTime')||!timelineConverter.hasOwnProperty('calcSegmentAvailabilityRange')){throw new Error(_Constants2.default.MISSING_CONFIG_ERROR);}}function iterateSegments(representation,iterFunc){var base=representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentTemplate||representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentList;var timeline=base.SegmentTimeline;var list=base.SegmentURL_asArray;var time=0;var scaledTime=0;var availabilityIdx=-1;var fragments=void 0,frag=void 0,i=void 0,len=void 0,j=void 0,repeat=void 0,repeatEndTime=void 0,nextFrag=void 0,fTimescale=void 0;fTimescale=representation.timescale;fragments=timeline.S_asArray;var breakIterator=false;for(i=0,len=fragments.length;i<len&&!breakIterator;i++){frag=fragments[i];repeat=0;if(frag.hasOwnProperty('r')){repeat=frag.r;}// For a repeated S element, t belongs only to the first segment
if(frag.hasOwnProperty('t')){time=frag.t;scaledTime=time/fTimescale;}// This is a special case: "A negative value of the @r attribute of the S element indicates that the duration indicated in @d attribute repeats until the start of the next S element, the end of the Period or until the
// next MPD update."
if(repeat<0){nextFrag=fragments[i+1];if(nextFrag&&nextFrag.hasOwnProperty('t')){repeatEndTime=nextFrag.t/fTimescale;}else{var availabilityEnd=representation.segmentAvailabilityRange?representation.segmentAvailabilityRange.end:timelineConverter.calcSegmentAvailabilityRange(representation,isDynamic).end;repeatEndTime=timelineConverter.calcMediaTimeFromPresentationTime(availabilityEnd,representation);representation.segmentDuration=frag.d/fTimescale;}repeat=Math.ceil((repeatEndTime-scaledTime)/(frag.d/fTimescale))-1;}for(j=0;j<=repeat&&!breakIterator;j++){availabilityIdx++;breakIterator=iterFunc(time,scaledTime,base,list,frag,fTimescale,availabilityIdx,i);if(breakIterator){representation.segmentDuration=frag.d/fTimescale;// check if there is at least one more segment
if(j<repeat-1||i<len-1){availabilityIdx++;}}time+=frag.d;scaledTime=time/fTimescale;}}representation.availableSegmentsNumber=availabilityIdx;}function getSegmentByIndex(representation,index,lastSegmentTime){checkConfig();if(!representation){return null;}var segment=null;var found=false;iterateSegments(representation,function(time,scaledTime,base,list,frag,fTimescale,availabilityIdx,i){if(found||lastSegmentTime<0){var media=base.media;var mediaRange=frag.mediaRange;if(list){media=list[i].media||'';mediaRange=list[i].mediaRange;}segment=(0,_SegmentsUtils.getTimeBasedSegment)(timelineConverter,isDynamic,representation,time,frag.d,fTimescale,media,mediaRange,availabilityIdx,frag.tManifest);return true;}else if(scaledTime>=lastSegmentTime-frag.d*0.5/fTimescale){// same logic, if deviation is
// 50% of segment duration, segment is found if scaledTime is greater than or equal to (startTime of previous segment - half of the previous segment duration)
found=true;}return false;});return segment;}function getSegmentByTime(representation,requestedTime){checkConfig();if(!representation){return null;}if(requestedTime===undefined){requestedTime=null;}var segment=null;var requiredMediaTime=timelineConverter.calcMediaTimeFromPresentationTime(requestedTime,representation);iterateSegments(representation,function(time,scaledTime,base,list,frag,fTimescale,availabilityIdx,i){// In some cases when requiredMediaTime = actual end time of the last segment
// it is possible that this time a bit exceeds the declared end time of the last segment.
// in this case we still need to include the last segment in the segment list.
if(requiredMediaTime<scaledTime+frag.d/fTimescale){var media=base.media;var mediaRange=frag.mediaRange;if(list){media=list[i].media||'';mediaRange=list[i].mediaRange;}segment=(0,_SegmentsUtils.getTimeBasedSegment)(timelineConverter,isDynamic,representation,time,frag.d,fTimescale,media,mediaRange,availabilityIdx,frag.tManifest);return true;}return false;});return segment;}instance={getSegmentByIndex:getSegmentByIndex,getSegmentByTime:getSegmentByTime};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */TimelineSegmentsGetter.__dashjs_factory_name='TimelineSegmentsGetter';var factory=_FactoryMaker2.default.getClassFactory(TimelineSegmentsGetter);exports.default=factory;


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../streaming/constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","./SegmentsUtils":"../node_modules/dashjs/build/es5/src/dash/utils/SegmentsUtils.js"}],"../node_modules/dashjs/build/es5/src/dash/utils/TemplateSegmentsGetter.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Constants=require('../../streaming/constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _SegmentsUtils=require('./SegmentsUtils');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function TemplateSegmentsGetter(config,isDynamic){config=config||{};var timelineConverter=config.timelineConverter;var instance=void 0;function checkConfig(){if(!timelineConverter||!timelineConverter.hasOwnProperty('calcPeriodRelativeTimeFromMpdRelativeTime')){throw new Error(_Constants2.default.MISSING_CONFIG_ERROR);}}function getSegmentByIndex(representation,index){checkConfig();if(!representation){return null;}var template=representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentTemplate;index=Math.max(index,0);var seg=(0,_SegmentsUtils.getIndexBasedSegment)(timelineConverter,isDynamic,representation,index);if(seg){seg.replacementTime=Math.round((index-1)*representation.segmentDuration*representation.timescale,10);var url=template.media;url=(0,_SegmentsUtils.replaceTokenForTemplate)(url,'Number',seg.replacementNumber);url=(0,_SegmentsUtils.replaceTokenForTemplate)(url,'Time',seg.replacementTime);seg.media=url;}var duration=representation.segmentDuration;var availabilityWindow=representation.segmentAvailabilityRange;if(isNaN(duration)){representation.availableSegmentsNumber=1;}else{representation.availableSegmentsNumber=Math.ceil((availabilityWindow.end-availabilityWindow.start)/duration);}return seg;}function getSegmentByTime(representation,requestedTime){checkConfig();if(!representation){return null;}var duration=representation.segmentDuration;if(isNaN(duration)){return null;}var periodTime=timelineConverter.calcPeriodRelativeTimeFromMpdRelativeTime(representation,requestedTime);var index=Math.floor(periodTime/duration);return getSegmentByIndex(representation,index);}instance={getSegmentByIndex:getSegmentByIndex,getSegmentByTime:getSegmentByTime};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */TemplateSegmentsGetter.__dashjs_factory_name='TemplateSegmentsGetter';var factory=_FactoryMaker2.default.getClassFactory(TemplateSegmentsGetter);exports.default=factory;


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../streaming/constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","./SegmentsUtils":"../node_modules/dashjs/build/es5/src/dash/utils/SegmentsUtils.js"}],"../node_modules/dashjs/build/es5/src/dash/utils/ListSegmentsGetter.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Constants=require('../../streaming/constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _SegmentsUtils=require('./SegmentsUtils');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function ListSegmentsGetter(config,isDynamic){config=config||{};var timelineConverter=config.timelineConverter;var instance=void 0;function checkConfig(){if(!timelineConverter||!timelineConverter.hasOwnProperty('calcPeriodRelativeTimeFromMpdRelativeTime')){throw new Error(_Constants2.default.MISSING_CONFIG_ERROR);}}function getSegmentByIndex(representation,index){checkConfig();if(!representation){return null;}var list=representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].SegmentList;var len=list.SegmentURL_asArray.length;var startNumber=representation&&!isNaN(representation.startNumber)?representation.startNumber:1;var offsetToSubtract=Math.max(startNumber-1,0);var start=representation.startNumber;var segment=null;if(index-offsetToSubtract<len){var s=list.SegmentURL_asArray[index-offsetToSubtract];segment=(0,_SegmentsUtils.getIndexBasedSegment)(timelineConverter,isDynamic,representation,index);if(segment){segment.replacementTime=(start+index-1)*representation.segmentDuration;segment.media=s.media?s.media:'';segment.mediaRange=s.mediaRange;segment.index=index;segment.indexRange=s.indexRange;}}representation.availableSegmentsNumber=len;return segment;}function getSegmentByTime(representation,requestedTime){checkConfig();if(!representation){return null;}var duration=representation.segmentDuration;if(isNaN(duration)){return null;}var periodTime=timelineConverter.calcPeriodRelativeTimeFromMpdRelativeTime(representation,requestedTime);var index=Math.floor(periodTime/duration);return getSegmentByIndex(representation,index);}instance={getSegmentByIndex:getSegmentByIndex,getSegmentByTime:getSegmentByTime};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */ListSegmentsGetter.__dashjs_factory_name='ListSegmentsGetter';var factory=_FactoryMaker2.default.getClassFactory(ListSegmentsGetter);exports.default=factory;


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../streaming/constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","./SegmentsUtils":"../node_modules/dashjs/build/es5/src/dash/utils/SegmentsUtils.js"}],"../node_modules/dashjs/build/es5/src/dash/utils/SegmentBaseGetter.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Constants=require('../../streaming/constants/Constants');var _Constants2=_interopRequireDefault(_Constants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function SegmentBaseGetter(config){config=config||{};var timelineConverter=config.timelineConverter;var instance=void 0;function checkConfig(){if(!timelineConverter||!timelineConverter.hasOwnProperty('calcPeriodRelativeTimeFromMpdRelativeTime')){throw new Error(_Constants2.default.MISSING_CONFIG_ERROR);}}function getSegmentByIndex(representation,index){checkConfig();if(!representation){return null;}var len=representation.segments?representation.segments.length:-1;var seg=void 0;if(index<len){seg=representation.segments[index];if(seg&&seg.availabilityIdx===index){return seg;}}for(var i=0;i<len;i++){seg=representation.segments[i];if(seg&&seg.availabilityIdx===index){return seg;}}return null;}function getSegmentByTime(representation,requestedTime){checkConfig();var index=getIndexByTime(representation,requestedTime);return getSegmentByIndex(representation,index);}function getIndexByTime(representation,time){if(!representation){return-1;}var segments=representation.segments;var ln=segments?segments.length:null;var idx=-1;var epsilon=void 0,frag=void 0,ft=void 0,fd=void 0,i=void 0;if(segments&&ln>0){for(i=0;i<ln;i++){frag=segments[i];ft=frag.presentationStartTime;fd=frag.duration;epsilon=fd/2;if(time+epsilon>=ft&&time-epsilon<ft+fd){idx=frag.availabilityIdx;break;}}}return idx;}instance={getSegmentByIndex:getSegmentByIndex,getSegmentByTime:getSegmentByTime};return instance;}SegmentBaseGetter.__dashjs_factory_name='SegmentBaseGetter';var factory=_FactoryMaker2.default.getClassFactory(SegmentBaseGetter);exports.default=factory;


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../streaming/constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js"}],"../node_modules/dashjs/build/es5/src/dash/controllers/SegmentsController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _TimelineSegmentsGetter=require('../utils/TimelineSegmentsGetter');var _TimelineSegmentsGetter2=_interopRequireDefault(_TimelineSegmentsGetter);var _TemplateSegmentsGetter=require('../utils/TemplateSegmentsGetter');var _TemplateSegmentsGetter2=_interopRequireDefault(_TemplateSegmentsGetter);var _ListSegmentsGetter=require('../utils/ListSegmentsGetter');var _ListSegmentsGetter2=_interopRequireDefault(_ListSegmentsGetter);var _SegmentBaseGetter=require('../utils/SegmentBaseGetter');var _SegmentBaseGetter2=_interopRequireDefault(_SegmentBaseGetter);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function SegmentsController(config){config=config||{};var context=this.context;var events=config.events;var eventBus=config.eventBus;var dashConstants=config.dashConstants;var streamInfo=config.streamInfo;var type=config.type;var instance=void 0,getters=void 0;function setup(){getters={};}function initialize(isDynamic){getters[dashConstants.SEGMENT_TIMELINE]=(0,_TimelineSegmentsGetter2.default)(context).create(config,isDynamic);getters[dashConstants.SEGMENT_TEMPLATE]=(0,_TemplateSegmentsGetter2.default)(context).create(config,isDynamic);getters[dashConstants.SEGMENT_LIST]=(0,_ListSegmentsGetter2.default)(context).create(config,isDynamic);getters[dashConstants.SEGMENT_BASE]=(0,_SegmentBaseGetter2.default)(context).create(config,isDynamic);}function update(voRepresentation,mimeType,hasInitialization,hasSegments){if(!hasInitialization){eventBus.trigger(events.SEGMENTBASE_INIT_REQUEST_NEEDED,{streamId:streamInfo.id,mediaType:type,mimeType:mimeType,representation:voRepresentation});}if(!hasSegments){eventBus.trigger(events.SEGMENTBASE_SEGMENTSLIST_REQUEST_NEEDED,{streamId:streamInfo.id,mediaType:type,mimeType:mimeType,representation:voRepresentation});}}function getSegmentsGetter(representation){return representation?representation.segments?getters[dashConstants.SEGMENT_BASE]:getters[representation.segmentInfoType]:null;}function getSegmentByIndex(representation,index,lastSegmentTime){var getter=getSegmentsGetter(representation);return getter?getter.getSegmentByIndex(representation,index,lastSegmentTime):null;}function getSegmentByTime(representation,time){var getter=getSegmentsGetter(representation);return getter?getter.getSegmentByTime(representation,time):null;}instance={initialize:initialize,update:update,getSegmentByIndex:getSegmentByIndex,getSegmentByTime:getSegmentByTime};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */SegmentsController.__dashjs_factory_name='SegmentsController';var factory=_FactoryMaker2.default.getClassFactory(SegmentsController);exports.default=factory;


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../utils/TimelineSegmentsGetter":"../node_modules/dashjs/build/es5/src/dash/utils/TimelineSegmentsGetter.js","../utils/TemplateSegmentsGetter":"../node_modules/dashjs/build/es5/src/dash/utils/TemplateSegmentsGetter.js","../utils/ListSegmentsGetter":"../node_modules/dashjs/build/es5/src/dash/utils/ListSegmentsGetter.js","../utils/SegmentBaseGetter":"../node_modules/dashjs/build/es5/src/dash/utils/SegmentBaseGetter.js"}],"../node_modules/dashjs/build/es5/src/dash/DashHandler.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FragmentRequest=require('../streaming/vo/FragmentRequest');var _FragmentRequest2=_interopRequireDefault(_FragmentRequest);var _HTTPRequest=require('../streaming/vo/metrics/HTTPRequest');var _FactoryMaker=require('../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _SegmentsUtils=require('./utils/SegmentsUtils');var _SegmentsController=require('./controllers/SegmentsController');var _SegmentsController2=_interopRequireDefault(_SegmentsController);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function DashHandler(config){config=config||{};var context=this.context;var eventBus=config.eventBus;var events=config.events;var debug=config.debug;var dashConstants=config.dashConstants;var urlUtils=config.urlUtils;var type=config.type;var streamInfo=config.streamInfo;var timelineConverter=config.timelineConverter;var dashMetrics=config.dashMetrics;var baseURLController=config.baseURLController;var instance=void 0,logger=void 0,segmentIndex=void 0,lastSegment=void 0,requestedTime=void 0,isDynamicManifest=void 0,dynamicStreamCompleted=void 0,selectedMimeType=void 0,segmentsController=void 0;function setup(){logger=debug.getLogger(instance);resetInitialSettings();segmentsController=(0,_SegmentsController2.default)(context).create(config);eventBus.on(events.INITIALIZATION_LOADED,onInitializationLoaded,instance);eventBus.on(events.SEGMENTS_LOADED,onSegmentsLoaded,instance);eventBus.on(events.REPRESENTATION_UPDATE_STARTED,onRepresentationUpdateStarted,instance);eventBus.on(events.DYNAMIC_TO_STATIC,onDynamicToStatic,instance);}function initialize(isDynamic){isDynamicManifest=isDynamic;dynamicStreamCompleted=false;segmentsController.initialize(isDynamic);}function getStreamId(){return streamInfo.id;}function getType(){return type;}function getStreamInfo(){return streamInfo;}function setCurrentIndex(value){segmentIndex=value;}function getCurrentIndex(){return segmentIndex;}function resetIndex(){segmentIndex=-1;lastSegment=null;}function resetInitialSettings(){resetIndex();requestedTime=null;segmentsController=null;selectedMimeType=null;}function reset(){resetInitialSettings();eventBus.off(events.INITIALIZATION_LOADED,onInitializationLoaded,instance);eventBus.off(events.SEGMENTS_LOADED,onSegmentsLoaded,instance);eventBus.off(events.REPRESENTATION_UPDATE_STARTED,onRepresentationUpdateStarted,instance);eventBus.off(events.DYNAMIC_TO_STATIC,onDynamicToStatic,instance);}function setRequestUrl(request,destination,representation){var baseURL=baseURLController.resolve(representation.path);var url=void 0,serviceLocation=void 0;if(!baseURL||destination===baseURL.url||!urlUtils.isRelative(destination)){url=destination;}else{url=baseURL.url;serviceLocation=baseURL.serviceLocation;if(destination){url=urlUtils.resolve(destination,url);}}if(urlUtils.isRelative(url)){return false;}request.url=url;request.serviceLocation=serviceLocation;return true;}function generateInitRequest(mediaInfo,representation,mediaType){var request=new _FragmentRequest2.default();var period=representation.adaptation.period;var presentationStartTime=period.start;request.mediaType=mediaType;request.type=_HTTPRequest.HTTPRequest.INIT_SEGMENT_TYPE;request.range=representation.range;request.availabilityStartTime=timelineConverter.calcAvailabilityStartTimeFromPresentationTime(presentationStartTime,period.mpd,isDynamicManifest);request.availabilityEndTime=timelineConverter.calcAvailabilityEndTimeFromPresentationTime(presentationStartTime+period.duration,period.mpd,isDynamicManifest);request.quality=representation.index;request.mediaInfo=mediaInfo;request.representationId=representation.id;if(setRequestUrl(request,representation.initialization,representation)){request.url=(0,_SegmentsUtils.replaceTokenForTemplate)(request.url,'Bandwidth',representation.bandwidth);return request;}}function getInitRequest(mediaInfo,representation){if(!representation)return null;var request=generateInitRequest(mediaInfo,representation,getType());return request;}function setMimeType(newMimeType){selectedMimeType=newMimeType;}function setExpectedLiveEdge(liveEdge){timelineConverter.setExpectedLiveEdge(liveEdge);dashMetrics.updateManifestUpdateInfo({presentationStartTime:liveEdge});}function onRepresentationUpdateStarted(e){processRepresentation(e.representation);}function processRepresentation(voRepresentation){var hasInitialization=voRepresentation.hasInitialization();var hasSegments=voRepresentation.hasSegments();// If representation has initialization and segments information, REPRESENTATION_UPDATE_COMPLETED can be triggered immediately
// otherwise, it means that a request has to be made to get initialization and/or segments informations
if(hasInitialization&&hasSegments){eventBus.trigger(events.REPRESENTATION_UPDATE_COMPLETED,{representation:voRepresentation},{streamId:streamInfo.id,mediaType:type});}else{segmentsController.update(voRepresentation,selectedMimeType,hasInitialization,hasSegments);}}function getRequestForSegment(mediaInfo,segment){if(segment===null||segment===undefined){return null;}var request=new _FragmentRequest2.default();var representation=segment.representation;var bandwidth=representation.adaptation.period.mpd.manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index].Representation_asArray[representation.index].bandwidth;var url=segment.media;url=(0,_SegmentsUtils.replaceTokenForTemplate)(url,'Number',segment.replacementNumber);url=(0,_SegmentsUtils.replaceTokenForTemplate)(url,'Time',segment.replacementTime);url=(0,_SegmentsUtils.replaceTokenForTemplate)(url,'Bandwidth',bandwidth);url=(0,_SegmentsUtils.replaceIDForTemplate)(url,representation.id);url=(0,_SegmentsUtils.unescapeDollarsInTemplate)(url);request.mediaType=getType();request.type=_HTTPRequest.HTTPRequest.MEDIA_SEGMENT_TYPE;request.range=segment.mediaRange;request.startTime=segment.presentationStartTime;request.mediaStartTime=segment.mediaStartTime;request.duration=segment.duration;request.timescale=representation.timescale;request.availabilityStartTime=segment.availabilityStartTime;request.availabilityEndTime=segment.availabilityEndTime;request.wallStartTime=segment.wallStartTime;request.quality=representation.index;request.index=segment.availabilityIdx;request.mediaInfo=mediaInfo;request.adaptationIndex=representation.adaptation.index;request.representationId=representation.id;if(setRequestUrl(request,url,representation)){return request;}}function isMediaFinished(representation){var isFinished=false;if(!representation)return isFinished;if(!isDynamicManifest){if(segmentIndex>=representation.availableSegmentsNumber){isFinished=true;}}else{if(dynamicStreamCompleted){isFinished=true;}else if(lastSegment){var time=parseFloat((lastSegment.presentationStartTime-representation.adaptation.period.start).toFixed(5));var endTime=lastSegment.duration>0?time+1.5*lastSegment.duration:time;var duration=representation.adaptation.period.duration;isFinished=endTime>=duration;}}return isFinished;}function getSegmentRequestForTime(mediaInfo,representation,time,options){var request=null;if(!representation||!representation.segmentInfoType){return request;}var idx=segmentIndex;var keepIdx=options?options.keepIdx:false;var ignoreIsFinished=options&&options.ignoreIsFinished?true:false;if(requestedTime!==time){// When playing at live edge with 0 delay we may loop back with same time and index until it is available. Reduces verboseness of logs.
requestedTime=time;logger.debug('Getting the request for time : '+time);}var segment=segmentsController.getSegmentByTime(representation,time);if(segment){segmentIndex=segment.availabilityIdx;lastSegment=segment;logger.debug('Index for time '+time+' is '+segmentIndex);request=getRequestForSegment(mediaInfo,segment);}else{var finished=!ignoreIsFinished?isMediaFinished(representation):false;if(finished){request=new _FragmentRequest2.default();request.action=_FragmentRequest2.default.ACTION_COMPLETE;request.index=segmentIndex-1;request.mediaType=type;request.mediaInfo=mediaInfo;logger.debug('Signal complete in getSegmentRequestForTime');}}if(keepIdx&&idx>=0){segmentIndex=representation.segmentInfoType===dashConstants.SEGMENT_TIMELINE&&isDynamicManifest?segmentIndex:idx;}return request;}function getNextSegmentRequest(mediaInfo,representation){var request=null;if(!representation||!representation.segmentInfoType){return null;}requestedTime=null;var indexToRequest=segmentIndex+1;logger.debug('Getting the next request at index: '+indexToRequest);// check that there is a segment in this index
var segment=segmentsController.getSegmentByIndex(representation,indexToRequest,lastSegment?lastSegment.mediaStartTime:-1);if(!segment&&isEndlessMedia(representation)&&!dynamicStreamCompleted){logger.debug(getType()+' No segment found at index: '+indexToRequest+'. Wait for next loop');return null;}else{if(segment){request=getRequestForSegment(mediaInfo,segment);segmentIndex=segment.availabilityIdx;}else{if(isDynamicManifest){segmentIndex=indexToRequest-1;}else{segmentIndex=indexToRequest;}}}if(segment){lastSegment=segment;}else{var finished=isMediaFinished(representation,segment);if(finished){request=new _FragmentRequest2.default();request.action=_FragmentRequest2.default.ACTION_COMPLETE;request.index=segmentIndex-1;request.mediaType=getType();request.mediaInfo=mediaInfo;logger.debug('Signal complete');}}return request;}function isEndlessMedia(representation){return!isFinite(representation.adaptation.period.duration);}function onInitializationLoaded(e){var representation=e.representation;if(!representation.segments)return;eventBus.trigger(events.REPRESENTATION_UPDATE_COMPLETED,{representation:representation},{streamId:streamInfo.id,mediaType:type});}function onSegmentsLoaded(e){if(e.error)return;var fragments=e.segments;var representation=e.representation;var segments=[];var count=0;var i=void 0,len=void 0,s=void 0,seg=void 0;for(i=0,len=fragments?fragments.length:0;i<len;i++){s=fragments[i];seg=(0,_SegmentsUtils.getTimeBasedSegment)(timelineConverter,isDynamicManifest,representation,s.startTime,s.duration,s.timescale,s.media,s.mediaRange,count);if(seg){segments.push(seg);seg=null;count++;}}if(segments.length>0){representation.segmentAvailabilityRange={start:segments[0].presentationStartTime,end:segments[segments.length-1].presentationStartTime};representation.availableSegmentsNumber=segments.length;representation.segments=segments;if(isDynamicManifest){var _lastSegment=segments[segments.length-1];var liveEdge=_lastSegment.presentationStartTime-8;// the last segment is the Expected, not calculated, live edge.
setExpectedLiveEdge(liveEdge);}}if(!representation.hasInitialization()){return;}eventBus.trigger(events.REPRESENTATION_UPDATE_COMPLETED,{representation:representation},{streamId:streamInfo.id,mediaType:type});}function onDynamicToStatic(){logger.debug('Dynamic stream complete');dynamicStreamCompleted=true;}instance={initialize:initialize,getStreamId:getStreamId,getType:getType,getStreamInfo:getStreamInfo,getInitRequest:getInitRequest,getRequestForSegment:getRequestForSegment,getSegmentRequestForTime:getSegmentRequestForTime,getNextSegmentRequest:getNextSegmentRequest,setCurrentIndex:setCurrentIndex,getCurrentIndex:getCurrentIndex,isMediaFinished:isMediaFinished,reset:reset,resetIndex:resetIndex,setMimeType:setMimeType};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */DashHandler.__dashjs_factory_name='DashHandler';exports.default=_FactoryMaker2.default.getClassFactory(DashHandler);


},{"../streaming/vo/FragmentRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/FragmentRequest.js","../streaming/vo/metrics/HTTPRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/HTTPRequest.js","../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","./utils/SegmentsUtils":"../node_modules/dashjs/build/es5/src/dash/utils/SegmentsUtils.js","./controllers/SegmentsController":"../node_modules/dashjs/build/es5/src/dash/controllers/SegmentsController.js"}],"../node_modules/dashjs/build/es5/src/streaming/utils/RequestModifier.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function RequestModifier(){var instance=void 0;function modifyRequestURL(url){return url;}function modifyRequestHeader(request){return request;}instance={modifyRequestURL:modifyRequestURL,modifyRequestHeader:modifyRequestHeader};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */RequestModifier.__dashjs_factory_name='RequestModifier';exports.default=_FactoryMaker2.default.getSingletonFactory(RequestModifier);


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/streaming/utils/DefaultURLUtils.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * @module DefaultURLUtils
 * @description Provides utility functions for operating on URLs.
 * Initially this is simply a method to determine the Base URL of a URL, but
 * should probably include other things provided all over the place such as
 * determining whether a URL is relative/absolute, resolving two paths etc.
 * @ignore
 */function DefaultURLUtils(){var resolveFunction=void 0;var schemeRegex=/^[a-z][a-z0-9+\-_.]*:/i;var httpUrlRegex=/^https?:\/\//i;var httpsUrlRegex=/^https:\/\//i;var originRegex=/^([a-z][a-z0-9+\-_.]*:\/\/[^\/]+)\/?/i;/**
     * Resolves a url given an optional base url
     * Uses window.URL to do the resolution.
     *
     * @param {string} url
     * @param {string} [baseUrl]
     * @return {string}
     * @memberof module:DefaultURLUtils
     * @instance
     * @private
     */var nativeURLResolver=function nativeURLResolver(url,baseUrl){try{return new window.URL(url,baseUrl).toString();}catch(e){return url;}};/**
     * Resolves a url given an optional base url
     * Does not resolve ./, ../ etc but will do enough to construct something
     * which will satisfy XHR etc when window.URL is not available ie
     * IE11/node etc.
     *
     * @param {string} url
     * @param {string} [baseUrl]
     * @return {string}
     * @memberof module:DefaultURLUtils
     * @instance
     * @private
     */var dumbURLResolver=function dumbURLResolver(url,baseUrl){var baseUrlParseFunc=parseBaseUrl;if(!baseUrl){return url;}if(!isRelative(url)){return url;}if(isPathAbsolute(url)){baseUrlParseFunc=parseOrigin;}if(isSchemeRelative(url)){baseUrlParseFunc=parseScheme;}var base=baseUrlParseFunc(baseUrl);var joinChar=base.charAt(base.length-1)!=='/'&&url.charAt(0)!=='/'?'/':'';return[base,url].join(joinChar);};function setup(){try{var u=new window.URL('x','http://y');//jshint ignore:line
resolveFunction=nativeURLResolver;}catch(e){// must be IE11/Node etc
}finally{resolveFunction=resolveFunction||dumbURLResolver;}}/**
     * Returns a string that contains the Base URL of a URL, if determinable.
     * @param {string} url - full url
     * @return {string}
     * @memberof module:DefaultURLUtils
     * @instance
     */function parseBaseUrl(url){var slashIndex=url.indexOf('/');var lastSlashIndex=url.lastIndexOf('/');if(slashIndex!==-1){// if there is only '//'
if(lastSlashIndex===slashIndex+1){return url;}if(url.indexOf('?')!==-1){url=url.substring(0,url.indexOf('?'));}return url.substring(0,lastSlashIndex+1);}return'';}/**
     * Returns a string that contains the scheme and origin of a URL,
     * if determinable.
     * @param {string} url - full url
     * @return {string}
     * @memberof module:DefaultURLUtils
     * @instance
     */function parseOrigin(url){var matches=url.match(originRegex);if(matches){return matches[1];}return'';}/**
     * Returns a string that contains the fragment of a URL without scheme,
     * if determinable.
     * @param {string} url - full url
     * @return {string}
     * @memberof module:DefaultURLUtils
     * @instance
     */function removeHostname(url){var urlParts=/^(?:\w+\:\/\/)?([^\/]+)(.*)$/.exec(url);//[1] = host / [2] = path
return urlParts[2].substring(1);}/**
     * Returns a string that contains the scheme of a URL, if determinable.
     * @param {string} url - full url
     * @return {string}
     * @memberof module:DefaultURLUtils
     * @instance
     */function parseScheme(url){var matches=url.match(schemeRegex);if(matches){return matches[0];}return'';}/**
     * Determines whether the url is relative.
     * @return {boolean}
     * @param {string} url
     * @memberof module:DefaultURLUtils
     * @instance
     */function isRelative(url){return!schemeRegex.test(url);}/**
     * Determines whether the url is path-absolute.
     * @return {bool}
     * @param {string} url
     * @memberof module:DefaultURLUtils
     * @instance
     */function isPathAbsolute(url){return isRelative(url)&&url.charAt(0)==='/';}/**
     * Determines whether the url is scheme-relative.
     * @return {bool}
     * @param {string} url
     * @memberof module:DefaultURLUtils
     * @instance
     */function isSchemeRelative(url){return url.indexOf('//')===0;}/**
     * Determines whether the url is an HTTP-URL as defined in ISO/IEC
     * 23009-1:2014 3.1.15. ie URL with a fixed scheme of http or https
     * @return {bool}
     * @param {string} url
     * @memberof module:DefaultURLUtils
     * @instance
     */function isHTTPURL(url){return httpUrlRegex.test(url);}/**
     * Determines whether the supplied url has https scheme
     * @return {bool}
     * @param {string} url
     * @memberof module:DefaultURLUtils
     * @instance
     */function isHTTPS(url){return httpsUrlRegex.test(url);}/**
     * Resolves a url given an optional base url
     * @return {string}
     * @param {string} url
     * @param {string} [baseUrl]
     * @memberof module:DefaultURLUtils
     * @instance
     */function resolve(url,baseUrl){return resolveFunction(url,baseUrl);}setup();var instance={parseBaseUrl:parseBaseUrl,parseOrigin:parseOrigin,parseScheme:parseScheme,isRelative:isRelative,isPathAbsolute:isPathAbsolute,isSchemeRelative:isSchemeRelative,isHTTPURL:isHTTPURL,isHTTPS:isHTTPS,removeHostname:removeHostname,resolve:resolve};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */DefaultURLUtils.__dashjs_factory_name='DefaultURLUtils';exports.default=_FactoryMaker2.default.getSingletonFactory(DefaultURLUtils);


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/streaming/utils/URLUtils.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _DefaultURLUtils=require('./DefaultURLUtils');var _DefaultURLUtils2=_interopRequireDefault(_DefaultURLUtils);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * @module URLUtils
 * @ignore
 * @description Provides utility functions for operating on URLs.
 * Initially this is simply a method to determine the Base URL of a URL, but
 * should probably include other things provided all over the place such as
 * determining whether a URL is relative/absolute, resolving two paths etc.
 *//**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function URLUtils(){var instance=void 0;var defaultURLUtils=void 0;var regexUtils=[];var context=this.context;function getUtils(url){var i=void 0;for(i=0;i<regexUtils.length;i++){var regex=regexUtils[i].regex;if(regex.test(url)){return regexUtils[i].utils;}}return defaultURLUtils;}function setup(){defaultURLUtils=(0,_DefaultURLUtils2.default)(context).getInstance();}/**
     * Register a module to handle specific url.
     * @param {regex} regex - url regex
     * @param {object} utils - object that handles the regex
     * @memberof module:URLUtils
     * @instance
     */function registerUrlRegex(regex,utils){regexUtils.push({regex:regex,utils:utils});}function internalCall(functionName,url,baseUrl){var utils=getUtils(baseUrl||url);return utils&&typeof utils[functionName]==='function'?utils[functionName](url,baseUrl):defaultURLUtils[functionName](url,baseUrl);}/**
     * Returns a string that contains the Base URL of a URL, if determinable.
     * @param {string} url - full url
     * @return {string}
     * @memberof module:URLUtils
     * @instance
     */function parseBaseUrl(url){return internalCall('parseBaseUrl',url);}/**
     * Returns a string that contains the scheme and origin of a URL,
     * if determinable.
     * @param {string} url - full url
     * @return {string}
     * @memberof module:URLUtils
     * @instance
     */function parseOrigin(url){return internalCall('parseOrigin',url);}/**
     * Returns a string that contains the fragment of a URL without scheme,
     * if determinable.
     * @param {string} url - full url
     * @return {string}
     * @memberof module:URLUtils
     * @instance
     */function removeHostname(url){return internalCall('removeHostname',url);}/**
     * Returns a string that contains the scheme of a URL, if determinable.
     * @param {string} url - full url
     * @return {string}
     * @memberof module:URLUtils
     * @instance
     */function parseScheme(url){return internalCall('parseScheme',url);}/**
     * Determines whether the url is relative.
     * @return {boolean}
     * @param {string} url
     * @memberof module:URLUtils
     * @instance
     */function isRelative(url){return internalCall('isRelative',url);}/**
     * Determines whether the url is path-absolute.
     * @return {bool}
     * @param {string} url
     * @memberof module:URLUtils
     * @instance
     */function isPathAbsolute(url){return internalCall('isPathAbsolute',url);}/**
     * Determines whether the url is scheme-relative.
     * @return {bool}
     * @param {string} url
     * @memberof module:URLUtils
     * @instance
     */function isSchemeRelative(url){return internalCall('isSchemeRelative',url);}/**
     * Determines whether the url is an HTTP-URL as defined in ISO/IEC
     * 23009-1:2014 3.1.15. ie URL with a fixed scheme of http or https
     * @return {bool}
     * @param {string} url
     * @memberof module:URLUtils
     * @instance
     */function isHTTPURL(url){return internalCall('isHTTPURL',url);}/**
     * Determines whether the supplied url has https scheme
     * @return {bool}
     * @param {string} url
     * @memberof module:URLUtils
     * @instance
     */function isHTTPS(url){return internalCall('isHTTPS',url);}/**
     * Resolves a url given an optional base url
     * @return {string}
     * @param {string} url
     * @param {string} [baseUrl]
     * @memberof module:URLUtils
     * @instance
     */function resolve(url,baseUrl){return internalCall('resolve',url,baseUrl);}setup();instance={registerUrlRegex:registerUrlRegex,parseBaseUrl:parseBaseUrl,parseOrigin:parseOrigin,parseScheme:parseScheme,isRelative:isRelative,isPathAbsolute:isPathAbsolute,isSchemeRelative:isSchemeRelative,isHTTPURL:isHTTPURL,isHTTPS:isHTTPS,removeHostname:removeHostname,resolve:resolve};return instance;}URLUtils.__dashjs_factory_name='URLUtils';var factory=_FactoryMaker2.default.getSingletonFactory(URLUtils);exports.default=factory;


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","./DefaultURLUtils":"../node_modules/dashjs/build/es5/src/streaming/utils/DefaultURLUtils.js"}],"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/PlayList.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @classdesc a PlayList from ISO23009-1 Annex D, this Object holds reference to the playback session information
 * @ignore
 */var PlayList=/**
     * @class
     */function PlayList(){_classCallCheck(this,PlayList);/**
         * Timestamp of the user action that starts the playback stream...
         * @public
         */this.start=null;/**
         * Presentation time at which playout was requested by the user...
         * @public
         */this.mstart=null;/**
         * Type of user action which triggered playout
         * - New playout request (e.g. initial playout or seeking)
         * - Resume from pause
         * - Other user request (e.g. user-requested quality change)
         * - Start of a metrics collection stream (hence earlier entries in the play list not collected)
         * @public
         */this.starttype=null;/**
         * List of streams of continuous rendering of decoded samples.
         * @public
         */this.trace=[];};/* Public Static Constants */PlayList.INITIAL_PLAYOUT_START_REASON='initial_playout';PlayList.SEEK_START_REASON='seek';PlayList.RESUME_FROM_PAUSE_START_REASON='resume';PlayList.METRICS_COLLECTION_START_REASON='metrics_collection_start';/**
 * @classdesc a PlayList.Trace from ISO23009-1 Annex D
 * @ignore
 */var PlayListTrace=/**
     * @class
     */function PlayListTrace(){_classCallCheck(this,PlayListTrace);/**
         * The value of the Representation@id of the Representation from which the samples were taken.
         * @type {string}
         * @public
         */this.representationid=null;/**
         * If not present, this metrics concerns the Representation as a whole.
         * If present, subreplevel indicates the greatest value of any
         * Subrepresentation@level being rendered.
         * @type {number}
         * @public
         */this.subreplevel=null;/**
         * The time at which the first sample was rendered
         * @type {number}
         * @public
         */this.start=null;/**
         * The presentation time of the first sample rendered.
         * @type {number}
         * @public
         */this.mstart=null;/**
         * The duration of the continuously presented samples (which is the same in real time and media time). "Continuously presented" means that the media clock continued to advance at the playout speed throughout the interval. NOTE: the spec does not call out the units, but all other durations etc are in ms, and we use ms too.
         * @type {number}
         * @public
         */this.duration=null;/**
         * The playback speed relative to normal playback speed (i.e.normal forward playback speed is 1.0).
         * @type {number}
         * @public
         */this.playbackspeed=null;/**
         * The reason why continuous presentation of this Representation was stopped.
         * representation switch
         * rebuffering
         * user request
         * end of Period
         * end of Stream
         * end of content
         * end of a metrics collection period
         *
         * @type {string}
         * @public
         */this.stopreason=null;};PlayListTrace.REPRESENTATION_SWITCH_STOP_REASON='representation_switch';PlayListTrace.REBUFFERING_REASON='rebuffering';PlayListTrace.USER_REQUEST_STOP_REASON='user_request';PlayListTrace.END_OF_PERIOD_STOP_REASON='end_of_period';PlayListTrace.END_OF_CONTENT_STOP_REASON='end_of_content';PlayListTrace.METRICS_COLLECTION_STOP_REASON='metrics_collection_end';PlayListTrace.FAILURE_STOP_REASON='failure';exports.PlayList=PlayList;exports.PlayListTrace=PlayListTrace;


},{}],"../node_modules/dashjs/build/es5/src/streaming/StreamProcessor.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('./constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _DashConstants=require('../dash/constants/DashConstants');var _DashConstants2=_interopRequireDefault(_DashConstants);var _MetricsConstants=require('./constants/MetricsConstants');var _MetricsConstants2=_interopRequireDefault(_MetricsConstants);var _FragmentModel=require('./models/FragmentModel');var _FragmentModel2=_interopRequireDefault(_FragmentModel);var _BufferController=require('./controllers/BufferController');var _BufferController2=_interopRequireDefault(_BufferController);var _TextBufferController=require('./text/TextBufferController');var _TextBufferController2=_interopRequireDefault(_TextBufferController);var _ScheduleController=require('./controllers/ScheduleController');var _ScheduleController2=_interopRequireDefault(_ScheduleController);var _RepresentationController=require('../dash/controllers/RepresentationController');var _RepresentationController2=_interopRequireDefault(_RepresentationController);var _LiveEdgeFinder=require('./utils/LiveEdgeFinder');var _LiveEdgeFinder2=_interopRequireDefault(_LiveEdgeFinder);var _FactoryMaker=require('../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _SupervisorTools=require('./utils/SupervisorTools');var _EventBus=require('../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _DashHandler=require('../dash/DashHandler');var _DashHandler2=_interopRequireDefault(_DashHandler);var _Errors=require('../core/errors/Errors');var _Errors2=_interopRequireDefault(_Errors);var _DashJSError=require('./vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);var _Debug=require('../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _RequestModifier=require('./utils/RequestModifier');var _RequestModifier2=_interopRequireDefault(_RequestModifier);var _URLUtils=require('../streaming/utils/URLUtils');var _URLUtils2=_interopRequireDefault(_URLUtils);var _BoxParser=require('./utils/BoxParser');var _BoxParser2=_interopRequireDefault(_BoxParser);var _FragmentRequest=require('./vo/FragmentRequest');var _FragmentRequest2=_interopRequireDefault(_FragmentRequest);var _PlayList=require('./vo/metrics/PlayList');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function StreamProcessor(config){config=config||{};var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var streamInfo=config.streamInfo;var type=config.type;var errHandler=config.errHandler;var mimeType=config.mimeType;var timelineConverter=config.timelineConverter;var adapter=config.adapter;var manifestModel=config.manifestModel;var mediaPlayerModel=config.mediaPlayerModel;var fragmentModel=config.fragmentModel;var abrController=config.abrController;var playbackController=config.playbackController;var mediaController=config.mediaController;var textController=config.textController;var dashMetrics=config.dashMetrics;var settings=config.settings;var boxParser=config.boxParser;var instance=void 0,logger=void 0,isDynamic=void 0,mediaInfo=void 0,mediaInfoArr=void 0,bufferController=void 0,scheduleController=void 0,representationController=void 0,liveEdgeFinder=void 0,indexHandler=void 0,bufferingTime=void 0,bufferPruned=void 0;function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);resetInitialSettings();eventBus.on(_Events2.default.DATA_UPDATE_COMPLETED,onDataUpdateCompleted,instance,{priority:_EventBus2.default.EVENT_PRIORITY_HIGH});// High priority to be notified before Stream
eventBus.on(_Events2.default.QUALITY_CHANGE_REQUESTED,onQualityChanged,instance);eventBus.on(_Events2.default.INIT_FRAGMENT_NEEDED,onInitFragmentNeeded,instance);eventBus.on(_Events2.default.MEDIA_FRAGMENT_NEEDED,onMediaFragmentNeeded,instance);eventBus.on(_Events2.default.MEDIA_FRAGMENT_LOADED,onMediaFragmentLoaded,instance);eventBus.on(_Events2.default.BUFFER_LEVEL_UPDATED,onBufferLevelUpdated,instance);eventBus.on(_Events2.default.BUFFER_LEVEL_STATE_CHANGED,onBufferLevelStateChanged,instance);eventBus.on(_Events2.default.BUFFER_CLEARED,onBufferCleared,instance);eventBus.on(_Events2.default.SEEK_TARGET,onSeekTarget,instance);}function initialize(mediaSource,hasVideoTrack){indexHandler=(0,_DashHandler2.default)(context).create({streamInfo:streamInfo,type:type,timelineConverter:timelineConverter,dashMetrics:dashMetrics,mediaPlayerModel:mediaPlayerModel,baseURLController:config.baseURLController,errHandler:errHandler,settings:settings,boxParser:boxParser,events:_Events2.default,eventBus:eventBus,errors:_Errors2.default,debug:(0,_Debug2.default)(context).getInstance(),requestModifier:(0,_RequestModifier2.default)(context).getInstance(),dashConstants:_DashConstants2.default,constants:_Constants2.default,urlUtils:(0,_URLUtils2.default)(context).getInstance()});// Create live edge finder for dynamic streams
isDynamic=streamInfo.manifestInfo.isDynamic;if(isDynamic){liveEdgeFinder=(0,_LiveEdgeFinder2.default)(context).create({timelineConverter:timelineConverter});}// Create/initialize controllers
indexHandler.initialize(isDynamic);abrController.registerStreamType(type,instance);representationController=(0,_RepresentationController2.default)(context).create({streamInfo:streamInfo,type:type,abrController:abrController,dashMetrics:dashMetrics,playbackController:playbackController,timelineConverter:timelineConverter,dashConstants:_DashConstants2.default,events:_Events2.default,eventBus:eventBus,errors:_Errors2.default});bufferController=createBufferControllerForType(type);if(bufferController){bufferController.initialize(mediaSource);}scheduleController=(0,_ScheduleController2.default)(context).create({streamInfo:streamInfo,type:type,mimeType:mimeType,adapter:adapter,dashMetrics:dashMetrics,mediaPlayerModel:mediaPlayerModel,fragmentModel:fragmentModel,abrController:abrController,playbackController:playbackController,textController:textController,mediaController:mediaController,bufferController:bufferController,settings:settings});scheduleController.initialize(hasVideoTrack);bufferingTime=0;bufferPruned=false;}function getStreamId(){return streamInfo.id;}function getType(){return type;}function resetInitialSettings(){mediaInfoArr=[];mediaInfo=null;bufferingTime=0;}function reset(errored,keepBuffers){if(indexHandler){indexHandler.reset();}if(bufferController){bufferController.reset(errored,keepBuffers);bufferController=null;}if(scheduleController){scheduleController.reset();scheduleController=null;}if(representationController){representationController.reset();representationController=null;}if(liveEdgeFinder){liveEdgeFinder.reset();liveEdgeFinder=null;}if(abrController){abrController.unRegisterStreamType(type);}eventBus.off(_Events2.default.DATA_UPDATE_COMPLETED,onDataUpdateCompleted,instance);eventBus.off(_Events2.default.QUALITY_CHANGE_REQUESTED,onQualityChanged,instance);eventBus.off(_Events2.default.INIT_FRAGMENT_NEEDED,onInitFragmentNeeded,instance);eventBus.off(_Events2.default.MEDIA_FRAGMENT_NEEDED,onMediaFragmentNeeded,instance);eventBus.off(_Events2.default.MEDIA_FRAGMENT_LOADED,onMediaFragmentLoaded,instance);eventBus.off(_Events2.default.BUFFER_LEVEL_UPDATED,onBufferLevelUpdated,instance);eventBus.off(_Events2.default.BUFFER_LEVEL_STATE_CHANGED,onBufferLevelStateChanged,instance);eventBus.off(_Events2.default.BUFFER_CLEARED,onBufferCleared,instance);eventBus.off(_Events2.default.SEEK_TARGET,onSeekTarget,instance);resetInitialSettings();type=null;streamInfo=null;}function isUpdating(){return representationController?representationController.isUpdating():false;}function onDataUpdateCompleted(e){if(!e.error){// Update representation if no error
scheduleController.setCurrentRepresentation(adapter.convertDataToRepresentationInfo(e.currentRepresentation));}if(!e.error||e.error.code===_Errors2.default.SEGMENTS_UPDATE_FAILED_ERROR_CODE){// Update has been postponed, update nevertheless DVR info
var activeStreamId=playbackController.getStreamController().getActiveStreamInfo().id;if(activeStreamId===streamInfo.id){addDVRMetric();}}}function onQualityChanged(e){var representationInfo=getRepresentationInfo(e.newQuality);scheduleController.setCurrentRepresentation(representationInfo);dashMetrics.pushPlayListTraceMetrics(new Date(),_PlayList.PlayListTrace.REPRESENTATION_SWITCH_STOP_REASON);dashMetrics.createPlaylistTraceMetrics(representationInfo.id,playbackController.getTime()*1000,playbackController.getPlaybackRate());}function onBufferLevelUpdated(e){dashMetrics.addBufferLevel(type,new Date(),e.bufferLevel*1000);var activeStreamId=playbackController.getStreamController().getActiveStreamInfo().id;if(!manifestModel.getValue().doNotUpdateDVRWindowOnBufferUpdated&&streamInfo.id===activeStreamId){addDVRMetric();}}function onBufferLevelStateChanged(e){dashMetrics.addBufferState(type,e.state,scheduleController.getBufferTarget());if(e.state===_MetricsConstants2.default.BUFFER_EMPTY&&!playbackController.isSeeking()){// logger.info('Buffer is empty! Stalling!');
dashMetrics.pushPlayListTraceMetrics(new Date(),_PlayList.PlayListTrace.REBUFFERING_REASON);}}function onBufferCleared(e){// Remove executed requests not buffered anymore
fragmentModel.syncExecutedRequestsWithBufferedRange(bufferController.getBuffer().getAllBufferRanges(),streamInfo.duration);// If buffer removed ahead current time (QuotaExceededError or automatic buffer pruning) then adjust current index handler time
if(e.from>playbackController.getTime()){bufferingTime=e.from;bufferPruned=true;}}function addDVRMetric(){var manifestInfo=streamInfo.manifestInfo;var isDynamic=manifestInfo.isDynamic;var range=timelineConverter.calcSegmentAvailabilityRange(representationController.getCurrentRepresentation(),isDynamic);dashMetrics.addDVRInfo(getType(),playbackController.getTime(),manifestInfo,range);}function getRepresentationController(){return representationController;}function getBuffer(){return bufferController?bufferController.getBuffer():null;}function setBuffer(buffer){bufferController.setBuffer(buffer);}function getBufferController(){return bufferController;}function getFragmentModel(){return fragmentModel;}function updateStreamInfo(newStreamInfo){streamInfo=newStreamInfo;if(settings.get().streaming.useAppendWindow){bufferController.updateAppendWindow();}}function getStreamInfo(){return streamInfo;}function selectMediaInfo(newMediaInfo){if(newMediaInfo!==mediaInfo&&(!newMediaInfo||!mediaInfo||newMediaInfo.type===mediaInfo.type)){mediaInfo=newMediaInfo;}var newRealAdaptation=adapter.getRealAdaptation(streamInfo,mediaInfo);var voRepresentations=adapter.getVoRepresentations(mediaInfo);if(representationController){var realAdaptation=representationController.getData();var maxQuality=abrController.getTopQualityIndexFor(type,streamInfo.id);var minIdx=abrController.getMinAllowedIndexFor(type);var quality=void 0,averageThroughput=void 0;var bitrate=null;if((realAdaptation===null||realAdaptation.id!=newRealAdaptation.id)&&type!==_Constants2.default.FRAGMENTED_TEXT){averageThroughput=abrController.getThroughputHistory().getAverageThroughput(type);bitrate=averageThroughput||abrController.getInitialBitrateFor(type);quality=abrController.getQualityForBitrate(mediaInfo,bitrate);}else{quality=abrController.getQualityFor(type);}if(minIdx!==undefined&&quality<minIdx){quality=minIdx;}if(quality>maxQuality){quality=maxQuality;}indexHandler.setMimeType(mediaInfo?mediaInfo.mimeType:null);representationController.updateData(newRealAdaptation,voRepresentations,type,quality);}}function addMediaInfo(newMediaInfo,selectNewMediaInfo){if(mediaInfoArr.indexOf(newMediaInfo)===-1){mediaInfoArr.push(newMediaInfo);}if(selectNewMediaInfo){this.selectMediaInfo(newMediaInfo);}}function getMediaInfoArr(){return mediaInfoArr;}function getMediaInfo(){return mediaInfo;}function getMediaSource(){return bufferController.getMediaSource();}function setMediaSource(mediaSource){bufferController.setMediaSource(mediaSource,getMediaInfoArr());}function dischargePreBuffer(){bufferController.dischargePreBuffer();}function getScheduleController(){return scheduleController;}/**
     * Get a specific voRepresentation. If quality parameter is defined, this function will return the voRepresentation for this quality.
     * Otherwise, this function will return the current voRepresentation used by the representationController.
     * @param {number} quality - quality index of the voRepresentaion expected.
     */function getRepresentationInfo(quality){var voRepresentation=void 0;if(quality!==undefined){(0,_SupervisorTools.checkInteger)(quality);voRepresentation=representationController?representationController.getRepresentationForQuality(quality):null;}else{voRepresentation=representationController?representationController.getCurrentRepresentation():null;}return adapter.convertDataToRepresentationInfo(voRepresentation);}function isBufferingCompleted(){return bufferController?bufferController.getIsBufferingCompleted():false;}function getBufferLevel(){return bufferController?bufferController.getBufferLevel():0;}function onInitFragmentNeeded(e){// Event propagation may have been stopped (see MssHandler)
if(!e.sender)return;if(adapter.getIsTextTrack(mimeType)&&!textController.isTextEnabled())return;if(bufferController&&e.representationId){if(!bufferController.appendInitSegment(e.representationId)){// Init segment not in cache, send new request
var request=indexHandler?indexHandler.getInitRequest(getMediaInfo(),representationController.getCurrentRepresentation()):null;scheduleController.processInitRequest(request);}}}function onMediaFragmentNeeded(e){var request=void 0;// Don't schedule next fragments while pruning to avoid buffer inconsistencies
if(!bufferController.getIsPruningInProgress()){request=findNextRequest(e.seekTarget,e.replacement);if(request){scheduleController.setSeekTarget(NaN);if(!e.replacement){if(!isNaN(request.startTime+request.duration)){bufferingTime=request.startTime+request.duration;}request.delayLoadingTime=new Date().getTime()+scheduleController.getTimeToLoadDelay();scheduleController.setTimeToLoadDelay(0);}}}scheduleController.processMediaRequest(request);}function findNextRequest(seekTarget,requestToReplace){var representationInfo=getRepresentationInfo();var hasSeekTarget=!isNaN(seekTarget);var currentTime=playbackController.getNormalizedTime();var time=hasSeekTarget?seekTarget:bufferingTime;var bufferIsDivided=false;var request=void 0;if(isNaN(time)||getType()===_Constants2.default.FRAGMENTED_TEXT&&!textController.isTextEnabled()){return null;}/**
         * This is critical for IE/Safari/EDGE
         * */if(bufferController){var range=bufferController.getRangeAt(time);var playingRange=bufferController.getRangeAt(currentTime);if((range!==null||playingRange!==null)&&!hasSeekTarget){if(!range||playingRange&&playingRange.start!=range.start&&playingRange.end!=range.end){var hasDiscontinuities=bufferController.getBuffer().hasDiscontinuitiesAfter(currentTime);if(hasDiscontinuities&&getType()!==_Constants2.default.FRAGMENTED_TEXT){fragmentModel.removeExecutedRequestsAfterTime(playingRange.end);bufferIsDivided=true;}}}}if(requestToReplace){time=requestToReplace.startTime+requestToReplace.duration/2;request=getFragmentRequest(representationInfo,time,{timeThreshold:0,ignoreIsFinished:true});}else{// Use time just whenever is strictly needed
var useTime=hasSeekTarget||bufferPruned||bufferIsDivided;request=getFragmentRequest(representationInfo,useTime?time:undefined,{keepIdx:!useTime});bufferPruned=false;// Then, check if this request was downloaded or not
while(request&&request.action!==_FragmentRequest2.default.ACTION_COMPLETE&&fragmentModel.isFragmentLoaded(request)){// loop until we found not loaded fragment, or no fragment
request=getFragmentRequest(representationInfo);}}return request;}function onMediaFragmentLoaded(e){var chunk=e.chunk;var bytes=chunk.bytes;var quality=chunk.quality;var currentRepresentation=getRepresentationInfo(quality);var voRepresentation=representationController&&currentRepresentation?representationController.getRepresentationForQuality(currentRepresentation.quality):null;var eventStreamMedia=adapter.getEventsFor(currentRepresentation.mediaInfo);var eventStreamTrack=adapter.getEventsFor(currentRepresentation,voRepresentation);if(eventStreamMedia&&eventStreamMedia.length>0||eventStreamTrack&&eventStreamTrack.length>0){var request=fragmentModel.getRequests({state:_FragmentModel2.default.FRAGMENT_MODEL_EXECUTED,quality:quality,index:chunk.index})[0];var events=handleInbandEvents(bytes,request,eventStreamMedia,eventStreamTrack);eventBus.trigger(_Events2.default.INBAND_EVENTS,{events:events},{streamId:streamInfo.id});}}function handleInbandEvents(data,request,mediaInbandEvents,trackInbandEvents){try{var eventStreams={};var events=[];/* Extract the possible schemeIdUri : If a DASH client detects an event message box with a scheme that is not defined in MPD, the client is expected to ignore it */var inbandEvents=mediaInbandEvents.concat(trackInbandEvents);for(var i=0,ln=inbandEvents.length;i<ln;i++){eventStreams[inbandEvents[i].schemeIdUri+'/'+inbandEvents[i].value]=inbandEvents[i];}var isoFile=(0,_BoxParser2.default)(context).getInstance().parse(data);var eventBoxes=isoFile.getBoxes('emsg');if(!eventBoxes||eventBoxes.length===0){return events;}var sidx=isoFile.getBox('sidx');var mediaAnchorTime=sidx&&!isNaN(sidx.earliest_presentation_time)&&!isNaN(sidx.timescale)?sidx.earliest_presentation_time/sidx.timescale:request&&!isNaN(request.mediaStartTime)?request.mediaStartTime:0;var fragmentMediaStartTime=Math.max(mediaAnchorTime,0);var voRepresentation=representationController.getCurrentRepresentation();for(var _i=0,_ln=eventBoxes.length;_i<_ln;_i++){var event=adapter.getEvent(eventBoxes[_i],eventStreams,fragmentMediaStartTime,voRepresentation);if(event){events.push(event);}}return events;}catch(e){return[];}}function createBuffer(previousBuffers){return getBuffer()||bufferController?bufferController.createBuffer(mediaInfoArr,previousBuffers):null;}function switchTrackAsked(){scheduleController.switchTrackAsked();}function createBufferControllerForType(type){var controller=null;if(!type){errHandler.error(new _DashJSError2.default(_Errors2.default.MEDIASOURCE_TYPE_UNSUPPORTED_CODE,_Errors2.default.MEDIASOURCE_TYPE_UNSUPPORTED_MESSAGE+'not properly defined'));return null;}if(type===_Constants2.default.VIDEO||type===_Constants2.default.AUDIO){controller=(0,_BufferController2.default)(context).create({streamInfo:streamInfo,type:type,mediaPlayerModel:mediaPlayerModel,manifestModel:manifestModel,fragmentModel:fragmentModel,errHandler:errHandler,mediaController:mediaController,representationController:representationController,adapter:adapter,textController:textController,abrController:abrController,playbackController:playbackController,settings:settings});}else{controller=(0,_TextBufferController2.default)(context).create({streamInfo:streamInfo,type:type,mimeType:mimeType,mediaPlayerModel:mediaPlayerModel,manifestModel:manifestModel,fragmentModel:fragmentModel,errHandler:errHandler,mediaController:mediaController,representationController:representationController,adapter:adapter,textController:textController,abrController:abrController,playbackController:playbackController,settings:settings});}return controller;}function getLiveStartTime(){if(!isDynamic)return NaN;if(!liveEdgeFinder)return NaN;var liveStartTime=NaN;var currentRepresentationInfo=getRepresentationInfo();var liveEdge=liveEdgeFinder.getLiveEdge(currentRepresentationInfo);if(isNaN(liveEdge)){return NaN;}var request=findRequestForLiveEdge(liveEdge,currentRepresentationInfo);if(request){// When low latency mode is selected but browser doesn't support fetch
// start at the beginning of the segment to avoid consuming the whole buffer
if(settings.get().streaming.lowLatencyEnabled){liveStartTime=request.duration<mediaPlayerModel.getLiveDelay()?request.startTime:request.startTime+request.duration-mediaPlayerModel.getLiveDelay();}else{liveStartTime=request.startTime;}}return liveStartTime;}function findRequestForLiveEdge(liveEdge,currentRepresentationInfo){try{var request=null;var liveDelay=playbackController.getLiveDelay();var dvrWindowSize=!isNaN(streamInfo.manifestInfo.DVRWindowSize)?streamInfo.manifestInfo.DVRWindowSize:liveDelay;var dvrWindowSafetyMargin=0.1*dvrWindowSize;var startTime=void 0;// Make sure that we have at least a valid request for the end of the DVR window, otherwise we might try forever
if(!isFinite(dvrWindowSize)||getFragmentRequest(currentRepresentationInfo,liveEdge-dvrWindowSize+dvrWindowSafetyMargin,{ignoreIsFinished:true})){// Try to find a request as close as possible to the targeted live edge
while(!request&&liveDelay<=dvrWindowSize){startTime=liveEdge-liveDelay;request=getFragmentRequest(currentRepresentationInfo,startTime,{ignoreIsFinished:true});if(!request){liveDelay+=1;// Increase by one second for each iteration
}}}if(request){playbackController.setLiveDelay(liveDelay,true);}logger.debug('live edge: '+liveEdge+', live delay: '+liveDelay+', live target: '+startTime);return request;}catch(e){return null;}}function onSeekTarget(e){bufferingTime=e.time;scheduleController.setSeekTarget(e.time);}function setBufferingTime(value){bufferingTime=value;}function resetIndexHandler(){if(indexHandler){indexHandler.resetIndex();}}function getInitRequest(quality){(0,_SupervisorTools.checkInteger)(quality);var representation=representationController?representationController.getRepresentationForQuality(quality):null;return indexHandler?indexHandler.getInitRequest(getMediaInfo(),representation):null;}function getFragmentRequest(representationInfo,time,options){var fragRequest=null;if(indexHandler){var representation=representationController&&representationInfo?representationController.getRepresentationForQuality(representationInfo.quality):null;// if time and options are undefined, it means the next segment is requested
// otherwise, the segment at this specific time is requested.
if(time!==undefined&&options!==undefined){fragRequest=indexHandler.getSegmentRequestForTime(getMediaInfo(),representation,time,options);}else{fragRequest=indexHandler.getNextSegmentRequest(getMediaInfo(),representation);}}return fragRequest;}function finalisePlayList(time,reason){dashMetrics.pushPlayListTraceMetrics(time,reason);}instance={initialize:initialize,getStreamId:getStreamId,getType:getType,isUpdating:isUpdating,getBufferController:getBufferController,getFragmentModel:getFragmentModel,getScheduleController:getScheduleController,getRepresentationController:getRepresentationController,getRepresentationInfo:getRepresentationInfo,getBufferLevel:getBufferLevel,isBufferingCompleted:isBufferingCompleted,createBuffer:createBuffer,updateStreamInfo:updateStreamInfo,getStreamInfo:getStreamInfo,selectMediaInfo:selectMediaInfo,addMediaInfo:addMediaInfo,getLiveStartTime:getLiveStartTime,switchTrackAsked:switchTrackAsked,getMediaInfoArr:getMediaInfoArr,getMediaInfo:getMediaInfo,getMediaSource:getMediaSource,setMediaSource:setMediaSource,dischargePreBuffer:dischargePreBuffer,getBuffer:getBuffer,setBuffer:setBuffer,setBufferingTime:setBufferingTime,resetIndexHandler:resetIndexHandler,getInitRequest:getInitRequest,getFragmentRequest:getFragmentRequest,finalisePlayList:finalisePlayList,reset:reset};setup();return instance;}StreamProcessor.__dashjs_factory_name='StreamProcessor';exports.default=_FactoryMaker2.default.getClassFactory(StreamProcessor);


},{"./constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../dash/constants/DashConstants":"../node_modules/dashjs/build/es5/src/dash/constants/DashConstants.js","./constants/MetricsConstants":"../node_modules/dashjs/build/es5/src/streaming/constants/MetricsConstants.js","./models/FragmentModel":"../node_modules/dashjs/build/es5/src/streaming/models/FragmentModel.js","./controllers/BufferController":"../node_modules/dashjs/build/es5/src/streaming/controllers/BufferController.js","./text/TextBufferController":"../node_modules/dashjs/build/es5/src/streaming/text/TextBufferController.js","./controllers/ScheduleController":"../node_modules/dashjs/build/es5/src/streaming/controllers/ScheduleController.js","../dash/controllers/RepresentationController":"../node_modules/dashjs/build/es5/src/dash/controllers/RepresentationController.js","./utils/LiveEdgeFinder":"../node_modules/dashjs/build/es5/src/streaming/utils/LiveEdgeFinder.js","../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","./utils/SupervisorTools":"../node_modules/dashjs/build/es5/src/streaming/utils/SupervisorTools.js","../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../dash/DashHandler":"../node_modules/dashjs/build/es5/src/dash/DashHandler.js","../core/errors/Errors":"../node_modules/dashjs/build/es5/src/core/errors/Errors.js","./vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js","../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","./utils/RequestModifier":"../node_modules/dashjs/build/es5/src/streaming/utils/RequestModifier.js","../streaming/utils/URLUtils":"../node_modules/dashjs/build/es5/src/streaming/utils/URLUtils.js","./utils/BoxParser":"../node_modules/dashjs/build/es5/src/streaming/utils/BoxParser.js","./vo/FragmentRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/FragmentRequest.js","./vo/metrics/PlayList":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/PlayList.js"}],"../node_modules/dashjs/build/es5/src/streaming/vo/DataChunk.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var DataChunk=//Represents a data structure that keep all the necessary info about a single init/media segment
function DataChunk(){_classCallCheck(this,DataChunk);this.streamId=null;this.mediaInfo=null;this.segmentType=null;this.quality=NaN;this.index=NaN;this.bytes=null;this.start=NaN;this.end=NaN;this.duration=NaN;this.representationId=null;this.endFragment=null;};exports.default=DataChunk;


},{}],"../node_modules/dashjs/build/es5/src/streaming/net/XHRLoader.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * @module XHRLoader
 * @ignore
 * @description Manages download of resources via HTTP.
 * @param {Object} cfg - dependencies from parent
 */function XHRLoader(cfg){cfg=cfg||{};var requestModifier=cfg.requestModifier;var instance=void 0;function load(httpRequest){// Variables will be used in the callback functions
var requestStartTime=new Date();var request=httpRequest.request;var xhr=new XMLHttpRequest();xhr.open(httpRequest.method,httpRequest.url,true);if(request.responseType){xhr.responseType=request.responseType;}if(request.range){xhr.setRequestHeader('Range','bytes='+request.range);}if(!request.requestStartDate){request.requestStartDate=requestStartTime;}if(requestModifier){xhr=requestModifier.modifyRequestHeader(xhr);}xhr.withCredentials=httpRequest.withCredentials;xhr.onload=httpRequest.onload;xhr.onloadend=httpRequest.onend;xhr.onerror=httpRequest.onerror;xhr.onprogress=httpRequest.progress;xhr.onabort=httpRequest.onabort;xhr.ontimeout=httpRequest.ontimeout;xhr.timeout=httpRequest.timeout;xhr.send();httpRequest.response=xhr;}function abort(request){var x=request.response;x.onloadend=x.onerror=x.onprogress=undefined;//Ignore events from aborted requests.
x.abort();}instance={load:load,abort:abort};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */XHRLoader.__dashjs_factory_name='XHRLoader';var factory=_FactoryMaker2.default.getClassFactory(XHRLoader);exports.default=factory;


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/core/Utils.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var Utils=function(){function Utils(){_classCallCheck(this,Utils);}_createClass(Utils,null,[{key:'mixin',value:function mixin(dest,source,copy){var s=void 0;var empty={};if(dest){for(var name in source){if(source.hasOwnProperty(name)){s=source[name];if(!(name in dest)||dest[name]!==s&&(!(name in empty)||empty[name]!==s)){if(_typeof(dest[name])==='object'&&dest[name]!==null){dest[name]=Utils.mixin(dest[name],s,copy);}else{dest[name]=copy(s);}}}}}return dest;}},{key:'clone',value:function clone(src){if(!src||(typeof src==='undefined'?'undefined':_typeof(src))!=='object'){return src;// anything
}var r=void 0;if(src instanceof Array){// array
r=[];for(var i=0,l=src.length;i<l;++i){if(i in src){r.push(Utils.clone(src[i]));}}}else{r={};}return Utils.mixin(r,src,Utils.clone);}},{key:'addAditionalQueryParameterToUrl',value:function addAditionalQueryParameterToUrl(url,params){try{if(!params||params.length===0){return url;}var modifiedUrl=new URL(url);params.forEach(function(param){if(param.key&&param.value){modifiedUrl.searchParams.set(param.key,param.value);}});return modifiedUrl.href;}catch(e){return url;}}},{key:'generateUuid',value:function generateUuid(){var dt=new Date().getTime();var uuid='xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,function(c){var r=(dt+Math.random()*16)%16|0;dt=Math.floor(dt/16);return(c=='x'?r:r&0x3|0x8).toString(16);});return uuid;}},{key:'generateHashCode',value:function generateHashCode(string){var hash=0;if(string.length===0){return hash;}for(var i=0;i<string.length;i++){var chr=string.charCodeAt(i);hash=(hash<<5)-hash+chr;hash|=0;}return hash;}}]);return Utils;}();exports.default=Utils;


},{}],"../node_modules/dashjs/build/es5/src/core/Settings.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var _FactoryMaker=require('./FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Utils=require('./Utils.js');var _Utils2=_interopRequireDefault(_Utils);var _Debug=require('../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _Constants=require('../streaming/constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _HTTPRequest=require('../streaming/vo/metrics/HTTPRequest');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//** @module Settings
 * @description Define the configuration parameters of Dash.js MediaPlayer.
 * @see {@link module:Settings~PlayerSettings PlayerSettings} for further information about the supported configuration properties
 *//**
 * @typedef {Object} PlayerSettings
 * @property {module:Settings~DebugSettings} [debug] Debug related settings
 * @property {module:Settings~StreamingSettings} [streaming] Streaming related settings
 * @example
 *
 * // Full settings object
 * settings = {
 *      debug: {
 *          logLevel: Debug.LOG_LEVEL_WARNING,
 *          dispatchEvent: false
 *      },
 *      streaming: {
 *          metricsMaxListDepth: 1000,
 *          abandonLoadTimeout: 10000,
 *          liveDelayFragmentCount: NaN,
 *          liveDelay: null,
 *          scheduleWhilePaused: true,
 *          fastSwitchEnabled: false,
 *          flushBufferAtTrackSwitch: false,
 *          calcSegmentAvailabilityRangeFromTimeline: false,
 *          reuseExistingSourceBuffers: true,
 *          bufferPruningInterval: 10,
 *          bufferToKeep: 20,
 *          jumpGaps: true,
 *          jumpLargeGaps: true,
 *          smallGapLimit: 1.5,
 *          stableBufferTime: 12,
 *          bufferTimeAtTopQuality: 30,
 *          bufferTimeAtTopQualityLongForm: 60,
 *          longFormContentDurationThreshold: 600,
 *          wallclockTimeUpdateInterval: 50,
 *          lowLatencyEnabled: false,
 *          keepProtectionMediaKeys: false,
 *          useManifestDateHeaderTimeSource: true,
 *          useSuggestedPresentationDelay: true,
 *          useAppendWindow: true,
 *          manifestUpdateRetryInterval: 100,
 *          liveCatchup: {
 *              minDrift: 0.02,
 *              maxDrift: 0,
 *              playbackRate: 0.5,
 *              latencyThreshold: NaN,
 *              playbackBufferMin: NaN,
 *              enabled: false,
 *              mode: Constants.LIVE_CATCHUP_MODE_DEFAULT
 *           },
 *          lastBitrateCachingInfo: { enabled: true, ttl: 360000 },
 *          lastMediaSettingsCachingInfo: { enabled: true, ttl: 360000 },
 *          cacheLoadThresholds: { video: 50, audio: 5 },
 *          fragmentRequestTimeout: 0,
 *          retryIntervals: {
 *              MPD: 500,
 *              XLinkExpansion: 500,
 *              InitializationSegment: 1000,
 *              IndexSegment: 1000,
 *              MediaSegment: 1000,
 *              BitstreamSwitchingSegment: 1000,
 *              other: 1000,
 *              lowLatencyReductionFactor: 10
 *          },
 *          retryAttempts: {
 *              MPD: 3,
 *              XLinkExpansion: 1,
 *              InitializationSegment: 3,
 *              IndexSegment: 3,
 *              MediaSegment: 3,
 *              BitstreamSwitchingSegment: 3,
 *              other: 3,
 *              lowLatencyMultiplyFactor: 5
 *          },
 *          abr: {
 *              movingAverageMethod: Constants.MOVING_AVERAGE_SLIDING_WINDOW,
 *              ABRStrategy: Constants.ABR_STRATEGY_DYNAMIC,
 *              bandwidthSafetyFactor: 0.9,
 *              useDefaultABRRules: true,
 *              useBufferOccupancyABR: false,
 *              useDeadTimeLatency: true,
 *              limitBitrateByPortal: false,
 *              usePixelRatioInLimitBitrateByPortal: false,
 *              maxBitrate: { audio: -1, video: -1 },
 *              minBitrate: { audio: -1, video: -1 },
 *              maxRepresentationRatio: { audio: 1, video: 1 },
 *              initialBitrate: { audio: -1, video: -1 },
 *              initialRepresentationRatio: { audio: -1, video: -1 },
 *              autoSwitchBitrate: { audio: true, video: true },
 *              fetchThroughputCalculationMode: Constants.ABR_FETCH_THROUGHPUT_CALCULATION_DOWNLOADED_DATA
 *          },
 *          cmcd: {
 *              enabled: false,
 *              sid: null,
 *              cid: null,
 *              did: null
 *          }
 *      }
 * }
 *//**
 * @typedef {Object} DebugSettings
 * @property {number} [logLevel=dashjs.Debug.LOG_LEVEL_WARNING]
 * Sets up the log level. The levels are cumulative. For example, if you set the log level
 * to dashjs.Debug.LOG_LEVEL_WARNING all warnings, errors and fatals will be logged. Possible values.
 *
 * <ul>
 * <li>dashjs.Debug.LOG_LEVEL_NONE<br/>
 * No message is written in the browser console.
 *
 * <li>dashjs.Debug.LOG_LEVEL_FATAL<br/>
 * Log fatal errors. An error is considered fatal when it causes playback to fail completely.
 *
 * <li>dashjs.Debug.LOG_LEVEL_ERROR<br/>
 * Log error messages.
 *
 * <li>dashjs.Debug.LOG_LEVEL_WARNING<br/>
 * Log warning messages.
 *
 * <li>dashjs.Debug.LOG_LEVEL_INFO<br/>
 * Log info messages.
 *
 * <li>dashjs.Debug.LOG_LEVEL_DEBUG<br/>
 * Log debug messages.
 * </ul>
 * @property {boolean} [dispatchEvent=false]
 * Enable to trigger a Events.LOG event whenever log output is generated. Note this will be dispatched regardless of log level
 *//**
 * @typedef {Object} AbrSettings
 * @property {string} [movingAverageMethod="slidingWindow"]
 * Sets the moving average method used for smoothing throughput estimates. Valid methods are
 * "slidingWindow" and "ewma". The call has no effect if an invalid method is passed.
 *
 * The sliding window moving average method computes the average throughput using the last four segments downloaded.
 * If the stream is live (as opposed to VOD), then only the last three segments are used.
 * If wide variations in throughput are detected, the number of segments can be dynamically increased to avoid oscillations.
 *
 * The exponentially weighted moving average (EWMA) method computes the average using exponential smoothing.
 * Two separate estimates are maintained, a fast one with a three-second half life and a slow one with an eight-second half life.
 * The throughput estimate at any time is the minimum of the fast and slow estimates.
 * This allows a fast reaction to a bandwidth drop and prevents oscillations on bandwidth spikes.
 * @property {string} [ABRStrategy="abrDynamic"] Returns the current ABR strategy being used: "abrDynamic", "abrBola" or "abrThroughput".
 * @property {number} [bandwidthSafetyFactor=0.9]
 * Standard ABR throughput rules multiply the throughput by this value. It should be between 0 and 1,
 * with lower values giving less rebuffering (but also lower quality).
 * @property {boolean} [useDefaultABRRules=true] Should the default ABR rules be used, or the custom ones added.
 * @property {boolean} [useDeadTimeLatency=true]
 * If true, only the download portion will be considered part of the download bitrate
 * and latency will be regarded as static. If false, the reciprocal of the whole
 * transfer time will be used.
 * @property {boolean} [limitBitrateByPortal=false] If true, the size of the video portal will limit the max chosen video resolution.
 * @property {boolean} [usePixelRatioInLimitBitrateByPortal=false]
 * Sets whether to take into account the device's pixel ratio when defining the portal dimensions.
 * Useful on, for example, retina displays.
 * @property {module:Settings~AudioVideoSettings} [maxBitrate={audio: -1, video: -1}] The maximum bitrate that the ABR algorithms will choose. Use NaN for no limit.
 * @property {module:Settings~AudioVideoSettings} [minBitrate={audio: -1, video: -1}] The minimum bitrate that the ABR algorithms will choose. Use NaN for no limit.
 * @property {module:Settings~AudioVideoSettings} [maxRepresentationRatio={audio: 1, video: 1}]
 * When switching multi-bitrate content (auto or manual mode) this property specifies the maximum representation allowed,
 * as a proportion of the size of the representation set.
 *
 * You can set or remove this cap at anytime before or during playback. To clear this setting you set the value to 1.
 *
 * If both this and maxAllowedBitrate are defined, maxAllowedBitrate is evaluated first, then maxAllowedRepresentation,
 * i.e. the lowest value from executing these rules is used.
 *
 * This feature is typically used to reserve higher representations for playback only when connected over a fast connection.
 * @property {module:Settings~AudioVideoSettings} [initialBitrate={audio: -1, video: -1}] Explicitly set the starting bitrate for audio or video
 * @property {module:Settings~AudioVideoSettings} [initialRepresentationRatio={audio: -1, video: -1}] Explicitly set the initial representation ratio. If initalBitrate is specified, this is ignored.
 * @property {module:Settings~AudioVideoSettings} [autoSwitchBitrate={audio: true, video: true}] Indicates whether the player should enable ABR algorithms to switch the bitrate.
 *
 * @property {boolean} [fetchThroughputCalculationMode=Constants.ABR_FETCH_THROUGHPUT_CALCULATION_DOWNLOADED_DATA]
 * Algorithm to determine the throughput in case the Fetch API is used for low latency streaming. For details please check the samples section and FetchLoader.js
 *//**
 * @typedef {Object} StreamingSettings
 * @property {number} [metricsMaxListDepth=1000] Maximum list depth of metrics.
 * @property {number} [abandonLoadTimeout=10000]
 * A timeout value in seconds, which during the ABRController will block switch-up events.
 * This will only take effect after an abandoned fragment event occurs.
 * @property {number} [liveDelayFragmentCount=NaN]
 * Changing this value will lower or increase live stream latency.  The detected segment duration will be multiplied by this value
 * to define a time in seconds to delay a live stream from the live edge. Lowering this value will lower latency but may decrease
 * the player's ability to build a stable buffer.
 * @property {number} [liveDelay]
 * <p>Equivalent in seconds of setLiveDelayFragmentCount</p>
 * <p>Lowering this value will lower latency but may decrease the player's ability to build a stable buffer.</p>
 * <p>This value should be less than the manifest duration by a couple of segment durations to avoid playback issues</p>
 * <p>If set, this parameter will take precedence over setLiveDelayFragmentCount and manifest info</p>
 * @property {boolean} [scheduleWhilePaused=true]
 * Set to true if you would like dash.js to keep downloading fragments in the background
 * when the video element is paused.
 * @property {boolean} [fastSwitchEnabled=false]
 * When enabled, after an ABR up-switch in quality, instead of requesting and appending the next fragment
 * at the end of the current buffer range it is requested and appended closer to the current time
 * When enabled, The maximum time to render a higher quality is current time + (1.5 * fragment duration).
 *
 * Note, When ABR down-switch is detected, we appended the lower quality at the end of the buffer range to preserve the
 * higher quality media for as long as possible.
 *
 * If enabled, it should be noted there are a few cases when the client will not replace inside buffer range but rather
 * just append at the end.  1. When the buffer level is less than one fragment duration 2.  The client
 * is in an Abandonment State due to recent fragment abandonment event.
 *
 * Known issues:
 * 1. In IE11 with auto switching off, if a user switches to a quality they can not download in time the
 * fragment may be appended in the same range as the playhead or even in the past, in IE11 it may cause a stutter
 * or stall in playback.
 * @property {boolean} [flushBufferAtTrackSwitch=false]
 * When enabled, after a track switch and in case buffer is being replaced (see MEdiaPlayer.setTrackSwitchModeFor(Constants.TRACK_SWITCH_MODE_ALWAYS_REPLACE)),
 * the video element is flushed (seek at current playback time) once a segment of the new track is appended in buffer in order to force video decoder to play new track.
 * This can be required on some devices like GoogleCast devices to make track switching functional. Otherwise track switching will be effective only once after previous
 * buffered track is fully consumed.
 * @property {boolean} [calcSegmentAvailabilityRangeFromTimeline=false] Enable calculation of the DVR window for SegmentTimeline manifests based on the entries in <SegmentTimeline>
 * @property {boolean} [reuseExistingSourceBuffers=true] Enable reuse of existing MediaSource Sourcebuffers during period transition
 * @property {number} [bufferPruningInterval=10] The interval of pruning buffer in sconds.
 * @property {number} [bufferToKeep=20]
 * This value influences the buffer pruning logic.
 * Allows you to modify the buffer that is kept in source buffer in seconds.
 *  0|-----------bufferToPrune-----------|-----bufferToKeep-----|currentTime|
 * @property {boolean} [jumpGaps=true] Sets whether player should jump small gaps (discontinuities) in the buffer.
 * @property {boolean} [jumpLargeGaps=true] Sets whether player should jump large gaps (discontinuities) in the buffer.
 * @property {number} [smallGapLimit=1.8] Time in seconds for a gap to be considered small.
 * @property {number} [stableBufferTime=12]
 * The time that the internal buffer target will be set to post startup/seeks (NOT top quality).
 *
 * When the time is set higher than the default you will have to wait longer
 * to see automatic bitrate switches but will have a larger buffer which
 * will increase stability.
 * @property {number} [bufferTimeAtTopQuality=30]
 * The time that the internal buffer target will be set to once playing the top quality.
 * If there are multiple bitrates in your adaptation, and the media is playing at the highest
 * bitrate, then we try to build a larger buffer at the top quality to increase stability
 * and to maintain media quality.
 * @property {number} [bufferTimeAtTopQualityLongForm=60] The time that the internal buffer target will be set to once playing the top quality for long form content.
 * @property {number} [longFormContentDurationThreshold=600]
 * The threshold which defines if the media is considered long form content.
 * This will directly affect the buffer targets when playing back at the top quality.
 * @property {number} [wallclockTimeUpdateInterval=50] How frequently the wallclockTimeUpdated internal event is triggered (in milliseconds).
 * @property {boolean} [lowLatencyEnabled=false] Enable or disable low latency mode
 * @property {boolean} [keepProtectionMediaKeys=false]
 * Set the value for the ProtectionController and MediaKeys life cycle. If true, the
 * ProtectionController and then created MediaKeys and MediaKeySessions will be preserved during
 * the MediaPlayer lifetime.
 * @property {boolean} [useManifestDateHeaderTimeSource=true]
 * <p>Allows you to enable the use of the Date Header, if exposed with CORS, as a timing source for live edge detection. The
 * use of the date header will happen only after the other timing source that take precedence fail or are omitted as described.
 * @property {boolean} [useSuggestedPresentationDelay=true]
 * <p>Set to true if you would like to override the default live delay and honor the SuggestedPresentationDelay attribute in by the manifest.</p>
 * @property {boolean} [useAppendWindow=true]
 * Specifies if the appendWindow attributes of the MSE SourceBuffers should be set according to content duration from manifest.
 * @property {number} [manifestUpdateRetryInterval=100]
 * For live streams, set the interval-frequency in milliseconds at which
 * dash.js will check if the current manifest is still processed before
 * downloading the next manifest once the minimumUpdatePeriod time has
 * @property {number} [stallThreshold=0.5]
 * Stall threshold used in BufferController.js to determine whether a track should still be changed and which buffer range to prune.
 * @property {module:Settings~CachingInfoSettings} [lastBitrateCachingInfo={enabled: true, ttl: 360000}]
 * Set to false if you would like to disable the last known bit rate from being stored during playback and used
 * to set the initial bit rate for subsequent playback within the expiration window.
 *
 * The default expiration is one hour, defined in milliseconds. If expired, the default initial bit rate (closest to 1000 kbps) will be used
 * for that session and a new bit rate will be stored during that session.
 * @property {module:Settings~CachingInfoSettings} [lastMediaSettingsCachingInfo={enabled: true, ttl: 360000}]
 * Set to false if you would like to disable the last known lang for audio (or camera angle for video) from being stored during playback and used
 * to set the initial settings for subsequent playback within the expiration window.
 *
 * The default expiration is one hour, defined in milliseconds. If expired, the default settings will be used
 * for that session and a new settings will be stored during that session.
 * @property {module:Settings~AudioVideoSettings} [cacheLoadThresholds={video: 50, audio: 5}]
 * For a given media type, the threshold which defines if the response to a fragment
 * request is coming from browser cache or not.
 * @property {module:Settings~RequestTypeSettings} [fragmentRequestTimeout] Time in milliseconds before timing out on loading a media fragment. Fragments that timeout are retried as if they failed.
 * @property {module:Settings~RequestTypeSettings} [retryIntervals] Time in milliseconds of which to reload a failed file load attempt. For low latency mode these values are divided by lowLatencyReductionFactor.
 * @property {module:Settings~RequestTypeSettings} [retryAttempts] Total number of retry attempts that will occur on a file load before it fails. For low latency mode these values are multiplied by lowLatencyMultiplyFactor.
 * @property {module:Settings~AbrSettings} abr Adaptive Bitrate algorithm related settings.
 * @property {module:Settings~CmcdSettings} cmcd  Settings related to Common Media Client Data reporting.
 * @property {module:Settings~LiveCatchupSettings} liveCatchup  Settings related to live catchup.
 *//**
 * @typedef {Object} CachingInfoSettings
 * @property {boolean} [enable] Enable or disable the caching feature.
 * @property {number} [ttl] Time to live. A value defined in milliseconds representing how log to cache the settings for.
 *//**
 * @typedef {Object} module:Settings~AudioVideoSettings
 * @property {number|boolean} [audio] Configuration for audio media type of tracks.
 * @property {number|boolean} [video] Configuration for video media type of tracks.
 *//**
 * @typedef {Object} RequestTypeSettings
 * @property {number} [MPD] Manifest type of requests
 * @property {number} [XLinkExpansion] XLink expansion type of requests
 * @property {number} [InitializationSegment] Request to retrieve an initialization segment
 * @property {number} [IndexSegment] Request to retrieve an index segment (SegmentBase)
 * @property {number} [MediaSegment] Request to retrieve a media segment (video/audio/image/text chunk)
 * @property {number} [BitstreamSwitchingSegment] Bitrate stream switching type of request
 * @property {number} [other] Other type of request
 *
 *//**
 * @typedef {Object} module:Settings~CmcdSettings
 * @property {boolean} [enable=false] Enable or disable the CMCD reporting.
 * @property {string} [sid] GUID identifying the current playback session. Should be in UUID format. If not specified a UUID will be automatically generated.
 * @property {string} [cid] A unique string to identify the current content. If not specified it will be a hash of the MPD url.
 * @property {string} [did=dash.js-cmcd-default-id] A unique string identifying the current device.
 *//**
 * @typedef {Object} module:Settings~LiveCatchupSettings
 @property {number} [minDrift=0.02]
 * Use this method to set the minimum latency deviation allowed before activating catch-up mechanism. In low latency mode,
 * when the difference between the measured latency and the target one,
 * as an absolute number, is higher than the one sets with this method, then dash.js increases/decreases
 * playback rate until target latency is reached.
 *
 * LowLatencyMinDrift should be provided in seconds, and it uses values between 0.0 and 0.5.
 *
 * Note: Catch-up mechanism is only applied when playing low latency live streams.
 * @property {number} [maxDrift=0]
 * Use this method to set the maximum latency deviation allowed before dash.js to do a seeking to live position. In low latency mode,
 * when the difference between the measured latency and the target one,
 * as an absolute number, is higher than the one sets with this method, then dash.js does a seek to live edge position minus
 * the target live delay.
 *
 * LowLatencyMaxDriftBeforeSeeking should be provided in seconds. If 0, then seeking operations won't be used for
 * fixing latency deviations.
 *
 * Note: Catch-up mechanism is only applied when playing low latency live streams.
 * @property {number} [playbackRate=0.5]
 * Use this parameter to set the maximum catch up rate, as a percentage, for low latency live streams. In low latency mode,
 * when measured latency is higher/lower than the target one,
 * dash.js increases/decreases playback rate respectively up to (+/-) the percentage defined with this method until target is reached.
 *
 * Valid values for catch up rate are in range 0-0.5 (0-50%). Set it to 0 to turn off live catch up feature.
 *
 * Note: Catch-up mechanism is only applied when playing low latency live streams.
 * @property {number} [latencyThreshold=NaN]
 * Use this parameter to set the maximum threshold for which live catch up is applied. For instance, if this value is set to 8 seconds,
 * then live catchup is only applied if the current live latency is equal or below 8 seconds. The reason behind this parameter is to avoid an increase
 * of the playback rate if the user seeks within the DVR window.
 *
 * If no value is specified this will be twice the maximum live delay. The maximum live delay is either specified in the manifest as part of a ServiceDescriptor or calculated the following:
 * maximumLiveDelay = targetDelay + liveCatchupMinDrift
 *
 * @property {number} [playbackBufferMin=NaN]
 * Use this parameter to specify the minimum buffer which is used for LoL+ based playback rate reduction
 *
 *
 * @property {boolean} [enabled=false]
 * Use this parameter to enable the catchup mode for non low-latency streams
 *
 * @property {String} [mode=Constants.LIVE_CATCHUP_MODE_DEFAULT]
 * Use this parameter to switch between different catchup modes. Options: "liveCatchupModeDefault" or "liveCatchupModeLOLP"
 *
 * Note: Catch-up mechanism is automatically applied when playing low latency live streams.
 *//**
 * @class
 * @ignore
 */function Settings(){var _retryIntervals,_retryAttempts;var instance=void 0;/**
     * @const {PlayerSettings} defaultSettings
     * @ignore
     */var defaultSettings={debug:{logLevel:_Debug2.default.LOG_LEVEL_WARNING,dispatchEvent:false},streaming:{metricsMaxListDepth:1000,abandonLoadTimeout:10000,liveDelayFragmentCount:NaN,liveDelay:null,scheduleWhilePaused:true,fastSwitchEnabled:false,flushBufferAtTrackSwitch:false,calcSegmentAvailabilityRangeFromTimeline:false,reuseExistingSourceBuffers:true,bufferPruningInterval:10,bufferToKeep:20,jumpGaps:true,jumpLargeGaps:true,smallGapLimit:1.5,stableBufferTime:12,bufferTimeAtTopQuality:30,bufferTimeAtTopQualityLongForm:60,longFormContentDurationThreshold:600,wallclockTimeUpdateInterval:50,lowLatencyEnabled:false,keepProtectionMediaKeys:false,useManifestDateHeaderTimeSource:true,useSuggestedPresentationDelay:true,useAppendWindow:true,manifestUpdateRetryInterval:100,stallThreshold:0.5,liveCatchup:{minDrift:0.02,maxDrift:0,playbackRate:0.5,latencyThreshold:60,playbackBufferMin:0.5,enabled:false,mode:_Constants2.default.LIVE_CATCHUP_MODE_DEFAULT},lastBitrateCachingInfo:{enabled:true,ttl:360000},lastMediaSettingsCachingInfo:{enabled:true,ttl:360000},cacheLoadThresholds:{video:50,audio:5},trackSwitchMode:{audio:_Constants2.default.TRACK_SWITCH_MODE_ALWAYS_REPLACE,video:_Constants2.default.TRACK_SWITCH_MODE_NEVER_REPLACE},selectionModeForInitialTrack:_Constants2.default.TRACK_SELECTION_MODE_HIGHEST_BITRATE,fragmentRequestTimeout:0,retryIntervals:(_retryIntervals={},_defineProperty(_retryIntervals,_HTTPRequest.HTTPRequest.MPD_TYPE,500),_defineProperty(_retryIntervals,_HTTPRequest.HTTPRequest.XLINK_EXPANSION_TYPE,500),_defineProperty(_retryIntervals,_HTTPRequest.HTTPRequest.MEDIA_SEGMENT_TYPE,1000),_defineProperty(_retryIntervals,_HTTPRequest.HTTPRequest.INIT_SEGMENT_TYPE,1000),_defineProperty(_retryIntervals,_HTTPRequest.HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE,1000),_defineProperty(_retryIntervals,_HTTPRequest.HTTPRequest.INDEX_SEGMENT_TYPE,1000),_defineProperty(_retryIntervals,_HTTPRequest.HTTPRequest.OTHER_TYPE,1000),_defineProperty(_retryIntervals,'lowLatencyReductionFactor',10),_retryIntervals),retryAttempts:(_retryAttempts={},_defineProperty(_retryAttempts,_HTTPRequest.HTTPRequest.MPD_TYPE,3),_defineProperty(_retryAttempts,_HTTPRequest.HTTPRequest.XLINK_EXPANSION_TYPE,1),_defineProperty(_retryAttempts,_HTTPRequest.HTTPRequest.MEDIA_SEGMENT_TYPE,3),_defineProperty(_retryAttempts,_HTTPRequest.HTTPRequest.INIT_SEGMENT_TYPE,3),_defineProperty(_retryAttempts,_HTTPRequest.HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE,3),_defineProperty(_retryAttempts,_HTTPRequest.HTTPRequest.INDEX_SEGMENT_TYPE,3),_defineProperty(_retryAttempts,_HTTPRequest.HTTPRequest.OTHER_TYPE,3),_defineProperty(_retryAttempts,'lowLatencyMultiplyFactor',5),_retryAttempts),abr:{movingAverageMethod:_Constants2.default.MOVING_AVERAGE_SLIDING_WINDOW,ABRStrategy:_Constants2.default.ABR_STRATEGY_DYNAMIC,bandwidthSafetyFactor:0.9,useDefaultABRRules:true,useDeadTimeLatency:true,limitBitrateByPortal:false,usePixelRatioInLimitBitrateByPortal:false,maxBitrate:{audio:-1,video:-1},minBitrate:{audio:-1,video:-1},maxRepresentationRatio:{audio:1,video:1},initialBitrate:{audio:-1,video:-1},initialRepresentationRatio:{audio:-1,video:-1},autoSwitchBitrate:{audio:true,video:true},fetchThroughputCalculationMode:_Constants2.default.ABR_FETCH_THROUGHPUT_CALCULATION_DOWNLOADED_DATA},cmcd:{enabled:false,sid:null,cid:null}}};var settings=_Utils2.default.clone(defaultSettings);//Merge in the settings. If something exists in the new config that doesn't match the schema of the default config,
//regard it as an error and log it.
function mixinSettings(source,dest,path){for(var n in source){if(source.hasOwnProperty(n)){if(dest.hasOwnProperty(n)){if(_typeof(source[n])==='object'&&source[n]!==null){mixinSettings(source[n],dest[n],path.slice()+n+'.');}else{dest[n]=_Utils2.default.clone(source[n]);}}}}}/**
     * Return the settings object. Don't copy/store this object, you won't get updates.
     * @func
     * @instance
     */function get(){return settings;}/**
     * @func
     * @instance
     * @param {object} settingsObj - This should be a partial object of the Settings.Schema type. That is, fields defined should match the path (e.g.
     * settingsObj.streaming.abr.autoSwitchBitrate.audio -> defaultSettings.streaming.abr.autoSwitchBitrate.audio). Where an element's path does
     * not match it is ignored, and a warning is logged.
     *
     * Use to change the settings object. Any new values defined will overwrite the settings and anything undefined will not change.
     * Implementers of new settings should add it in an approriate namespace to the defaultSettings object and give it a default value (that is not undefined).
     *
     */function update(settingsObj){if((typeof settingsObj==='undefined'?'undefined':_typeof(settingsObj))==='object'){mixinSettings(settingsObj,settings,'');}}/**
     * Resets the settings object. Everything is set to its default value.
     * @func
     * @instance
     *
     */function reset(){settings=_Utils2.default.clone(defaultSettings);}instance={get:get,update:update,reset:reset};return instance;}Settings.__dashjs_factory_name='Settings';var factory=_FactoryMaker2.default.getSingletonFactory(Settings);exports.default=factory;


},{"./FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","./Utils.js":"../node_modules/dashjs/build/es5/src/core/Utils.js","../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","../streaming/constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../streaming/vo/metrics/HTTPRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/HTTPRequest.js"}],"../node_modules/dashjs/build/es5/src/streaming/net/FetchLoader.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Settings=require('../../core/Settings');var _Settings2=_interopRequireDefault(_Settings);var _Constants=require('../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * @module FetchLoader
 * @ignore
 * @description Manages download of resources via HTTP using fetch.
 * @param {Object} cfg - dependencies from parent
 */function FetchLoader(cfg){cfg=cfg||{};var context=this.context;var requestModifier=cfg.requestModifier;var boxParser=cfg.boxParser;var settings=(0,_Settings2.default)(context).getInstance();var instance=void 0;function load(httpRequest){// Variables will be used in the callback functions
var requestStartTime=new Date();var request=httpRequest.request;var headers=new Headers();/*jshint ignore:line*/if(request.range){headers.append('Range','bytes='+request.range);}if(!request.requestStartDate){request.requestStartDate=requestStartTime;}if(requestModifier){// modifyRequestHeader expects a XMLHttpRequest object so,
// to keep backward compatibility, we should expose a setRequestHeader method
// TODO: Remove RequestModifier dependency on XMLHttpRequest object and define
// a more generic way to intercept/modify requests
requestModifier.modifyRequestHeader({setRequestHeader:function setRequestHeader(header,value){headers.append(header,value);}});}var abortController=void 0;if(typeof window.AbortController==='function'){abortController=new AbortController();/*jshint ignore:line*/httpRequest.abortController=abortController;abortController.signal.onabort=httpRequest.onabort;}var reqOptions={method:httpRequest.method,headers:headers,credentials:httpRequest.withCredentials?'include':undefined,signal:abortController?abortController.signal:undefined};fetch(httpRequest.url,reqOptions).then(function(response){if(!httpRequest.response){httpRequest.response={};}httpRequest.response.status=response.status;httpRequest.response.statusText=response.statusText;httpRequest.response.responseURL=response.url;if(!response.ok){httpRequest.onerror();}var responseHeaders='';var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=response.headers.keys()[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var key=_step.value;responseHeaders+=key+': '+response.headers.get(key)+'\r\n';}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}httpRequest.response.responseHeaders=responseHeaders;if(!response.body){// Fetch returning a ReadableStream response body is not currently supported by all browsers.
// Browser compatibility: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API
// If it is not supported, returning the whole segment when it's ready (as xhr)
return response.arrayBuffer().then(function(buffer){httpRequest.response.response=buffer;var event={loaded:buffer.byteLength,total:buffer.byteLength,stream:false};httpRequest.progress(event);httpRequest.onload();httpRequest.onend();return;});}var totalBytes=parseInt(response.headers.get('Content-Length'),10);var bytesReceived=0;var signaledFirstByte=false;var remaining=new Uint8Array();var offset=0;httpRequest.reader=response.body.getReader();var downloadedData=[];var startTimeData=[];var endTimeData=[];var lastChunkWasFinished=true;var calculationMode=settings.get().streaming.abr.fetchThroughputCalculationMode;var processResult=function processResult(_ref){var value=_ref.value,done=_ref.done;// Bug fix Parse whenever data is coming [value] better than 1ms looking that increase CPU
if(done){if(remaining){// If there is pending data, call progress so network metrics
// are correctly generated
// Same structure as https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequestEventTarget/
httpRequest.progress({loaded:bytesReceived,total:isNaN(totalBytes)?bytesReceived:totalBytes,lengthComputable:true,time:calculateDownloadedTime(calculationMode,startTimeData,endTimeData,downloadedData,bytesReceived),stream:true});httpRequest.response.response=remaining.buffer;}httpRequest.onload();httpRequest.onend();return;}if(value&&value.length>0){remaining=concatTypedArray(remaining,value);bytesReceived+=value.length;downloadedData.push({ts:Date.now(),bytes:value.length});if(calculationMode===_Constants2.default.ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING&&lastChunkWasFinished){// Parse the payload and capture the the 'moof' box
var _boxesInfo=boxParser.findLastTopIsoBoxCompleted(['moof'],remaining,offset);if(_boxesInfo.found){// Store the beginning time of each chunk download in array StartTimeData
lastChunkWasFinished=false;startTimeData.push({ts:performance.now(),/* jshint ignore:line */bytes:value.length});}}var boxesInfo=boxParser.findLastTopIsoBoxCompleted(['moov','mdat'],remaining,offset);if(boxesInfo.found){var end=boxesInfo.lastCompletedOffset+boxesInfo.size;// Store the end time of each chunk download  with its size in array EndTimeData
if(calculationMode===_Constants2.default.ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING){lastChunkWasFinished=true;endTimeData.push({ts:performance.now(),/* jshint ignore:line */bytes:remaining.length});}// If we are going to pass full buffer, avoid copying it and pass
// complete buffer. Otherwise clone the part of the buffer that is completed
// and adjust remaining buffer. A clone is needed because ArrayBuffer of a typed-array
// keeps a reference to the original data
var data=void 0;if(end===remaining.length){data=remaining;remaining=new Uint8Array();}else{data=new Uint8Array(remaining.subarray(0,end));remaining=remaining.subarray(end);}// Announce progress but don't track traces. Throughput measures are quite unstable
// when they are based in small amount of data
httpRequest.progress({data:data.buffer,lengthComputable:false,noTrace:true});offset=0;}else{offset=boxesInfo.lastCompletedOffset;// Call progress so it generates traces that will be later used to know when the first byte
// were received
if(!signaledFirstByte){httpRequest.progress({lengthComputable:false,noTrace:true});signaledFirstByte=true;}}}read(httpRequest,processResult);};read(httpRequest,processResult);}).catch(function(e){if(httpRequest.onerror){httpRequest.onerror(e);}});}function read(httpRequest,processResult){httpRequest.reader.read().then(processResult).catch(function(e){if(httpRequest.onerror&&httpRequest.response.status===200){// Error, but response code is 200, trigger error
httpRequest.onerror(e);}});}function concatTypedArray(remaining,data){if(remaining.length===0){return data;}var result=new Uint8Array(remaining.length+data.length);result.set(remaining);result.set(data,remaining.length);return result;}function abort(request){if(request.abortController){// For firefox and edge
request.abortController.abort();}else if(request.reader){// For Chrome
try{request.reader.cancel();request.onabort();}catch(e){// throw exceptions (TypeError) when reader was previously closed,
// for example, because a network issue
}}}// Compute the download time of a segment
function calculateDownloadedTime(calculationMode,startTimeData,endTimeData,downloadedData,bytesReceived){switch(calculationMode){case _Constants2.default.ABR_FETCH_THROUGHPUT_CALCULATION_MOOF_PARSING:return _calculateDownloadedTimeByMoofParsing(startTimeData,endTimeData);case _Constants2.default.ABR_FETCH_THROUGHPUT_CALCULATION_DOWNLOADED_DATA:return _calculateDownloadedTimeByBytesReceived(downloadedData,bytesReceived);default:return _calculateDownloadedTimeByBytesReceived(downloadedData,bytesReceived);}}function _calculateDownloadedTimeByMoofParsing(startTimeData,endTimeData){try{var datum=void 0,datumE=void 0;// Filter the first and last chunks in a segment in both arrays [StartTimeData and EndTimeData]
datum=startTimeData.filter(function(data,i){return i>0&&i<startTimeData.length-1;});datumE=endTimeData.filter(function(dataE,i){return i>0&&i<endTimeData.length-1;});// Compute the download time of a segment based on the filtered data [last chunk end time - first chunk beginning time]
var segDownloadTime=0;if(datum.length>1){for(var i=0;i<datum.length;i++){if(datum[i]&&datumE[i]){var chunkDownladTime=datumE[i].ts-datum[i].ts;segDownloadTime+=chunkDownladTime;}}return segDownloadTime;}return null;}catch(e){return null;}}function _calculateDownloadedTimeByBytesReceived(downloadedData,bytesReceived){try{downloadedData=downloadedData.filter(function(data){return data.bytes>bytesReceived/4/downloadedData.length;});if(downloadedData.length>1){var time=0;var avgTimeDistance=(downloadedData[downloadedData.length-1].ts-downloadedData[0].ts)/downloadedData.length;downloadedData.forEach(function(data,index){// To be counted the data has to be over a threshold
var next=downloadedData[index+1];if(next){var distance=next.ts-data.ts;time+=distance<avgTimeDistance?distance:0;}});return time;}return null;}catch(e){return null;}}instance={load:load,abort:abort,calculateDownloadedTime:calculateDownloadedTime};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */FetchLoader.__dashjs_factory_name='FetchLoader';var factory=_FactoryMaker2.default.getClassFactory(FetchLoader);exports.default=factory;


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../core/Settings":"../node_modules/dashjs/build/es5/src/core/Settings.js","../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js"}],"../node_modules/dashjs/build/es5/src/streaming/metrics/MetricsReportingEvents.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _EventsBase2=require('../../core/events/EventsBase');var _EventsBase3=_interopRequireDefault(_EventsBase2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var MetricsReportingEvents=function(_EventsBase){_inherits(MetricsReportingEvents,_EventsBase);function MetricsReportingEvents(){_classCallCheck(this,MetricsReportingEvents);var _this=_possibleConstructorReturn(this,(MetricsReportingEvents.__proto__||Object.getPrototypeOf(MetricsReportingEvents)).call(this));_this.METRICS_INITIALISATION_COMPLETE='internal_metricsReportingInitialized';_this.BECAME_REPORTING_PLAYER='internal_becameReportingPlayer';/**
         * Triggered when CMCD data was generated for a HTTP request
         * @event MetricsReportingEvents#CMCD_DATA_GENERATED
         */_this.CMCD_DATA_GENERATED='cmcdDataGenerated';return _this;}return MetricsReportingEvents;}(_EventsBase3.default);var metricsReportingEvents=new MetricsReportingEvents();exports.default=metricsReportingEvents;


},{"../../core/events/EventsBase":"../node_modules/dashjs/build/es5/src/core/events/EventsBase.js"}],"../node_modules/dashjs/build/es5/src/dash/vo/Representation.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var _DashConstants=require('../constants/DashConstants');var _DashConstants2=_interopRequireDefault(_DashConstants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var Representation=function(){function Representation(){_classCallCheck(this,Representation);this.id=null;this.index=-1;this.adaptation=null;this.segmentInfoType=null;this.initialization=null;this.codecs=null;this.codecPrivateData=null;this.segmentDuration=NaN;this.timescale=1;this.startNumber=1;this.indexRange=null;this.range=null;this.presentationTimeOffset=0;// Set the source buffer timeOffset to this
this.MSETimeOffset=NaN;this.segmentAvailabilityRange=null;this.availableSegmentsNumber=0;this.bandwidth=NaN;this.width=NaN;this.height=NaN;this.scanType=null;this.maxPlayoutRate=NaN;this.availabilityTimeOffset=0;this.availabilityTimeComplete=true;}_createClass(Representation,[{key:'hasInitialization',value:function hasInitialization(){return this.initialization!==null||this.range!==null;}},{key:'hasSegments',value:function hasSegments(){return this.segmentInfoType!==_DashConstants2.default.BASE_URL&&this.segmentInfoType!==_DashConstants2.default.SEGMENT_BASE&&!this.indexRange;}}]);return Representation;}();exports.default=Representation;


},{"../constants/DashConstants":"../node_modules/dashjs/build/es5/src/dash/constants/DashConstants.js"}],"../node_modules/dashjs/build/es5/src/dash/vo/AdaptationSet.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var AdaptationSet=function AdaptationSet(){_classCallCheck(this,AdaptationSet);this.period=null;this.index=-1;this.type=null;};exports.default=AdaptationSet;


},{}],"../node_modules/dashjs/build/es5/src/dash/vo/Period.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var Period=function Period(){_classCallCheck(this,Period);this.id=null;this.index=-1;this.duration=NaN;this.start=NaN;this.mpd=null;};Period.DEFAULT_ID='defaultId';exports.default=Period;


},{}],"../node_modules/dashjs/build/es5/src/dash/vo/Mpd.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var Mpd=function Mpd(){_classCallCheck(this,Mpd);this.manifest=null;this.suggestedPresentationDelay=0;this.availabilityStartTime=null;this.availabilityEndTime=Number.POSITIVE_INFINITY;this.timeShiftBufferDepth=Number.POSITIVE_INFINITY;this.maxSegmentDuration=Number.POSITIVE_INFINITY;this.minimumUpdatePeriod=NaN;this.mediaPresentationDuration=NaN;};exports.default=Mpd;


},{}],"../node_modules/dashjs/build/es5/src/dash/vo/UTCTiming.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var UTCTiming=function UTCTiming(){_classCallCheck(this,UTCTiming);// UTCTiming is a DescriptorType and doesn't have any additional fields
this.schemeIdUri='';this.value='';};exports.default=UTCTiming;


},{}],"../node_modules/dashjs/build/es5/src/dash/vo/Event.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var Event=function Event(){_classCallCheck(this,Event);this.duration=NaN;this.presentationTime=NaN;this.id=NaN;this.messageData='';this.eventStream=null;this.presentationTimeDelta=NaN;// Specific EMSG Box parameter
};exports.default=Event;


},{}],"../node_modules/dashjs/build/es5/src/dash/vo/BaseURL.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var DEFAULT_DVB_PRIORITY=1;var DEFAULT_DVB_WEIGHT=1;var BaseURL=function BaseURL(url,serviceLocation,priority,weight){_classCallCheck(this,BaseURL);this.url=url||'';this.serviceLocation=serviceLocation||url||'';// DVB extensions
this.dvb_priority=priority||DEFAULT_DVB_PRIORITY;this.dvb_weight=weight||DEFAULT_DVB_WEIGHT;this.availabilityTimeOffset=0;this.availabilityTimeComplete=true;/* currently unused:
         * byteRange,
         */};BaseURL.DEFAULT_DVB_PRIORITY=DEFAULT_DVB_PRIORITY;BaseURL.DEFAULT_DVB_WEIGHT=DEFAULT_DVB_WEIGHT;exports.default=BaseURL;


},{}],"../node_modules/dashjs/build/es5/src/dash/vo/EventStream.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var EventStream=function EventStream(){_classCallCheck(this,EventStream);this.adaptionSet=null;this.representation=null;this.period=null;this.timescale=1;this.value='';this.schemeIdUri='';this.presentationTimeOffset=0;};exports.default=EventStream;


},{}],"../node_modules/fast-deep-equal/index.js":[function(require,module,exports) {
'use strict';

var isArray = Array.isArray;
var keyList = Object.keys;
var hasProp = Object.prototype.hasOwnProperty;

module.exports = function equal(a, b) {
  if (a === b) return true;

  if (a && b && typeof a == 'object' && typeof b == 'object') {
    var arrA = isArray(a)
      , arrB = isArray(b)
      , i
      , length
      , key;

    if (arrA && arrB) {
      length = a.length;
      if (length != b.length) return false;
      for (i = length; i-- !== 0;)
        if (!equal(a[i], b[i])) return false;
      return true;
    }

    if (arrA != arrB) return false;

    var dateA = a instanceof Date
      , dateB = b instanceof Date;
    if (dateA != dateB) return false;
    if (dateA && dateB) return a.getTime() == b.getTime();

    var regexpA = a instanceof RegExp
      , regexpB = b instanceof RegExp;
    if (regexpA != regexpB) return false;
    if (regexpA && regexpB) return a.toString() == b.toString();

    var keys = keyList(a);
    length = keys.length;

    if (length !== keyList(b).length)
      return false;

    for (i = length; i-- !== 0;)
      if (!hasProp.call(b, keys[i])) return false;

    for (i = length; i-- !== 0;) {
      key = keys[i];
      if (!equal(a[key], b[key])) return false;
    }

    return true;
  }

  return a!==a && b!==b;
};

},{}],"../node_modules/dashjs/build/es5/src/streaming/utils/ObjectUtils.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _fastDeepEqual=require('fast-deep-equal');var _fastDeepEqual2=_interopRequireDefault(_fastDeepEqual);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * @module ObjectUtils
 * @ignore
 * @description Provides utility functions for objects
 *//**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function ObjectUtils(){var instance=void 0;/**
     * Returns true if objects are equal
     * @return {boolean}
     * @param {object} obj1
     * @param {object} obj2
     * @memberof module:ObjectUtils
     * @instance
     */function areEqual(obj1,obj2){return(0,_fastDeepEqual2.default)(obj1,obj2);}instance={areEqual:areEqual};return instance;}ObjectUtils.__dashjs_factory_name='ObjectUtils';exports.default=_FactoryMaker2.default.getSingletonFactory(ObjectUtils);


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","fast-deep-equal":"../node_modules/fast-deep-equal/index.js"}],"../node_modules/dashjs/build/es5/src/streaming/vo/ThumbnailTrackInfo.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var ThumbnailTrackInfo=function ThumbnailTrackInfo(){_classCallCheck(this,ThumbnailTrackInfo);this.bitrate=0;this.width=0;this.height=0;this.tilesHor=0;this.tilesVert=0;this.widthPerTile=0;this.heightPerTile=0;this.startNumber=0;this.segmentDuration=0;this.timescale=0;this.templateUrl='';this.id='';};exports.default=ThumbnailTrackInfo;


},{}],"../node_modules/dashjs/build/es5/src/streaming/thumbnail/ThumbnailTracks.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.THUMBNAILS_SCHEME_ID_URIS=undefined;var _Constants=require('../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _DashConstants=require('../../dash/constants/DashConstants');var _DashConstants2=_interopRequireDefault(_DashConstants);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _ThumbnailTrackInfo=require('../vo/ThumbnailTrackInfo');var _ThumbnailTrackInfo2=_interopRequireDefault(_ThumbnailTrackInfo);var _URLUtils=require('../../streaming/utils/URLUtils');var _URLUtils2=_interopRequireDefault(_URLUtils);var _SegmentsUtils=require('../../dash/utils/SegmentsUtils');var _Events=require('../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _BoxParser=require('../../streaming/utils/BoxParser');var _BoxParser2=_interopRequireDefault(_BoxParser);var _XHRLoader=require('../../streaming/net/XHRLoader');var _XHRLoader2=_interopRequireDefault(_XHRLoader);var _DashHandler=require('../../dash/DashHandler');var _DashHandler2=_interopRequireDefault(_DashHandler);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var THUMBNAILS_SCHEME_ID_URIS=exports.THUMBNAILS_SCHEME_ID_URIS=['http://dashif.org/thumbnail_tile','http://dashif.org/guidelines/thumbnail_tile'];function ThumbnailTracks(config){var context=this.context;var adapter=config.adapter;var baseURLController=config.baseURLController;var streamInfo=config.streamInfo;var timelineConverter=config.timelineConverter;var debug=config.debug;var eventBus=config.eventBus;var events=config.events;var dashConstants=config.dashConstants;var urlUtils=(0,_URLUtils2.default)(context).getInstance();var instance=void 0,tracks=void 0,indexHandler=void 0,currentTrackIndex=void 0,mediaInfo=void 0,loader=void 0,boxParser=void 0;function initialize(){reset();loader=(0,_XHRLoader2.default)(context).create({});boxParser=(0,_BoxParser2.default)(context).getInstance();indexHandler=(0,_DashHandler2.default)(context).create({streamInfo:streamInfo,timelineConverter:timelineConverter,baseURLController:baseURLController,debug:debug,eventBus:eventBus,events:events,dashConstants:dashConstants,urlUtils:urlUtils});// initialize controllers
indexHandler.initialize(adapter?adapter.getIsDynamic():false);// parse representation and create tracks
addTracks();}function normalizeSegments(fragments,representation){var segments=[];var count=0;var i=void 0,len=void 0,s=void 0,seg=void 0;for(i=0,len=fragments.length;i<len;i++){s=fragments[i];seg=(0,_SegmentsUtils.getTimeBasedSegment)(timelineConverter,adapter.getIsDynamic(),representation,s.startTime,s.duration,s.timescale,s.media,s.mediaRange,count);if(seg){segments.push(seg);seg=null;count++;}}return segments;}function addTracks(){if(!streamInfo||!adapter){return;}// Extract thumbnail tracks
mediaInfo=adapter.getMediaInfoForType(streamInfo,_Constants2.default.IMAGE);if(!mediaInfo){return;}var voReps=adapter.getVoRepresentations(mediaInfo);if(voReps&&voReps.length>0){voReps.forEach(function(rep){if(rep.segmentInfoType===_DashConstants2.default.SEGMENT_TEMPLATE&&rep.segmentDuration>0&&rep.media||rep.segmentInfoType===_DashConstants2.default.SEGMENT_TIMELINE){createTrack(rep);}if(rep.segmentInfoType===_DashConstants2.default.SEGMENT_BASE){createTrack(rep,true);}});}if(tracks.length>0){// Sort bitrates and select the lowest bitrate rendition
tracks.sort(function(a,b){return a.bitrate-b.bitrate;});currentTrackIndex=tracks.length-1;}}function createTrack(representation,useSegmentBase){var track=new _ThumbnailTrackInfo2.default();track.id=representation.id;track.bitrate=representation.bandwidth;track.width=representation.width;track.height=representation.height;track.tilesHor=1;track.tilesVert=1;if(representation.essentialProperties){representation.essentialProperties.forEach(function(p){if(THUMBNAILS_SCHEME_ID_URIS.indexOf(p.schemeIdUri)>=0&&p.value){var vars=p.value.split('x');if(vars.length===2&&!isNaN(vars[0])&&!isNaN(vars[1])){track.tilesHor=parseInt(vars[0],10);track.tilesVert=parseInt(vars[1],10);}}});}if(useSegmentBase){eventBus.trigger(_Events2.default.SEGMENTBASE_SEGMENTSLIST_REQUEST_NEEDED,{streamId:streamInfo.id,mediaType:_Constants2.default.IMAGE,mimeType:mediaInfo.mimeType,representation:representation,callback:function callback(streamId,mediaType,segments,representation){var cache=[];segments=normalizeSegments(segments,representation);track.segmentDuration=segments[0].duration;//assume all segments have the same duration
track.readThumbnail=function(time,callback){var cached=null;cache.some(function(el){if(el.start<=time&&el.end>time){cached=el.url;return true;}});if(cached){callback(cached);}else{segments.some(function(ss){if(ss.mediaStartTime<=time&&ss.mediaStartTime+ss.duration>time){var baseURL=baseURLController.resolve(representation.path);loader.load({method:'get',url:baseURL.url,request:{range:ss.mediaRange,responseType:'arraybuffer'},onload:function onload(e){var info=boxParser.getSamplesInfo(e.target.response);var blob=new Blob([e.target.response.slice(info.sampleList[0].offset,info.sampleList[0].offset+info.sampleList[0].size)],{type:'image/jpeg'});var imageUrl=window.URL.createObjectURL(blob);cache.push({start:ss.mediaStartTime,end:ss.mediaStartTime+ss.duration,url:imageUrl});if(callback)callback(imageUrl);}});return true;}});}};}});}else{track.startNumber=representation.startNumber;track.segmentDuration=representation.segmentDuration;track.timescale=representation.timescale;track.templateUrl=buildTemplateUrl(representation);}if(track.tilesHor>0&&track.tilesVert>0){// Precalculate width and heigth per tile for perf reasons
track.widthPerTile=track.width/track.tilesHor;track.heightPerTile=track.height/track.tilesVert;tracks.push(track);}}function buildTemplateUrl(representation){var templateUrl=urlUtils.isRelative(representation.media)?urlUtils.resolve(representation.media,baseURLController.resolve(representation.path).url):representation.media;if(!templateUrl){return'';}return(0,_SegmentsUtils.replaceIDForTemplate)(templateUrl,representation.id);}function getTracks(){return tracks;}function getCurrentTrackIndex(){return currentTrackIndex;}function getCurrentTrack(){if(currentTrackIndex<0){return null;}return tracks[currentTrackIndex];}function setTrackByIndex(index){if(!tracks||tracks.length===0){return;}// select highest bitrate in case selected index is higher than bitrate list length
if(index>=tracks.length){index=tracks.length-1;}currentTrackIndex=index;}function getThumbnailRequestForTime(time){var currentVoRep=void 0;var voReps=adapter.getVoRepresentations(mediaInfo);for(var i=0;i<voReps.length;i++){if(tracks[currentTrackIndex].id===voReps[i].id){currentVoRep=voReps[i];break;}}return indexHandler.getSegmentRequestForTime(mediaInfo,currentVoRep,time);}function reset(){tracks=[];currentTrackIndex=-1;mediaInfo=null;}instance={initialize:initialize,getTracks:getTracks,reset:reset,setTrackByIndex:setTrackByIndex,getCurrentTrack:getCurrentTrack,getCurrentTrackIndex:getCurrentTrackIndex,getThumbnailRequestForTime:getThumbnailRequestForTime};initialize();return instance;}ThumbnailTracks.__dashjs_factory_name='ThumbnailTracks';exports.default=_FactoryMaker2.default.getClassFactory(ThumbnailTracks);


},{"../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../../dash/constants/DashConstants":"../node_modules/dashjs/build/es5/src/dash/constants/DashConstants.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../vo/ThumbnailTrackInfo":"../node_modules/dashjs/build/es5/src/streaming/vo/ThumbnailTrackInfo.js","../../streaming/utils/URLUtils":"../node_modules/dashjs/build/es5/src/streaming/utils/URLUtils.js","../../dash/utils/SegmentsUtils":"../node_modules/dashjs/build/es5/src/dash/utils/SegmentsUtils.js","../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../../streaming/utils/BoxParser":"../node_modules/dashjs/build/es5/src/streaming/utils/BoxParser.js","../../streaming/net/XHRLoader":"../node_modules/dashjs/build/es5/src/streaming/net/XHRLoader.js","../../dash/DashHandler":"../node_modules/dashjs/build/es5/src/dash/DashHandler.js"}],"../node_modules/dashjs/build/es5/src/dash/models/DashManifestModel.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('../../streaming/constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _DashConstants=require('../constants/DashConstants');var _DashConstants2=_interopRequireDefault(_DashConstants);var _Representation=require('../vo/Representation');var _Representation2=_interopRequireDefault(_Representation);var _AdaptationSet=require('../vo/AdaptationSet');var _AdaptationSet2=_interopRequireDefault(_AdaptationSet);var _Period=require('../vo/Period');var _Period2=_interopRequireDefault(_Period);var _Mpd=require('../vo/Mpd');var _Mpd2=_interopRequireDefault(_Mpd);var _UTCTiming=require('../vo/UTCTiming');var _UTCTiming2=_interopRequireDefault(_UTCTiming);var _Event=require('../vo/Event');var _Event2=_interopRequireDefault(_Event);var _BaseURL=require('../vo/BaseURL');var _BaseURL2=_interopRequireDefault(_BaseURL);var _EventStream=require('../vo/EventStream');var _EventStream2=_interopRequireDefault(_EventStream);var _ObjectUtils=require('../../streaming/utils/ObjectUtils');var _ObjectUtils2=_interopRequireDefault(_ObjectUtils);var _URLUtils=require('../../streaming/utils/URLUtils');var _URLUtils2=_interopRequireDefault(_URLUtils);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Debug=require('../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _DashJSError=require('../../streaming/vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);var _Errors=require('../../core/errors/Errors');var _Errors2=_interopRequireDefault(_Errors);var _ThumbnailTracks=require('../../streaming/thumbnail/ThumbnailTracks');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function DashManifestModel(){var instance=void 0,logger=void 0,errHandler=void 0,BASE64=void 0;var context=this.context;var urlUtils=(0,_URLUtils2.default)(context).getInstance();var isInteger=Number.isInteger||function(value){return typeof value==='number'&&isFinite(value)&&Math.floor(value)===value;};function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);}function getIsTypeOf(adaptation,type){var i=void 0,len=void 0,representation=void 0,col=void 0,mimeTypeRegEx=void 0,codecs=void 0;var result=false;var found=false;if(!adaptation){throw new Error('adaptation is not defined');}if(!type){throw new Error('type is not defined');}if(adaptation.hasOwnProperty('ContentComponent_asArray')){col=adaptation.ContentComponent_asArray;}mimeTypeRegEx=type!==_Constants2.default.TEXT?new RegExp(type):new RegExp('(vtt|ttml)');if(adaptation.Representation_asArray&&adaptation.Representation_asArray.length&&adaptation.Representation_asArray.length>0){var essentialProperties=getEssentialPropertiesForRepresentation(adaptation.Representation_asArray[0]);if(essentialProperties&&essentialProperties.length>0&&_ThumbnailTracks.THUMBNAILS_SCHEME_ID_URIS.indexOf(essentialProperties[0].schemeIdUri)>=0){return type===_Constants2.default.IMAGE;}if(adaptation.Representation_asArray[0].hasOwnProperty(_DashConstants2.default.CODECS)){// Just check the start of the codecs string
codecs=adaptation.Representation_asArray[0].codecs;if(codecs.search(_Constants2.default.STPP)===0||codecs.search(_Constants2.default.WVTT)===0){return type===_Constants2.default.FRAGMENTED_TEXT;}}}if(col){if(col.length>1){return type===_Constants2.default.MUXED;}else if(col[0]&&col[0].contentType===type){result=true;found=true;}}if(adaptation.hasOwnProperty(_DashConstants2.default.MIME_TYPE)){result=mimeTypeRegEx.test(adaptation.mimeType);found=true;}// couldn't find on adaptationset, so check a representation
if(!found){i=0;len=adaptation.Representation_asArray&&adaptation.Representation_asArray.length?adaptation.Representation_asArray.length:0;while(!found&&i<len){representation=adaptation.Representation_asArray[i];if(representation.hasOwnProperty(_DashConstants2.default.MIME_TYPE)){result=mimeTypeRegEx.test(representation.mimeType);found=true;}i++;}}return result;}function getIsAudio(adaptation){return getIsTypeOf(adaptation,_Constants2.default.AUDIO);}function getIsVideo(adaptation){return getIsTypeOf(adaptation,_Constants2.default.VIDEO);}function getIsFragmentedText(adaptation){return getIsTypeOf(adaptation,_Constants2.default.FRAGMENTED_TEXT);}function getIsMuxed(adaptation){return getIsTypeOf(adaptation,_Constants2.default.MUXED);}function getIsImage(adaptation){return getIsTypeOf(adaptation,_Constants2.default.IMAGE);}function getIsTextTrack(type){return type==='text/vtt'||type==='application/ttml+xml';}function getLanguageForAdaptation(adaptation){var lang='';if(adaptation&&adaptation.hasOwnProperty(_DashConstants2.default.LANG)){//Filter out any other characters not allowed according to RFC5646
lang=adaptation.lang.replace(/[^A-Za-z0-9-]/g,'');}return lang;}function getViewpointForAdaptation(adaptation){return adaptation&&adaptation.hasOwnProperty(_DashConstants2.default.VIEWPOINT)?adaptation.Viewpoint:null;}function getRolesForAdaptation(adaptation){return adaptation&&adaptation.hasOwnProperty(_DashConstants2.default.ROLE_ASARRAY)?adaptation.Role_asArray:[];}function getAccessibilityForAdaptation(adaptation){return adaptation&&adaptation.hasOwnProperty(_DashConstants2.default.ACCESSIBILITY_ASARRAY)?adaptation.Accessibility_asArray:[];}function getAudioChannelConfigurationForAdaptation(adaptation){return adaptation&&adaptation.hasOwnProperty(_DashConstants2.default.AUDIOCHANNELCONFIGURATION_ASARRAY)?adaptation.AudioChannelConfiguration_asArray:[];}function getAudioChannelConfigurationForRepresentation(representation){return representation&&representation.hasOwnProperty(_DashConstants2.default.AUDIOCHANNELCONFIGURATION_ASARRAY)?representation.AudioChannelConfiguration_asArray:[];}function getRepresentationSortFunction(){return function(a,b){return a.bandwidth-b.bandwidth;};}function processAdaptation(realAdaptation){if(realAdaptation&&Array.isArray(realAdaptation.Representation_asArray)){realAdaptation.Representation_asArray.sort(getRepresentationSortFunction());}return realAdaptation;}function getRealAdaptations(manifest,periodIndex){return manifest&&manifest.Period_asArray&&isInteger(periodIndex)?manifest.Period_asArray[periodIndex]?manifest.Period_asArray[periodIndex].AdaptationSet_asArray:[]:[];}function getAdaptationForId(id,manifest,periodIndex){var realAdaptations=getRealAdaptations(manifest,periodIndex);var i=void 0,len=void 0;for(i=0,len=realAdaptations.length;i<len;i++){if(realAdaptations[i].hasOwnProperty(_DashConstants2.default.ID)&&realAdaptations[i].id===id){return realAdaptations[i];}}return null;}function getAdaptationForIndex(index,manifest,periodIndex){var realAdaptations=getRealAdaptations(manifest,periodIndex);if(realAdaptations.length>0&&isInteger(index)){return realAdaptations[index];}else{return null;}}function getIndexForAdaptation(realAdaptation,manifest,periodIndex){if(!realAdaptation){return-1;}var realAdaptations=getRealAdaptations(manifest,periodIndex);for(var i=0;i<realAdaptations.length;i++){var objectUtils=(0,_ObjectUtils2.default)(context).getInstance();if(objectUtils.areEqual(realAdaptations[i],realAdaptation)){return i;}}return-1;}function getAdaptationsForType(manifest,periodIndex,type){var realAdaptations=getRealAdaptations(manifest,periodIndex);var i=void 0,len=void 0;var adaptations=[];for(i=0,len=realAdaptations.length;i<len;i++){if(getIsTypeOf(realAdaptations[i],type)){adaptations.push(processAdaptation(realAdaptations[i]));}}return adaptations;}function getCodec(adaptation,representationId,addResolutionInfo){var codec=null;if(adaptation&&adaptation.Representation_asArray&&adaptation.Representation_asArray.length>0){var representation=isInteger(representationId)&&representationId>=0&&representationId<adaptation.Representation_asArray.length?adaptation.Representation_asArray[representationId]:adaptation.Representation_asArray[0];if(representation){codec=representation.mimeType+';codecs="'+representation.codecs+'"';if(addResolutionInfo&&representation.width!==undefined){codec+=';width="'+representation.width+'";height="'+representation.height+'"';}}}// If the codec contains a profiles parameter we remove it. Otherwise it will cause problems when checking for codec capabilities of the platform
if(codec){codec=codec.replace(/\sprofiles=[^;]*/g,'');}return codec;}function getMimeType(adaptation){return adaptation&&adaptation.Representation_asArray&&adaptation.Representation_asArray.length>0?adaptation.Representation_asArray[0].mimeType:null;}function getKID(adaptation){if(!adaptation||!adaptation.hasOwnProperty(_DashConstants2.default.CENC_DEFAULT_KID)){return null;}return adaptation[_DashConstants2.default.CENC_DEFAULT_KID];}function getLabelsForAdaptation(adaptation){if(!adaptation||!Array.isArray(adaptation.Label_asArray)){return[];}var labelArray=[];for(var i=0;i<adaptation.Label_asArray.length;i++){labelArray.push({lang:adaptation.Label_asArray[i].lang,text:adaptation.Label_asArray[i].__text||adaptation.Label_asArray[i]});}return labelArray;}function getContentProtectionData(adaptation){if(!adaptation||!adaptation.hasOwnProperty(_DashConstants2.default.CONTENTPROTECTION_ASARRAY)||adaptation.ContentProtection_asArray.length===0){return null;}return adaptation.ContentProtection_asArray;}function getIsDynamic(manifest){var isDynamic=false;if(manifest&&manifest.hasOwnProperty('type')){isDynamic=manifest.type===_DashConstants2.default.DYNAMIC;}return isDynamic;}function hasProfile(manifest,profile){var has=false;if(manifest&&manifest.profiles&&manifest.profiles.length>0){has=manifest.profiles.indexOf(profile)!==-1;}return has;}function getDuration(manifest){var mpdDuration=void 0;//@mediaPresentationDuration specifies the duration of the entire Media Presentation.
//If the attribute is not present, the duration of the Media Presentation is unknown.
if(manifest&&manifest.hasOwnProperty(_DashConstants2.default.MEDIA_PRESENTATION_DURATION)){mpdDuration=manifest.mediaPresentationDuration;}else if(manifest&&manifest.type=='dynamic'){mpdDuration=Number.POSITIVE_INFINITY;}else{mpdDuration=Number.MAX_SAFE_INTEGER||Number.MAX_VALUE;}return mpdDuration;}function getBandwidth(representation){return representation&&representation.bandwidth?representation.bandwidth:NaN;}function getManifestUpdatePeriod(manifest){var latencyOfLastUpdate=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var delay=NaN;if(manifest&&manifest.hasOwnProperty(_DashConstants2.default.MINIMUM_UPDATE_PERIOD)){delay=manifest.minimumUpdatePeriod;}return isNaN(delay)?delay:Math.max(delay-latencyOfLastUpdate,1);}function getRepresentationCount(adaptation){return adaptation&&Array.isArray(adaptation.Representation_asArray)?adaptation.Representation_asArray.length:0;}function getBitrateListForAdaptation(realAdaptation){var processedRealAdaptation=processAdaptation(realAdaptation);var realRepresentations=processedRealAdaptation&&Array.isArray(processedRealAdaptation.Representation_asArray)?processedRealAdaptation.Representation_asArray:[];return realRepresentations.map(function(realRepresentation){return{bandwidth:realRepresentation.bandwidth,width:realRepresentation.width||0,height:realRepresentation.height||0,scanType:realRepresentation.scanType||null,id:realRepresentation.id||null};});}function getEssentialPropertiesForRepresentation(realRepresentation){if(!realRepresentation||!realRepresentation.EssentialProperty_asArray||!realRepresentation.EssentialProperty_asArray.length)return null;return realRepresentation.EssentialProperty_asArray.map(function(prop){return{schemeIdUri:prop.schemeIdUri,value:prop.value};});}function getRepresentationFor(index,adaptation){return adaptation&&adaptation.Representation_asArray&&adaptation.Representation_asArray.length>0&&isInteger(index)?adaptation.Representation_asArray[index]:null;}function getRealAdaptationFor(voAdaptation){if(voAdaptation&&voAdaptation.period&&isInteger(voAdaptation.period.index)){var periodArray=voAdaptation.period.mpd.manifest.Period_asArray[voAdaptation.period.index];if(periodArray&&periodArray.AdaptationSet_asArray&&isInteger(voAdaptation.index)){return processAdaptation(periodArray.AdaptationSet_asArray[voAdaptation.index]);}}}function getRepresentationsForAdaptation(voAdaptation){var voRepresentations=[];var processedRealAdaptation=getRealAdaptationFor(voAdaptation);var segmentInfo=void 0,baseUrl=void 0;if(processedRealAdaptation&&processedRealAdaptation.Representation_asArray){// TODO: TO BE REMOVED. We should get just the baseUrl elements that affects to the representations
// that we are processing. Making it works properly will require much further changes and given
// parsing base Urls parameters is needed for our ultra low latency examples, we will
// keep this "tricky" code until the real (and good) solution comes
if(voAdaptation&&voAdaptation.period&&isInteger(voAdaptation.period.index)){var baseUrls=getBaseURLsFromElement(voAdaptation.period.mpd.manifest);if(baseUrls){baseUrl=baseUrls[0];}}for(var i=0,len=processedRealAdaptation.Representation_asArray.length;i<len;++i){var realRepresentation=processedRealAdaptation.Representation_asArray[i];var voRepresentation=new _Representation2.default();voRepresentation.index=i;voRepresentation.adaptation=voAdaptation;if(realRepresentation.hasOwnProperty(_DashConstants2.default.ID)){voRepresentation.id=realRepresentation.id;}if(realRepresentation.hasOwnProperty(_DashConstants2.default.CODECS)){voRepresentation.codecs=realRepresentation.codecs;}if(realRepresentation.hasOwnProperty(_DashConstants2.default.CODEC_PRIVATE_DATA)){voRepresentation.codecPrivateData=realRepresentation.codecPrivateData;}if(realRepresentation.hasOwnProperty(_DashConstants2.default.BANDWITH)){voRepresentation.bandwidth=realRepresentation.bandwidth;}if(realRepresentation.hasOwnProperty(_DashConstants2.default.WIDTH)){voRepresentation.width=realRepresentation.width;}if(realRepresentation.hasOwnProperty(_DashConstants2.default.HEIGHT)){voRepresentation.height=realRepresentation.height;}if(realRepresentation.hasOwnProperty(_DashConstants2.default.SCAN_TYPE)){voRepresentation.scanType=realRepresentation.scanType;}if(realRepresentation.hasOwnProperty(_DashConstants2.default.MAX_PLAYOUT_RATE)){voRepresentation.maxPlayoutRate=realRepresentation.maxPlayoutRate;}if(realRepresentation.hasOwnProperty(_DashConstants2.default.SEGMENT_BASE)){segmentInfo=realRepresentation.SegmentBase;voRepresentation.segmentInfoType=_DashConstants2.default.SEGMENT_BASE;}else if(realRepresentation.hasOwnProperty(_DashConstants2.default.SEGMENT_LIST)){segmentInfo=realRepresentation.SegmentList;if(segmentInfo.hasOwnProperty(_DashConstants2.default.SEGMENT_TIMELINE)){voRepresentation.segmentInfoType=_DashConstants2.default.SEGMENT_TIMELINE;}else{voRepresentation.segmentInfoType=_DashConstants2.default.SEGMENT_LIST;}}else if(realRepresentation.hasOwnProperty(_DashConstants2.default.SEGMENT_TEMPLATE)){segmentInfo=realRepresentation.SegmentTemplate;if(segmentInfo.hasOwnProperty(_DashConstants2.default.SEGMENT_TIMELINE)){voRepresentation.segmentInfoType=_DashConstants2.default.SEGMENT_TIMELINE;}else{voRepresentation.segmentInfoType=_DashConstants2.default.SEGMENT_TEMPLATE;}if(segmentInfo.hasOwnProperty(_DashConstants2.default.INITIALIZATION_MINUS)){voRepresentation.initialization=segmentInfo.initialization.split('$Bandwidth$').join(realRepresentation.bandwidth).split('$RepresentationID$').join(realRepresentation.id);}}else{voRepresentation.segmentInfoType=_DashConstants2.default.BASE_URL;}voRepresentation.essentialProperties=getEssentialPropertiesForRepresentation(realRepresentation);if(segmentInfo){if(segmentInfo.hasOwnProperty(_DashConstants2.default.INITIALIZATION)){var initialization=segmentInfo.Initialization;if(initialization.hasOwnProperty(_DashConstants2.default.SOURCE_URL)){voRepresentation.initialization=initialization.sourceURL;}if(initialization.hasOwnProperty(_DashConstants2.default.RANGE)){voRepresentation.range=initialization.range;// initialization source url will be determined from
// BaseURL when resolved at load time.
}}else if(realRepresentation.hasOwnProperty(_DashConstants2.default.MIME_TYPE)&&getIsTextTrack(realRepresentation.mimeType)){voRepresentation.range=0;}if(segmentInfo.hasOwnProperty(_DashConstants2.default.TIMESCALE)){voRepresentation.timescale=segmentInfo.timescale;}if(segmentInfo.hasOwnProperty(_DashConstants2.default.DURATION)){// TODO according to the spec @maxSegmentDuration specifies the maximum duration of any Segment in any Representation in the Media Presentation
// It is also said that for a SegmentTimeline any @d value shall not exceed the value of MPD@maxSegmentDuration, but nothing is said about
// SegmentTemplate @duration attribute. We need to find out if @maxSegmentDuration should be used instead of calculated duration if the the duration
// exceeds @maxSegmentDuration
voRepresentation.segmentDuration=segmentInfo.duration/voRepresentation.timescale;}else if(realRepresentation.hasOwnProperty(_DashConstants2.default.SEGMENT_TEMPLATE)){segmentInfo=realRepresentation.SegmentTemplate;if(segmentInfo.hasOwnProperty(_DashConstants2.default.SEGMENT_TIMELINE)){voRepresentation.segmentDuration=calcSegmentDuration(segmentInfo.SegmentTimeline)/voRepresentation.timescale;}}if(segmentInfo.hasOwnProperty(_DashConstants2.default.MEDIA)){voRepresentation.media=segmentInfo.media;}if(segmentInfo.hasOwnProperty(_DashConstants2.default.START_NUMBER)){voRepresentation.startNumber=segmentInfo.startNumber;}if(segmentInfo.hasOwnProperty(_DashConstants2.default.INDEX_RANGE)){voRepresentation.indexRange=segmentInfo.indexRange;}if(segmentInfo.hasOwnProperty(_DashConstants2.default.PRESENTATION_TIME_OFFSET)){voRepresentation.presentationTimeOffset=segmentInfo.presentationTimeOffset/voRepresentation.timescale;}if(segmentInfo.hasOwnProperty(_DashConstants2.default.AVAILABILITY_TIME_OFFSET)){voRepresentation.availabilityTimeOffset=segmentInfo.availabilityTimeOffset;}else if(baseUrl&&baseUrl.availabilityTimeOffset!==undefined){voRepresentation.availabilityTimeOffset=baseUrl.availabilityTimeOffset;}if(segmentInfo.hasOwnProperty(_DashConstants2.default.AVAILABILITY_TIME_COMPLETE)){voRepresentation.availabilityTimeComplete=segmentInfo.availabilityTimeComplete!=='false';}else if(baseUrl&&baseUrl.availabilityTimeComplete!==undefined){voRepresentation.availabilityTimeComplete=baseUrl.availabilityTimeComplete;}}voRepresentation.MSETimeOffset=calcMSETimeOffset(voRepresentation);voRepresentation.path=[voAdaptation.period.index,voAdaptation.index,i];voRepresentations.push(voRepresentation);}}return voRepresentations;}function calcSegmentDuration(segmentTimeline){var s0=segmentTimeline.S_asArray[0];var s1=segmentTimeline.S_asArray[1];return s0.hasOwnProperty('d')?s0.d:s1.t-s0.t;}function calcMSETimeOffset(representation){// The MSEOffset is offset from AST for media. It is Period@start - presentationTimeOffset
var presentationOffset=representation.presentationTimeOffset;var periodStart=representation.adaptation.period.start;return periodStart-presentationOffset;}function getAdaptationsForPeriod(voPeriod){var realPeriod=voPeriod&&isInteger(voPeriod.index)?voPeriod.mpd.manifest.Period_asArray[voPeriod.index]:null;var voAdaptations=[];var voAdaptationSet=void 0,realAdaptationSet=void 0,i=void 0;if(realPeriod&&realPeriod.AdaptationSet_asArray){for(i=0;i<realPeriod.AdaptationSet_asArray.length;i++){realAdaptationSet=realPeriod.AdaptationSet_asArray[i];voAdaptationSet=new _AdaptationSet2.default();if(realAdaptationSet.hasOwnProperty(_DashConstants2.default.ID)){voAdaptationSet.id=realAdaptationSet.id;}voAdaptationSet.index=i;voAdaptationSet.period=voPeriod;if(getIsMuxed(realAdaptationSet)){voAdaptationSet.type=_Constants2.default.MUXED;}else if(getIsAudio(realAdaptationSet)){voAdaptationSet.type=_Constants2.default.AUDIO;}else if(getIsVideo(realAdaptationSet)){voAdaptationSet.type=_Constants2.default.VIDEO;}else if(getIsFragmentedText(realAdaptationSet)){voAdaptationSet.type=_Constants2.default.FRAGMENTED_TEXT;}else if(getIsImage(realAdaptationSet)){voAdaptationSet.type=_Constants2.default.IMAGE;}else{voAdaptationSet.type=_Constants2.default.TEXT;}voAdaptations.push(voAdaptationSet);}}return voAdaptations;}function getRegularPeriods(mpd){var isDynamic=mpd?getIsDynamic(mpd.manifest):false;var voPeriods=[];var realPreviousPeriod=null;var realPeriod=null;var voPreviousPeriod=null;var voPeriod=null;var len=void 0,i=void 0;for(i=0,len=mpd&&mpd.manifest&&mpd.manifest.Period_asArray?mpd.manifest.Period_asArray.length:0;i<len;i++){realPeriod=mpd.manifest.Period_asArray[i];// If the attribute @start is present in the Period, then the
// Period is a regular Period and the PeriodStart is equal
// to the value of this attribute.
if(realPeriod.hasOwnProperty(_DashConstants2.default.START)){voPeriod=new _Period2.default();voPeriod.start=realPeriod.start;}// If the @start attribute is absent, but the previous Period
// element contains a @duration attribute then then this new
// Period is also a regular Period. The start time of the new
// Period PeriodStart is the sum of the start time of the previous
// Period PeriodStart and the value of the attribute @duration
// of the previous Period.
else if(realPreviousPeriod!==null&&realPreviousPeriod.hasOwnProperty(_DashConstants2.default.DURATION)&&voPreviousPeriod!==null){voPeriod=new _Period2.default();voPeriod.start=parseFloat((voPreviousPeriod.start+voPreviousPeriod.duration).toFixed(5));}// If (i) @start attribute is absent, and (ii) the Period element
// is the first in the MPD, and (iii) the MPD@type is 'static',
// then the PeriodStart time shall be set to zero.
else if(i===0&&!isDynamic){voPeriod=new _Period2.default();voPeriod.start=0;}// The Period extends until the PeriodStart of the next Period.
// The difference between the PeriodStart time of a Period and
// the PeriodStart time of the following Period.
if(voPreviousPeriod!==null&&isNaN(voPreviousPeriod.duration)){if(voPeriod!==null){voPreviousPeriod.duration=parseFloat((voPeriod.start-voPreviousPeriod.start).toFixed(5));}else{logger.warn('First period duration could not be calculated because lack of start and duration period properties. This will cause timing issues during playback');}}if(voPeriod!==null){voPeriod.id=getPeriodId(realPeriod,i);voPeriod.index=i;voPeriod.mpd=mpd;if(realPeriod.hasOwnProperty(_DashConstants2.default.DURATION)){voPeriod.duration=realPeriod.duration;}voPeriods.push(voPeriod);realPreviousPeriod=realPeriod;voPreviousPeriod=voPeriod;}realPeriod=null;voPeriod=null;}if(voPeriods.length===0){return voPeriods;}// The last Period extends until the end of the Media Presentation.
// The difference between the PeriodStart time of the last Period
// and the mpd duration
if(voPreviousPeriod!==null&&isNaN(voPreviousPeriod.duration)){voPreviousPeriod.duration=parseFloat((getEndTimeForLastPeriod(voPreviousPeriod)-voPreviousPeriod.start).toFixed(5));}return voPeriods;}function getPeriodId(realPeriod,i){if(!realPeriod){throw new Error('Period cannot be null or undefined');}var id=_Period2.default.DEFAULT_ID+'_'+i;if(realPeriod.hasOwnProperty(_DashConstants2.default.ID)&&realPeriod.id.length>0&&realPeriod.id!=='__proto__'){id=realPeriod.id;}return id;}function getMpd(manifest){var mpd=new _Mpd2.default();if(manifest){mpd.manifest=manifest;if(manifest.hasOwnProperty(_DashConstants2.default.AVAILABILITY_START_TIME)){mpd.availabilityStartTime=new Date(manifest.availabilityStartTime.getTime());}else{if(manifest.loadedTime){mpd.availabilityStartTime=new Date(manifest.loadedTime.getTime());}}if(manifest.hasOwnProperty(_DashConstants2.default.AVAILABILITY_END_TIME)){mpd.availabilityEndTime=new Date(manifest.availabilityEndTime.getTime());}if(manifest.hasOwnProperty(_DashConstants2.default.MINIMUM_UPDATE_PERIOD)){mpd.minimumUpdatePeriod=manifest.minimumUpdatePeriod;}if(manifest.hasOwnProperty(_DashConstants2.default.MEDIA_PRESENTATION_DURATION)){mpd.mediaPresentationDuration=manifest.mediaPresentationDuration;}if(manifest.hasOwnProperty(_DashConstants2.default.SUGGESTED_PRESENTATION_DELAY)){mpd.suggestedPresentationDelay=manifest.suggestedPresentationDelay;}if(manifest.hasOwnProperty(_DashConstants2.default.TIMESHIFT_BUFFER_DEPTH)){mpd.timeShiftBufferDepth=manifest.timeShiftBufferDepth;}if(manifest.hasOwnProperty(_DashConstants2.default.MAX_SEGMENT_DURATION)){mpd.maxSegmentDuration=manifest.maxSegmentDuration;}}return mpd;}function checkConfig(){if(!errHandler||!errHandler.hasOwnProperty('error')){throw new Error(_Constants2.default.MISSING_CONFIG_ERROR);}}function getEndTimeForLastPeriod(voPeriod){checkConfig();var isDynamic=getIsDynamic(voPeriod.mpd.manifest);var periodEnd=void 0;if(voPeriod.mpd.manifest.mediaPresentationDuration){periodEnd=voPeriod.mpd.manifest.mediaPresentationDuration;}else if(voPeriod.duration){periodEnd=voPeriod.duration;}else if(isDynamic){periodEnd=Number.POSITIVE_INFINITY;}else{errHandler.error(new _DashJSError2.default(_Errors2.default.MANIFEST_ERROR_ID_PARSE_CODE,'Must have @mediaPresentationDuration on MPD or an explicit @duration on the last period.',voPeriod));}return periodEnd;}function getEventsForPeriod(period){var manifest=period&&period.mpd&&period.mpd.manifest?period.mpd.manifest:null;var periodArray=manifest?manifest.Period_asArray:null;var eventStreams=periodArray&&period&&isInteger(period.index)?periodArray[period.index].EventStream_asArray:null;var events=[];var i=void 0,j=void 0;if(eventStreams){for(i=0;i<eventStreams.length;i++){var eventStream=new _EventStream2.default();eventStream.period=period;eventStream.timescale=1;if(eventStreams[i].hasOwnProperty(_Constants2.default.SCHEME_ID_URI)){eventStream.schemeIdUri=eventStreams[i][_Constants2.default.SCHEME_ID_URI];}else{throw new Error('Invalid EventStream. SchemeIdUri has to be set');}if(eventStreams[i].hasOwnProperty(_DashConstants2.default.TIMESCALE)){eventStream.timescale=eventStreams[i][_DashConstants2.default.TIMESCALE];}if(eventStreams[i].hasOwnProperty(_DashConstants2.default.VALUE)){eventStream.value=eventStreams[i][_DashConstants2.default.VALUE];}if(eventStreams[i].hasOwnProperty(_DashConstants2.default.PRESENTATION_TIME_OFFSET)){eventStream.presentationTimeOffset=eventStreams[i][_DashConstants2.default.PRESENTATION_TIME_OFFSET];}for(j=0;eventStreams[i].Event_asArray&&j<eventStreams[i].Event_asArray.length;j++){var currentMpdEvent=eventStreams[i].Event_asArray[j];var event=new _Event2.default();event.presentationTime=0;event.eventStream=eventStream;if(currentMpdEvent.hasOwnProperty(_DashConstants2.default.PRESENTATION_TIME)){event.presentationTime=currentMpdEvent.presentationTime;var presentationTimeOffset=eventStream.presentationTimeOffset?eventStream.presentationTimeOffset/eventStream.timescale:0;event.calculatedPresentationTime=event.presentationTime/eventStream.timescale+period.start-presentationTimeOffset;}if(currentMpdEvent.hasOwnProperty(_DashConstants2.default.DURATION)){event.duration=currentMpdEvent.duration/eventStream.timescale;}if(currentMpdEvent.hasOwnProperty(_DashConstants2.default.ID)){event.id=currentMpdEvent.id;}if(currentMpdEvent.Signal&&currentMpdEvent.Signal.Binary){// toString is used to manage both regular and namespaced tags
event.messageData=BASE64.decodeArray(currentMpdEvent.Signal.Binary.toString());}else{// From Cor.1: 'NOTE: this attribute is an alternative
// to specifying a complete XML element(s) in the Event.
// It is useful when an event leans itself to a compact
// string representation'.
event.messageData=currentMpdEvent.messageData||currentMpdEvent.__text;}events.push(event);}}}return events;}function getEventStreams(inbandStreams,representation){var eventStreams=[];var i=void 0;if(!inbandStreams)return eventStreams;for(i=0;i<inbandStreams.length;i++){var eventStream=new _EventStream2.default();eventStream.timescale=1;eventStream.representation=representation;if(inbandStreams[i].hasOwnProperty(_Constants2.default.SCHEME_ID_URI)){eventStream.schemeIdUri=inbandStreams[i].schemeIdUri;}else{throw new Error('Invalid EventStream. SchemeIdUri has to be set');}if(inbandStreams[i].hasOwnProperty(_DashConstants2.default.TIMESCALE)){eventStream.timescale=inbandStreams[i].timescale;}if(inbandStreams[i].hasOwnProperty(_DashConstants2.default.VALUE)){eventStream.value=inbandStreams[i].value;}eventStreams.push(eventStream);}return eventStreams;}function getEventStreamForAdaptationSet(manifest,adaptation){var inbandStreams=void 0,periodArray=void 0,adaptationArray=void 0;if(manifest&&manifest.Period_asArray&&adaptation&&adaptation.period&&isInteger(adaptation.period.index)){periodArray=manifest.Period_asArray[adaptation.period.index];if(periodArray&&periodArray.AdaptationSet_asArray&&isInteger(adaptation.index)){adaptationArray=periodArray.AdaptationSet_asArray[adaptation.index];if(adaptationArray){inbandStreams=adaptationArray.InbandEventStream_asArray;}}}return getEventStreams(inbandStreams,null);}function getEventStreamForRepresentation(manifest,representation){var inbandStreams=void 0,periodArray=void 0,adaptationArray=void 0,representationArray=void 0;if(manifest&&manifest.Period_asArray&&representation&&representation.adaptation&&representation.adaptation.period&&isInteger(representation.adaptation.period.index)){periodArray=manifest.Period_asArray[representation.adaptation.period.index];if(periodArray&&periodArray.AdaptationSet_asArray&&isInteger(representation.adaptation.index)){adaptationArray=periodArray.AdaptationSet_asArray[representation.adaptation.index];if(adaptationArray&&adaptationArray.Representation_asArray&&isInteger(representation.index)){representationArray=adaptationArray.Representation_asArray[representation.index];if(representationArray){inbandStreams=representationArray.InbandEventStream_asArray;}}}}return getEventStreams(inbandStreams,representation);}function getUTCTimingSources(manifest){var isDynamic=getIsDynamic(manifest);var hasAST=manifest?manifest.hasOwnProperty(_DashConstants2.default.AVAILABILITY_START_TIME):false;var utcTimingsArray=manifest?manifest.UTCTiming_asArray:null;var utcTimingEntries=[];// do not bother synchronizing the clock unless MPD is live,
// or it is static and has availabilityStartTime attribute
if(isDynamic||hasAST){if(utcTimingsArray){// the order is important here - 23009-1 states that the order
// in the manifest "indicates relative preference, first having
// the highest, and the last the lowest priority".
utcTimingsArray.forEach(function(utcTiming){var entry=new _UTCTiming2.default();if(utcTiming.hasOwnProperty(_Constants2.default.SCHEME_ID_URI)){entry.schemeIdUri=utcTiming.schemeIdUri;}else{// entries of type DescriptorType with no schemeIdUri
// are meaningless. let's just ignore this entry and
// move on.
return;}// this is (incorrectly) interpreted as a number - schema
// defines it as a string
if(utcTiming.hasOwnProperty(_DashConstants2.default.VALUE)){entry.value=utcTiming.value.toString();}else{// without a value, there's not a lot we can do with
// this entry. let's just ignore this one and move on
return;}// we're not interested in the optional id or any other
// attributes which might be attached to the entry
utcTimingEntries.push(entry);});}}return utcTimingEntries;}function getBaseURLsFromElement(node){var baseUrls=[];// if node.BaseURL_asArray and node.baseUri are undefined entries
// will be [undefined] which entries.some will just skip
var entries=node.BaseURL_asArray||[node.baseUri];var earlyReturn=false;entries.some(function(entry){if(entry){var baseUrl=new _BaseURL2.default();var text=entry.__text||entry;if(urlUtils.isRelative(text)){// it doesn't really make sense to have relative and
// absolute URLs at the same level, or multiple
// relative URLs at the same level, so assume we are
// done from this level of the MPD
earlyReturn=true;// deal with the specific case where the MPD@BaseURL
// is specified and is relative. when no MPD@BaseURL
// entries exist, that case is handled by the
// [node.baseUri] in the entries definition.
if(node.baseUri){text=urlUtils.resolve(text,node.baseUri);}}baseUrl.url=text;// serviceLocation is optional, but we need it in order
// to blacklist correctly. if it's not available, use
// anything unique since there's no relationship to any
// other BaseURL and, in theory, the url should be
// unique so use this instead.
if(entry.hasOwnProperty(_DashConstants2.default.SERVICE_LOCATION)&&entry.serviceLocation.length){baseUrl.serviceLocation=entry.serviceLocation;}else{baseUrl.serviceLocation=text;}if(entry.hasOwnProperty(_DashConstants2.default.DVB_PRIORITY)){baseUrl.dvb_priority=entry[_DashConstants2.default.DVB_PRIORITY];}if(entry.hasOwnProperty(_DashConstants2.default.DVB_WEIGHT)){baseUrl.dvb_weight=entry[_DashConstants2.default.DVB_WEIGHT];}if(entry.hasOwnProperty(_DashConstants2.default.AVAILABILITY_TIME_OFFSET)){baseUrl.availabilityTimeOffset=entry[_DashConstants2.default.AVAILABILITY_TIME_OFFSET];}if(entry.hasOwnProperty(_DashConstants2.default.AVAILABILITY_TIME_COMPLETE)){baseUrl.availabilityTimeComplete=entry[_DashConstants2.default.AVAILABILITY_TIME_COMPLETE]!=='false';}/* NOTE: byteRange currently unused
                 */baseUrls.push(baseUrl);return earlyReturn;}});return baseUrls;}function getLocation(manifest){if(manifest&&manifest.hasOwnProperty(_Constants2.default.LOCATION)){// for now, do not support multiple Locations -
// just set Location to the first Location.
manifest.Location=manifest.Location_asArray[0];return manifest.Location;}// may well be undefined
return undefined;}function getSuggestedPresentationDelay(mpd){return mpd&&mpd.hasOwnProperty(_DashConstants2.default.SUGGESTED_PRESENTATION_DELAY)?mpd.suggestedPresentationDelay:null;}function getAvailabilityStartTime(mpd){return mpd&&mpd.hasOwnProperty(_DashConstants2.default.AVAILABILITY_START_TIME)&&mpd.availabilityStartTime!==null?mpd.availabilityStartTime.getTime():null;}function getServiceDescriptions(manifest){var serviceDescriptions=[];if(manifest&&manifest.hasOwnProperty(_DashConstants2.default.SERVICE_DESCRIPTION)){var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=manifest.ServiceDescription_asArray[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var sd=_step.value;// Convert each of the properties defined in
var id=void 0,schemeIdUri=void 0,latency=void 0,playbackRate=void 0;for(var prop in sd){if(sd.hasOwnProperty(prop)){if(prop===_DashConstants2.default.ID){id=sd[prop];}else if(prop===_DashConstants2.default.SERVICE_DESCRIPTION_SCOPE){schemeIdUri=sd[prop].schemeIdUri;}else if(prop===_DashConstants2.default.SERVICE_DESCRIPTION_LATENCY){latency={target:sd[prop].target,max:sd[prop].max,min:sd[prop].min};}else if(prop===_DashConstants2.default.SERVICE_DESCRIPTION_PLAYBACK_RATE){playbackRate={max:sd[prop].max,min:sd[prop].min};}}}// we have a ServiceDescription for low latency. Add it if it really has parameters defined
if(schemeIdUri===_Constants2.default.SERVICE_DESCRIPTION_LL_SCHEME&&(latency||playbackRate)){serviceDescriptions.push({id:id,schemeIdUri:schemeIdUri,latency:latency,playbackRate:playbackRate});}}}catch(err){_didIteratorError=true;_iteratorError=err;}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return();}}finally{if(_didIteratorError){throw _iteratorError;}}}}return serviceDescriptions;}function getSupplementalPropperties(adaptation){var supplementalProperties={};if(adaptation&&adaptation.hasOwnProperty(_DashConstants2.default.SUPPLEMENTAL_PROPERTY)){var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=adaptation.SupplementalProperty_asArray[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var sp=_step2.value;if(sp.hasOwnProperty(_Constants2.default.SCHEME_ID_URI)&&sp.hasOwnProperty(_DashConstants2.default.VALUE)){supplementalProperties[sp[_Constants2.default.SCHEME_ID_URI]]=sp[_DashConstants2.default.VALUE];}}}catch(err){_didIteratorError2=true;_iteratorError2=err;}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return();}}finally{if(_didIteratorError2){throw _iteratorError2;}}}}return supplementalProperties;}function setConfig(config){if(!config)return;if(config.errHandler){errHandler=config.errHandler;}if(config.BASE64){BASE64=config.BASE64;}}instance={getIsTypeOf:getIsTypeOf,getIsTextTrack:getIsTextTrack,getLanguageForAdaptation:getLanguageForAdaptation,getViewpointForAdaptation:getViewpointForAdaptation,getRolesForAdaptation:getRolesForAdaptation,getAccessibilityForAdaptation:getAccessibilityForAdaptation,getAudioChannelConfigurationForAdaptation:getAudioChannelConfigurationForAdaptation,getAudioChannelConfigurationForRepresentation:getAudioChannelConfigurationForRepresentation,getAdaptationForIndex:getAdaptationForIndex,getIndexForAdaptation:getIndexForAdaptation,getAdaptationForId:getAdaptationForId,getAdaptationsForType:getAdaptationsForType,getCodec:getCodec,getMimeType:getMimeType,getKID:getKID,getLabelsForAdaptation:getLabelsForAdaptation,getContentProtectionData:getContentProtectionData,getIsDynamic:getIsDynamic,hasProfile:hasProfile,getDuration:getDuration,getBandwidth:getBandwidth,getManifestUpdatePeriod:getManifestUpdatePeriod,getRepresentationCount:getRepresentationCount,getBitrateListForAdaptation:getBitrateListForAdaptation,getRepresentationFor:getRepresentationFor,getRepresentationsForAdaptation:getRepresentationsForAdaptation,getAdaptationsForPeriod:getAdaptationsForPeriod,getRegularPeriods:getRegularPeriods,getMpd:getMpd,getEventsForPeriod:getEventsForPeriod,getEventStreamForAdaptationSet:getEventStreamForAdaptationSet,getEventStreamForRepresentation:getEventStreamForRepresentation,getUTCTimingSources:getUTCTimingSources,getBaseURLsFromElement:getBaseURLsFromElement,getRepresentationSortFunction:getRepresentationSortFunction,getLocation:getLocation,getSuggestedPresentationDelay:getSuggestedPresentationDelay,getAvailabilityStartTime:getAvailabilityStartTime,getServiceDescriptions:getServiceDescriptions,getSupplementalPropperties:getSupplementalPropperties,setConfig:setConfig};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */DashManifestModel.__dashjs_factory_name='DashManifestModel';exports.default=_FactoryMaker2.default.getSingletonFactory(DashManifestModel);


},{"../../streaming/constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../constants/DashConstants":"../node_modules/dashjs/build/es5/src/dash/constants/DashConstants.js","../vo/Representation":"../node_modules/dashjs/build/es5/src/dash/vo/Representation.js","../vo/AdaptationSet":"../node_modules/dashjs/build/es5/src/dash/vo/AdaptationSet.js","../vo/Period":"../node_modules/dashjs/build/es5/src/dash/vo/Period.js","../vo/Mpd":"../node_modules/dashjs/build/es5/src/dash/vo/Mpd.js","../vo/UTCTiming":"../node_modules/dashjs/build/es5/src/dash/vo/UTCTiming.js","../vo/Event":"../node_modules/dashjs/build/es5/src/dash/vo/Event.js","../vo/BaseURL":"../node_modules/dashjs/build/es5/src/dash/vo/BaseURL.js","../vo/EventStream":"../node_modules/dashjs/build/es5/src/dash/vo/EventStream.js","../../streaming/utils/ObjectUtils":"../node_modules/dashjs/build/es5/src/streaming/utils/ObjectUtils.js","../../streaming/utils/URLUtils":"../node_modules/dashjs/build/es5/src/streaming/utils/URLUtils.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","../../streaming/vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js","../../core/errors/Errors":"../node_modules/dashjs/build/es5/src/core/errors/Errors.js","../../streaming/thumbnail/ThumbnailTracks":"../node_modules/dashjs/build/es5/src/streaming/thumbnail/ThumbnailTracks.js"}],"../node_modules/dashjs/build/es5/src/streaming/models/CmcdModel.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _MediaPlayerEvents=require('../MediaPlayerEvents');var _MediaPlayerEvents2=_interopRequireDefault(_MediaPlayerEvents);var _MetricsReportingEvents=require('../metrics/MetricsReportingEvents');var _MetricsReportingEvents2=_interopRequireDefault(_MetricsReportingEvents);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Debug=require('../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _Settings=require('../../core/Settings');var _Settings2=_interopRequireDefault(_Settings);var _HTTPRequest=require('../vo/metrics/HTTPRequest');var _DashManifestModel=require('../../dash/models/DashManifestModel');var _DashManifestModel2=_interopRequireDefault(_DashManifestModel);var _Utils=require('../../core/Utils');var _Utils2=_interopRequireDefault(_Utils);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var CMCD_REQUEST_FIELD_NAME='CMCD';/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var CMCD_VERSION=1;var OBJECT_TYPES={MANIFEST:'m',AUDIO:'a',VIDEO:'v',INIT:'i',CAPTION:'c',ISOBMFF_TEXT_TRACK:'tt',ENCRYPTION_KEY:'k',OTHER:'o'};var STREAMING_FORMATS={DASH:'d',MSS:'s'};var STREAM_TYPES={VOD:'v',LIVE:'l'};function CmcdModel(){var logger=void 0,dashManifestModel=void 0,instance=void 0,internalData=void 0,abrController=void 0,dashMetrics=void 0,playbackController=void 0,_isStartup=void 0,_bufferLevelStarved=void 0,_initialMediaRequestsDone=void 0;var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var settings=(0,_Settings2.default)(context).getInstance();function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);dashManifestModel=(0,_DashManifestModel2.default)(context).getInstance();_resetInitialSettings();}function initialize(){eventBus.on(_MediaPlayerEvents2.default.PLAYBACK_RATE_CHANGED,_onPlaybackRateChanged,instance);eventBus.on(_MediaPlayerEvents2.default.MANIFEST_LOADED,_onManifestLoaded,instance);eventBus.on(_MediaPlayerEvents2.default.BUFFER_LEVEL_STATE_CHANGED,_onBufferLevelStateChanged,instance);eventBus.on(_MediaPlayerEvents2.default.PLAYBACK_SEEKED,_onPlaybackSeeked,instance);}function setConfig(config){if(!config)return;if(config.abrController){abrController=config.abrController;}if(config.dashMetrics){dashMetrics=config.dashMetrics;}if(config.playbackController){playbackController=config.playbackController;}}function _resetInitialSettings(){internalData={pr:1,nor:null,st:null,sf:null,sid:''+_Utils2.default.generateUuid(),cid:null};_bufferLevelStarved={};_isStartup={};_initialMediaRequestsDone={};}function getQueryParameter(request){try{if(settings.get().streaming.cmcd&&settings.get().streaming.cmcd.enabled){var cmcdData=_getCmcdData(request);var finalPayloadString=_buildFinalString(cmcdData);eventBus.trigger(_MetricsReportingEvents2.default.CMCD_DATA_GENERATED,{url:request.url,mediaType:request.mediaType,cmcdData:cmcdData,cmcdString:finalPayloadString});return{key:CMCD_REQUEST_FIELD_NAME,value:finalPayloadString};}return null;}catch(e){return null;}}function _getCmcdData(request){try{var cmcdData=null;if(request.type===_HTTPRequest.HTTPRequest.MPD_TYPE){return _getCmcdDataForMpd(request);}else if(request.type===_HTTPRequest.HTTPRequest.MEDIA_SEGMENT_TYPE){_initForMediaType(request.mediaType);return _getCmcdDataForMediaSegment(request);}else if(request.type===_HTTPRequest.HTTPRequest.INIT_SEGMENT_TYPE){return _getCmcdDataForInitSegment(request);}else if(request.type===_HTTPRequest.HTTPRequest.OTHER_TYPE||request.type===_HTTPRequest.HTTPRequest.XLINK_EXPANSION_TYPE){return _getCmcdDataForOther(request);}return cmcdData;}catch(e){return null;}}function _getCmcdDataForMpd(){var data=_getGenericCmcdData();data.ot=''+OBJECT_TYPES.MANIFEST;return data;}function _getCmcdDataForMediaSegment(request){var data=_getGenericCmcdData();var encodedBitrate=_getBitrateByRequest(request);var d=_getObjectDurationByRequest(request);var ot=request.mediaType==='video'?''+OBJECT_TYPES.VIDEO:request.mediaType==='audio'?''+OBJECT_TYPES.AUDIO:request.mediaType==='fragmentedText'?''+OBJECT_TYPES.CAPTION:null;var mtp=_getMeasuredThroughputByType(request.mediaType);var dl=_getDeadlineByType(request.mediaType);var bl=_getBufferLevelByType(request.mediaType);var tb=_getTopBitrateByType(request.mediaType);var pr=internalData.pr;if(encodedBitrate){data.br=encodedBitrate;}if(ot){data.ot=ot;}if(!isNaN(d)){data.d=d;}if(!isNaN(mtp)){data.mtp=mtp;}if(!isNaN(dl)){data.dl=dl;}if(!isNaN(bl)){data.bl=bl;}if(!isNaN(tb)){data.tb=tb;}if(!isNaN(pr)&&pr!==1){data.pr=pr;}if(_bufferLevelStarved[request.mediaType]){data.bs=true;_bufferLevelStarved[request.mediaType]=false;}if(_isStartup[request.mediaType]||!_initialMediaRequestsDone[request.mediaType]){data.su=true;_isStartup[request.mediaType]=false;_initialMediaRequestsDone[request.mediaType]=true;}return data;}function _initForMediaType(mediaType){if(!_initialMediaRequestsDone.hasOwnProperty(mediaType)){_initialMediaRequestsDone[mediaType]=false;}if(!_isStartup.hasOwnProperty(mediaType)){_isStartup[mediaType]=false;}if(!_bufferLevelStarved.hasOwnProperty(mediaType)){_bufferLevelStarved[mediaType]=false;}}function _getCmcdDataForInitSegment(){var data=_getGenericCmcdData();data.ot=''+OBJECT_TYPES.INIT;data.su=true;return data;}function _getCmcdDataForOther(){var data=_getGenericCmcdData();data.ot=''+OBJECT_TYPES.OTHER;return data;}function _getGenericCmcdData(){var data={};var cid=settings.get().streaming.cmcd.cid?settings.get().streaming.cmcd.cid:internalData.cid;data.v=CMCD_VERSION;data.sid=settings.get().streaming.cmcd.sid?settings.get().streaming.cmcd.sid:internalData.sid;data.sid=''+data.sid;if(cid){data.cid=''+cid;}if(!isNaN(internalData.pr)&&internalData.pr!==1&&internalData.pr!==null){data.pr=internalData.pr;}if(internalData.st){data.st=internalData.st;}if(internalData.sf){data.sf=internalData.sf;}return data;}function _getBitrateByRequest(request){try{var quality=request.quality;var bitrateList=request.mediaInfo.bitrateList;return parseInt(bitrateList[quality].bandwidth/1000);}catch(e){return null;}}function _getTopBitrateByType(mediaType){try{var info=abrController.getTopBitrateInfoFor(mediaType);return Math.round(info.bitrate/1000);}catch(e){return null;}}function _getObjectDurationByRequest(request){try{return!isNaN(request.duration)?Math.round(request.duration*1000):null;}catch(e){return null;}}function _getMeasuredThroughputByType(mediaType){try{return parseInt(abrController.getThroughputHistory().getSafeAverageThroughput(mediaType)/100)*100;}catch(e){return null;}}function _getDeadlineByType(mediaType){try{var playbackRate=internalData.pr;var bufferLevel=dashMetrics.getCurrentBufferLevel(mediaType);if(!isNaN(playbackRate)&&!isNaN(bufferLevel)){return parseInt(bufferLevel/playbackRate*10)*100;}return null;}catch(e){return null;}}function _getBufferLevelByType(mediaType){try{var bufferLevel=dashMetrics.getCurrentBufferLevel(mediaType);if(!isNaN(bufferLevel)){return parseInt(bufferLevel*10)*100;}return null;}catch(e){return null;}}function _onPlaybackRateChanged(data){try{internalData.pr=data.playbackRate;}catch(e){}}function _onManifestLoaded(data){try{var isDynamic=dashManifestModel.getIsDynamic(data.data);var st=isDynamic?''+STREAM_TYPES.LIVE:''+STREAM_TYPES.VOD;var sf=data.protocol&&data.protocol==='MSS'?''+STREAMING_FORMATS.MSS:''+STREAMING_FORMATS.DASH;internalData.st=''+st;internalData.sf=''+sf;}catch(e){}}function _onBufferLevelStateChanged(data){try{if(data.state&&data.mediaType){if(data.state===_MediaPlayerEvents2.default.BUFFER_EMPTY){if(!_bufferLevelStarved[data.mediaType]){_bufferLevelStarved[data.mediaType]=true;}if(!_isStartup[data.mediaType]){_isStartup[data.mediaType]=true;}}}}catch(e){}}function _onPlaybackSeeked(){for(var key in _bufferLevelStarved){if(_bufferLevelStarved.hasOwnProperty(key)){_bufferLevelStarved[key]=true;}}for(var _key in _isStartup){if(_isStartup.hasOwnProperty(_key)){_isStartup[_key]=true;}}}function _buildFinalString(cmcdData){try{if(!cmcdData){return null;}var keys=Object.keys(cmcdData).sort(function(a,b){return a.localeCompare(b);});var length=keys.length;var cmcdString=keys.reduce(function(acc,key,index){if(key==='v'&&cmcdData[key]===1)return acc;// Version key should only be reported if it is != 1
if(typeof cmcdData[key]==='string'&&(key!=='ot'||key!=='sf'||key!=='st')){var string=cmcdData[key].replace(/"/g,'\"');acc+=key+'="'+string+'"';}else{acc+=key+'='+cmcdData[key];}if(index<length-1){acc+=',';}return acc;},'');cmcdString=cmcdString.replace(/=true/g,'');return cmcdString;}catch(e){return null;}}function reset(){eventBus.off(_MediaPlayerEvents2.default.PLAYBACK_RATE_CHANGED,_onPlaybackRateChanged,this);eventBus.off(_MediaPlayerEvents2.default.MANIFEST_LOADED,_onManifestLoaded,this);eventBus.off(_MediaPlayerEvents2.default.BUFFER_LEVEL_STATE_CHANGED,_onBufferLevelStateChanged,instance);eventBus.off(_MediaPlayerEvents2.default.PLAYBACK_SEEKED,_onPlaybackSeeked,instance);_resetInitialSettings();}instance={getQueryParameter:getQueryParameter,setConfig:setConfig,reset:reset,initialize:initialize};setup();return instance;}CmcdModel.__dashjs_factory_name='CmcdModel';exports.default=_FactoryMaker2.default.getSingletonFactory(CmcdModel);


},{"../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../MediaPlayerEvents":"../node_modules/dashjs/build/es5/src/streaming/MediaPlayerEvents.js","../metrics/MetricsReportingEvents":"../node_modules/dashjs/build/es5/src/streaming/metrics/MetricsReportingEvents.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","../../core/Settings":"../node_modules/dashjs/build/es5/src/core/Settings.js","../vo/metrics/HTTPRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/HTTPRequest.js","../../dash/models/DashManifestModel":"../node_modules/dashjs/build/es5/src/dash/models/DashManifestModel.js","../../core/Utils":"../node_modules/dashjs/build/es5/src/core/Utils.js"}],"../node_modules/dashjs/build/es5/src/streaming/net/HTTPLoader.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _XHRLoader=require('./XHRLoader');var _XHRLoader2=_interopRequireDefault(_XHRLoader);var _FetchLoader=require('./FetchLoader');var _FetchLoader2=_interopRequireDefault(_FetchLoader);var _HTTPRequest=require('../vo/metrics/HTTPRequest');var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _DashJSError=require('../vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);var _CmcdModel=require('../models/CmcdModel');var _CmcdModel2=_interopRequireDefault(_CmcdModel);var _Utils=require('../../core/Utils');var _Utils2=_interopRequireDefault(_Utils);var _Debug=require('../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @module HTTPLoader
 * @ignore
 * @description Manages download of resources via HTTP.
 * @param {Object} cfg - dependancies from parent
 */function HTTPLoader(cfg){cfg=cfg||{};var context=this.context;var errHandler=cfg.errHandler;var dashMetrics=cfg.dashMetrics;var mediaPlayerModel=cfg.mediaPlayerModel;var requestModifier=cfg.requestModifier;var boxParser=cfg.boxParser;var useFetch=cfg.useFetch||false;var errors=cfg.errors;var requestTimeout=cfg.requestTimeout||0;var instance=void 0,requests=void 0,delayedRequests=void 0,retryRequests=void 0,downloadErrorToRequestTypeMap=void 0,cmcdModel=void 0,logger=void 0;function setup(){var _downloadErrorToReque;logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);requests=[];delayedRequests=[];retryRequests=[];cmcdModel=(0,_CmcdModel2.default)(context).getInstance();downloadErrorToRequestTypeMap=(_downloadErrorToReque={},_defineProperty(_downloadErrorToReque,_HTTPRequest.HTTPRequest.MPD_TYPE,errors.DOWNLOAD_ERROR_ID_MANIFEST_CODE),_defineProperty(_downloadErrorToReque,_HTTPRequest.HTTPRequest.XLINK_EXPANSION_TYPE,errors.DOWNLOAD_ERROR_ID_XLINK_CODE),_defineProperty(_downloadErrorToReque,_HTTPRequest.HTTPRequest.INIT_SEGMENT_TYPE,errors.DOWNLOAD_ERROR_ID_INITIALIZATION_CODE),_defineProperty(_downloadErrorToReque,_HTTPRequest.HTTPRequest.MEDIA_SEGMENT_TYPE,errors.DOWNLOAD_ERROR_ID_CONTENT_CODE),_defineProperty(_downloadErrorToReque,_HTTPRequest.HTTPRequest.INDEX_SEGMENT_TYPE,errors.DOWNLOAD_ERROR_ID_CONTENT_CODE),_defineProperty(_downloadErrorToReque,_HTTPRequest.HTTPRequest.BITSTREAM_SWITCHING_SEGMENT_TYPE,errors.DOWNLOAD_ERROR_ID_CONTENT_CODE),_defineProperty(_downloadErrorToReque,_HTTPRequest.HTTPRequest.OTHER_TYPE,errors.DOWNLOAD_ERROR_ID_CONTENT_CODE),_downloadErrorToReque);}function internalLoad(config,remainingAttempts){var request=config.request;var traces=[];var firstProgress=true;var needFailureReport=true;var requestStartTime=new Date();var lastTraceTime=requestStartTime;var lastTraceReceivedCount=0;var httpRequest=void 0;if(!requestModifier||!dashMetrics||!errHandler){throw new Error('config object is not correct or missing');}var handleLoaded=function handleLoaded(success){needFailureReport=false;request.requestStartDate=requestStartTime;request.requestEndDate=new Date();request.firstByteDate=request.firstByteDate||requestStartTime;if(!request.checkExistenceOnly){dashMetrics.addHttpRequest(request,httpRequest.response?httpRequest.response.responseURL:null,httpRequest.response?httpRequest.response.status:null,httpRequest.response&&httpRequest.response.getAllResponseHeaders?httpRequest.response.getAllResponseHeaders():httpRequest.response?httpRequest.response.responseHeaders:[],success?traces:null);if(request.type===_HTTPRequest.HTTPRequest.MPD_TYPE){dashMetrics.addManifestUpdate(request.type,request.requestStartDate,request.requestEndDate);}}};var onloadend=function onloadend(){if(requests.indexOf(httpRequest)===-1){return;}else{requests.splice(requests.indexOf(httpRequest),1);}if(needFailureReport){handleLoaded(false);if(remainingAttempts>0){remainingAttempts--;var retryRequest={config:config};retryRequests.push(retryRequest);retryRequest.timeout=setTimeout(function(){if(retryRequests.indexOf(retryRequest)===-1){return;}else{retryRequests.splice(retryRequests.indexOf(retryRequest),1);}internalLoad(config,remainingAttempts);},mediaPlayerModel.getRetryIntervalsForType(request.type));}else{errHandler.error(new _DashJSError2.default(downloadErrorToRequestTypeMap[request.type],request.url+' is not available',{request:request,response:httpRequest.response}));if(config.error){config.error(request,'error',httpRequest.response.statusText);}if(config.complete){config.complete(request,httpRequest.response.statusText);}}}};var progress=function progress(event){var currentTime=new Date();if(firstProgress){firstProgress=false;if(!event.lengthComputable||event.lengthComputable&&event.total!==event.loaded){request.firstByteDate=currentTime;}}if(event.lengthComputable){request.bytesLoaded=event.loaded;request.bytesTotal=event.total;}if(!event.noTrace){traces.push({s:lastTraceTime,d:event.time?event.time:currentTime.getTime()-lastTraceTime.getTime(),b:[event.loaded?event.loaded-lastTraceReceivedCount:0]});lastTraceTime=currentTime;lastTraceReceivedCount=event.loaded;}if(config.progress&&event){config.progress(event);}};var onload=function onload(){if(httpRequest.response.status>=200&&httpRequest.response.status<=299){handleLoaded(true);if(config.success){config.success(httpRequest.response.response,httpRequest.response.statusText,httpRequest.response.responseURL);}if(config.complete){config.complete(request,httpRequest.response.statusText);}}};var onabort=function onabort(){if(config.abort){config.abort(request);}};var ontimeout=function ontimeout(event){var timeoutMessage=void 0;if(event.lengthComputable){var percentageComplete=event.loaded/event.total*100;timeoutMessage='Request timeout: loaded: '+event.loaded+', out of: '+event.total+' : '+percentageComplete.toFixed(3)+'% Completed';}else{timeoutMessage='Request timeout: non-computable download size';}logger.warn(timeoutMessage);};var loader=void 0;if(useFetch&&window.fetch&&request.responseType==='arraybuffer'&&request.type===_HTTPRequest.HTTPRequest.MEDIA_SEGMENT_TYPE){loader=(0,_FetchLoader2.default)(context).create({requestModifier:requestModifier,boxParser:boxParser});}else{loader=(0,_XHRLoader2.default)(context).create({requestModifier:requestModifier});}var modifiedUrl=requestModifier.modifyRequestURL(request.url);var additionalQueryParameter=_getAdditionalQueryParameter(request);modifiedUrl=_Utils2.default.addAditionalQueryParameterToUrl(modifiedUrl,additionalQueryParameter);var verb=request.checkExistenceOnly?_HTTPRequest.HTTPRequest.HEAD:_HTTPRequest.HTTPRequest.GET;var withCredentials=mediaPlayerModel.getXHRWithCredentialsForType(request.type);httpRequest={url:modifiedUrl,method:verb,withCredentials:withCredentials,request:request,onload:onload,onend:onloadend,onerror:onloadend,progress:progress,onabort:onabort,ontimeout:ontimeout,loader:loader,timeout:requestTimeout};// Adds the ability to delay single fragment loading time to control buffer.
var now=new Date().getTime();if(isNaN(request.delayLoadingTime)||now>=request.delayLoadingTime){// no delay - just send
requests.push(httpRequest);loader.load(httpRequest);}else{// delay
var delayedRequest={httpRequest:httpRequest};delayedRequests.push(delayedRequest);delayedRequest.delayTimeout=setTimeout(function(){if(delayedRequests.indexOf(delayedRequest)===-1){return;}else{delayedRequests.splice(delayedRequests.indexOf(delayedRequest),1);}try{requestStartTime=new Date();lastTraceTime=requestStartTime;requests.push(delayedRequest.httpRequest);loader.load(delayedRequest.httpRequest);}catch(e){delayedRequest.httpRequest.onerror();}},request.delayLoadingTime-now);}}function _getAdditionalQueryParameter(request){try{var additionalQueryParameter=[];var cmcdQueryParameter=cmcdModel.getQueryParameter(request);if(cmcdQueryParameter){additionalQueryParameter.push(cmcdQueryParameter);}return additionalQueryParameter;}catch(e){return[];}}/**
     * Initiates a download of the resource described by config.request
     * @param {Object} config - contains request (FragmentRequest or derived type), and callbacks
     * @memberof module:HTTPLoader
     * @instance
     */function load(config){if(config.request){internalLoad(config,mediaPlayerModel.getRetryAttemptsForType(config.request.type));}else{if(config.error){config.error(config.request,'error');}}}/**
     * Aborts any inflight downloads
     * @memberof module:HTTPLoader
     * @instance
     */function abort(){retryRequests.forEach(function(t){clearTimeout(t.timeout);// abort request in order to trigger LOADING_ABANDONED event
if(t.config.request&&t.config.abort){t.config.abort(t.config.request);}});retryRequests=[];delayedRequests.forEach(function(x){return clearTimeout(x.delayTimeout);});delayedRequests=[];requests.forEach(function(x){// abort will trigger onloadend which we don't want
// when deliberately aborting inflight requests -
// set them to undefined so they are not called
x.onloadend=x.onerror=x.onprogress=undefined;x.loader.abort(x);});requests=[];}instance={load:load,abort:abort};setup();return instance;}HTTPLoader.__dashjs_factory_name='HTTPLoader';var factory=_FactoryMaker2.default.getClassFactory(HTTPLoader);exports.default=factory;


},{"./XHRLoader":"../node_modules/dashjs/build/es5/src/streaming/net/XHRLoader.js","./FetchLoader":"../node_modules/dashjs/build/es5/src/streaming/net/FetchLoader.js","../vo/metrics/HTTPRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/HTTPRequest.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js","../models/CmcdModel":"../node_modules/dashjs/build/es5/src/streaming/models/CmcdModel.js","../../core/Utils":"../node_modules/dashjs/build/es5/src/core/Utils.js","../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js"}],"../node_modules/dashjs/build/es5/src/streaming/net/SchemeLoaderFactory.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _HTTPLoader=require('../../streaming/net/HTTPLoader');var _HTTPLoader2=_interopRequireDefault(_HTTPLoader);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * @module
 * @description Choose right url loader for scheme
 * @ignore
 *//**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function SchemeLoaderFactory(){var instance=void 0;var schemeLoaderMap=void 0;function registerLoader(scheme,loader){schemeLoaderMap[scheme]=loader;}function unregisterLoader(scheme){if(schemeLoaderMap[scheme]){delete schemeLoaderMap[scheme];}}function unregisterAllLoader(){schemeLoaderMap={};}function getLoader(url){// iterates through schemeLoaderMap to find a loader for the scheme
for(var scheme in schemeLoaderMap){if(schemeLoaderMap.hasOwnProperty(scheme)&&url.startsWith(scheme)){return schemeLoaderMap[scheme];}}return _HTTPLoader2.default;}function reset(){unregisterAllLoader();}function setup(){reset();}setup();instance={getLoader:getLoader,registerLoader:registerLoader,unregisterLoader:unregisterLoader,unregisterAllLoader:unregisterAllLoader,reset:reset};return instance;}SchemeLoaderFactory.__dashjs_factory_name='SchemeLoaderFactory';var factory=_FactoryMaker2.default.getSingletonFactory(SchemeLoaderFactory);exports.default=factory;


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../streaming/net/HTTPLoader":"../node_modules/dashjs/build/es5/src/streaming/net/HTTPLoader.js"}],"../node_modules/dashjs/build/es5/src/streaming/net/URLLoader.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _SchemeLoaderFactory=require('../../streaming/net/SchemeLoaderFactory');var _SchemeLoaderFactory2=_interopRequireDefault(_SchemeLoaderFactory);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * @class URLLoader
 * @description  Call Offline Loader or Online Loader dependaing on URL
 * @param {Object} cfg - dependances
 * @ignore
*//**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function URLLoader(cfg){cfg=cfg||{};var context=this.context;var instance=void 0,schemeLoaderFactory=void 0,loader=void 0;schemeLoaderFactory=(0,_SchemeLoaderFactory2.default)(context).getInstance();function load(config){var loaderFactory=schemeLoaderFactory.getLoader(config&&config.request?config.request.url:null);loader=loaderFactory(context).create({errHandler:cfg.errHandler,mediaPlayerModel:cfg.mediaPlayerModel,requestModifier:cfg.requestModifier,useFetch:cfg.useFetch||null,dashMetrics:cfg.dashMetrics,boxParser:cfg.boxParser?cfg.boxParser:null,constants:cfg.constants?cfg.constants:null,dashConstants:cfg.dashConstants?cfg.dashConstants:null,urlUtils:cfg.urlUtils?cfg.urlUtils:null,requestTimeout:!isNaN(cfg.requestTimeout)?cfg.requestTimeout:0,errors:cfg.errors});loader.load(config);}function abort(){if(loader){loader.abort();}}instance={load:load,abort:abort};return instance;}URLLoader.__dashjs_factory_name='URLLoader';var factory=_FactoryMaker2.default.getClassFactory(URLLoader);exports.default=factory;


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../streaming/net/SchemeLoaderFactory":"../node_modules/dashjs/build/es5/src/streaming/net/SchemeLoaderFactory.js"}],"../node_modules/dashjs/build/es5/src/streaming/vo/HeadRequest.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FragmentRequest2=require('./FragmentRequest');var _FragmentRequest3=_interopRequireDefault(_FragmentRequest2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var HeadRequest=function(_FragmentRequest){_inherits(HeadRequest,_FragmentRequest);function HeadRequest(url){_classCallCheck(this,HeadRequest);var _this=_possibleConstructorReturn(this,(HeadRequest.__proto__||Object.getPrototypeOf(HeadRequest)).call(this,url));_this.checkForExistenceOnly=true;return _this;}return HeadRequest;}(_FragmentRequest3.default);exports.default=HeadRequest;


},{"./FragmentRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/FragmentRequest.js"}],"../node_modules/dashjs/build/es5/src/streaming/FragmentLoader.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('./constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _URLLoader=require('./net/URLLoader');var _URLLoader2=_interopRequireDefault(_URLLoader);var _HeadRequest=require('./vo/HeadRequest');var _HeadRequest2=_interopRequireDefault(_HeadRequest);var _DashJSError=require('./vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);var _FactoryMaker=require('../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function FragmentLoader(config){config=config||{};var context=this.context;var eventBus=config.eventBus;var events=config.events;var urlUtils=config.urlUtils;var errors=config.errors;var instance=void 0,urlLoader=void 0;function setup(){urlLoader=(0,_URLLoader2.default)(context).create({errHandler:config.errHandler,errors:errors,dashMetrics:config.dashMetrics,mediaPlayerModel:config.mediaPlayerModel,requestModifier:config.requestModifier,useFetch:config.settings.get().streaming.lowLatencyEnabled,urlUtils:urlUtils,constants:_Constants2.default,boxParser:config.boxParser,dashConstants:config.dashConstants,requestTimeout:config.settings.get().streaming.fragmentRequestTimeout});}function checkForExistence(request){var report=function report(success){eventBus.trigger(events.CHECK_FOR_EXISTENCE_COMPLETED,{request:request,exists:success});};if(request){var headRequest=new _HeadRequest2.default(request.url);urlLoader.load({request:headRequest,success:function success(){report(true);},error:function error(){report(false);}});}else{report(false);}}function load(request){var report=function report(data,error){eventBus.trigger(events.LOADING_COMPLETED,{request:request,response:data||null,error:error||null,sender:instance});};if(request){urlLoader.load({request:request,progress:function progress(event){eventBus.trigger(events.LOADING_PROGRESS,{request:request,stream:event.stream});if(event.data){eventBus.trigger(events.LOADING_DATA_PROGRESS,{request:request,response:event.data||null,error:null,sender:instance});}},success:function success(data){report(data);},error:function error(request,statusText,errorText){report(undefined,new _DashJSError2.default(errors.FRAGMENT_LOADER_LOADING_FAILURE_ERROR_CODE,errorText,statusText));},abort:function abort(request){if(request){eventBus.trigger(events.LOADING_ABANDONED,{mediaType:request.mediaType,request:request,sender:instance});}}});}else{report(undefined,new _DashJSError2.default(errors.FRAGMENT_LOADER_NULL_REQUEST_ERROR_CODE,errors.FRAGMENT_LOADER_NULL_REQUEST_ERROR_MESSAGE));}}function abort(){if(urlLoader){urlLoader.abort();}}function reset(){if(urlLoader){urlLoader.abort();urlLoader=null;}}instance={checkForExistence:checkForExistence,load:load,abort:abort,reset:reset};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */FragmentLoader.__dashjs_factory_name='FragmentLoader';exports.default=_FactoryMaker2.default.getClassFactory(FragmentLoader);


},{"./constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","./net/URLLoader":"../node_modules/dashjs/build/es5/src/streaming/net/URLLoader.js","./vo/HeadRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/HeadRequest.js","./vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js","../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/streaming/controllers/FragmentController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _DataChunk=require('../vo/DataChunk');var _DataChunk2=_interopRequireDefault(_DataChunk);var _FragmentModel=require('../models/FragmentModel');var _FragmentModel2=_interopRequireDefault(_FragmentModel);var _FragmentLoader=require('../FragmentLoader');var _FragmentLoader2=_interopRequireDefault(_FragmentLoader);var _RequestModifier=require('../utils/RequestModifier');var _RequestModifier2=_interopRequireDefault(_RequestModifier);var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _Errors=require('../../core/errors/Errors');var _Errors2=_interopRequireDefault(_Errors);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Debug=require('../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function FragmentController(config){config=config||{};var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var errHandler=config.errHandler;var mediaPlayerModel=config.mediaPlayerModel;var dashMetrics=config.dashMetrics;var debug=(0,_Debug2.default)(context).getInstance();var streamInfo=config.streamInfo;var instance=void 0,logger=void 0,fragmentModels=void 0;function setup(){logger=debug.getLogger(instance);resetInitialSettings();eventBus.on(_Events2.default.FRAGMENT_LOADING_COMPLETED,onFragmentLoadingCompleted,instance);eventBus.on(_Events2.default.FRAGMENT_LOADING_PROGRESS,onFragmentLoadingCompleted,instance);}function getStreamId(){return streamInfo.id;}function getModel(type){var model=fragmentModels[type];if(!model){model=(0,_FragmentModel2.default)(context).create({streamInfo:streamInfo,type:type,dashMetrics:dashMetrics,fragmentLoader:(0,_FragmentLoader2.default)(context).create({dashMetrics:dashMetrics,mediaPlayerModel:mediaPlayerModel,errHandler:errHandler,requestModifier:(0,_RequestModifier2.default)(context).getInstance(),settings:config.settings,boxParser:config.boxParser,eventBus:eventBus,events:_Events2.default,errors:_Errors2.default,dashConstants:config.dashConstants,urlUtils:config.urlUtils}),debug:debug,eventBus:eventBus,events:_Events2.default});fragmentModels[type]=model;}return model;}function resetInitialSettings(){for(var model in fragmentModels){fragmentModels[model].reset();}fragmentModels={};}function reset(){eventBus.off(_Events2.default.FRAGMENT_LOADING_COMPLETED,onFragmentLoadingCompleted,this);eventBus.off(_Events2.default.FRAGMENT_LOADING_PROGRESS,onFragmentLoadingCompleted,this);resetInitialSettings();}function createDataChunk(bytes,request,streamId,endFragment){var chunk=new _DataChunk2.default();chunk.streamId=streamId;chunk.mediaInfo=request.mediaInfo;chunk.segmentType=request.type;chunk.start=request.startTime;chunk.duration=request.duration;chunk.end=chunk.start+chunk.duration;chunk.bytes=bytes;chunk.index=request.index;chunk.quality=request.quality;chunk.representationId=request.representationId;chunk.endFragment=endFragment;return chunk;}function onFragmentLoadingCompleted(e){// Event propagation may have been stopped (see MssHandler)
if(!e.sender)return;var request=e.request;var bytes=e.response;var isInit=request.isInitializationRequest();var strInfo=request.mediaInfo.streamInfo;if(e.error){if(request.mediaType===_Constants2.default.AUDIO||request.mediaType===_Constants2.default.VIDEO||request.mediaType===_Constants2.default.FRAGMENTED_TEXT){// add service location to blacklist controller - only for audio or video. text should not set errors
eventBus.trigger(_Events2.default.SERVICE_LOCATION_BLACKLIST_ADD,{entry:e.request.serviceLocation});}}if(!bytes||!strInfo){logger.warn('No '+request.mediaType+' bytes to push or stream is inactive.');return;}var chunk=createDataChunk(bytes,request,streamInfo.id,e.type!==_Events2.default.FRAGMENT_LOADING_PROGRESS);eventBus.trigger(isInit?_Events2.default.INIT_FRAGMENT_LOADED:_Events2.default.MEDIA_FRAGMENT_LOADED,{chunk:chunk,request:request},{streamId:strInfo.id,mediaType:request.mediaType});}instance={getStreamId:getStreamId,getModel:getModel,reset:reset};setup();return instance;}FragmentController.__dashjs_factory_name='FragmentController';exports.default=_FactoryMaker2.default.getClassFactory(FragmentController);


},{"../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../vo/DataChunk":"../node_modules/dashjs/build/es5/src/streaming/vo/DataChunk.js","../models/FragmentModel":"../node_modules/dashjs/build/es5/src/streaming/models/FragmentModel.js","../FragmentLoader":"../node_modules/dashjs/build/es5/src/streaming/FragmentLoader.js","../utils/RequestModifier":"../node_modules/dashjs/build/es5/src/streaming/utils/RequestModifier.js","../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../../core/errors/Errors":"../node_modules/dashjs/build/es5/src/core/errors/Errors.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js"}],"../node_modules/dashjs/build/es5/src/streaming/vo/Thumbnail.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var Thumbnail=function Thumbnail(){_classCallCheck(this,Thumbnail);this.url=null;this.width=null;this.height=null;this.x=null;this.y=null;};exports.default=Thumbnail;


},{}],"../node_modules/dashjs/build/es5/src/streaming/thumbnail/ThumbnailController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Constants=require('../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _Thumbnail=require('../vo/Thumbnail');var _Thumbnail2=_interopRequireDefault(_Thumbnail);var _ThumbnailTracks=require('./ThumbnailTracks');var _ThumbnailTracks2=_interopRequireDefault(_ThumbnailTracks);var _BitrateInfo=require('../vo/BitrateInfo');var _BitrateInfo2=_interopRequireDefault(_BitrateInfo);var _SegmentsUtils=require('../../dash/utils/SegmentsUtils');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function ThumbnailController(config){var context=this.context;var streamInfo=config.streamInfo;var instance=void 0,thumbnailTracks=void 0;function setup(){reset();thumbnailTracks=(0,_ThumbnailTracks2.default)(context).create({streamInfo:streamInfo,adapter:config.adapter,baseURLController:config.baseURLController,timelineConverter:config.timelineConverter,debug:config.debug,eventBus:config.eventBus,events:config.events,dashConstants:config.dashConstants});}function getStreamId(){return streamInfo.id;}function provideThumbnail(time,callback){if(typeof callback!=='function'){return;}var track=thumbnailTracks.getCurrentTrack();var offset=void 0,request=void 0;if(!track||track.segmentDuration<=0||time===undefined||time===null){callback(null);return;}// Calculate index of the sprite given a time
if(isNaN(track.segmentDuration)){request=thumbnailTracks.getThumbnailRequestForTime(time);if(request){track.segmentDuration=request.duration;}}offset=time%track.segmentDuration;var thumbIndex=Math.floor(offset*track.tilesHor*track.tilesVert/track.segmentDuration);// Create and return the thumbnail
var thumbnail=new _Thumbnail2.default();thumbnail.width=Math.floor(track.widthPerTile);thumbnail.height=Math.floor(track.heightPerTile);thumbnail.x=Math.floor(thumbIndex%track.tilesHor)*track.widthPerTile;thumbnail.y=Math.floor(thumbIndex/track.tilesHor)*track.heightPerTile;if('readThumbnail'in track){return track.readThumbnail(time,function(url){thumbnail.url=url;callback(thumbnail);});}else{if(!request){var seq=Math.floor(time/track.segmentDuration);thumbnail.url=buildUrlFromTemplate(track,seq);}else{thumbnail.url=request.url;track.segmentDuration=NaN;}callback(thumbnail);}}function buildUrlFromTemplate(track,seq){var seqIdx=seq+track.startNumber;var url=(0,_SegmentsUtils.replaceTokenForTemplate)(track.templateUrl,'Number',seqIdx);url=(0,_SegmentsUtils.replaceTokenForTemplate)(url,'Time',(seqIdx-1)*track.segmentDuration);url=(0,_SegmentsUtils.replaceTokenForTemplate)(url,'Bandwidth',track.bandwidth);return(0,_SegmentsUtils.unescapeDollarsInTemplate)(url);}function setTrackByIndex(index){thumbnailTracks.setTrackByIndex(index);}function getCurrentTrackIndex(){return thumbnailTracks.getCurrentTrackIndex();}function getBitrateList(){var tracks=thumbnailTracks.getTracks();var i=0;return tracks.map(function(t){var bitrateInfo=new _BitrateInfo2.default();bitrateInfo.mediaType=_Constants2.default.IMAGE;bitrateInfo.qualityIndex=i++;bitrateInfo.bitrate=t.bitrate;bitrateInfo.width=t.width;bitrateInfo.height=t.height;return bitrateInfo;});}function reset(){if(thumbnailTracks){thumbnailTracks.reset();}}instance={getStreamId:getStreamId,provide:provideThumbnail,setTrackByIndex:setTrackByIndex,getCurrentTrackIndex:getCurrentTrackIndex,getBitrateList:getBitrateList,reset:reset};setup();return instance;}ThumbnailController.__dashjs_factory_name='ThumbnailController';exports.default=_FactoryMaker2.default.getClassFactory(ThumbnailController);


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../vo/Thumbnail":"../node_modules/dashjs/build/es5/src/streaming/vo/Thumbnail.js","./ThumbnailTracks":"../node_modules/dashjs/build/es5/src/streaming/thumbnail/ThumbnailTracks.js","../vo/BitrateInfo":"../node_modules/dashjs/build/es5/src/streaming/vo/BitrateInfo.js","../../dash/utils/SegmentsUtils":"../node_modules/dashjs/build/es5/src/dash/utils/SegmentsUtils.js"}],"../node_modules/dashjs/build/es5/src/streaming/Stream.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('./constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _DashConstants=require('../dash/constants/DashConstants');var _DashConstants2=_interopRequireDefault(_DashConstants);var _StreamProcessor=require('./StreamProcessor');var _StreamProcessor2=_interopRequireDefault(_StreamProcessor);var _FragmentController=require('./controllers/FragmentController');var _FragmentController2=_interopRequireDefault(_FragmentController);var _ThumbnailController=require('./thumbnail/ThumbnailController');var _ThumbnailController2=_interopRequireDefault(_ThumbnailController);var _EventBus=require('../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _Debug=require('../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _Errors=require('../core/errors/Errors');var _Errors2=_interopRequireDefault(_Errors);var _FactoryMaker=require('../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _DashJSError=require('./vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);var _BoxParser=require('./utils/BoxParser');var _BoxParser2=_interopRequireDefault(_BoxParser);var _URLUtils=require('./utils/URLUtils');var _URLUtils2=_interopRequireDefault(_URLUtils);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function Stream(config){config=config||{};var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var urlUtils=(0,_URLUtils2.default)(context).getInstance();var manifestModel=config.manifestModel;var mediaPlayerModel=config.mediaPlayerModel;var manifestUpdater=config.manifestUpdater;var adapter=config.adapter;var capabilities=config.capabilities;var errHandler=config.errHandler;var timelineConverter=config.timelineConverter;var dashMetrics=config.dashMetrics;var abrController=config.abrController;var playbackController=config.playbackController;var eventController=config.eventController;var mediaController=config.mediaController;var textController=config.textController;var protectionController=config.protectionController;var videoModel=config.videoModel;var settings=config.settings;var streamInfo=config.streamInfo;var instance=void 0,logger=void 0,streamProcessors=void 0,isStreamInitialized=void 0,isStreamActivated=void 0,isMediaInitialized=void 0,hasVideoTrack=void 0,hasAudioTrack=void 0,updateError=void 0,isUpdating=void 0,fragmentController=void 0,thumbnailController=void 0,preloaded=void 0,boxParser=void 0,preloadingScheduled=void 0,debug=void 0,isEndedEventSignaled=void 0,trackChangedEvent=void 0;var codecCompatibilityTable=[{'codec':'avc1','compatibleCodecs':['avc3']},{'codec':'avc3','compatibleCodecs':['avc1']}];function setup(){debug=(0,_Debug2.default)(context).getInstance();logger=debug.getLogger(instance);resetInitialSettings();boxParser=(0,_BoxParser2.default)(context).getInstance();fragmentController=(0,_FragmentController2.default)(context).create({streamInfo:streamInfo,mediaPlayerModel:mediaPlayerModel,dashMetrics:dashMetrics,errHandler:errHandler,settings:settings,boxParser:boxParser,dashConstants:_DashConstants2.default,urlUtils:urlUtils});}function initialize(){registerEvents();registerProtectionEvents();eventBus.trigger(_Events2.default.STREAM_UPDATED,{streamInfo:streamInfo});}function registerEvents(){eventBus.on(_Events2.default.BUFFERING_COMPLETED,onBufferingCompleted,instance);eventBus.on(_Events2.default.DATA_UPDATE_COMPLETED,onDataUpdateCompleted,instance);eventBus.on(_Events2.default.INBAND_EVENTS,onInbandEvents,instance);}function unRegisterEvents(){eventBus.off(_Events2.default.DATA_UPDATE_COMPLETED,onDataUpdateCompleted,instance);eventBus.off(_Events2.default.BUFFERING_COMPLETED,onBufferingCompleted,instance);eventBus.off(_Events2.default.INBAND_EVENTS,onInbandEvents,instance);}function registerProtectionEvents(){if(protectionController){eventBus.on(_Events2.default.KEY_ERROR,onProtectionError,instance);eventBus.on(_Events2.default.SERVER_CERTIFICATE_UPDATED,onProtectionError,instance);eventBus.on(_Events2.default.LICENSE_REQUEST_COMPLETE,onProtectionError,instance);eventBus.on(_Events2.default.KEY_SYSTEM_SELECTED,onProtectionError,instance);eventBus.on(_Events2.default.KEY_SESSION_CREATED,onProtectionError,instance);eventBus.on(_Events2.default.KEY_STATUSES_CHANGED,onProtectionError,instance);}}function unRegisterProtectionEvents(){if(protectionController){eventBus.off(_Events2.default.KEY_ERROR,onProtectionError,instance);eventBus.off(_Events2.default.SERVER_CERTIFICATE_UPDATED,onProtectionError,instance);eventBus.off(_Events2.default.LICENSE_REQUEST_COMPLETE,onProtectionError,instance);eventBus.off(_Events2.default.KEY_SYSTEM_SELECTED,onProtectionError,instance);eventBus.off(_Events2.default.KEY_SESSION_CREATED,onProtectionError,instance);eventBus.off(_Events2.default.KEY_STATUSES_CHANGED,onProtectionError,instance);}}function getStreamId(){return streamInfo?streamInfo.id:null;}/**
     * Activates Stream by re-initializing some of its components
     * @param {MediaSource} mediaSource
     * @memberof Stream#
     * @param {SourceBuffer} previousBuffers
     */function activate(mediaSource,previousBuffers){if(!isStreamActivated){var result=void 0;eventBus.on(_Events2.default.CURRENT_TRACK_CHANGED,onCurrentTrackChanged,instance);if(!getPreloaded()){result=initializeMedia(mediaSource,previousBuffers);}else{initializeAfterPreload();result=previousBuffers;}isStreamActivated=true;return result;}return previousBuffers;}/**
     * Partially resets some of the Stream elements
     * @memberof Stream#
     * @param {boolean} keepBuffers
     */function deactivate(keepBuffers){var ln=streamProcessors?streamProcessors.length:0;var errored=false;for(var i=0;i<ln;i++){var fragmentModel=streamProcessors[i].getFragmentModel();fragmentModel.removeExecutedRequestsBeforeTime(getStartTime()+getDuration());streamProcessors[i].reset(errored,keepBuffers);}streamProcessors=[];isStreamActivated=false;isMediaInitialized=false;setPreloaded(false);eventBus.off(_Events2.default.CURRENT_TRACK_CHANGED,onCurrentTrackChanged,instance);}function isActive(){return isStreamActivated;}function setMediaSource(mediaSource){for(var i=0;i<streamProcessors.length;){if(isMediaSupported(streamProcessors[i].getMediaInfo())){streamProcessors[i].setMediaSource(mediaSource);i++;}else{streamProcessors[i].reset();streamProcessors.splice(i,1);}}for(var _i=0;_i<streamProcessors.length;_i++){//Adding of new tracks to a stream processor isn't guaranteed by the spec after the METADATA_LOADED state
//so do this after the buffers are created above.
streamProcessors[_i].dischargePreBuffer();}if(streamProcessors.length===0){var msg='No streams to play.';errHandler.error(new _DashJSError2.default(_Errors2.default.MANIFEST_ERROR_ID_NOSTREAMS_CODE,msg+'nostreams',manifestModel.getValue()));logger.fatal(msg);}}function resetInitialSettings(){deactivate();isStreamInitialized=false;hasVideoTrack=false;hasAudioTrack=false;updateError={};isUpdating=false;preloadingScheduled=false;isEndedEventSignaled=false;}function reset(){if(playbackController){playbackController.pause();}if(fragmentController){fragmentController.reset();fragmentController=null;}streamInfo=null;resetInitialSettings();unRegisterEvents();unRegisterProtectionEvents();setPreloaded(false);}function getDuration(){return streamInfo?streamInfo.duration:NaN;}function getIsEndedEventSignaled(){return isEndedEventSignaled;}function setIsEndedEventSignaled(value){isEndedEventSignaled=value;}function getStartTime(){return streamInfo?streamInfo.start:NaN;}function getPreloadingScheduled(){return preloadingScheduled;}function setPreloadingScheduled(value){preloadingScheduled=value;}function getLiveStartTime(){if(!streamInfo.manifestInfo.isDynamic)return NaN;// Get live start time of the video stream (1st in array of streams)
// or audio if no video stream
for(var i=0;i<streamProcessors.length;i++){if(streamProcessors[i].getType()===_Constants2.default.AUDIO||streamProcessors[i].getType()===_Constants2.default.VIDEO){return streamProcessors[i].getLiveStartTime();}}return NaN;}function getId(){return streamInfo?streamInfo.id:null;}function getStreamInfo(){return streamInfo;}function getHasAudioTrack(){return hasAudioTrack;}function getHasVideoTrack(){return hasVideoTrack;}function getThumbnailController(){return thumbnailController;}function checkConfig(){if(!videoModel||!abrController||!abrController.hasOwnProperty('getBitrateList')||!adapter||!adapter.hasOwnProperty('getAllMediaInfoForType')||!adapter.hasOwnProperty('getEventsFor')){throw new Error(_Constants2.default.MISSING_CONFIG_ERROR);}}/**
     * @param {string} type
     * @returns {Array}
     * @memberof Stream#
     */function getBitrateListFor(type){checkConfig();if(type===_Constants2.default.IMAGE){if(!thumbnailController){return[];}return thumbnailController.getBitrateList();}var mediaInfo=getMediaInfo(type);return abrController.getBitrateList(mediaInfo);}function onProtectionError(event){if(event.error){errHandler.error(event.error);logger.fatal(event.error.message);reset();}}function isMediaSupported(mediaInfo){var type=mediaInfo?mediaInfo.type:null;var codec=void 0,msg=void 0;if(type===_Constants2.default.MUXED){msg='Multiplexed representations are intentionally not supported, as they are not compliant with the DASH-AVC/264 guidelines';logger.fatal(msg);errHandler.error(new _DashJSError2.default(_Errors2.default.MANIFEST_ERROR_ID_MULTIPLEXED_CODE,msg,manifestModel.getValue()));return false;}if(type===_Constants2.default.TEXT||type===_Constants2.default.FRAGMENTED_TEXT||type===_Constants2.default.EMBEDDED_TEXT||type===_Constants2.default.IMAGE){return true;}codec=mediaInfo.codec;logger.debug(type+' codec: '+codec);if(!!mediaInfo.contentProtection&&!capabilities.supportsEncryptedMedia()){errHandler.error(new _DashJSError2.default(_Errors2.default.CAPABILITY_MEDIAKEYS_ERROR_CODE,_Errors2.default.CAPABILITY_MEDIAKEYS_ERROR_MESSAGE));}else if(!capabilities.supportsCodec(codec)){msg=type+'Codec ('+codec+') is not supported.';logger.error(msg);return false;}return true;}function onCurrentTrackChanged(e){if(!streamInfo||e.newMediaInfo.streamInfo.id!==streamInfo.id)return;var mediaInfo=e.newMediaInfo;var manifest=manifestModel.getValue();adapter.setCurrentMediaInfo(streamInfo.id,mediaInfo.type,mediaInfo);var processor=getProcessorForMediaInfo(mediaInfo);if(!processor)return;var currentTime=playbackController.getTime();logger.info('Stream -  Process track changed at current time '+currentTime);logger.debug('Stream -  Update stream controller');if(manifest.refreshManifestOnSwitchTrack){// Applies only for MSS streams
logger.debug('Stream -  Refreshing manifest for switch track');trackChangedEvent=e;manifestUpdater.refreshManifest();}else{processor.selectMediaInfo(mediaInfo);if(mediaInfo.type!==_Constants2.default.FRAGMENTED_TEXT){abrController.updateTopQualityIndex(mediaInfo);processor.switchTrackAsked();processor.getFragmentModel().abortRequests();}else{processor.getScheduleController().setSeekTarget(currentTime);processor.setBufferingTime(currentTime);processor.resetIndexHandler();}}}function createStreamProcessor(mediaInfo,allMediaForType,mediaSource,optionalSettings){var fragmentModel=fragmentController.getModel(mediaInfo?mediaInfo.type:null);var streamProcessor=(0,_StreamProcessor2.default)(context).create({streamInfo:streamInfo,type:mediaInfo?mediaInfo.type:null,mimeType:mediaInfo?mediaInfo.mimeType:null,timelineConverter:timelineConverter,adapter:adapter,manifestModel:manifestModel,mediaPlayerModel:mediaPlayerModel,fragmentModel:fragmentModel,dashMetrics:config.dashMetrics,baseURLController:config.baseURLController,abrController:abrController,playbackController:playbackController,mediaController:mediaController,textController:textController,errHandler:errHandler,settings:settings,boxParser:boxParser});streamProcessor.initialize(mediaSource,hasVideoTrack);abrController.updateTopQualityIndex(mediaInfo);if(optionalSettings){streamProcessor.setBuffer(optionalSettings.buffer);streamProcessor.setBufferingTime(optionalSettings.currentTime);streamProcessors[optionalSettings.replaceIdx]=streamProcessor;}else{streamProcessors.push(streamProcessor);}if(optionalSettings&&optionalSettings.ignoreMediaInfo){return;}if(mediaInfo&&(mediaInfo.type===_Constants2.default.TEXT||mediaInfo.type===_Constants2.default.FRAGMENTED_TEXT)){var idx=void 0;for(var i=0;i<allMediaForType.length;i++){if(allMediaForType[i].index===mediaInfo.index){idx=i;}streamProcessor.addMediaInfo(allMediaForType[i]);//creates text tracks for all adaptations in one stream processor
}streamProcessor.selectMediaInfo(allMediaForType[idx]);//sets the initial media info
}else{streamProcessor.addMediaInfo(mediaInfo,true);}}function initializeMediaForType(type,mediaSource){var allMediaForType=adapter.getAllMediaInfoForType(streamInfo,type);var mediaInfo=null;var initialMediaInfo=void 0;if(!allMediaForType||allMediaForType.length===0){logger.info('No '+type+' data.');return;}if(type===_Constants2.default.VIDEO){hasVideoTrack=true;}if(type===_Constants2.default.AUDIO){hasAudioTrack=true;}for(var i=0,ln=allMediaForType.length;i<ln;i++){mediaInfo=allMediaForType[i];if(type===_Constants2.default.EMBEDDED_TEXT){textController.addEmbeddedTrack(mediaInfo);}else{if(!isMediaSupported(mediaInfo))continue;mediaController.addTrack(mediaInfo);}}if(type===_Constants2.default.EMBEDDED_TEXT||mediaController.getTracksFor(type,streamInfo).length===0){return;}if(type===_Constants2.default.IMAGE){thumbnailController=(0,_ThumbnailController2.default)(context).create({streamInfo:streamInfo,adapter:adapter,baseURLController:config.baseURLController,timelineConverter:config.timelineConverter,debug:debug,eventBus:eventBus,events:_Events2.default,dashConstants:_DashConstants2.default});return;}mediaController.checkInitialMediaSettingsForType(type,streamInfo);initialMediaInfo=mediaController.getCurrentTrackFor(type,streamInfo);eventBus.trigger(_Events2.default.STREAM_INITIALIZING,{streamInfo:streamInfo,mediaInfo:mediaInfo});// TODO : How to tell index handler live/duration?
// TODO : Pass to controller and then pass to each method on handler?
createStreamProcessor(initialMediaInfo,allMediaForType,mediaSource);}function addInlineEvents(){if(eventController){var events=adapter.getEventsFor(streamInfo);eventController.addInlineEvents(events);}}function addInbandEvents(events){if(eventController){eventController.addInbandEvents(events);}}function initializeMedia(mediaSource,previousBuffers){checkConfig();var element=videoModel.getElement();addInlineEvents();isUpdating=true;filterCodecs(_Constants2.default.VIDEO);filterCodecs(_Constants2.default.AUDIO);if(!element||element&&/^VIDEO$/i.test(element.nodeName)){initializeMediaForType(_Constants2.default.VIDEO,mediaSource);}initializeMediaForType(_Constants2.default.AUDIO,mediaSource);initializeMediaForType(_Constants2.default.TEXT,mediaSource);initializeMediaForType(_Constants2.default.FRAGMENTED_TEXT,mediaSource);initializeMediaForType(_Constants2.default.EMBEDDED_TEXT,mediaSource);initializeMediaForType(_Constants2.default.MUXED,mediaSource);initializeMediaForType(_Constants2.default.IMAGE,mediaSource);//TODO. Consider initialization of TextSourceBuffer here if embeddedText, but no sideloadedText.
var buffers=createBuffers(previousBuffers);isMediaInitialized=true;isUpdating=false;if(streamProcessors.length===0){var msg='No streams to play.';errHandler.error(new _DashJSError2.default(_Errors2.default.MANIFEST_ERROR_ID_NOSTREAMS_CODE,msg,manifestModel.getValue()));logger.fatal(msg);}else{checkIfInitializationCompleted();}return buffers;}function initializeAfterPreload(){isUpdating=true;checkConfig();filterCodecs(_Constants2.default.VIDEO);filterCodecs(_Constants2.default.AUDIO);isMediaInitialized=true;isUpdating=false;if(streamProcessors.length===0){var msg='No streams to play.';errHandler.error(new _DashJSError2.default(_Errors2.default.MANIFEST_ERROR_ID_NOSTREAMS_CODE,msg,manifestModel.getValue()));logger.debug(msg);}else{checkIfInitializationCompleted();}}function filterCodecs(type){var realAdaptation=adapter.getAdaptationForType(streamInfo?streamInfo.index:null,type,streamInfo);if(!realAdaptation||!Array.isArray(realAdaptation.Representation_asArray))return;// Filter codecs that are not supported
realAdaptation.Representation_asArray=realAdaptation.Representation_asArray.filter(function(_,i){// keep at least codec from lowest representation
if(i===0)return true;var codec=adapter.getCodec(realAdaptation,i,true);if(!capabilities.supportsCodec(codec)){logger.error('[Stream] codec not supported: '+codec);return false;}return true;});}function checkIfInitializationCompleted(){var ln=streamProcessors.length;var hasError=!!updateError.audio||!!updateError.video;var error=hasError?new _DashJSError2.default(_Errors2.default.DATA_UPDATE_FAILED_ERROR_CODE,_Errors2.default.DATA_UPDATE_FAILED_ERROR_MESSAGE):null;for(var i=0;i<ln;i++){if(streamProcessors[i].isUpdating()||isUpdating){return;}}if(!isMediaInitialized){return;}if(protectionController){// Need to check if streamProcessors exists because streamProcessors
// could be cleared in case an error is detected while initializing DRM keysystem
for(var _i2=0;_i2<ln&&streamProcessors[_i2];_i2++){if(streamProcessors[_i2].getType()===_Constants2.default.AUDIO||streamProcessors[_i2].getType()===_Constants2.default.VIDEO||streamProcessors[_i2].getType()===_Constants2.default.FRAGMENTED_TEXT){var mediaInfo=streamProcessors[_i2].getMediaInfo();if(mediaInfo){protectionController.initializeForMedia(mediaInfo);}}}}if(error){errHandler.error(error);}else if(!isStreamInitialized){isStreamInitialized=true;timelineConverter.setTimeSyncCompleted(true);eventBus.trigger(_Events2.default.STREAM_INITIALIZED,{streamInfo:streamInfo,liveStartTime:!preloaded?getLiveStartTime():NaN});}// (Re)start ScheduleController:
// - in case stream initialization has been completed after 'play' event (case for SegmentBase streams)
// - in case stream is complete but a track switch has been requested
for(var _i3=0;_i3<ln&&streamProcessors[_i3];_i3++){streamProcessors[_i3].getScheduleController().start();}}function getMediaInfo(type){var streamProcessor=null;for(var i=0;i<streamProcessors.length;i++){streamProcessor=streamProcessors[i];if(streamProcessor.getType()===type){return streamProcessor.getMediaInfo();}}return null;}function createBuffers(previousBuffers){var buffers={};for(var i=0,ln=streamProcessors.length;i<ln;i++){var buffer=streamProcessors[i].createBuffer(previousBuffers);if(buffer){buffers[streamProcessors[i].getType()]=buffer.getBuffer();}}return buffers;}function onBufferingCompleted(){var processors=getProcessors();var ln=processors.length;if(ln===0){logger.warn('onBufferingCompleted - can\'t trigger STREAM_BUFFERING_COMPLETED because no streamProcessor is defined');return;}// if there is at least one buffer controller that has not completed buffering yet do nothing
for(var i=0;i<ln;i++){//if audio or video buffer is not buffering completed state, do not send STREAM_BUFFERING_COMPLETED
if(!processors[i].isBufferingCompleted()&&(processors[i].getType()===_Constants2.default.AUDIO||processors[i].getType()===_Constants2.default.VIDEO)){logger.warn('onBufferingCompleted - One streamProcessor has finished but',processors[i].getType(),'one is not buffering completed');return;}}logger.debug('onBufferingCompleted - trigger STREAM_BUFFERING_COMPLETED');eventBus.trigger(_Events2.default.STREAM_BUFFERING_COMPLETED,{streamInfo:streamInfo});}function onDataUpdateCompleted(e){updateError[e.mediaType]=e.error;checkIfInitializationCompleted();}function onInbandEvents(e){addInbandEvents(e.events);}function getProcessorForMediaInfo(mediaInfo){if(!mediaInfo){return null;}var processors=getProcessors();return processors.filter(function(processor){return processor.getType()===mediaInfo.type;})[0];}function getProcessors(){var arr=[];var type=void 0,streamProcessor=void 0;for(var i=0;i<streamProcessors.length;i++){streamProcessor=streamProcessors[i];type=streamProcessor.getType();if(type===_Constants2.default.AUDIO||type===_Constants2.default.VIDEO||type===_Constants2.default.FRAGMENTED_TEXT||type===_Constants2.default.TEXT){arr.push(streamProcessor);}}return arr;}function updateData(updatedStreamInfo){logger.info('Manifest updated... updating data system wide.');isStreamActivated=false;isUpdating=true;streamInfo=updatedStreamInfo;eventBus.trigger(_Events2.default.STREAM_UPDATED,{streamInfo:streamInfo});if(eventController){addInlineEvents();}filterCodecs(_Constants2.default.VIDEO);filterCodecs(_Constants2.default.AUDIO);for(var i=0,ln=streamProcessors.length;i<ln;i++){var streamProcessor=streamProcessors[i];streamProcessor.updateStreamInfo(streamInfo);var mediaInfo=adapter.getMediaInfoForType(streamInfo,streamProcessor.getType());// Check if AdaptationSet has not been removed in MPD update
if(mediaInfo){abrController.updateTopQualityIndex(mediaInfo);streamProcessor.addMediaInfo(mediaInfo,true);}}if(trackChangedEvent){var _mediaInfo=trackChangedEvent.newMediaInfo;if(_mediaInfo.type!==_Constants2.default.FRAGMENTED_TEXT){var processor=getProcessorForMediaInfo(trackChangedEvent.oldMediaInfo);if(!processor)return;processor.switchTrackAsked();trackChangedEvent=undefined;}}isUpdating=false;checkIfInitializationCompleted();}function isMediaCodecCompatible(newStream){var previousStream=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return compareCodecs(newStream,_Constants2.default.VIDEO,previousStream)&&compareCodecs(newStream,_Constants2.default.AUDIO,previousStream);}function isProtectionCompatible(stream){var previousStream=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;return compareProtectionConfig(stream,_Constants2.default.VIDEO,previousStream)&&compareProtectionConfig(stream,_Constants2.default.AUDIO,previousStream);}function compareProtectionConfig(stream,type){var previousStream=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;if(!stream){return false;}var newStreamInfo=stream.getStreamInfo();var currentStreamInfo=previousStream?previousStream.getStreamInfo():getStreamInfo();if(!newStreamInfo||!currentStreamInfo){return false;}var newAdaptation=adapter.getAdaptationForType(newStreamInfo.index,type,newStreamInfo);var currentAdaptation=adapter.getAdaptationForType(currentStreamInfo.index,type,currentStreamInfo);if(!newAdaptation||!currentAdaptation){// If there is no adaptation for neither the old or the new stream they're compatible
return!newAdaptation&&!currentAdaptation;}// If the current period is unencrypted and the upcoming one is encrypted we need to reset sourcebuffers.
return!(!isAdaptationDrmProtected(currentAdaptation)&&isAdaptationDrmProtected(newAdaptation));}function isAdaptationDrmProtected(adaptation){if(!adaptation){// If there is no adaptation for neither the old or the new stream they're compatible
return false;}// If the current period is unencrypted and the upcoming one is encrypted we need to reset sourcebuffers.
return!!(adaptation.ContentProtection||adaptation.Representation&&adaptation.Representation.length>0&&adaptation.Representation[0].ContentProtection);}function compareCodecs(newStream,type){var previousStream=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;if(!newStream||!newStream.hasOwnProperty('getStreamInfo')){return false;}var newStreamInfo=newStream.getStreamInfo();var currentStreamInfo=previousStream?previousStream.getStreamInfo():getStreamInfo();if(!newStreamInfo||!currentStreamInfo){return false;}var newAdaptation=adapter.getAdaptationForType(newStreamInfo.index,type,newStreamInfo);var currentAdaptation=adapter.getAdaptationForType(currentStreamInfo.index,type,currentStreamInfo);if(!newAdaptation||!currentAdaptation){// If there is no adaptation for neither the old or the new stream they're compatible
return!newAdaptation&&!currentAdaptation;}var sameMimeType=newAdaptation&&currentAdaptation&&newAdaptation.mimeType===currentAdaptation.mimeType;var oldCodecs=currentAdaptation.Representation_asArray.map(function(representation){return representation.codecs;});var newCodecs=newAdaptation.Representation_asArray.map(function(representation){return representation.codecs;});var codecMatch=newCodecs.some(function(newCodec){return oldCodecs.indexOf(newCodec)>-1;});var partialCodecMatch=newCodecs.some(function(newCodec){return oldCodecs.some(function(oldCodec){return codecRootCompatibleWithCodec(oldCodec,newCodec);});});return codecMatch||partialCodecMatch&&sameMimeType;}// Check if the root of the old codec is the same as the new one, or if it's declared as compatible in the compat table
function codecRootCompatibleWithCodec(codec1,codec2){var codecRoot=codec1.split('.')[0];var rootCompatible=codec2.indexOf(codecRoot)===0;var compatTableCodec=void 0;for(var i=0;i<codecCompatibilityTable.length;i++){if(codecCompatibilityTable[i].codec===codecRoot){compatTableCodec=codecCompatibilityTable[i];break;}}if(compatTableCodec){return rootCompatible||compatTableCodec.compatibleCodecs.some(function(compatibleCodec){return codec2.indexOf(compatibleCodec)===0;});}return rootCompatible;}function setPreloaded(value){preloaded=value;}function getPreloaded(){return preloaded;}function preload(mediaSource,previousBuffers){if(!getPreloaded()){addInlineEvents();initializeMediaForType(_Constants2.default.VIDEO,mediaSource);initializeMediaForType(_Constants2.default.AUDIO,mediaSource);initializeMediaForType(_Constants2.default.TEXT,mediaSource);initializeMediaForType(_Constants2.default.FRAGMENTED_TEXT,mediaSource);initializeMediaForType(_Constants2.default.EMBEDDED_TEXT,mediaSource);initializeMediaForType(_Constants2.default.MUXED,mediaSource);initializeMediaForType(_Constants2.default.IMAGE,mediaSource);createBuffers(previousBuffers);eventBus.on(_Events2.default.CURRENT_TRACK_CHANGED,onCurrentTrackChanged,instance);for(var i=0;i<streamProcessors.length&&streamProcessors[i];i++){streamProcessors[i].getScheduleController().start();}setPreloaded(true);}}instance={initialize:initialize,getStreamId:getStreamId,activate:activate,deactivate:deactivate,isActive:isActive,getDuration:getDuration,getStartTime:getStartTime,getId:getId,getStreamInfo:getStreamInfo,getHasAudioTrack:getHasAudioTrack,getHasVideoTrack:getHasVideoTrack,preload:preload,getThumbnailController:getThumbnailController,getBitrateListFor:getBitrateListFor,updateData:updateData,reset:reset,getProcessors:getProcessors,setMediaSource:setMediaSource,isMediaCodecCompatible:isMediaCodecCompatible,isProtectionCompatible:isProtectionCompatible,getPreloaded:getPreloaded,getPreloadingScheduled:getPreloadingScheduled,setPreloadingScheduled:setPreloadingScheduled,getIsEndedEventSignaled:getIsEndedEventSignaled,setIsEndedEventSignaled:setIsEndedEventSignaled};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */Stream.__dashjs_factory_name='Stream';exports.default=_FactoryMaker2.default.getClassFactory(Stream);


},{"./constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../dash/constants/DashConstants":"../node_modules/dashjs/build/es5/src/dash/constants/DashConstants.js","./StreamProcessor":"../node_modules/dashjs/build/es5/src/streaming/StreamProcessor.js","./controllers/FragmentController":"../node_modules/dashjs/build/es5/src/streaming/controllers/FragmentController.js","./thumbnail/ThumbnailController":"../node_modules/dashjs/build/es5/src/streaming/thumbnail/ThumbnailController.js","../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","../core/errors/Errors":"../node_modules/dashjs/build/es5/src/core/errors/Errors.js","../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","./vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js","./utils/BoxParser":"../node_modules/dashjs/build/es5/src/streaming/utils/BoxParser.js","./utils/URLUtils":"../node_modules/dashjs/build/es5/src/streaming/utils/URLUtils.js"}],"../node_modules/dashjs/build/es5/src/streaming/ManifestUpdater.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _EventBus=require('../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _FactoryMaker=require('../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Debug=require('../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _Errors=require('../core/errors/Errors');var _Errors2=_interopRequireDefault(_Errors);var _DashConstants=require('../dash/constants/DashConstants');var _DashConstants2=_interopRequireDefault(_DashConstants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function ManifestUpdater(){var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var instance=void 0,logger=void 0,refreshDelay=void 0,refreshTimer=void 0,isPaused=void 0,isStopped=void 0,isUpdating=void 0,manifestLoader=void 0,manifestModel=void 0,adapter=void 0,errHandler=void 0,settings=void 0;function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);}function setConfig(config){if(!config)return;if(config.manifestModel){manifestModel=config.manifestModel;}if(config.adapter){adapter=config.adapter;}if(config.manifestLoader){manifestLoader=config.manifestLoader;}if(config.errHandler){errHandler=config.errHandler;}if(config.settings){settings=config.settings;}}function initialize(){resetInitialSettings();eventBus.on(_Events2.default.STREAMS_COMPOSED,onStreamsComposed,this);eventBus.on(_Events2.default.PLAYBACK_STARTED,onPlaybackStarted,this);eventBus.on(_Events2.default.PLAYBACK_PAUSED,onPlaybackPaused,this);eventBus.on(_Events2.default.INTERNAL_MANIFEST_LOADED,onManifestLoaded,this);}function setManifest(manifest){update(manifest);}function resetInitialSettings(){refreshDelay=NaN;isUpdating=false;isPaused=true;isStopped=false;stopManifestRefreshTimer();}function reset(){eventBus.off(_Events2.default.PLAYBACK_STARTED,onPlaybackStarted,this);eventBus.off(_Events2.default.PLAYBACK_PAUSED,onPlaybackPaused,this);eventBus.off(_Events2.default.STREAMS_COMPOSED,onStreamsComposed,this);eventBus.off(_Events2.default.INTERNAL_MANIFEST_LOADED,onManifestLoaded,this);resetInitialSettings();}function stopManifestRefreshTimer(){if(refreshTimer!==null){clearTimeout(refreshTimer);refreshTimer=null;}}function startManifestRefreshTimer(delay){stopManifestRefreshTimer();if(isStopped){return;}if(isNaN(delay)&&!isNaN(refreshDelay)){delay=refreshDelay*1000;}if(!isNaN(delay)){logger.debug('Refresh manifest in '+delay+' milliseconds.');refreshTimer=setTimeout(onRefreshTimer,delay);}}function refreshManifest(){isUpdating=true;var manifest=manifestModel.getValue();var url=manifest.url;var location=adapter.getLocation(manifest);if(location){url=location;}manifestLoader.load(url);}function update(manifest){// See DASH-IF IOP v4.3 section 4.6.4 "Transition Phase between Live and On-Demand"
// Stop manifest update, ignore static manifest and signal end of dynamic stream to detect end of stream
if(manifestModel.getValue()&&manifestModel.getValue().type===_DashConstants2.default.DYNAMIC&&manifest.type===_DashConstants2.default.STATIC){eventBus.trigger(_Events2.default.DYNAMIC_TO_STATIC);isUpdating=false;isStopped=true;return;}manifestModel.setValue(manifest);var date=new Date();var latencyOfLastUpdate=(date.getTime()-manifest.loadedTime.getTime())/1000;refreshDelay=adapter.getManifestUpdatePeriod(manifest,latencyOfLastUpdate);// setTimeout uses a 32 bit number to store the delay. Any number greater than it
// will cause event associated with setTimeout to trigger immediately
if(refreshDelay*1000>0x7FFFFFFF){refreshDelay=0x7FFFFFFF/1000;}eventBus.trigger(_Events2.default.MANIFEST_UPDATED,{manifest:manifest});logger.info('Manifest has been refreshed at '+date+'['+date.getTime()/1000+'] ');if(!isPaused){startManifestRefreshTimer();}}function onRefreshTimer(){if(isPaused){return;}if(isUpdating){startManifestRefreshTimer(settings.get().streaming.manifestUpdateRetryInterval);return;}refreshManifest();}function onManifestLoaded(e){if(!e.error){update(e.manifest);}else if(e.error.code===_Errors2.default.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE){errHandler.error(e.error);}}function onPlaybackStarted()/*e*/{isPaused=false;startManifestRefreshTimer();}function onPlaybackPaused()/*e*/{isPaused=!settings.get().streaming.scheduleWhilePaused;if(isPaused){stopManifestRefreshTimer();}}function onStreamsComposed()/*e*/{// When streams are ready we can consider manifest update completed. Resolve the update promise.
isUpdating=false;}instance={initialize:initialize,setManifest:setManifest,refreshManifest:refreshManifest,setConfig:setConfig,reset:reset};setup();return instance;}ManifestUpdater.__dashjs_factory_name='ManifestUpdater';exports.default=_FactoryMaker2.default.getClassFactory(ManifestUpdater);


},{"../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","../core/errors/Errors":"../node_modules/dashjs/build/es5/src/core/errors/Errors.js","../dash/constants/DashConstants":"../node_modules/dashjs/build/es5/src/dash/constants/DashConstants.js"}],"../node_modules/dashjs/build/es5/src/streaming/controllers/TimeSyncController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _DashJSError=require('./../vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);var _HTTPRequest=require('./../vo/metrics/HTTPRequest');var _EventBus=require('./../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('./../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _Errors=require('./../../core/errors/Errors');var _Errors2=_interopRequireDefault(_Errors);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Debug=require('../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _URLUtils=require('../utils/URLUtils');var _URLUtils2=_interopRequireDefault(_URLUtils);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var HTTP_TIMEOUT_MS=5000;function TimeSyncController(){var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var urlUtils=(0,_URLUtils2.default)(context).getInstance();var instance=void 0,logger=void 0,offsetToDeviceTimeMs=void 0,isSynchronizing=void 0,useManifestDateHeaderTimeSource=void 0,handlers=void 0,dashMetrics=void 0,baseURLController=void 0;function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);}function initialize(timingSources,useManifestDateHeader){useManifestDateHeaderTimeSource=useManifestDateHeader;offsetToDeviceTimeMs=0;isSynchronizing=false;// a list of known schemeIdUris and a method to call with @value
handlers={'urn:mpeg:dash:utc:http-head:2014':httpHeadHandler,'urn:mpeg:dash:utc:http-xsdate:2014':httpHandler.bind(null,xsdatetimeDecoder),'urn:mpeg:dash:utc:http-iso:2014':httpHandler.bind(null,iso8601Decoder),'urn:mpeg:dash:utc:direct:2014':directHandler,// some specs referencing early ISO23009-1 drafts incorrectly use
// 2012 in the URI, rather than 2014. support these for now.
'urn:mpeg:dash:utc:http-head:2012':httpHeadHandler,'urn:mpeg:dash:utc:http-xsdate:2012':httpHandler.bind(null,xsdatetimeDecoder),'urn:mpeg:dash:utc:http-iso:2012':httpHandler.bind(null,iso8601Decoder),'urn:mpeg:dash:utc:direct:2012':directHandler,// it isn't clear how the data returned would be formatted, and
// no public examples available so http-ntp not supported for now.
// presumably you would do an arraybuffer type xhr and decode the
// binary data returned but I would want to see a sample first.
'urn:mpeg:dash:utc:http-ntp:2014':notSupportedHandler,// not clear how this would be supported in javascript (in browser)
'urn:mpeg:dash:utc:ntp:2014':notSupportedHandler,'urn:mpeg:dash:utc:sntp:2014':notSupportedHandler};if(!getIsSynchronizing()){attemptSync(timingSources);}}function setConfig(config){if(!config)return;if(config.dashMetrics){dashMetrics=config.dashMetrics;}if(config.baseURLController){baseURLController=config.baseURLController;}}function getOffsetToDeviceTimeMs(){return getOffsetMs();}function setIsSynchronizing(value){isSynchronizing=value;}function getIsSynchronizing(){return isSynchronizing;}function setOffsetMs(value){offsetToDeviceTimeMs=value;}function getOffsetMs(){return offsetToDeviceTimeMs;}// takes xsdatetime and returns milliseconds since UNIX epoch
// may not be necessary as xsdatetime is very similar to ISO 8601
// which is natively understood by javascript Date parser
function alternateXsdatetimeDecoder(xsdatetimeStr){// taken from DashParser - should probably refactor both uses
var SECONDS_IN_MIN=60;var MINUTES_IN_HOUR=60;var MILLISECONDS_IN_SECONDS=1000;var datetimeRegex=/^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2})(?::([0-9]*)(\.[0-9]*)?)?(?:([+\-])([0-9]{2})([0-9]{2}))?/;var utcDate=void 0,timezoneOffset=void 0;var match=datetimeRegex.exec(xsdatetimeStr);// If the string does not contain a timezone offset different browsers can interpret it either
// as UTC or as a local time so we have to parse the string manually to normalize the given date value for
// all browsers
utcDate=Date.UTC(parseInt(match[1],10),parseInt(match[2],10)-1,// months start from zero
parseInt(match[3],10),parseInt(match[4],10),parseInt(match[5],10),match[6]&&(parseInt(match[6],10)||0),match[7]&&parseFloat(match[7])*MILLISECONDS_IN_SECONDS||0);// If the date has timezone offset take it into account as well
if(match[9]&&match[10]){timezoneOffset=parseInt(match[9],10)*MINUTES_IN_HOUR+parseInt(match[10],10);utcDate+=(match[8]==='+'?-1:+1)*timezoneOffset*SECONDS_IN_MIN*MILLISECONDS_IN_SECONDS;}return new Date(utcDate).getTime();}// try to use the built in parser, since xsdate is a constrained ISO8601
// which is supported natively by Date.parse. if that fails, try a
// regex-based version used elsewhere in this application.
function xsdatetimeDecoder(xsdatetimeStr){var parsedDate=Date.parse(xsdatetimeStr);if(isNaN(parsedDate)){parsedDate=alternateXsdatetimeDecoder(xsdatetimeStr);}return parsedDate;}// takes ISO 8601 timestamp and returns milliseconds since UNIX epoch
function iso8601Decoder(isoStr){return Date.parse(isoStr);}// takes RFC 1123 timestamp (which is same as ISO8601) and returns
// milliseconds since UNIX epoch
function rfc1123Decoder(dateStr){return Date.parse(dateStr);}function notSupportedHandler(url,onSuccessCB,onFailureCB){onFailureCB();}function directHandler(xsdatetimeStr,onSuccessCB,onFailureCB){var time=xsdatetimeDecoder(xsdatetimeStr);if(!isNaN(time)){onSuccessCB(time);return;}onFailureCB();}function httpHandler(decoder,url,onSuccessCB,onFailureCB,isHeadRequest){var oncomplete=void 0,onload=void 0;var complete=false;var req=new XMLHttpRequest();var verb=isHeadRequest?_HTTPRequest.HTTPRequest.HEAD:_HTTPRequest.HTTPRequest.GET;var urls=url.match(/\S+/g);// according to ISO 23009-1, url could be a white-space
// separated list of URLs. just handle one at a time.
url=urls.shift();oncomplete=function oncomplete(){if(complete){return;}// we only want to pass through here once per xhr,
// regardless of whether the load was successful.
complete=true;// if there are more urls to try, call self.
if(urls.length){httpHandler(decoder,urls.join(' '),onSuccessCB,onFailureCB,isHeadRequest);}else{onFailureCB();}};onload=function onload(){var time=void 0,result=void 0;if(req.status===200){time=isHeadRequest?req.getResponseHeader('Date'):req.response;result=decoder(time);// decoder returns NaN if non-standard input
if(!isNaN(result)){onSuccessCB(result);complete=true;}}};if(urlUtils.isRelative(url)){// passing no path to resolve will return just MPD BaseURL/baseUri
var baseUrl=baseURLController.resolve();if(baseUrl){url=urlUtils.resolve(url,baseUrl.url);}}req.open(verb,url);req.timeout=HTTP_TIMEOUT_MS||0;req.onload=onload;req.onloadend=oncomplete;req.send();}function httpHeadHandler(url,onSuccessCB,onFailureCB){httpHandler(rfc1123Decoder,url,onSuccessCB,onFailureCB,true);}function checkForDateHeader(){var dateHeaderValue=dashMetrics.getLatestMPDRequestHeaderValueByID('Date');var dateHeaderTime=dateHeaderValue!==null?new Date(dateHeaderValue).getTime():Number.NaN;if(!isNaN(dateHeaderTime)){setOffsetMs(dateHeaderTime-new Date().getTime());completeTimeSyncSequence(false,dateHeaderTime/1000,offsetToDeviceTimeMs);}else{completeTimeSyncSequence(true);}}function completeTimeSyncSequence(failed,time,offset){setIsSynchronizing(false);eventBus.trigger(_Events2.default.TIME_SYNCHRONIZATION_COMPLETED,{time:time,offset:offset,error:failed?new _DashJSError2.default(_Errors2.default.TIME_SYNC_FAILED_ERROR_CODE,_Errors2.default.TIME_SYNC_FAILED_ERROR_MESSAGE):null});}function calculateTimeOffset(serverTime,deviceTime){return serverTime-deviceTime;}function attemptSync(sources,sourceIndex){// if called with no sourceIndex, use zero (highest priority)
var index=sourceIndex||0;// the sources should be ordered in priority from the manifest.
// try each in turn, from the top, until either something
// sensible happens, or we run out of sources to try.
var source=sources[index];// callback to emit event to listeners
var onComplete=function onComplete(time,offset){var failed=!time||!offset;if(failed&&useManifestDateHeaderTimeSource){//Before falling back to binary search , check if date header exists on MPD. if so, use for a time source.
checkForDateHeader();}else{completeTimeSyncSequence(failed,time,offset);}};setIsSynchronizing(true);if(source){// check if there is a handler for this @schemeIdUri
if(handlers.hasOwnProperty(source.schemeIdUri)){// if so, call it with its @value
handlers[source.schemeIdUri](source.value,function(serverTime){// the timing source returned something useful
var deviceTime=new Date().getTime();var offset=calculateTimeOffset(serverTime,deviceTime);setOffsetMs(offset);logger.info('Local time: '+new Date(deviceTime));logger.info('Server time: '+new Date(serverTime));logger.info('Server Time - Local Time (ms): '+offset);onComplete(serverTime,offset);},function(){// the timing source was probably uncontactable
// or returned something we can't use - try again
// with the remaining sources
attemptSync(sources,index+1);});}else{// an unknown schemeIdUri must have been found
// try again with the remaining sources
attemptSync(sources,index+1);}}else{// no valid time source could be found, just use device time
setOffsetMs(0);onComplete();}}function reset(){setIsSynchronizing(false);}instance={initialize:initialize,getOffsetToDeviceTimeMs:getOffsetToDeviceTimeMs,setConfig:setConfig,reset:reset};setup();return instance;}TimeSyncController.__dashjs_factory_name='TimeSyncController';var factory=_FactoryMaker2.default.getSingletonFactory(TimeSyncController);factory.HTTP_TIMEOUT_MS=HTTP_TIMEOUT_MS;_FactoryMaker2.default.updateSingletonFactory(TimeSyncController.__dashjs_factory_name,factory);exports.default=factory;


},{"./../vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js","./../vo/metrics/HTTPRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/HTTPRequest.js","./../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","./../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","./../../core/errors/Errors":"../node_modules/dashjs/build/es5/src/core/errors/Errors.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","../utils/URLUtils":"../node_modules/dashjs/build/es5/src/streaming/utils/URLUtils.js"}],"../node_modules/dashjs/build/es5/src/streaming/controllers/MediaSourceController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Debug=require('../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function MediaSourceController(){var instance=void 0,logger=void 0;var context=this.context;function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);}function createMediaSource(){var hasWebKit='WebKitMediaSource'in window;var hasMediaSource='MediaSource'in window;if(hasMediaSource){return new MediaSource();}else if(hasWebKit){return new WebKitMediaSource();}return null;}function attachMediaSource(source,videoModel){var objectURL=window.URL.createObjectURL(source);videoModel.setSource(objectURL);return objectURL;}function detachMediaSource(videoModel){videoModel.setSource(null);}function setDuration(source,value){if(source.duration!=value)source.duration=value;return source.duration;}function setSeekable(source,start,end){if(source&&typeof source.setLiveSeekableRange==='function'&&typeof source.clearLiveSeekableRange==='function'&&source.readyState==='open'&&start>=0&&start<end){source.clearLiveSeekableRange();source.setLiveSeekableRange(start,end);}}function signalEndOfStream(source){if(!source||source.readyState!=='open'){return;}var buffers=source.sourceBuffers;for(var i=0;i<buffers.length;i++){if(buffers[i].updating){return;}if(buffers[i].buffered.length===0){return;}}logger.info('call to mediaSource endOfStream');source.endOfStream();}instance={createMediaSource:createMediaSource,attachMediaSource:attachMediaSource,detachMediaSource:detachMediaSource,setDuration:setDuration,setSeekable:setSeekable,signalEndOfStream:signalEndOfStream};setup();return instance;}MediaSourceController.__dashjs_factory_name='MediaSourceController';exports.default=_FactoryMaker2.default.getSingletonFactory(MediaSourceController);


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js"}],"../node_modules/dashjs/build/es5/src/streaming/controllers/EventController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Debug=require('../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _MediaPlayerEvents=require('../../streaming/MediaPlayerEvents');var _MediaPlayerEvents2=_interopRequireDefault(_MediaPlayerEvents);var _XHRLoader=require('../net/XHRLoader');var _XHRLoader2=_interopRequireDefault(_XHRLoader);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function EventController(){var MPD_RELOAD_SCHEME='urn:mpeg:dash:event:2012';var MPD_RELOAD_VALUE=1;var MPD_CALLBACK_SCHEME='urn:mpeg:dash:event:callback:2015';var MPD_CALLBACK_VALUE=1;var REFRESH_DELAY=100;var REMAINING_EVENTS_THRESHOLD=300;var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var instance=void 0,logger=void 0,inlineEvents=void 0,// Holds all Inline Events not triggered yet
inbandEvents=void 0,// Holds all Inband Events not triggered yet
activeEvents=void 0,// Holds all Events currently running
eventInterval=void 0,// variable holding the setInterval
lastEventTimerCall=void 0,manifestUpdater=void 0,playbackController=void 0,eventHandlingInProgress=void 0,isStarted=void 0;function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);_resetInitialSettings();}function checkConfig(){if(!manifestUpdater||!playbackController){throw new Error('setConfig function has to be called previously');}}function _resetInitialSettings(){isStarted=false;inlineEvents={};inbandEvents={};activeEvents={};eventInterval=null;eventHandlingInProgress=false;lastEventTimerCall=Date.now()/1000;}function _stop(){try{if(eventInterval!==null&&isStarted){clearInterval(eventInterval);eventInterval=null;isStarted=false;_onStopEventController();}}catch(e){throw e;}}function start(){try{checkConfig();logger.debug('Start Event Controller');if(!isStarted&&!isNaN(REFRESH_DELAY)){isStarted=true;eventInterval=setInterval(_onEventTimer,REFRESH_DELAY);}}catch(e){throw e;}}/**
     * Add events to the eventList. Events that are not in the mpd anymore but not triggered yet will still be deleted
     * @param {Array.<Object>} values
     */function addInlineEvents(values){try{checkConfig();if(values){for(var i=0;i<values.length;i++){var event=values[i];logger.debug('Add inline event with id '+event.id);// If we see the event for the first time we trigger it in onReceive mode
if(!inlineEvents[event.id]){_startEvent(event.id,event,values,_MediaPlayerEvents2.default.EVENT_MODE_ON_RECEIVE);}inlineEvents[event.id]=event;}}logger.debug('Added '+values.length+' inline events');}catch(e){throw e;}}/**
     * i.e. processing of any one event message box with the same id is sufficient
     * @param {Array.<Object>} values
     */function addInbandEvents(values){try{checkConfig();for(var i=0;i<values.length;i++){var event=values[i];if(!(event.id in inbandEvents)){if(event.eventStream.schemeIdUri===MPD_RELOAD_SCHEME&&inbandEvents[event.id]===undefined){_handleManifestReloadEvent(event);}inbandEvents[event.id]=event;logger.debug('Add inband event with id '+event.id);_startEvent(event.id,event,values,_MediaPlayerEvents2.default.EVENT_MODE_ON_RECEIVE);}else{logger.debug('Repeated event with id '+event.id);}}_onEventTimer();}catch(e){throw e;}}function _handleManifestReloadEvent(event){try{if(event.eventStream.value==MPD_RELOAD_VALUE){var validUntil=event.calculatedPresentationTime;var newDuration=void 0;if(event.calculatedPresentationTime==0xFFFFFFFF){//0xFF... means remaining duration unknown
newDuration=NaN;}else{newDuration=event.calculatedPresentationTime+event.duration;}//logger.info('Manifest validity changed: Valid until: ' + validUntil + '; remaining duration: ' + newDuration);
eventBus.trigger(_MediaPlayerEvents2.default.MANIFEST_VALIDITY_CHANGED,{id:event.id,validUntil:validUntil,newDuration:newDuration,newManifestValidAfter:NaN//event.message_data - this is an arraybuffer with a timestring in it, but not used yet
},{mode:_MediaPlayerEvents2.default.EVENT_MODE_ON_START});}}catch(e){}}/**
     * Remove expired events from the list
     */function _removeEvents(){try{if(activeEvents){var currentVideoTime=playbackController.getTime();var eventIds=Object.keys(activeEvents);for(var i=0;i<eventIds.length;i++){var eventId=eventIds[i];var event=activeEvents[eventId];if(event!==null&&event.duration+event.calculatedPresentationTime<currentVideoTime){logger.debug('Remove Event '+eventId+' at time '+currentVideoTime);event=null;delete activeEvents[eventId];}}}}catch(e){}}/**
     * Iterate through the eventList and trigger/remove the events
     */function _onEventTimer(){try{if(!eventHandlingInProgress){eventHandlingInProgress=true;var currentVideoTime=playbackController.getTime();var presentationTimeThreshold=currentVideoTime-lastEventTimerCall;// For dynamic streams lastEventTimeCall will be large in the first iteration. Avoid firing all events at once.
presentationTimeThreshold=lastEventTimerCall>0?Math.max(0,presentationTimeThreshold):0;_triggerEvents(inbandEvents,presentationTimeThreshold,currentVideoTime);_triggerEvents(inlineEvents,presentationTimeThreshold,currentVideoTime);_removeEvents();lastEventTimerCall=currentVideoTime;eventHandlingInProgress=false;}}catch(e){eventHandlingInProgress=false;}}function _onStopEventController(){try{// EventController might be stopped before the period is over. Before we stop the event controller we check for events that needs to be triggered at the period boundary.
_triggerRemainingEvents(inbandEvents);_triggerRemainingEvents(inlineEvents);}catch(e){}}function _triggerEvents(events,presentationTimeThreshold,currentVideoTime){try{if(events){var eventIds=Object.keys(events);for(var i=0;i<eventIds.length;i++){var eventId=eventIds[i];var event=events[eventId];if(event!==undefined){var duration=!isNaN(event.duration)?event.duration:0;// The event is either about to start or has already been started and we are within its duration
if(event.calculatedPresentationTime<=currentVideoTime&&event.calculatedPresentationTime+presentationTimeThreshold+duration>=currentVideoTime){_startEvent(eventId,event,events,_MediaPlayerEvents2.default.EVENT_MODE_ON_START);}else if(_eventHasExpired(currentVideoTime,duration+presentationTimeThreshold,event.calculatedPresentationTime)||_eventIsInvalid(event)){logger.debug('Deleting event '+eventId+' as it is expired or invalid');delete events[eventId];}}}}}catch(e){}}function _eventHasExpired(currentVideoTime,threshold,calculatedPresentationTimeInSeconds){try{return currentVideoTime-threshold>calculatedPresentationTimeInSeconds;}catch(e){return false;}}function _eventIsInvalid(event){try{var periodEndTime=event.eventStream.period.start+event.eventStream.period.duration;return event.calculatedPresentationTime>periodEndTime;}catch(e){return false;}}function _triggerRemainingEvents(events){try{var eventIds=Object.keys(events);var currentTime=playbackController.getTime();if(!eventIds||eventIds.length===0){return;}var periodDuration=events[eventIds[0]].eventStream&&events[eventIds[0]].eventStream.period&&!isNaN(events[eventIds[0]].eventStream.period.duration)?events[eventIds[0]].eventStream.period.duration:NaN;var periodStart=events[eventIds[0]].eventStream&&events[eventIds[0]].eventStream.period&&!isNaN(events[eventIds[0]].eventStream.period.start)?events[eventIds[0]].eventStream.period.start:NaN;if(isNaN(periodDuration)||isNaN(periodStart)){return;}eventIds.forEach(function(eventId){var event=events[eventId];var calculatedPresentationTimeInSeconds=event.calculatedPresentationTime;if(Math.abs(calculatedPresentationTimeInSeconds-currentTime)<REMAINING_EVENTS_THRESHOLD){_startEvent(eventId,event,events,_MediaPlayerEvents2.default.EVENT_MODE_ON_START);}});}catch(e){}}function _startEvent(eventId,event,events,mode){try{var currentVideoTime=playbackController.getTime();if(mode===_MediaPlayerEvents2.default.EVENT_MODE_ON_RECEIVE){logger.debug('Received event '+eventId);eventBus.trigger(event.eventStream.schemeIdUri,{event:event},{mode:mode});return;}if(event.duration>0){activeEvents[eventId]=event;}if(event.eventStream.schemeIdUri===MPD_RELOAD_SCHEME&&event.eventStream.value===MPD_RELOAD_VALUE){if(event.duration!==0||event.presentationTimeDelta!==0){//If both are set to zero, it indicates the media is over at this point. Don't reload the manifest.
logger.debug('Starting manifest refresh event '+eventId+' at '+currentVideoTime);_refreshManifest();}}else if(event.eventStream.schemeIdUri===MPD_CALLBACK_SCHEME&&event.eventStream.value===MPD_CALLBACK_VALUE){logger.debug('Starting callback event '+eventId+' at '+currentVideoTime);_sendCallbackRequest(event.messageData);}else{logger.debug('Starting event '+eventId+' at '+currentVideoTime);eventBus.trigger(event.eventStream.schemeIdUri,{event:event},{mode:mode});}delete events[eventId];}catch(e){}}function _refreshManifest(){try{checkConfig();manifestUpdater.refreshManifest();}catch(e){}}function _sendCallbackRequest(url){try{var loader=(0,_XHRLoader2.default)(context).create({});loader.load({method:'get',url:url,request:{responseType:'arraybuffer'}});}catch(e){throw e;}}function setConfig(config){try{if(!config){return;}if(config.manifestUpdater){manifestUpdater=config.manifestUpdater;}if(config.playbackController){playbackController=config.playbackController;}}catch(e){throw e;}}function reset(){_stop();_resetInitialSettings();}instance={addInlineEvents:addInlineEvents,addInbandEvents:addInbandEvents,start:start,setConfig:setConfig,reset:reset};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */EventController.__dashjs_factory_name='EventController';exports.default=_FactoryMaker2.default.getSingletonFactory(EventController);


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../../streaming/MediaPlayerEvents":"../node_modules/dashjs/build/es5/src/streaming/MediaPlayerEvents.js","../net/XHRLoader":"../node_modules/dashjs/build/es5/src/streaming/net/XHRLoader.js"}],"../node_modules/dashjs/build/es5/src/streaming/controllers/StreamController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _MetricsConstants=require('../constants/MetricsConstants');var _MetricsConstants2=_interopRequireDefault(_MetricsConstants);var _Stream=require('../Stream');var _Stream2=_interopRequireDefault(_Stream);var _ManifestUpdater=require('../ManifestUpdater');var _ManifestUpdater2=_interopRequireDefault(_ManifestUpdater);var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _PlayList=require('../vo/metrics/PlayList');var _Debug=require('../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _InitCache=require('../utils/InitCache');var _InitCache2=_interopRequireDefault(_InitCache);var _URLUtils=require('../utils/URLUtils');var _URLUtils2=_interopRequireDefault(_URLUtils);var _MediaPlayerEvents=require('../MediaPlayerEvents');var _MediaPlayerEvents2=_interopRequireDefault(_MediaPlayerEvents);var _TimeSyncController=require('./TimeSyncController');var _TimeSyncController2=_interopRequireDefault(_TimeSyncController);var _MediaSourceController=require('./MediaSourceController');var _MediaSourceController2=_interopRequireDefault(_MediaSourceController);var _DashJSError=require('../vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);var _Errors=require('../../core/errors/Errors');var _Errors2=_interopRequireDefault(_Errors);var _EventController=require('./EventController');var _EventController2=_interopRequireDefault(_EventController);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var PLAYBACK_ENDED_TIMER_INTERVAL=200;var PREBUFFERING_CAN_START_INTERVAL=500;function StreamController(){var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var instance=void 0,logger=void 0,capabilities=void 0,manifestUpdater=void 0,manifestLoader=void 0,manifestModel=void 0,adapter=void 0,dashMetrics=void 0,mediaSourceController=void 0,timeSyncController=void 0,baseURLController=void 0,abrController=void 0,mediaController=void 0,eventController=void 0,textController=void 0,initCache=void 0,urlUtils=void 0,errHandler=void 0,timelineConverter=void 0,streams=void 0,activeStream=void 0,protectionController=void 0,protectionData=void 0,autoPlay=void 0,isStreamSwitchingInProgress=void 0,hasMediaError=void 0,hasInitialisationError=void 0,mediaSource=void 0,videoModel=void 0,playbackController=void 0,mediaPlayerModel=void 0,isPaused=void 0,initialPlayback=void 0,isPeriodSwitchInProgress=void 0,playbackEndedTimerInterval=void 0,prebufferingCanStartInterval=void 0,buffers=void 0,preloadingStreams=void 0,supportsChangeType=void 0,settings=void 0,preBufferingCheckInProgress=void 0;function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);timeSyncController=(0,_TimeSyncController2.default)(context).getInstance();mediaSourceController=(0,_MediaSourceController2.default)(context).getInstance();initCache=(0,_InitCache2.default)(context).getInstance();urlUtils=(0,_URLUtils2.default)(context).getInstance();resetInitialSettings();}function initialize(autoPl,protData){checkConfig();autoPlay=autoPl;protectionData=protData;timelineConverter.initialize();manifestUpdater=(0,_ManifestUpdater2.default)(context).create();manifestUpdater.setConfig({manifestModel:manifestModel,adapter:adapter,manifestLoader:manifestLoader,errHandler:errHandler,settings:settings});manifestUpdater.initialize();eventController=(0,_EventController2.default)(context).getInstance();eventController.setConfig({manifestUpdater:manifestUpdater,playbackController:playbackController});eventController.start();registerEvents();}function registerEvents(){eventBus.on(_Events2.default.PLAYBACK_TIME_UPDATED,onPlaybackTimeUpdated,instance);eventBus.on(_Events2.default.PLAYBACK_SEEKING,onPlaybackSeeking,instance);eventBus.on(_Events2.default.GAP_CAUSED_SEEK_TO_PERIOD_END,onGapCausedPlaybackSeek,instance);eventBus.on(_Events2.default.PLAYBACK_ERROR,onPlaybackError,instance);eventBus.on(_Events2.default.PLAYBACK_STARTED,onPlaybackStarted,instance);eventBus.on(_Events2.default.PLAYBACK_PAUSED,onPlaybackPaused,instance);eventBus.on(_Events2.default.PLAYBACK_ENDED,onEnded,instance,{priority:_EventBus2.default.EVENT_PRIORITY_HIGH});eventBus.on(_Events2.default.MANIFEST_UPDATED,onManifestUpdated,instance);eventBus.on(_Events2.default.STREAM_BUFFERING_COMPLETED,onStreamBufferingCompleted,instance);eventBus.on(_Events2.default.MANIFEST_VALIDITY_CHANGED,onManifestValidityChanged,instance);eventBus.on(_Events2.default.TIME_SYNCHRONIZATION_COMPLETED,onTimeSyncCompleted,instance);eventBus.on(_MediaPlayerEvents2.default.METRIC_ADDED,onMetricAdded,instance);}function unRegisterEvents(){eventBus.off(_Events2.default.PLAYBACK_TIME_UPDATED,onPlaybackTimeUpdated,instance);eventBus.off(_Events2.default.PLAYBACK_SEEKING,onPlaybackSeeking,instance);eventBus.off(_Events2.default.GAP_CAUSED_SEEK_TO_PERIOD_END,onGapCausedPlaybackSeek,instance);eventBus.off(_Events2.default.PLAYBACK_ERROR,onPlaybackError,instance);eventBus.off(_Events2.default.PLAYBACK_STARTED,onPlaybackStarted,instance);eventBus.off(_Events2.default.PLAYBACK_PAUSED,onPlaybackPaused,instance);eventBus.off(_Events2.default.PLAYBACK_ENDED,onEnded,instance);eventBus.off(_Events2.default.MANIFEST_UPDATED,onManifestUpdated,instance);eventBus.off(_Events2.default.STREAM_BUFFERING_COMPLETED,onStreamBufferingCompleted,instance);eventBus.off(_Events2.default.MANIFEST_VALIDITY_CHANGED,onManifestValidityChanged,instance);eventBus.off(_Events2.default.TIME_SYNCHRONIZATION_COMPLETED,onTimeSyncCompleted,instance);eventBus.off(_MediaPlayerEvents2.default.METRIC_ADDED,onMetricAdded,instance);}/*
     * Called when current playback position is changed.
     * Used to determine the time current stream is finished and we should switch to the next stream.
     */function onPlaybackTimeUpdated()/*e*/{if(hasVideoTrack()){var playbackQuality=videoModel.getPlaybackQuality();if(playbackQuality){dashMetrics.addDroppedFrames(playbackQuality);}}}function onPlaybackSeeking(e){var seekingStream=getStreamForTime(e.seekTime);if(seekingStream===activeStream&&preloadingStreams&&preloadingStreams.length>0){// Seeking to the current period was requested while preloading the next one, deactivate preloading one
preloadingStreams.forEach(function(s){s.deactivate(true);});}if(seekingStream&&seekingStream!==activeStream){// If we're preloading other stream, the active one was deactivated and we need to switch back
flushPlaylistMetrics(_PlayList.PlayListTrace.END_OF_PERIOD_STOP_REASON);switchStream(seekingStream,activeStream,e.seekTime);}else{flushPlaylistMetrics(_PlayList.PlayListTrace.USER_REQUEST_STOP_REASON);}createPlaylistMetrics(_PlayList.PlayList.SEEK_START_REASON);}function onGapCausedPlaybackSeek(e){var nextStream=getNextStream();flushPlaylistMetrics(_PlayList.PlayListTrace.END_OF_PERIOD_STOP_REASON);switchStream(nextStream,activeStream,e.seekTime);createPlaylistMetrics(_PlayList.PlayList.SEEK_START_REASON);}function onPlaybackStarted()/*e*/{logger.debug('[onPlaybackStarted]');if(initialPlayback){initialPlayback=false;createPlaylistMetrics(_PlayList.PlayList.INITIAL_PLAYOUT_START_REASON);}else{if(isPaused){isPaused=false;createPlaylistMetrics(_PlayList.PlayList.RESUME_FROM_PAUSE_START_REASON);}}}function onPlaybackPaused(e){logger.debug('[onPlaybackPaused]');if(!e.ended){isPaused=true;flushPlaylistMetrics(_PlayList.PlayListTrace.USER_REQUEST_STOP_REASON);}}function startPlaybackEndedTimerInterval(){if(!playbackEndedTimerInterval){playbackEndedTimerInterval=setInterval(function(){if(!isStreamSwitchingInProgress&&playbackController.getTimeToStreamEnd()<=0){eventBus.trigger(_Events2.default.PLAYBACK_ENDED,{'isLast':getActiveStreamInfo().isLast});}},PLAYBACK_ENDED_TIMER_INTERVAL);}}function stopPlaybackEndedTimerInterval(){if(playbackEndedTimerInterval){clearInterval(playbackEndedTimerInterval);playbackEndedTimerInterval=null;}}function startCheckIfPrebufferingCanStartInterval(){if(!prebufferingCanStartInterval){prebufferingCanStartInterval=setInterval(function(){checkIfPrebufferingCanStart();},PREBUFFERING_CAN_START_INTERVAL);}}function stopCheckIfPrebufferingCanStartInterval(){clearInterval(prebufferingCanStartInterval);prebufferingCanStartInterval=null;}function checkIfPrebufferingCanStart(){// In multiperiod situations, we constantly check if the streams have finished buffering so we can immediately start buffering the next stream
if(!activeStream||!hasStreamFinishedBuffering(activeStream)){return;}var upcomingStreams=getNextStreams(activeStream);var i=0;var _loop=function _loop(){var stream=upcomingStreams[i];var previousStream=i===0?activeStream:upcomingStreams[i-1];// If the preloading for the current stream is not scheduled, but its predecessor has finished buffering we can start prebuffering this stream
if(!stream.getPreloadingScheduled()&&hasStreamFinishedBuffering(previousStream)){if(mediaSource){// We can not start prebuffering if the start of the next period is in the future. This will cause problems when calculating the segmentAvailabilityRange and updating the representations in the RepresentationController
// As long as the timeline converter returns an invalid range we do not start the prebuffering
var mediaTypes=[_Constants2.default.VIDEO,_Constants2.default.AUDIO];var segmentAvailabilityRangeIsOk=true;mediaTypes.forEach(function(mediaType){var mediaInfo=adapter.getMediaInfoForType(stream.getStreamInfo(),mediaType);var voRepresentations=adapter.getVoRepresentations(mediaInfo);voRepresentations.forEach(function(voRep){var isDynamic=adapter.getIsDynamic();var range=timelineConverter.calcSegmentAvailabilityRange(voRep,isDynamic);if(range.end<range.start){segmentAvailabilityRangeIsOk=false;}});});if(segmentAvailabilityRangeIsOk){onStreamCanLoadNext(stream,previousStream);}}}i+=1;};while(i<upcomingStreams.length){_loop();}}function hasStreamFinishedBuffering(stream){try{if(!stream){return false;}var streamProcessors=stream.getProcessors().filter(function(sp){return sp.getType()===_Constants2.default.AUDIO||sp.getType()===_Constants2.default.VIDEO;});if(!streamProcessors||streamProcessors.length===0){return false;}var unfinishedStreamProcessors=streamProcessors.filter(function(sp){return!sp.isBufferingCompleted();});return unfinishedStreamProcessors&&unfinishedStreamProcessors.length===0;}catch(e){return false;}}function onStreamBufferingCompleted(){var isLast=getActiveStreamInfo().isLast;if(mediaSource&&isLast){logger.info('[onStreamBufferingCompleted] calls signalEndOfStream of mediaSourceController.');mediaSourceController.signalEndOfStream(mediaSource);}}function canSourceBuffersBeReused(nextStream,previousStream){try{return settings.get().streaming.reuseExistingSourceBuffers&&previousStream.isProtectionCompatible(nextStream,previousStream)&&(supportsChangeType||previousStream.isMediaCodecCompatible(nextStream,previousStream))&&!hasCriticalTexttracks(nextStream);}catch(e){return false;}}function onStreamCanLoadNext(nextStream){var previousStream=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(mediaSource&&!nextStream.getPreloaded()){// Seamless period switch allowed only if:
// - none of the periods uses contentProtection.
// - AND changeType method implemented by browser or periods use the same codec.
var seamlessPeriodSwitch=canSourceBuffersBeReused(nextStream,previousStream);if(seamlessPeriodSwitch){nextStream.setPreloadingScheduled(true);logger.info('[onStreamCanLoadNext] Preloading next stream with id '+nextStream.getId());isPeriodSwitchInProgress=true;nextStream.preload(mediaSource,buffers);preloadingStreams.push(nextStream);nextStream.getProcessors().forEach(function(p){p.setBufferingTime(nextStream.getStartTime());});}}}function hasCriticalTexttracks(stream){try{// if the upcoming stream has stpp or wvtt texttracks we need to reset the sourcebuffers and can not prebuffer
var streamInfo=stream.getStreamInfo();var as=adapter.getAdaptationForType(streamInfo.index,_Constants2.default.FRAGMENTED_TEXT,streamInfo);if(!as){return false;}return as.codecs.indexOf('stpp')!==-1||as.codecs.indexOf('wvtt')!==-1;}catch(e){return false;}}function getStreamForTime(time){if(isNaN(time)){return null;}var streamDuration=0;var stream=null;var ln=streams.length;if(ln>0){streamDuration+=streams[0].getStartTime();}for(var i=0;i<ln;i++){stream=streams[i];streamDuration=parseFloat((streamDuration+stream.getDuration()).toFixed(5));if(time<streamDuration){return stream;}}return null;}/**
     * Returns a playhead time, in seconds, converted to be relative
     * to the start of an identified stream/period or null if no such stream
     * @param {number} time
     * @param {string} id
     * @returns {number|null}
     */function getTimeRelativeToStreamId(time,id){var stream=null;var baseStart=0;var streamStart=0;var streamDur=null;for(var i=0;i<streams.length;i++){stream=streams[i];streamStart=stream.getStartTime();streamDur=stream.getDuration();// use start time, if not undefined or NaN or similar
if(Number.isFinite(streamStart)){baseStart=streamStart;}if(stream.getId()===id){return time-baseStart;}else{// use duration if not undefined or NaN or similar
if(Number.isFinite(streamDur)){baseStart+=streamDur;}}}return null;}function getActiveStreamProcessors(){return activeStream?activeStream.getProcessors():[];}function onEnded(e){if(!activeStream.getIsEndedEventSignaled()){activeStream.setIsEndedEventSignaled(true);var nextStream=getNextStream();if(nextStream){logger.debug('StreamController onEnded, found next stream with id '+nextStream.getStreamInfo().id);switchStream(nextStream,activeStream,NaN);}else{logger.debug('StreamController no next stream found');activeStream.setIsEndedEventSignaled(false);}flushPlaylistMetrics(nextStream?_PlayList.PlayListTrace.END_OF_PERIOD_STOP_REASON:_PlayList.PlayListTrace.END_OF_CONTENT_STOP_REASON);isPeriodSwitchInProgress=false;}if(e&&e.isLast){stopPlaybackEndedTimerInterval();}}function getNextStream(){var stream=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var refStream=stream?stream:activeStream?activeStream:null;if(refStream){var start=refStream.getStreamInfo().start;var duration=refStream.getStreamInfo().duration;var streamEnd=parseFloat((start+duration).toFixed(5));var i=0;var targetIndex=-1;var lastDiff=NaN;while(i<streams.length){var s=streams[i];var diff=s.getStreamInfo().start-streamEnd;if(diff>=0&&(isNaN(lastDiff)||diff<lastDiff)){lastDiff=diff;targetIndex=i;}i+=1;}if(targetIndex>=0){return streams[targetIndex];}return null;}return null;}function getNextStreams(stream){try{var refStream=stream?stream:activeStream?activeStream:null;if(refStream){var start=refStream.getStreamInfo().start;return streams.filter(function(stream){return stream.getStreamInfo().start>start;});}}catch(e){return[];}}function switchStream(stream,previousStream,seekTime){if(isStreamSwitchingInProgress||!stream||previousStream===stream&&stream.isActive())return;isStreamSwitchingInProgress=true;eventBus.trigger(_Events2.default.PERIOD_SWITCH_STARTED,{fromStreamInfo:previousStream?previousStream.getStreamInfo():null,toStreamInfo:stream.getStreamInfo()});var seamlessPeriodSwitch=false;if(previousStream){seamlessPeriodSwitch=canSourceBuffersBeReused(stream,previousStream);previousStream.deactivate(seamlessPeriodSwitch);}// Determine seek time when switching to new period
// - seek at given seek time
// - or seek at period start if upcoming period is not prebuffered
seekTime=!isNaN(seekTime)?seekTime:!seamlessPeriodSwitch&&previousStream?stream.getStreamInfo().start:NaN;logger.info('Switch to stream '+stream.getId()+'. Seektime is '+seekTime+', current playback time is '+playbackController.getTime());logger.info('Seamless period switch is set to '+seamlessPeriodSwitch);activeStream=stream;preloadingStreams=preloadingStreams.filter(function(s){return s.getId()!==activeStream.getId();});playbackController.initialize(getActiveStreamInfo(),!!previousStream,seekTime);if(videoModel.getElement()){openMediaSource(seekTime,previousStream===null,false,seamlessPeriodSwitch);}else{activateStream(seekTime,seamlessPeriodSwitch);}isPeriodSwitchInProgress=false;}function switchToVideoElement(seekTime){if(activeStream){playbackController.initialize(getActiveStreamInfo());openMediaSource(seekTime,false,true,false);}}function openMediaSource(seekTime,sourceInitialized,streamActivated,keepBuffers){var sourceUrl=void 0;function onMediaSourceOpen(){// Manage situations in which a call to reset happens while MediaSource is being opened
if(!mediaSource||mediaSource.readyState!=='open')return;logger.debug('MediaSource is open!');window.URL.revokeObjectURL(sourceUrl);mediaSource.removeEventListener('sourceopen',onMediaSourceOpen);mediaSource.removeEventListener('webkitsourceopen',onMediaSourceOpen);setMediaDuration();if(!sourceInitialized){eventBus.trigger(_Events2.default.SOURCE_INITIALIZED);}if(streamActivated){activeStream.setMediaSource(mediaSource);}else{activateStream(seekTime,keepBuffers);}}if(!mediaSource){mediaSource=mediaSourceController.createMediaSource();mediaSource.addEventListener('sourceopen',onMediaSourceOpen,false);mediaSource.addEventListener('webkitsourceopen',onMediaSourceOpen,false);sourceUrl=mediaSourceController.attachMediaSource(mediaSource,videoModel);logger.debug('MediaSource attached to element.  Waiting on open...');}else{if(keepBuffers){activateStream(seekTime,keepBuffers);if(!sourceInitialized){eventBus.trigger(_Events2.default.SOURCE_INITIALIZED);}}else{mediaSourceController.detachMediaSource(videoModel);mediaSource.addEventListener('sourceopen',onMediaSourceOpen,false);mediaSource.addEventListener('webkitsourceopen',onMediaSourceOpen,false);sourceUrl=mediaSourceController.attachMediaSource(mediaSource,videoModel);logger.debug('MediaSource attached to element.  Waiting on open...');}}}function getActiveStream(){return activeStream;}function activateStream(seekTime,keepBuffers){buffers=activeStream.activate(mediaSource,keepBuffers?buffers:undefined);// check if change type is supported by the browser
if(buffers){var keys=Object.keys(buffers);if(keys.length>0&&buffers[keys[0]].changeType){supportsChangeType=true;}}if(!initialPlayback){if(!isNaN(seekTime)){// If the streamswitch has been triggered by a seek command there is no need to seek again. Still we need to trigger the seeking event in order for the controllers to adjust the new time
if(seekTime===playbackController.getTime()){eventBus.trigger(_Events2.default.SEEK_TARGET,{time:seekTime},{streamId:activeStream.getId()});}else{playbackController.seek(seekTime);}}}if(autoPlay||!initialPlayback){playbackController.play();}isStreamSwitchingInProgress=false;eventBus.trigger(_Events2.default.PERIOD_SWITCH_COMPLETED,{toStreamInfo:getActiveStreamInfo()});}function setMediaDuration(duration){var manifestDuration=duration?duration:getActiveStreamInfo().manifestInfo.duration;if(manifestDuration&&!isNaN(manifestDuration)){var mediaDuration=mediaSourceController.setDuration(mediaSource,manifestDuration);logger.debug('Duration successfully set to: '+mediaDuration);}}function getComposedStream(streamInfo){for(var i=0,ln=streams.length;i<ln;i++){if(streams[i].getId()===streamInfo.id){return streams[i];}}return null;}function composeStreams(){try{var streamsInfo=adapter.getStreamsInfo();if(streamsInfo.length===0){throw new Error('There are no streams');}dashMetrics.updateManifestUpdateInfo({currentTime:playbackController.getTime(),buffered:videoModel.getBufferRange(),presentationStartTime:streamsInfo[0].start,clientTimeOffset:timelineConverter.getClientTimeOffset()});// Filter streams that are outdated and not included in the MPD anymore
if(streams.length>0){streams=streams.filter(function(stream){var isStillIncluded=streamsInfo.filter(function(sInfo){return sInfo.id===stream.getId();}).length>0;var shouldKeepStream=isStillIncluded||stream.getId()===activeStream.getId();if(!shouldKeepStream){logger.debug('Removing stream '+stream.getId());}return shouldKeepStream;});}for(var i=0,ln=streamsInfo.length;i<ln;i++){// If the Stream object does not exist we probably loaded the manifest the first time or it was
// introduced in the updated manifest, so we need to create a new Stream and perform all the initialization operations
var streamInfo=streamsInfo[i];var _stream=getComposedStream(streamInfo);if(!_stream){_stream=(0,_Stream2.default)(context).create({manifestModel:manifestModel,mediaPlayerModel:mediaPlayerModel,dashMetrics:dashMetrics,manifestUpdater:manifestUpdater,adapter:adapter,timelineConverter:timelineConverter,capabilities:capabilities,errHandler:errHandler,baseURLController:baseURLController,abrController:abrController,playbackController:playbackController,eventController:eventController,mediaController:mediaController,textController:textController,protectionController:protectionController,videoModel:videoModel,streamInfo:streamInfo,settings:settings});streams.push(_stream);_stream.initialize();}else{_stream.updateData(streamInfo);}dashMetrics.addManifestUpdateStreamInfo(streamInfo);}if(!activeStream){if(adapter.getIsDynamic()&&streams.length){// Compute and set live delay
var manifestInfo=streamsInfo[0].manifestInfo;var fragmentDuration=getFragmentDurationForLiveDelayCalculation(streamsInfo,manifestInfo);playbackController.computeAndSetLiveDelay(fragmentDuration,manifestInfo.DVRWindowSize,manifestInfo.minBufferTime);}// we need to figure out what the correct starting period is
var initialStream=null;var startTimeFromUri=playbackController.getStartTimeFromUriParameters(adapter.getIsDynamic());initialStream=getStreamForTime(startTimeFromUri);// For multiperiod streams we should avoid a switch of streams after the seek to the live edge. So we do a calculation of the expected seek time to find the right stream object.
if(!initialStream&&adapter.getIsDynamic()&&streams.length){logger.debug('Dynamic stream: Trying to find the correct starting period');initialStream=getInitialStream();}var startStream=initialStream!==null?initialStream:streams[0];switchStream(startStream,null,NaN);startPlaybackEndedTimerInterval();startCheckIfPrebufferingCanStartInterval();}eventBus.trigger(_Events2.default.STREAMS_COMPOSED);}catch(e){errHandler.error(new _DashJSError2.default(_Errors2.default.MANIFEST_ERROR_ID_NOSTREAMS_CODE,e.message+'nostreamscomposed',manifestModel.getValue()));hasInitialisationError=true;reset();}}function getInitialStream(){try{var liveEdge=timelineConverter.calcPresentationTimeFromWallTime(new Date(),adapter.getRegularPeriods()[0]);var targetDelay=playbackController.getLiveDelay();var targetTime=liveEdge-targetDelay;return getStreamForTime(targetTime);}catch(e){return null;}}function getFragmentDurationForLiveDelayCalculation(streamInfos,manifestInfo){try{var fragmentDuration=NaN;//  We use the maxFragmentDuration attribute if present
if(manifestInfo&&!isNaN(manifestInfo.maxFragmentDuration)&&isFinite(manifestInfo.maxFragmentDuration)){return manifestInfo.maxFragmentDuration;}// For single period manifests we can iterate over all AS and use the maximum segment length
if(streamInfos&&streamInfos.length===1){var streamInfo=streamInfos[0];var mediaTypes=[_Constants2.default.VIDEO,_Constants2.default.AUDIO,_Constants2.default.FRAGMENTED_TEXT];var fragmentDurations=mediaTypes.reduce(function(acc,mediaType){var mediaInfo=adapter.getMediaInfoForType(streamInfo,mediaType);if(mediaInfo){acc.push(mediaInfo);}return acc;},[]).reduce(function(acc,mediaInfo){var voRepresentations=adapter.getVoRepresentations(mediaInfo);if(voRepresentations&&voRepresentations.length>0){voRepresentations.forEach(function(voRepresentation){if(voRepresentation){acc.push(voRepresentation);}});}return acc;},[]).reduce(function(acc,voRepresentation){var representation=adapter.convertDataToRepresentationInfo(voRepresentation);if(representation&&representation.fragmentDuration&&!isNaN(representation.fragmentDuration)){acc.push(representation.fragmentDuration);}return acc;},[]);fragmentDuration=Math.max.apply(Math,_toConsumableArray(fragmentDurations));}return isFinite(fragmentDuration)?fragmentDuration:NaN;}catch(e){return NaN;}}function onTimeSyncCompleted()/*e*/{var manifest=manifestModel.getValue();//TODO check if we can move this to initialize??
if(protectionController){eventBus.trigger(_Events2.default.PROTECTION_CREATED,{controller:protectionController,manifest:manifest});protectionController.setMediaElement(videoModel.getElement());if(protectionData){protectionController.setProtectionData(protectionData);}}composeStreams();}function onManifestUpdated(e){if(!e.error){//Since streams are not composed yet , need to manually look up useCalculatedLiveEdgeTime to detect if stream
//is SegmentTimeline to avoid using time source
var manifest=e.manifest;adapter.updatePeriods(manifest);var manifestUTCTimingSources=adapter.getUTCTimingSources();var allUTCTimingSources=!adapter.getIsDynamic()?manifestUTCTimingSources:manifestUTCTimingSources.concat(mediaPlayerModel.getUTCTimingSources());var isHTTPS=urlUtils.isHTTPS(e.manifest.url);//If https is detected on manifest then lets apply that protocol to only the default time source(s). In the future we may find the need to apply this to more then just default so left code at this level instead of in MediaPlayer.
allUTCTimingSources.forEach(function(item){if(item.value.replace(/.*?:\/\//g,'')===mediaPlayerModel.getDefaultUtcTimingSource().value.replace(/.*?:\/\//g,'')){item.value=item.value.replace(isHTTPS?new RegExp(/^(http:)?\/\//i):new RegExp(/^(https:)?\/\//i),isHTTPS?'https://':'http://');logger.debug('Matching default timing source protocol to manifest protocol: ',item.value);}});baseURLController.initialize(manifest);timeSyncController.setConfig({dashMetrics:dashMetrics,baseURLController:baseURLController});timeSyncController.initialize(allUTCTimingSources,settings.get().streaming.useManifestDateHeaderTimeSource);}else{hasInitialisationError=true;reset();}}function hasVideoTrack(){return activeStream?activeStream.getHasVideoTrack():false;}function hasAudioTrack(){return activeStream?activeStream.getHasAudioTrack():false;}function flushPlaylistMetrics(reason,time){time=time||new Date();getActiveStreamProcessors().forEach(function(p){p.finalisePlayList(time,reason);});dashMetrics.addPlayList();}function createPlaylistMetrics(startReason){dashMetrics.createPlaylistMetrics(playbackController.getTime()*1000,startReason);}function onPlaybackError(e){if(!e.error)return;var msg='';switch(e.error.code){case 1:msg='MEDIA_ERR_ABORTED';break;case 2:msg='MEDIA_ERR_NETWORK';break;case 3:msg='MEDIA_ERR_DECODE';break;case 4:msg='MEDIA_ERR_SRC_NOT_SUPPORTED';break;case 5:msg='MEDIA_ERR_ENCRYPTED';break;default:msg='UNKNOWN';break;}hasMediaError=true;if(e.error.message){msg+=' ('+e.error.message+')';}if(e.error.msExtendedCode){msg+=' (0x'+(e.error.msExtendedCode>>>0).toString(16).toUpperCase()+')';}logger.fatal('Video Element Error: '+msg);if(e.error){logger.fatal(e.error);}errHandler.error(new _DashJSError2.default(e.error.code,msg));reset();}function getActiveStreamInfo(){return activeStream?activeStream.getStreamInfo():null;}function getIsStreamSwitchInProgress(){return isStreamSwitchingInProgress;}function getHasMediaOrIntialisationError(){return hasMediaError||hasInitialisationError;}function getStreamById(id){return streams.filter(function(item){return item.getId()===id;})[0];}function checkConfig(){if(!manifestLoader||!manifestLoader.hasOwnProperty('load')||!timelineConverter||!timelineConverter.hasOwnProperty('initialize')||!timelineConverter.hasOwnProperty('reset')||!timelineConverter.hasOwnProperty('getClientTimeOffset')||!manifestModel||!errHandler||!dashMetrics||!playbackController){throw new Error(_Constants2.default.MISSING_CONFIG_ERROR);}}function checkInitialize(){if(!manifestUpdater||!manifestUpdater.hasOwnProperty('setManifest')){throw new Error('initialize function has to be called previously');}}function load(url){checkConfig();manifestLoader.load(url);}function loadWithManifest(manifest){checkInitialize();manifestUpdater.setManifest(manifest);}function onManifestValidityChanged(e){if(!isNaN(e.newDuration)){setMediaDuration(e.newDuration);}}function setConfig(config){if(!config)return;if(config.capabilities){capabilities=config.capabilities;}if(config.manifestLoader){manifestLoader=config.manifestLoader;}if(config.manifestModel){manifestModel=config.manifestModel;}if(config.mediaPlayerModel){mediaPlayerModel=config.mediaPlayerModel;}if(config.protectionController){protectionController=config.protectionController;}if(config.adapter){adapter=config.adapter;}if(config.dashMetrics){dashMetrics=config.dashMetrics;}if(config.errHandler){errHandler=config.errHandler;}if(config.timelineConverter){timelineConverter=config.timelineConverter;}if(config.videoModel){videoModel=config.videoModel;}if(config.playbackController){playbackController=config.playbackController;}if(config.abrController){abrController=config.abrController;}if(config.mediaController){mediaController=config.mediaController;}if(config.textController){textController=config.textController;}if(config.settings){settings=config.settings;}if(config.baseURLController){baseURLController=config.baseURLController;}}function setProtectionData(protData){protectionData=protData;}function resetInitialSettings(){streams=[];protectionController=null;isStreamSwitchingInProgress=false;activeStream=null;hasMediaError=false;hasInitialisationError=false;initialPlayback=true;isPaused=false;autoPlay=true;playbackEndedTimerInterval=null;isPeriodSwitchInProgress=false;prebufferingCanStartInterval=null;preBufferingCheckInProgress=false;preloadingStreams=[];}function reset(){checkConfig();timeSyncController.reset();flushPlaylistMetrics(hasMediaError||hasInitialisationError?_PlayList.PlayListTrace.FAILURE_STOP_REASON:_PlayList.PlayListTrace.USER_REQUEST_STOP_REASON);for(var i=0,ln=streams?streams.length:0;i<ln;i++){var _stream2=streams[i];_stream2.reset(hasMediaError);}unRegisterEvents();baseURLController.reset();manifestUpdater.reset();eventController.reset();dashMetrics.clearAllCurrentMetrics();manifestModel.setValue(null);manifestLoader.reset();timelineConverter.reset();initCache.reset();if(mediaSource){mediaSourceController.detachMediaSource(videoModel);mediaSource=null;}videoModel=null;if(protectionController){protectionController.setMediaElement(null);protectionController=null;protectionData=null;if(manifestModel.getValue()){eventBus.trigger(_Events2.default.PROTECTION_DESTROYED,{data:manifestModel.getValue().url});}}stopPlaybackEndedTimerInterval();stopCheckIfPrebufferingCanStartInterval();eventBus.trigger(_Events2.default.STREAM_TEARDOWN_COMPLETE);resetInitialSettings();}function onMetricAdded(e){if(e.metric===_MetricsConstants2.default.DVR_INFO){//Match media type? How can DVR window be different for media types?
//Should we normalize and union the two?
var targetMediaType=hasAudioTrack()?_Constants2.default.AUDIO:_Constants2.default.VIDEO;if(e.mediaType===targetMediaType){mediaSourceController.setSeekable(mediaSource,e.value.range.start,e.value.range.end);}}}function getStreams(){return streams;}instance={initialize:initialize,getActiveStreamInfo:getActiveStreamInfo,hasVideoTrack:hasVideoTrack,hasAudioTrack:hasAudioTrack,switchToVideoElement:switchToVideoElement,getStreamById:getStreamById,getStreamForTime:getStreamForTime,getTimeRelativeToStreamId:getTimeRelativeToStreamId,load:load,loadWithManifest:loadWithManifest,getActiveStreamProcessors:getActiveStreamProcessors,setConfig:setConfig,setProtectionData:setProtectionData,getIsStreamSwitchInProgress:getIsStreamSwitchInProgress,getHasMediaOrIntialisationError:getHasMediaOrIntialisationError,hasStreamFinishedBuffering:hasStreamFinishedBuffering,getStreams:getStreams,getActiveStream:getActiveStream,reset:reset};setup();return instance;}StreamController.__dashjs_factory_name='StreamController';exports.default=_FactoryMaker2.default.getSingletonFactory(StreamController);


},{"../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../constants/MetricsConstants":"../node_modules/dashjs/build/es5/src/streaming/constants/MetricsConstants.js","../Stream":"../node_modules/dashjs/build/es5/src/streaming/Stream.js","../ManifestUpdater":"../node_modules/dashjs/build/es5/src/streaming/ManifestUpdater.js","../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../vo/metrics/PlayList":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/PlayList.js","../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","../utils/InitCache":"../node_modules/dashjs/build/es5/src/streaming/utils/InitCache.js","../utils/URLUtils":"../node_modules/dashjs/build/es5/src/streaming/utils/URLUtils.js","../MediaPlayerEvents":"../node_modules/dashjs/build/es5/src/streaming/MediaPlayerEvents.js","./TimeSyncController":"../node_modules/dashjs/build/es5/src/streaming/controllers/TimeSyncController.js","./MediaSourceController":"../node_modules/dashjs/build/es5/src/streaming/controllers/MediaSourceController.js","../vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js","../../core/errors/Errors":"../node_modules/dashjs/build/es5/src/core/errors/Errors.js","./EventController":"../node_modules/dashjs/build/es5/src/streaming/controllers/EventController.js"}],"../node_modules/dashjs/build/es5/src/streaming/controllers/GapController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Debug=require('../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _Events=require('../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var GAP_HANDLER_INTERVAL=100;var THRESHOLD_TO_STALLS=30;var GAP_THRESHOLD=0.1;function GapController(){var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var instance=void 0,lastPlaybackTime=void 0,settings=void 0,wallclockTicked=void 0,gapHandlerInterval=void 0,lastGapJumpPosition=void 0,playbackController=void 0,streamController=void 0,videoModel=void 0,timelineConverter=void 0,adapter=void 0,jumpTimeoutHandler=void 0,logger=void 0;function initialize(){registerEvents();}function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);reset();}function reset(){stopGapHandler();unregisterEvents();resetInitialSettings();}function resetInitialSettings(){gapHandlerInterval=null;lastGapJumpPosition=NaN;wallclockTicked=0;jumpTimeoutHandler=null;}function setConfig(config){if(!config){return;}if(config.settings){settings=config.settings;}if(config.playbackController){playbackController=config.playbackController;}if(config.streamController){streamController=config.streamController;}if(config.videoModel){videoModel=config.videoModel;}if(config.timelineConverter){timelineConverter=config.timelineConverter;}if(config.adapter){adapter=config.adapter;}}function registerEvents(){eventBus.on(_Events2.default.WALLCLOCK_TIME_UPDATED,_onWallclockTimeUpdated,this);eventBus.on(_Events2.default.PLAYBACK_SEEKING,_onPlaybackSeeking,this);eventBus.on(_Events2.default.BYTES_APPENDED_END_FRAGMENT,onBytesAppended,instance);}function unregisterEvents(){eventBus.off(_Events2.default.WALLCLOCK_TIME_UPDATED,_onWallclockTimeUpdated,this);eventBus.off(_Events2.default.PLAYBACK_SEEKING,_onPlaybackSeeking,this);eventBus.off(_Events2.default.BYTES_APPENDED_END_FRAGMENT,onBytesAppended,instance);}function onBytesAppended(){if(!gapHandlerInterval){startGapHandler();}}function _onPlaybackSeeking(){if(jumpTimeoutHandler){clearTimeout(jumpTimeoutHandler);jumpTimeoutHandler=null;}}function _onWallclockTimeUpdated()/*e*/{if(!_shouldCheckForGaps()){return;}wallclockTicked++;if(wallclockTicked>=THRESHOLD_TO_STALLS){var currentTime=playbackController.getTime();if(lastPlaybackTime===currentTime){jumpGap(currentTime,true);}else{lastPlaybackTime=currentTime;lastGapJumpPosition=NaN;}wallclockTicked=0;}}function _shouldCheckForGaps(){return settings.get().streaming.jumpGaps&&streamController.getActiveStreamProcessors().length>0&&(!playbackController.isSeeking()||streamController.hasStreamFinishedBuffering(streamController.getActiveStream()))&&!playbackController.isPaused()&&!streamController.getIsStreamSwitchInProgress()&&!streamController.getHasMediaOrIntialisationError();}function getNextRangeIndex(ranges,currentTime){try{if(!ranges||ranges.length<=1&&currentTime>0){return NaN;}var nextRangeIndex=NaN;var j=0;while(isNaN(nextRangeIndex)&&j<ranges.length){var rangeEnd=j>0?ranges.end(j-1):0;if(currentTime<ranges.start(j)&&rangeEnd-currentTime<GAP_THRESHOLD){nextRangeIndex=j;}j+=1;}return nextRangeIndex;}catch(e){return null;}}function startGapHandler(){try{if(!gapHandlerInterval){logger.debug('Starting the gap controller');gapHandlerInterval=setInterval(function(){if(!_shouldCheckForGaps()){return;}var currentTime=playbackController.getTime();jumpGap(currentTime);},GAP_HANDLER_INTERVAL);}}catch(e){}}function stopGapHandler(){logger.debug('Stopping the gap controller');if(gapHandlerInterval){clearInterval(gapHandlerInterval);gapHandlerInterval=null;}}function jumpGap(currentTime){var playbackStalled=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var smallGapLimit=settings.get().streaming.smallGapLimit;var jumpLargeGaps=settings.get().streaming.jumpLargeGaps;var ranges=videoModel.getBufferRange();var nextRangeIndex=void 0;var seekToPosition=NaN;var jumpToStreamEnd=false;// Get the range just after current time position
nextRangeIndex=getNextRangeIndex(ranges,currentTime);if(!isNaN(nextRangeIndex)){var start=ranges.start(nextRangeIndex);var gap=start-currentTime;if(gap>0&&(gap<=smallGapLimit||jumpLargeGaps)){seekToPosition=start;}}// Playback has stalled before period end. We seek to the end of the period
var timeToStreamEnd=playbackController.getTimeToStreamEnd();if(isNaN(seekToPosition)&&playbackStalled&&isFinite(timeToStreamEnd)&&!isNaN(timeToStreamEnd)&&timeToStreamEnd<smallGapLimit){seekToPosition=parseFloat(playbackController.getStreamEndTime().toFixed(5));jumpToStreamEnd=true;}if(seekToPosition>0&&lastGapJumpPosition!==seekToPosition&&seekToPosition>currentTime&&!jumpTimeoutHandler){var timeUntilGapEnd=seekToPosition-currentTime;if(jumpToStreamEnd){logger.warn('Jumping to end of stream because of gap from '+currentTime+' to '+seekToPosition+'. Gap duration: '+timeUntilGapEnd);eventBus.trigger(_Events2.default.GAP_CAUSED_SEEK_TO_PERIOD_END,{seekTime:seekToPosition,duration:timeUntilGapEnd});}else{var isDynamic=playbackController.getIsDynamic();var _start=nextRangeIndex>0?ranges.end(nextRangeIndex-1):currentTime;var timeToWait=!isDynamic?0:timeUntilGapEnd*1000;jumpTimeoutHandler=window.setTimeout(function(){playbackController.seek(seekToPosition,true,true);logger.warn('Jumping gap starting at '+_start+' and ending at '+seekToPosition+'. Jumping by: '+timeUntilGapEnd);eventBus.trigger(_Events2.default.GAP_CAUSED_INTERNAL_SEEK,{seekTime:seekToPosition,duration:timeUntilGapEnd});jumpTimeoutHandler=null;},timeToWait);}lastGapJumpPosition=seekToPosition;}}instance={reset:reset,setConfig:setConfig,initialize:initialize};setup();return instance;}GapController.__dashjs_factory_name='GapController';exports.default=_FactoryMaker2.default.getSingletonFactory(GapController);


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js"}],"../node_modules/dashjs/build/es5/src/streaming/controllers/MediaController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _Events=require('../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Debug=require('../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function MediaController(){var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var instance=void 0,logger=void 0,tracks=void 0,settings=void 0,initialSettings=void 0,domStorage=void 0;var validTrackSwitchModes=[_Constants2.default.TRACK_SWITCH_MODE_ALWAYS_REPLACE,_Constants2.default.TRACK_SWITCH_MODE_NEVER_REPLACE];var validTrackSelectionModes=[_Constants2.default.TRACK_SELECTION_MODE_HIGHEST_BITRATE,_Constants2.default.TRACK_SELECTION_MODE_WIDEST_RANGE];function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);reset();}/**
     * @param {string} type
     * @param {StreamInfo} streamInfo
     * @memberof MediaController#
     */function checkInitialMediaSettingsForType(type,streamInfo){var settings=getInitialSettings(type);var tracksForType=getTracksFor(type,streamInfo);var tracks=[];if(!settings){settings=domStorage.getSavedMediaSettings(type);setInitialSettings(type,settings);}if(!tracksForType||tracksForType.length===0)return;if(settings){tracksForType.forEach(function(track){if(matchSettings(settings,track)){tracks.push(track);}});}if(tracks.length===0){setTrack(selectInitialTrack(type,tracksForType),true);}else{if(tracks.length>1){setTrack(selectInitialTrack(type,tracks));}else{setTrack(tracks[0]);}}}/**
     * @param {MediaInfo} track
     * @memberof MediaController#
     */function addTrack(track){if(!track)return;var mediaType=track.type;if(!isMultiTrackSupportedByType(mediaType))return;var streamId=track.streamInfo.id;if(!tracks[streamId]){tracks[streamId]=createTrackInfo();}var mediaTracks=tracks[streamId][mediaType].list;for(var i=0,len=mediaTracks.length;i<len;++i){//track is already set.
if(isTracksEqual(mediaTracks[i],track)){return;}}mediaTracks.push(track);var initSettings=getInitialSettings(mediaType);if(initSettings&&matchSettings(initSettings,track)&&!getCurrentTrackFor(mediaType,track.streamInfo)){setTrack(track);}}/**
     * @param {string} type
     * @param {StreamInfo} streamInfo
     * @returns {Array}
     * @memberof MediaController#
     */function getTracksFor(type,streamInfo){if(!type||!streamInfo)return[];var id=streamInfo.id;if(!tracks[id]||!tracks[id][type])return[];return tracks[id][type].list;}/**
     * @param {string} type
     * @param {StreamInfo} streamInfo
     * @returns {Object|null}
     * @memberof MediaController#
     */function getCurrentTrackFor(type,streamInfo){if(!type||!streamInfo||streamInfo&&!tracks[streamInfo.id])return null;return tracks[streamInfo.id][type].current;}/**
     * @param {MediaInfo} track
     * @returns {boolean}
     * @memberof MediaController#
     */function isCurrentTrack(track){if(!track){return false;}var type=track.type;var id=track.streamInfo.id;return tracks[id]&&tracks[id][type]&&isTracksEqual(tracks[id][type].current,track);}/**
     * @param {MediaInfo} track
     * @param {boolean} noSettingsSave specify if settings must be not be saved
     * @memberof MediaController#
     */function setTrack(track,noSettingsSave){if(!track||!track.streamInfo)return;var type=track.type;var streamInfo=track.streamInfo;var id=streamInfo.id;var current=getCurrentTrackFor(type,streamInfo);if(!tracks[id]||!tracks[id][type]||isTracksEqual(track,current))return;tracks[id][type].current=track;if(tracks[id][type].current&&!(noSettingsSave&&type===_Constants2.default.FRAGMENTED_TEXT)){eventBus.trigger(_Events2.default.CURRENT_TRACK_CHANGED,{oldMediaInfo:current,newMediaInfo:track,switchMode:getSwitchMode(type)});}if(!noSettingsSave){var _settings=extractSettings(track);if(!_settings||!tracks[id][type].storeLastSettings)return;if(_settings.roles){_settings.role=_settings.roles[0];delete _settings.roles;}if(_settings.accessibility){_settings.accessibility=_settings.accessibility[0];}if(_settings.audioChannelConfiguration){_settings.audioChannelConfiguration=_settings.audioChannelConfiguration[0];}domStorage.setSavedMediaSettings(type,_settings);}}/**
     * @param {string} type
     * @param {Object} value
     * @memberof MediaController#
     */function setInitialSettings(type,value){if(!type||!value)return;initialSettings[type]=value;}/**
     * @param {string} type
     * @returns {Object|null}
     * @memberof MediaController#
     */function getInitialSettings(type){if(!type)return null;return initialSettings[type];}/**
     * @memberof MediaController#
     */function saveTextSettingsDisabled(){domStorage.setSavedMediaSettings(_Constants2.default.FRAGMENTED_TEXT,null);}/**
     * @param {string} type
     * @param {string} mode
     * @memberof MediaController#
     * @deprecated Please use updateSettings({streaming: { trackSwitchMode: mode } }) instead
     */function setSwitchMode(type,mode){logger.warn('deprecated: Please use updateSettings({streaming: { trackSwitchMode: mode } }) instead');var isModeSupported=validTrackSwitchModes.indexOf(mode)!==-1;if(!isModeSupported){logger.warn('Track switch mode is not supported: '+mode);return;}var switchMode={};switchMode[type]=mode;settings.update({streaming:{trackSwitchMode:switchMode}});}/**
     * @param {string} type
     * @returns {string} mode
     * @memberof MediaController#
     */function getSwitchMode(type){return settings.get().streaming.trackSwitchMode[type];}/**
     * @param {string} mode
     * @memberof MediaController#
     * @deprecated Please use updateSettings({streaming: { selectionModeForInitialTrack: mode } }) instead
     */function setSelectionModeForInitialTrack(mode){logger.warn('deprecated: Please use updateSettings({streaming: { selectionModeForInitialTrack: mode } }) instead');var isModeSupported=validTrackSelectionModes.indexOf(mode)!==-1;if(!isModeSupported){logger.warn('Track selection mode is not supported: '+mode);return;}settings.update({streaming:{selectionModeForInitialTrack:mode}});}/**
     * @returns {string} mode
     * @memberof MediaController#
     */function getSelectionModeForInitialTrack(){return settings.get().streaming.selectionModeForInitialTrack;}/**
     * @param {string} type
     * @returns {boolean}
     * @memberof MediaController#
     */function isMultiTrackSupportedByType(type){return type===_Constants2.default.AUDIO||type===_Constants2.default.VIDEO||type===_Constants2.default.TEXT||type===_Constants2.default.FRAGMENTED_TEXT||type===_Constants2.default.IMAGE;}/**
     * @param {MediaInfo} t1 - first track to compare
     * @param {MediaInfo} t2 - second track to compare
     * @returns {boolean}
     * @memberof MediaController#
     */function isTracksEqual(t1,t2){if(!t1&&!t2){return true;}if(!t1||!t2){return false;}var sameId=t1.id===t2.id;var sameViewpoint=t1.viewpoint===t2.viewpoint;var sameLang=t1.lang===t2.lang;var sameRoles=t1.roles.toString()===t2.roles.toString();var sameAccessibility=t1.accessibility.toString()===t2.accessibility.toString();var sameAudioChannelConfiguration=t1.audioChannelConfiguration.toString()===t2.audioChannelConfiguration.toString();return sameId&&sameViewpoint&&sameLang&&sameRoles&&sameAccessibility&&sameAudioChannelConfiguration;}function setConfig(config){if(!config)return;if(config.domStorage){domStorage=config.domStorage;}if(config.settings){settings=config.settings;}}/**
     * @memberof MediaController#
     */function reset(){tracks={};resetInitialSettings();}function extractSettings(mediaInfo){var settings={lang:mediaInfo.lang,viewpoint:mediaInfo.viewpoint,roles:mediaInfo.roles,accessibility:mediaInfo.accessibility,audioChannelConfiguration:mediaInfo.audioChannelConfiguration};var notEmpty=settings.lang||settings.viewpoint||settings.role&&settings.role.length>0||settings.accessibility&&settings.accessibility.length>0||settings.audioChannelConfiguration&&settings.audioChannelConfiguration.length>0;return notEmpty?settings:null;}function matchSettings(settings,track){var matchLang=!settings.lang||track.lang.match(settings.lang);var matchViewPoint=!settings.viewpoint||settings.viewpoint===track.viewpoint;var matchRole=!settings.role||!!track.roles.filter(function(item){return item===settings.role;})[0];var matchAccessibility=!settings.accessibility||!!track.accessibility.filter(function(item){return item===settings.accessibility;})[0];var matchAudioChannelConfiguration=!settings.audioChannelConfiguration||!!track.audioChannelConfiguration.filter(function(item){return item===settings.audioChannelConfiguration;})[0];return matchLang&&matchViewPoint&&matchRole&&matchAccessibility&&matchAudioChannelConfiguration;}function resetInitialSettings(){initialSettings={audio:null,video:null,fragmentedText:null};}function selectInitialTrack(type,tracks){if(type===_Constants2.default.FRAGMENTED_TEXT)return tracks[0];var mode=getSelectionModeForInitialTrack();var tmpArr=[];var getTracksWithHighestBitrate=function getTracksWithHighestBitrate(trackArr){var max=0;var result=[];var tmp=void 0;trackArr.forEach(function(track){tmp=Math.max.apply(Math,track.bitrateList.map(function(obj){return obj.bandwidth;}));if(tmp>max){max=tmp;result=[track];}else if(tmp===max){result.push(track);}});return result;};var getTracksWithWidestRange=function getTracksWithWidestRange(trackArr){var max=0;var result=[];var tmp=void 0;trackArr.forEach(function(track){tmp=track.representationCount;if(tmp>max){max=tmp;result=[track];}else if(tmp===max){result.push(track);}});return result;};switch(mode){case _Constants2.default.TRACK_SELECTION_MODE_HIGHEST_BITRATE:tmpArr=getTracksWithHighestBitrate(tracks);if(tmpArr.length>1){tmpArr=getTracksWithWidestRange(tmpArr);}break;case _Constants2.default.TRACK_SELECTION_MODE_WIDEST_RANGE:tmpArr=getTracksWithWidestRange(tracks);if(tmpArr.length>1){tmpArr=getTracksWithHighestBitrate(tracks);}break;default:logger.warn('Track selection mode is not supported: '+mode);break;}return tmpArr[0];}function createTrackInfo(){return{audio:{list:[],storeLastSettings:true,current:null},video:{list:[],storeLastSettings:true,current:null},text:{list:[],storeLastSettings:true,current:null},fragmentedText:{list:[],storeLastSettings:true,current:null},image:{list:[],storeLastSettings:true,current:null}};}instance={checkInitialMediaSettingsForType:checkInitialMediaSettingsForType,addTrack:addTrack,getTracksFor:getTracksFor,getCurrentTrackFor:getCurrentTrackFor,isCurrentTrack:isCurrentTrack,setTrack:setTrack,setInitialSettings:setInitialSettings,getInitialSettings:getInitialSettings,setSwitchMode:setSwitchMode,getSwitchMode:getSwitchMode,setSelectionModeForInitialTrack:setSelectionModeForInitialTrack,getSelectionModeForInitialTrack:getSelectionModeForInitialTrack,isMultiTrackSupportedByType:isMultiTrackSupportedByType,isTracksEqual:isTracksEqual,matchSettings:matchSettings,saveTextSettingsDisabled:saveTextSettingsDisabled,setConfig:setConfig,reset:reset};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */MediaController.__dashjs_factory_name='MediaController';var factory=_FactoryMaker2.default.getSingletonFactory(MediaController);_FactoryMaker2.default.updateSingletonFactory(MediaController.__dashjs_factory_name,factory);exports.default=factory;


},{"../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js"}],"../node_modules/dashjs/build/es5/src/streaming/models/BaseURLTreeModel.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _ObjectUtils=require('../utils/ObjectUtils');var _ObjectUtils2=_interopRequireDefault(_ObjectUtils);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var DEFAULT_INDEX=NaN;var Node=function Node(_baseUrls,_selectedIdx){_classCallCheck(this,Node);this.data={baseUrls:_baseUrls||null,selectedIdx:_selectedIdx||DEFAULT_INDEX};this.children=[];};function BaseURLTreeModel(){var instance=void 0,root=void 0,adapter=void 0;var context=this.context;var objectUtils=(0,_ObjectUtils2.default)(context).getInstance();function setup(){reset();}function setConfig(config){if(config.adapter){adapter=config.adapter;}}function checkConfig(){if(!adapter||!adapter.hasOwnProperty('getBaseURLsFromElement')||!adapter.hasOwnProperty('getRepresentationSortFunction')){throw new Error('setConfig function has to be called previously');}}function updateChildData(node,index,element){var baseUrls=adapter.getBaseURLsFromElement(element);if(!node[index]){node[index]=new Node(baseUrls);}else{if(!objectUtils.areEqual(baseUrls,node[index].data.baseUrls)){node[index].data.baseUrls=baseUrls;node[index].data.selectedIdx=DEFAULT_INDEX;}}}function getBaseURLCollectionsFromManifest(manifest){checkConfig();var baseUrls=adapter.getBaseURLsFromElement(manifest);if(!objectUtils.areEqual(baseUrls,root.data.baseUrls)){root.data.baseUrls=baseUrls;root.data.selectedIdx=DEFAULT_INDEX;}if(manifest&&manifest.Period_asArray){manifest.Period_asArray.forEach(function(p,pi){updateChildData(root.children,pi,p);if(p.AdaptationSet_asArray){p.AdaptationSet_asArray.forEach(function(a,ai){updateChildData(root.children[pi].children,ai,a);if(a.Representation_asArray){a.Representation_asArray.sort(adapter.getRepresentationSortFunction()).forEach(function(r,ri){updateChildData(root.children[pi].children[ai].children,ri,r);});}});}});}}function walk(callback,node){var target=node||root;callback(target.data);if(target.children){target.children.forEach(function(child){return walk(callback,child);});}}function invalidateSelectedIndexes(serviceLocation){walk(function(data){if(!isNaN(data.selectedIdx)){if(serviceLocation===data.baseUrls[data.selectedIdx].serviceLocation){data.selectedIdx=DEFAULT_INDEX;}}});}function update(manifest){getBaseURLCollectionsFromManifest(manifest);}function reset(){root=new Node();}function getForPath(path){var target=root;var nodes=[target.data];if(path){path.forEach(function(p){target=target.children[p];if(target){nodes.push(target.data);}});}return nodes.filter(function(n){return n.baseUrls.length;});}instance={reset:reset,update:update,getForPath:getForPath,invalidateSelectedIndexes:invalidateSelectedIndexes,setConfig:setConfig};setup();return instance;}BaseURLTreeModel.__dashjs_factory_name='BaseURLTreeModel';exports.default=_FactoryMaker2.default.getClassFactory(BaseURLTreeModel);


},{"../utils/ObjectUtils":"../node_modules/dashjs/build/es5/src/streaming/utils/ObjectUtils.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/streaming/controllers/BlacklistController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function BlackListController(config){config=config||{};var instance=void 0;var blacklist=[];var eventBus=(0,_EventBus2.default)(this.context).getInstance();var updateEventName=config.updateEventName;var addBlacklistEventName=config.addBlacklistEventName;function contains(query){if(!blacklist.length||!query||!query.length){return false;}return blacklist.indexOf(query)!==-1;}function add(entry){if(blacklist.indexOf(entry)!==-1){return;}blacklist.push(entry);eventBus.trigger(updateEventName,{entry:entry});}function onAddBlackList(e){add(e.entry);}function setup(){if(addBlacklistEventName){eventBus.on(addBlacklistEventName,onAddBlackList,instance);}}function reset(){blacklist=[];}instance={add:add,contains:contains,reset:reset};setup();return instance;}BlackListController.__dashjs_factory_name='BlackListController';exports.default=_FactoryMaker2.default.getClassFactory(BlackListController);


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js"}],"../node_modules/dashjs/build/es5/src/streaming/utils/baseUrlResolution/DVBSelector.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function DVBSelector(config){config=config||{};var instance=void 0;var blacklistController=config.blacklistController;function getNonBlacklistedBaseUrls(urls){var removedPriorities=[];var samePrioritiesFilter=function samePrioritiesFilter(el){if(removedPriorities.length){if(el.dvb_priority&&removedPriorities.indexOf(el.dvb_priority)!==-1){return false;}}return true;};var serviceLocationFilter=function serviceLocationFilter(baseUrl){if(blacklistController.contains(baseUrl.serviceLocation)){// whenever a BaseURL is removed from the available list of
// BaseURLs, any other BaseURL with the same @priority
// value as the BaseURL being removed shall also be removed
if(baseUrl.dvb_priority){removedPriorities.push(baseUrl.dvb_priority);}// all URLs in the list which have a @serviceLocation
// attribute matching an entry in the blacklist shall be
// removed from the available list of BaseURLs
return false;}return true;};return urls.filter(serviceLocationFilter).filter(samePrioritiesFilter);}function selectByWeight(availableUrls){var prioritySorter=function prioritySorter(a,b){var diff=a.dvb_priority-b.dvb_priority;return isNaN(diff)?0:diff;};var topPriorityFilter=function topPriorityFilter(baseUrl,idx,arr){return!idx||arr[0].dvb_priority&&baseUrl.dvb_priority&&arr[0].dvb_priority===baseUrl.dvb_priority;};var totalWeight=0;var cumulWeights=[];var idx=0;var rn=void 0,urls=void 0;// It shall begin by taking the set of resolved BaseURLs present or inherited at the current
// position in the MPD, resolved and filtered as described in 10.8.2.1, that have the lowest
// @priority attribute value.
urls=availableUrls.sort(prioritySorter).filter(topPriorityFilter);if(urls.length){if(urls.length>1){// If there is more than one BaseURL with this lowest @priority attribute value then the Player
// shall select one of them at random such that the probability of each BaseURL being chosen
// is proportional to the value of its @weight attribute. The method described in RFC 2782
// [26] or picking from a number of weighted entries is suitable for this, but there may be other
// algorithms which achieve the same effect.
// add all the weights together, storing the accumulated weight per entry
urls.forEach(function(baseUrl){totalWeight+=baseUrl.dvb_weight;cumulWeights.push(totalWeight);});// pick a random number between zero and totalWeight
rn=Math.floor(Math.random()*(totalWeight-1));// select the index for the range rn falls within
cumulWeights.every(function(limit,index){idx=index;if(rn<limit){return false;}return true;});}return urls[idx];}}function select(baseUrls){return baseUrls&&selectByWeight(getNonBlacklistedBaseUrls(baseUrls));}instance={select:select};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */DVBSelector.__dashjs_factory_name='DVBSelector';exports.default=_FactoryMaker2.default.getClassFactory(DVBSelector);


},{"../../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/streaming/utils/baseUrlResolution/BasicSelector.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function BasicSelector(config){config=config||{};var instance=void 0;var blacklistController=config.blacklistController;function select(baseUrls){var index=0;var selectedBaseUrl=void 0;if(baseUrls&&baseUrls.some(function(baseUrl,idx){index=idx;return!blacklistController.contains(baseUrl.serviceLocation);})){selectedBaseUrl=baseUrls[index];}return selectedBaseUrl;}instance={select:select};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */BasicSelector.__dashjs_factory_name='BasicSelector';exports.default=_FactoryMaker2.default.getClassFactory(BasicSelector);


},{"../../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/streaming/utils/BaseURLSelector.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Errors=require('../../core/errors/Errors');var _Errors2=_interopRequireDefault(_Errors);var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _BlacklistController=require('../controllers/BlacklistController');var _BlacklistController2=_interopRequireDefault(_BlacklistController);var _DVBSelector=require('./baseUrlResolution/DVBSelector');var _DVBSelector2=_interopRequireDefault(_DVBSelector);var _BasicSelector=require('./baseUrlResolution/BasicSelector');var _BasicSelector2=_interopRequireDefault(_BasicSelector);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _DashJSError=require('../vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);var _SupervisorTools=require('../utils/SupervisorTools');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function BaseURLSelector(){var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var instance=void 0,serviceLocationBlacklistController=void 0,basicSelector=void 0,dvbSelector=void 0,selector=void 0;function setup(){serviceLocationBlacklistController=(0,_BlacklistController2.default)(context).create({updateEventName:_Events2.default.SERVICE_LOCATION_BLACKLIST_CHANGED,addBlacklistEventName:_Events2.default.SERVICE_LOCATION_BLACKLIST_ADD});basicSelector=(0,_BasicSelector2.default)(context).create({blacklistController:serviceLocationBlacklistController});dvbSelector=(0,_DVBSelector2.default)(context).create({blacklistController:serviceLocationBlacklistController});selector=basicSelector;}function setConfig(config){if(config.selector){selector=config.selector;}}function chooseSelector(isDVB){(0,_SupervisorTools.checkParameterType)(isDVB,'boolean');selector=isDVB?dvbSelector:basicSelector;}function select(data){if(!data){return;}var baseUrls=data.baseUrls;var selectedIdx=data.selectedIdx;// Once a random selection has been carried out amongst a group of BaseURLs with the same
// @priority attribute value, then that choice should be re-used if the selection needs to be made again
// unless the blacklist has been modified or the available BaseURLs have changed.
if(!isNaN(selectedIdx)){return baseUrls[selectedIdx];}var selectedBaseUrl=selector.select(baseUrls);if(!selectedBaseUrl){eventBus.trigger(_Events2.default.URL_RESOLUTION_FAILED,{error:new _DashJSError2.default(_Errors2.default.URL_RESOLUTION_FAILED_GENERIC_ERROR_CODE,_Errors2.default.URL_RESOLUTION_FAILED_GENERIC_ERROR_MESSAGE)});if(selector===basicSelector){reset();}return;}data.selectedIdx=baseUrls.indexOf(selectedBaseUrl);return selectedBaseUrl;}function reset(){serviceLocationBlacklistController.reset();}instance={chooseSelector:chooseSelector,select:select,reset:reset,setConfig:setConfig};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */BaseURLSelector.__dashjs_factory_name='BaseURLSelector';exports.default=_FactoryMaker2.default.getClassFactory(BaseURLSelector);


},{"../../core/errors/Errors":"../node_modules/dashjs/build/es5/src/core/errors/Errors.js","../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../controllers/BlacklistController":"../node_modules/dashjs/build/es5/src/streaming/controllers/BlacklistController.js","./baseUrlResolution/DVBSelector":"../node_modules/dashjs/build/es5/src/streaming/utils/baseUrlResolution/DVBSelector.js","./baseUrlResolution/BasicSelector":"../node_modules/dashjs/build/es5/src/streaming/utils/baseUrlResolution/BasicSelector.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js","../utils/SupervisorTools":"../node_modules/dashjs/build/es5/src/streaming/utils/SupervisorTools.js"}],"../node_modules/dashjs/build/es5/src/streaming/controllers/BaseURLController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _BaseURLTreeModel=require('../models/BaseURLTreeModel');var _BaseURLTreeModel2=_interopRequireDefault(_BaseURLTreeModel);var _BaseURLSelector=require('../utils/BaseURLSelector');var _BaseURLSelector2=_interopRequireDefault(_BaseURLSelector);var _URLUtils=require('../utils/URLUtils');var _URLUtils2=_interopRequireDefault(_URLUtils);var _BaseURL=require('../../dash/vo/BaseURL');var _BaseURL2=_interopRequireDefault(_BaseURL);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../../core/events/Events');var _Events2=_interopRequireDefault(_Events);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function BaseURLController(){var instance=void 0,adapter=void 0;var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var urlUtils=(0,_URLUtils2.default)(context).getInstance();var baseURLTreeModel=void 0,baseURLSelector=void 0;function onBlackListChanged(e){baseURLTreeModel.invalidateSelectedIndexes(e.entry);}function setup(){baseURLTreeModel=(0,_BaseURLTreeModel2.default)(context).create();baseURLSelector=(0,_BaseURLSelector2.default)(context).create();eventBus.on(_Events2.default.SERVICE_LOCATION_BLACKLIST_CHANGED,onBlackListChanged,instance);}function setConfig(config){if(config.baseURLTreeModel){baseURLTreeModel=config.baseURLTreeModel;}if(config.baseURLSelector){baseURLSelector=config.baseURLSelector;}if(config.adapter){adapter=config.adapter;}}function update(manifest){baseURLTreeModel.update(manifest);baseURLSelector.chooseSelector(adapter.getIsDVB(manifest));}function resolve(path){var baseUrls=baseURLTreeModel.getForPath(path);var baseUrl=baseUrls.reduce(function(p,c){var b=baseURLSelector.select(c);if(b){if(!urlUtils.isRelative(b.url)){p.url=b.url;p.serviceLocation=b.serviceLocation;}else{p.url=urlUtils.resolve(b.url,p.url);}p.availabilityTimeOffset=b.availabilityTimeOffset;p.availabilityTimeComplete=b.availabilityTimeComplete;}else{return new _BaseURL2.default();}return p;},new _BaseURL2.default());if(!urlUtils.isRelative(baseUrl.url)){return baseUrl;}}function reset(){baseURLTreeModel.reset();baseURLSelector.reset();}function initialize(data){// report config to baseURLTreeModel and baseURLSelector
baseURLTreeModel.setConfig({adapter:adapter});update(data);}instance={reset:reset,initialize:initialize,resolve:resolve,setConfig:setConfig};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */BaseURLController.__dashjs_factory_name='BaseURLController';exports.default=_FactoryMaker2.default.getClassFactory(BaseURLController);


},{"../models/BaseURLTreeModel":"../node_modules/dashjs/build/es5/src/streaming/models/BaseURLTreeModel.js","../utils/BaseURLSelector":"../node_modules/dashjs/build/es5/src/streaming/utils/BaseURLSelector.js","../utils/URLUtils":"../node_modules/dashjs/build/es5/src/streaming/utils/URLUtils.js","../../dash/vo/BaseURL":"../node_modules/dashjs/build/es5/src/dash/vo/BaseURL.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js"}],"../node_modules/dashjs/build/es5/src/streaming/vo/TextRequest.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _FragmentRequest2=require('./FragmentRequest');var _FragmentRequest3=_interopRequireDefault(_FragmentRequest2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var TextRequest=function(_FragmentRequest){_inherits(TextRequest,_FragmentRequest);function TextRequest(url,type){_classCallCheck(this,TextRequest);var _this=_possibleConstructorReturn(this,(TextRequest.__proto__||Object.getPrototypeOf(TextRequest)).call(this));_this.url=url||null;_this.type=type||null;_this.mediaType=_Constants2.default.STREAM;_this.responseType='';//'text' value returns a bad encoding response in Firefox
return _this;}return TextRequest;}(_FragmentRequest3.default);exports.default=TextRequest;


},{"../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","./FragmentRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/FragmentRequest.js"}],"../node_modules/dashjs/build/es5/src/streaming/XlinkLoader.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _DashJSError=require('./vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);var _URLLoader=require('./net/URLLoader');var _URLLoader2=_interopRequireDefault(_URLLoader);var _HTTPRequest=require('./vo/metrics/HTTPRequest');var _TextRequest=require('./vo/TextRequest');var _TextRequest2=_interopRequireDefault(_TextRequest);var _EventBus=require('../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _FactoryMaker=require('../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Errors=require('../core/errors/Errors');var _Errors2=_interopRequireDefault(_Errors);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function XlinkLoader(config){config=config||{};var RESOLVE_TO_ZERO='urn:mpeg:dash:resolve-to-zero:2013';var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var urlLoader=(0,_URLLoader2.default)(context).create({errHandler:config.errHandler,dashMetrics:config.dashMetrics,mediaPlayerModel:config.mediaPlayerModel,requestModifier:config.requestModifier,useFetch:config.settings?config.settings.get().streaming.lowLatencyEnabled:null,errors:_Errors2.default});var instance=void 0;function load(url,element,resolveObject){var report=function report(content,resolveToZero){element.resolved=true;element.resolvedContent=content?content:null;eventBus.trigger(_Events2.default.XLINK_ELEMENT_LOADED,{element:element,resolveObject:resolveObject,error:content||resolveToZero?null:new _DashJSError2.default(_Errors2.default.XLINK_LOADER_LOADING_FAILURE_ERROR_CODE,_Errors2.default.XLINK_LOADER_LOADING_FAILURE_ERROR_MESSAGE+url)});};if(url===RESOLVE_TO_ZERO){report(null,true);}else{var request=new _TextRequest2.default(url,_HTTPRequest.HTTPRequest.XLINK_EXPANSION_TYPE);urlLoader.load({request:request,success:function success(data){report(data);},error:function error(){report(null);}});}}function reset(){if(urlLoader){urlLoader.abort();urlLoader=null;}}instance={load:load,reset:reset};return instance;}XlinkLoader.__dashjs_factory_name='XlinkLoader';exports.default=_FactoryMaker2.default.getClassFactory(XlinkLoader);


},{"./vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js","./net/URLLoader":"../node_modules/dashjs/build/es5/src/streaming/net/URLLoader.js","./vo/metrics/HTTPRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/HTTPRequest.js","./vo/TextRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/TextRequest.js","../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../core/errors/Errors":"../node_modules/dashjs/build/es5/src/core/errors/Errors.js"}],"../node_modules/dashjs/build/es5/externals/xml2json.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});/*
 Copyright 2011-2013 Abdulla Abdurakhmanov
 Original sources are available at https://code.google.com/p/x2js/

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 *//*
  Further modified for dashjs to:
  - keep track of children nodes in order in attribute __children.
  - add type conversion matchers
  - re-add ignoreRoot
  - allow zero-length attributePrefix
  - don't add white-space text nodes
  - remove explicit RequireJS support
*/function X2JS(config){'use strict';var VERSION="1.2.0";config=config||{};initConfigDefaults();initRequiredPolyfills();function initConfigDefaults(){if(config.escapeMode===undefined){config.escapeMode=true;}if(config.attributePrefix===undefined){config.attributePrefix="_";}config.arrayAccessForm=config.arrayAccessForm||"none";config.emptyNodeForm=config.emptyNodeForm||"text";if(config.enableToStringFunc===undefined){config.enableToStringFunc=true;}config.arrayAccessFormPaths=config.arrayAccessFormPaths||[];if(config.skipEmptyTextNodesForObj===undefined){config.skipEmptyTextNodesForObj=true;}if(config.stripWhitespaces===undefined){config.stripWhitespaces=true;}config.datetimeAccessFormPaths=config.datetimeAccessFormPaths||[];if(config.useDoubleQuotes===undefined){config.useDoubleQuotes=false;}config.xmlElementsFilter=config.xmlElementsFilter||[];config.jsonPropertiesFilter=config.jsonPropertiesFilter||[];if(config.keepCData===undefined){config.keepCData=false;}if(config.ignoreRoot===undefined){config.ignoreRoot=false;}}var DOMNodeTypes={ELEMENT_NODE:1,TEXT_NODE:3,CDATA_SECTION_NODE:4,COMMENT_NODE:8,DOCUMENT_NODE:9};function initRequiredPolyfills(){}function getNodeLocalName(node){var nodeLocalName=node.localName;if(nodeLocalName==null)// Yeah, this is IE!!
nodeLocalName=node.baseName;if(nodeLocalName==null||nodeLocalName=="")// =="" is IE too
nodeLocalName=node.nodeName;return nodeLocalName;}function getNodePrefix(node){return node.prefix;}function escapeXmlChars(str){if(typeof str=="string")return str.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;').replace(/"/g,'&quot;').replace(/'/g,'&apos;');else return str;}function unescapeXmlChars(str){return str.replace(/&lt;/g,'<').replace(/&gt;/g,'>').replace(/&quot;/g,'"').replace(/&apos;/g,"'").replace(/&amp;/g,'&');}function checkInStdFiltersArrayForm(stdFiltersArrayForm,obj,name,path){var idx=0;for(;idx<stdFiltersArrayForm.length;idx++){var filterPath=stdFiltersArrayForm[idx];if(typeof filterPath==="string"){if(filterPath==path)break;}else if(filterPath instanceof RegExp){if(filterPath.test(path))break;}else if(typeof filterPath==="function"){if(filterPath(obj,name,path))break;}}return idx!=stdFiltersArrayForm.length;}function toArrayAccessForm(obj,childName,path){switch(config.arrayAccessForm){case"property":if(!(obj[childName]instanceof Array))obj[childName+"_asArray"]=[obj[childName]];else obj[childName+"_asArray"]=obj[childName];break;/*case "none":
                break;*/}if(!(obj[childName]instanceof Array)&&config.arrayAccessFormPaths.length>0){if(checkInStdFiltersArrayForm(config.arrayAccessFormPaths,obj,childName,path)){obj[childName]=[obj[childName]];}}}function fromXmlDateTime(prop){// Implementation based up on http://stackoverflow.com/questions/8178598/xml-datetime-to-javascript-date-object
// Improved to support full spec and optional parts
var bits=prop.split(/[-T:+Z]/g);var d=new Date(bits[0],bits[1]-1,bits[2]);var secondBits=bits[5].split("\.");d.setHours(bits[3],bits[4],secondBits[0]);if(secondBits.length>1)d.setMilliseconds(secondBits[1]);// Get supplied time zone offset in minutes
if(bits[6]&&bits[7]){var offsetMinutes=bits[6]*60+Number(bits[7]);var sign=/\d\d-\d\d:\d\d$/.test(prop)?'-':'+';// Apply the sign
offsetMinutes=0+(sign=='-'?-1*offsetMinutes:offsetMinutes);// Apply offset and local timezone
d.setMinutes(d.getMinutes()-offsetMinutes-d.getTimezoneOffset());}else if(prop.indexOf("Z",prop.length-1)!==-1){d=new Date(Date.UTC(d.getFullYear(),d.getMonth(),d.getDate(),d.getHours(),d.getMinutes(),d.getSeconds(),d.getMilliseconds()));}// d is now a local time equivalent to the supplied time
return d;}function checkFromXmlDateTimePaths(value,childName,fullPath){if(config.datetimeAccessFormPaths.length>0){var path=fullPath.split("\.#")[0];if(checkInStdFiltersArrayForm(config.datetimeAccessFormPaths,value,childName,path)){return fromXmlDateTime(value);}else return value;}else return value;}function checkXmlElementsFilter(obj,childType,childName,childPath){if(childType==DOMNodeTypes.ELEMENT_NODE&&config.xmlElementsFilter.length>0){return checkInStdFiltersArrayForm(config.xmlElementsFilter,obj,childName,childPath);}else return true;}function parseDOMChildren(node,path){if(node.nodeType==DOMNodeTypes.DOCUMENT_NODE){var result=new Object();var nodeChildren=node.childNodes;// Alternative for firstElementChild which is not supported in some environments
for(var cidx=0;cidx<nodeChildren.length;cidx++){var child=nodeChildren[cidx];if(child.nodeType==DOMNodeTypes.ELEMENT_NODE){if(config.ignoreRoot){result=parseDOMChildren(child);}else{result={};var childName=getNodeLocalName(child);result[childName]=parseDOMChildren(child);}}}return result;}else if(node.nodeType==DOMNodeTypes.ELEMENT_NODE){var result=new Object();result.__cnt=0;var children=[];var nodeChildren=node.childNodes;// Children nodes
for(var cidx=0;cidx<nodeChildren.length;cidx++){var child=nodeChildren[cidx];var childName=getNodeLocalName(child);if(child.nodeType!=DOMNodeTypes.COMMENT_NODE){var childPath=path+"."+childName;if(checkXmlElementsFilter(result,child.nodeType,childName,childPath)){result.__cnt++;if(result[childName]==null){var c=parseDOMChildren(child,childPath);if(childName!="#text"||/[^\s]/.test(c)){var o={};o[childName]=c;children.push(o);}result[childName]=c;toArrayAccessForm(result,childName,childPath);}else{if(result[childName]!=null){if(!(result[childName]instanceof Array)){result[childName]=[result[childName]];toArrayAccessForm(result,childName,childPath);}}var c=parseDOMChildren(child,childPath);if(childName!="#text"||/[^\s]/.test(c)){// Don't add white-space text nodes
var o={};o[childName]=c;children.push(o);}result[childName][result[childName].length]=c;}}}}result.__children=children;// Attributes
var nodeLocalName=getNodeLocalName(node);for(var aidx=0;aidx<node.attributes.length;aidx++){var attr=node.attributes[aidx];result.__cnt++;var value2=attr.value;for(var m=0,ml=config.matchers.length;m<ml;m++){var matchobj=config.matchers[m];if(matchobj.test(attr,nodeLocalName))value2=matchobj.converter(attr.value);}result[config.attributePrefix+attr.name]=value2;}// Node namespace prefix
var nodePrefix=getNodePrefix(node);if(nodePrefix!=null&&nodePrefix!=""){result.__cnt++;result.__prefix=nodePrefix;}if(result["#text"]!=null){result.__text=result["#text"];if(result.__text instanceof Array){result.__text=result.__text.join("\n");}//if(config.escapeMode)
//	result.__text = unescapeXmlChars(result.__text);
if(config.stripWhitespaces)result.__text=result.__text.trim();delete result["#text"];if(config.arrayAccessForm=="property")delete result["#text_asArray"];result.__text=checkFromXmlDateTimePaths(result.__text,childName,path+"."+childName);}if(result["#cdata-section"]!=null){result.__cdata=result["#cdata-section"];delete result["#cdata-section"];if(config.arrayAccessForm=="property")delete result["#cdata-section_asArray"];}if(result.__cnt==0&&config.emptyNodeForm=="text"){result='';}else if(result.__cnt==1&&result.__text!=null){result=result.__text;}else if(result.__cnt==1&&result.__cdata!=null&&!config.keepCData){result=result.__cdata;}else if(result.__cnt>1&&result.__text!=null&&config.skipEmptyTextNodesForObj){if(config.stripWhitespaces&&result.__text==""||result.__text.trim()==""){delete result.__text;}}delete result.__cnt;if(config.enableToStringFunc&&(result.__text!=null||result.__cdata!=null)){result.toString=function(){return(this.__text!=null?this.__text:'')+(this.__cdata!=null?this.__cdata:'');};}return result;}else if(node.nodeType==DOMNodeTypes.TEXT_NODE||node.nodeType==DOMNodeTypes.CDATA_SECTION_NODE){return node.nodeValue;}}function startTag(jsonObj,element,attrList,closed){var resultStr="<"+(jsonObj!=null&&jsonObj.__prefix!=null?jsonObj.__prefix+":":"")+element;if(attrList!=null){for(var aidx=0;aidx<attrList.length;aidx++){var attrName=attrList[aidx];var attrVal=jsonObj[attrName];if(config.escapeMode)attrVal=escapeXmlChars(attrVal);resultStr+=" "+attrName.substr(config.attributePrefix.length)+"=";if(config.useDoubleQuotes)resultStr+='"'+attrVal+'"';else resultStr+="'"+attrVal+"'";}}if(!closed)resultStr+=">";else resultStr+="/>";return resultStr;}function endTag(jsonObj,elementName){return"</"+(jsonObj.__prefix!=null?jsonObj.__prefix+":":"")+elementName+">";}function endsWith(str,suffix){return str.indexOf(suffix,str.length-suffix.length)!==-1;}function jsonXmlSpecialElem(jsonObj,jsonObjField){if(config.arrayAccessForm=="property"&&endsWith(jsonObjField.toString(),"_asArray")||jsonObjField.toString().indexOf(config.attributePrefix)==0||jsonObjField.toString().indexOf("__")==0||jsonObj[jsonObjField]instanceof Function)return true;else return false;}function jsonXmlElemCount(jsonObj){var elementsCnt=0;if(jsonObj instanceof Object){for(var it in jsonObj){if(jsonXmlSpecialElem(jsonObj,it))continue;elementsCnt++;}}return elementsCnt;}function checkJsonObjPropertiesFilter(jsonObj,propertyName,jsonObjPath){return config.jsonPropertiesFilter.length==0||jsonObjPath==""||checkInStdFiltersArrayForm(config.jsonPropertiesFilter,jsonObj,propertyName,jsonObjPath);}function parseJSONAttributes(jsonObj){var attrList=[];if(jsonObj instanceof Object){for(var ait in jsonObj){if(ait.toString().indexOf("__")==-1&&ait.toString().indexOf(config.attributePrefix)==0){attrList.push(ait);}}}return attrList;}function parseJSONTextAttrs(jsonTxtObj){var result="";if(jsonTxtObj.__cdata!=null){result+="<![CDATA["+jsonTxtObj.__cdata+"]]>";}if(jsonTxtObj.__text!=null){if(config.escapeMode)result+=escapeXmlChars(jsonTxtObj.__text);else result+=jsonTxtObj.__text;}return result;}function parseJSONTextObject(jsonTxtObj){var result="";if(jsonTxtObj instanceof Object){result+=parseJSONTextAttrs(jsonTxtObj);}else if(jsonTxtObj!=null){if(config.escapeMode)result+=escapeXmlChars(jsonTxtObj);else result+=jsonTxtObj;}return result;}function getJsonPropertyPath(jsonObjPath,jsonPropName){if(jsonObjPath===""){return jsonPropName;}else return jsonObjPath+"."+jsonPropName;}function parseJSONArray(jsonArrRoot,jsonArrObj,attrList,jsonObjPath){var result="";if(jsonArrRoot.length==0){result+=startTag(jsonArrRoot,jsonArrObj,attrList,true);}else{for(var arIdx=0;arIdx<jsonArrRoot.length;arIdx++){result+=startTag(jsonArrRoot[arIdx],jsonArrObj,parseJSONAttributes(jsonArrRoot[arIdx]),false);result+=parseJSONObject(jsonArrRoot[arIdx],getJsonPropertyPath(jsonObjPath,jsonArrObj));result+=endTag(jsonArrRoot[arIdx],jsonArrObj);}}return result;}function parseJSONObject(jsonObj,jsonObjPath){var result="";var elementsCnt=jsonXmlElemCount(jsonObj);if(elementsCnt>0){for(var it in jsonObj){if(jsonXmlSpecialElem(jsonObj,it)||jsonObjPath!=""&&!checkJsonObjPropertiesFilter(jsonObj,it,getJsonPropertyPath(jsonObjPath,it)))continue;var subObj=jsonObj[it];var attrList=parseJSONAttributes(subObj);if(subObj==null||subObj==undefined){result+=startTag(subObj,it,attrList,true);}else if(subObj instanceof Object){if(subObj instanceof Array){result+=parseJSONArray(subObj,it,attrList,jsonObjPath);}else if(subObj instanceof Date){result+=startTag(subObj,it,attrList,false);result+=subObj.toISOString();result+=endTag(subObj,it);}else{var subObjElementsCnt=jsonXmlElemCount(subObj);if(subObjElementsCnt>0||subObj.__text!=null||subObj.__cdata!=null){result+=startTag(subObj,it,attrList,false);result+=parseJSONObject(subObj,getJsonPropertyPath(jsonObjPath,it));result+=endTag(subObj,it);}else{result+=startTag(subObj,it,attrList,true);}}}else{result+=startTag(subObj,it,attrList,false);result+=parseJSONTextObject(subObj);result+=endTag(subObj,it);}}}result+=parseJSONTextObject(jsonObj);return result;}this.parseXmlString=function(xmlDocStr){var isIEParser=window.ActiveXObject||"ActiveXObject"in window;if(xmlDocStr===undefined){return null;}var xmlDoc;if(window.DOMParser){var parser=new window.DOMParser();var parsererrorNS=null;try{xmlDoc=parser.parseFromString(xmlDocStr,"text/xml");if(xmlDoc.getElementsByTagNameNS("*","parsererror").length>0){xmlDoc=null;}}catch(err){xmlDoc=null;}}else{// IE :(
if(xmlDocStr.indexOf("<?")==0){xmlDocStr=xmlDocStr.substr(xmlDocStr.indexOf("?>")+2);}xmlDoc=new ActiveXObject("Microsoft.XMLDOM");xmlDoc.async="false";xmlDoc.loadXML(xmlDocStr);}return xmlDoc;};this.asArray=function(prop){if(prop===undefined||prop==null)return[];else if(prop instanceof Array)return prop;else return[prop];};this.toXmlDateTime=function(dt){if(dt instanceof Date)return dt.toISOString();else if(typeof dt==='number')return new Date(dt).toISOString();else return null;};this.asDateTime=function(prop){if(typeof prop=="string"){return fromXmlDateTime(prop);}else return prop;};this.xml2json=function(xmlDoc){return parseDOMChildren(xmlDoc);};this.xml_str2json=function(xmlDocStr){var xmlDoc=this.parseXmlString(xmlDocStr);if(xmlDoc!=null)return this.xml2json(xmlDoc);else return null;};this.json2xml_str=function(jsonObj){return parseJSONObject(jsonObj,"");};this.json2xml=function(jsonObj){var xmlDocStr=this.json2xml_str(jsonObj);return this.parseXmlString(xmlDocStr);};this.getVersion=function(){return VERSION;};}exports.default=X2JS;


},{}],"../node_modules/dashjs/build/es5/src/streaming/controllers/XlinkController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _XlinkLoader=require('../XlinkLoader');var _XlinkLoader2=_interopRequireDefault(_XlinkLoader);var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _xml2json=require('../../../externals/xml2json');var _xml2json2=_interopRequireDefault(_xml2json);var _URLUtils=require('../utils/URLUtils');var _URLUtils2=_interopRequireDefault(_URLUtils);var _DashConstants=require('../../dash/constants/DashConstants');var _DashConstants2=_interopRequireDefault(_DashConstants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var RESOLVE_TYPE_ONLOAD='onLoad';/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var RESOLVE_TYPE_ONACTUATE='onActuate';var RESOLVE_TO_ZERO='urn:mpeg:dash:resolve-to-zero:2013';function XlinkController(config){config=config||{};var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var urlUtils=(0,_URLUtils2.default)(context).getInstance();var instance=void 0,matchers=void 0,iron=void 0,manifest=void 0,converter=void 0,xlinkLoader=void 0;function setup(){eventBus.on(_Events2.default.XLINK_ELEMENT_LOADED,onXlinkElementLoaded,instance);xlinkLoader=(0,_XlinkLoader2.default)(context).create({errHandler:config.errHandler,dashMetrics:config.dashMetrics,mediaPlayerModel:config.mediaPlayerModel,requestModifier:config.requestModifier,settings:config.settings});}function setMatchers(value){if(value){matchers=value;}}function setIron(value){if(value){iron=value;}}/**
     * <p>Triggers the resolution of the xlink.onLoad attributes in the manifest file </p>
     * @param {Object} mpd - the manifest
     */function resolveManifestOnLoad(mpd){var elements=void 0;// First resolve all periods, so unnecessary requests inside onLoad Periods with Default content are avoided
converter=new _xml2json2.default({escapeMode:false,attributePrefix:'',arrayAccessForm:'property',emptyNodeForm:'object',stripWhitespaces:false,enableToStringFunc:false,ignoreRoot:true,matchers:matchers});manifest=mpd;elements=getElementsToResolve(manifest.Period_asArray,manifest,_DashConstants2.default.PERIOD,RESOLVE_TYPE_ONLOAD);resolve(elements,_DashConstants2.default.PERIOD,RESOLVE_TYPE_ONLOAD);}function reset(){eventBus.off(_Events2.default.XLINK_ELEMENT_LOADED,onXlinkElementLoaded,instance);if(xlinkLoader){xlinkLoader.reset();xlinkLoader=null;}}function resolve(elements,type,resolveType){var resolveObject={};var element=void 0,url=void 0;resolveObject.elements=elements;resolveObject.type=type;resolveObject.resolveType=resolveType;// If nothing to resolve, directly call allElementsLoaded
if(resolveObject.elements.length===0){onXlinkAllElementsLoaded(resolveObject);}for(var i=0;i<resolveObject.elements.length;i++){element=resolveObject.elements[i];if(urlUtils.isHTTPURL(element.url)){url=element.url;}else{url=element.originalContent.BaseURL+element.url;}xlinkLoader.load(url,element,resolveObject);}}function onXlinkElementLoaded(event){var element=void 0,resolveObject=void 0;var openingTag='<response>';var closingTag='</response>';var mergedContent='';element=event.element;resolveObject=event.resolveObject;// if the element resolved into content parse the content
if(element.resolvedContent){var index=0;// we add a parent elements so the converter is able to parse multiple elements of the same type which are not wrapped inside a container
if(element.resolvedContent.indexOf('<?xml')===0){index=element.resolvedContent.indexOf('?>')+2;//find the closing position of the xml declaration, if it exists.
}mergedContent=element.resolvedContent.substr(0,index)+openingTag+element.resolvedContent.substr(index)+closingTag;element.resolvedContent=converter.xml_str2json(mergedContent);}if(isResolvingFinished(resolveObject)){onXlinkAllElementsLoaded(resolveObject);}}// We got to wait till all elements of the current queue are resolved before merging back
function onXlinkAllElementsLoaded(resolveObject){var elements=[];var i=void 0,obj=void 0;mergeElementsBack(resolveObject);if(resolveObject.resolveType===RESOLVE_TYPE_ONACTUATE){eventBus.trigger(_Events2.default.XLINK_READY,{manifest:manifest});}if(resolveObject.resolveType===RESOLVE_TYPE_ONLOAD){switch(resolveObject.type){// Start resolving the other elements. We can do Adaptation Set and EventStream in parallel
case _DashConstants2.default.PERIOD:for(i=0;i<manifest[_DashConstants2.default.PERIOD+'_asArray'].length;i++){obj=manifest[_DashConstants2.default.PERIOD+'_asArray'][i];if(obj.hasOwnProperty(_DashConstants2.default.ADAPTATION_SET+'_asArray')){elements=elements.concat(getElementsToResolve(obj[_DashConstants2.default.ADAPTATION_SET+'_asArray'],obj,_DashConstants2.default.ADAPTATION_SET,RESOLVE_TYPE_ONLOAD));}if(obj.hasOwnProperty(_DashConstants2.default.EVENT_STREAM+'_asArray')){elements=elements.concat(getElementsToResolve(obj[_DashConstants2.default.EVENT_STREAM+'_asArray'],obj,_DashConstants2.default.EVENT_STREAM,RESOLVE_TYPE_ONLOAD));}}resolve(elements,_DashConstants2.default.ADAPTATION_SET,RESOLVE_TYPE_ONLOAD);break;case _DashConstants2.default.ADAPTATION_SET:// TODO: Resolve SegmentList here
eventBus.trigger(_Events2.default.XLINK_READY,{manifest:manifest});break;}}}// Returns the elements with the specific resolve Type
function getElementsToResolve(elements,parentElement,type,resolveType){var toResolve=[];var element=void 0,i=void 0,xlinkObject=void 0;// first remove all the resolve-to-zero elements
for(i=elements.length-1;i>=0;i--){element=elements[i];if(element.hasOwnProperty('xlink:href')&&element['xlink:href']===RESOLVE_TO_ZERO){elements.splice(i,1);}}// now get the elements with the right resolve type
for(i=0;i<elements.length;i++){element=elements[i];if(element.hasOwnProperty('xlink:href')&&element.hasOwnProperty('xlink:actuate')&&element['xlink:actuate']===resolveType){xlinkObject=createXlinkObject(element['xlink:href'],parentElement,type,i,resolveType,element);toResolve.push(xlinkObject);}}return toResolve;}function mergeElementsBack(resolveObject){var resolvedElements=[];var element=void 0,type=void 0,obj=void 0,i=void 0,j=void 0,k=void 0;// Start merging back from the end because of index shifting. Note that the elements with the same parent have to be ordered by index ascending
for(i=resolveObject.elements.length-1;i>=0;i--){element=resolveObject.elements[i];type=element.type+'_asArray';// Element couldn't be resolved or is TODO Inappropriate target: Remove all Xlink attributes
if(!element.resolvedContent||isInappropriateTarget()){delete element.originalContent['xlink:actuate'];delete element.originalContent['xlink:href'];resolvedElements.push(element.originalContent);}// Element was successfully resolved
else if(element.resolvedContent){for(j=0;j<element.resolvedContent[type].length;j++){//TODO Contains another Xlink attribute with xlink:actuate set to onload. Remove all xLink attributes
obj=element.resolvedContent[type][j];resolvedElements.push(obj);}}// Replace the old elements in the parent with the resolved ones
element.parentElement[type].splice(element.index,1);for(k=0;k<resolvedElements.length;k++){element.parentElement[type].splice(element.index+k,0,resolvedElements[k]);}resolvedElements=[];}if(resolveObject.elements.length>0){iron.run(manifest);}}function createXlinkObject(url,parentElement,type,index,resolveType,originalContent){return{url:url,parentElement:parentElement,type:type,index:index,resolveType:resolveType,originalContent:originalContent,resolvedContent:null,resolved:false};}// Check if all pending requests are finished
function isResolvingFinished(elementsToResolve){var i=void 0,obj=void 0;for(i=0;i<elementsToResolve.elements.length;i++){obj=elementsToResolve.elements[i];if(obj.resolved===false){return false;}}return true;}// TODO : Do some syntax check here if the target is valid or not
function isInappropriateTarget(){return false;}instance={resolveManifestOnLoad:resolveManifestOnLoad,setMatchers:setMatchers,setIron:setIron,reset:reset};setup();return instance;}XlinkController.__dashjs_factory_name='XlinkController';exports.default=_FactoryMaker2.default.getClassFactory(XlinkController);


},{"../XlinkLoader":"../node_modules/dashjs/build/es5/src/streaming/XlinkLoader.js","../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../../externals/xml2json":"../node_modules/dashjs/build/es5/externals/xml2json.js","../utils/URLUtils":"../node_modules/dashjs/build/es5/src/streaming/utils/URLUtils.js","../../dash/constants/DashConstants":"../node_modules/dashjs/build/es5/src/dash/constants/DashConstants.js"}],"../node_modules/dashjs/build/es5/src/dash/parser/objectiron.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function ObjectIron(mappers){function mergeValues(parentItem,childItem){for(var name in parentItem){if(!childItem.hasOwnProperty(name)){childItem[name]=parentItem[name];}}}function mapProperties(properties,parent,child){for(var i=0,len=properties.length;i<len;++i){var property=properties[i];if(parent[property.name]){if(child[property.name]){// check to see if we should merge
if(property.merge){var parentValue=parent[property.name];var childValue=child[property.name];// complex objects; merge properties
if((typeof parentValue==='undefined'?'undefined':_typeof(parentValue))==='object'&&(typeof childValue==='undefined'?'undefined':_typeof(childValue))==='object'){mergeValues(parentValue,childValue);}// simple objects; merge them together
else{child[property.name]=parentValue+childValue;}}}else{// just add the property
child[property.name]=parent[property.name];}}}}function mapItem(item,node){for(var i=0,len=item.children.length;i<len;++i){var childItem=item.children[i];var array=node[childItem.name+'_asArray'];if(array){for(var v=0,len2=array.length;v<len2;++v){var childNode=array[v];mapProperties(item.properties,node,childNode);mapItem(childItem,childNode);}}}}function run(source){if(source===null||(typeof source==='undefined'?'undefined':_typeof(source))!=='object'){return source;}if('period'in mappers){var periodMapper=mappers.period;var periods=source.Period_asArray;for(var i=0,len=periods.length;i<len;++i){var period=periods[i];mapItem(periodMapper,period);if('adaptationset'in mappers){var adaptationSets=period.AdaptationSet_asArray;if(adaptationSets){var adaptationSetMapper=mappers.adaptationset;for(var _i=0,_len=adaptationSets.length;_i<_len;++_i){mapItem(adaptationSetMapper,adaptationSets[_i]);}}}}}return source;}return{run:run};}ObjectIron.__dashjs_factory_name='ObjectIron';var factory=_FactoryMaker2.default.getClassFactory(ObjectIron);exports.default=factory;


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/dash/parser/matchers/BaseMatcher.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @classdesc a base type for matching and converting types in manifest to
 * something more useful
 * @ignore
 */var BaseMatcher=function(){function BaseMatcher(test,converter){_classCallCheck(this,BaseMatcher);this._test=test;this._converter=converter;}_createClass(BaseMatcher,[{key:"test",get:function get(){return this._test;}},{key:"converter",get:function get(){return this._converter;}}]);return BaseMatcher;}();exports.default=BaseMatcher;


},{}],"../node_modules/dashjs/build/es5/src/dash/parser/matchers/StringMatcher.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _BaseMatcher2=require('./BaseMatcher');var _BaseMatcher3=_interopRequireDefault(_BaseMatcher2);var _DashConstants=require('../../constants/DashConstants');var _DashConstants2=_interopRequireDefault(_DashConstants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @classdesc Matches and converts xs:string to string, but only for specific attributes on specific nodes
 */var StringMatcher=function(_BaseMatcher){_inherits(StringMatcher,_BaseMatcher);function StringMatcher(){_classCallCheck(this,StringMatcher);return _possibleConstructorReturn(this,(StringMatcher.__proto__||Object.getPrototypeOf(StringMatcher)).call(this,function(attr,nodeName){var _stringAttrsInElement;var stringAttrsInElements=(_stringAttrsInElement={},_defineProperty(_stringAttrsInElement,_DashConstants2.default.MPD,[_DashConstants2.default.ID,_DashConstants2.default.PROFILES]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.PERIOD,[_DashConstants2.default.ID]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.BASE_URL,[_DashConstants2.default.SERVICE_LOCATION,_DashConstants2.default.BYTE_RANGE]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.SEGMENT_BASE,[_DashConstants2.default.INDEX_RANGE]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.INITIALIZATION,[_DashConstants2.default.RANGE]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.REPRESENTATION_INDEX,[_DashConstants2.default.RANGE]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.SEGMENT_LIST,[_DashConstants2.default.INDEX_RANGE]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.BITSTREAM_SWITCHING,[_DashConstants2.default.RANGE]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.SEGMENT_URL,[_DashConstants2.default.MEDIA_RANGE,_DashConstants2.default.INDEX_RANGE]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.SEGMENT_TEMPLATE,[_DashConstants2.default.INDEX_RANGE,_DashConstants2.default.MEDIA,_DashConstants2.default.INDEX,_DashConstants2.default.INITIALIZATION_MINUS,_DashConstants2.default.BITSTREAM_SWITCHING_MINUS]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.ASSET_IDENTIFIER,[_DashConstants2.default.VALUE,_DashConstants2.default.ID]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.EVENT_STREAM,[_DashConstants2.default.VALUE]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.ADAPTATION_SET,[_DashConstants2.default.PROFILES,_DashConstants2.default.MIME_TYPE,_DashConstants2.default.SEGMENT_PROFILES,_DashConstants2.default.CODECS,_DashConstants2.default.CONTENT_TYPE]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.FRAME_PACKING,[_DashConstants2.default.VALUE,_DashConstants2.default.ID]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.AUDIO_CHANNEL_CONFIGURATION,[_DashConstants2.default.VALUE,_DashConstants2.default.ID]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.CONTENT_PROTECTION,[_DashConstants2.default.VALUE,_DashConstants2.default.ID]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.ESSENTIAL_PROPERTY,[_DashConstants2.default.VALUE,_DashConstants2.default.ID]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.SUPPLEMENTAL_PROPERTY,[_DashConstants2.default.VALUE,_DashConstants2.default.ID]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.INBAND_EVENT_STREAM,[_DashConstants2.default.VALUE,_DashConstants2.default.ID]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.ACCESSIBILITY,[_DashConstants2.default.VALUE,_DashConstants2.default.ID]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.ROLE,[_DashConstants2.default.VALUE,_DashConstants2.default.ID]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.RATING,[_DashConstants2.default.VALUE,_DashConstants2.default.ID]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.VIEWPOINT,[_DashConstants2.default.VALUE,_DashConstants2.default.ID]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.CONTENT_COMPONENT,[_DashConstants2.default.CONTENT_TYPE]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.REPRESENTATION,[_DashConstants2.default.ID,_DashConstants2.default.DEPENDENCY_ID,_DashConstants2.default.MEDIA_STREAM_STRUCTURE_ID]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.SUBSET,[_DashConstants2.default.ID]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.METRICS,[_DashConstants2.default.METRICS_MINUS]),_defineProperty(_stringAttrsInElement,_DashConstants2.default.REPORTING,[_DashConstants2.default.VALUE,_DashConstants2.default.ID]),_stringAttrsInElement);if(stringAttrsInElements.hasOwnProperty(nodeName)){var attrNames=stringAttrsInElements[nodeName];if(attrNames!==undefined){return attrNames.indexOf(attr.name)>=0;}else{return false;}}return false;},function(str){return String(str);}));}return StringMatcher;}(_BaseMatcher3.default);exports.default=StringMatcher;


},{"./BaseMatcher":"../node_modules/dashjs/build/es5/src/dash/parser/matchers/BaseMatcher.js","../../constants/DashConstants":"../node_modules/dashjs/build/es5/src/dash/constants/DashConstants.js"}],"../node_modules/dashjs/build/es5/src/dash/parser/matchers/DurationMatcher.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _BaseMatcher2=require('./BaseMatcher');var _BaseMatcher3=_interopRequireDefault(_BaseMatcher2);var _Constants=require('../../../streaming/constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _DashConstants=require('../../constants/DashConstants');var _DashConstants2=_interopRequireDefault(_DashConstants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @classdesc matches and converts xs:duration to seconds
 */var durationRegex=/^([-])?P(([\d.]*)Y)?(([\d.]*)M)?(([\d.]*)D)?T?(([\d.]*)H)?(([\d.]*)M)?(([\d.]*)S)?/;var SECONDS_IN_YEAR=365*24*60*60;var SECONDS_IN_MONTH=30*24*60*60;var SECONDS_IN_DAY=24*60*60;var SECONDS_IN_HOUR=60*60;var SECONDS_IN_MIN=60;var DurationMatcher=function(_BaseMatcher){_inherits(DurationMatcher,_BaseMatcher);function DurationMatcher(){_classCallCheck(this,DurationMatcher);return _possibleConstructorReturn(this,(DurationMatcher.__proto__||Object.getPrototypeOf(DurationMatcher)).call(this,function(attr){var attributeList=[_DashConstants2.default.MIN_BUFFER_TIME,_DashConstants2.default.MEDIA_PRESENTATION_DURATION,_DashConstants2.default.MINIMUM_UPDATE_PERIOD,_DashConstants2.default.TIMESHIFT_BUFFER_DEPTH,_DashConstants2.default.MAX_SEGMENT_DURATION,_DashConstants2.default.MAX_SUBSEGMENT_DURATION,_DashConstants2.default.SUGGESTED_PRESENTATION_DELAY,_DashConstants2.default.START,_Constants2.default.START_TIME,_DashConstants2.default.DURATION];var len=attributeList.length;for(var i=0;i<len;i++){if(attr.nodeName===attributeList[i]){return durationRegex.test(attr.value);}}return false;},function(str){//str = "P10Y10M10DT10H10M10.1S";
var match=durationRegex.exec(str);var result=parseFloat(match[3]||0)*SECONDS_IN_YEAR+parseFloat(match[5]||0)*SECONDS_IN_MONTH+parseFloat(match[7]||0)*SECONDS_IN_DAY+parseFloat(match[9]||0)*SECONDS_IN_HOUR+parseFloat(match[11]||0)*SECONDS_IN_MIN+parseFloat(match[13]||0);if(match[1]!==undefined){result=-result;}return result;}));}return DurationMatcher;}(_BaseMatcher3.default);exports.default=DurationMatcher;


},{"./BaseMatcher":"../node_modules/dashjs/build/es5/src/dash/parser/matchers/BaseMatcher.js","../../../streaming/constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../../constants/DashConstants":"../node_modules/dashjs/build/es5/src/dash/constants/DashConstants.js"}],"../node_modules/dashjs/build/es5/src/dash/parser/matchers/DateTimeMatcher.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _BaseMatcher2=require('./BaseMatcher');var _BaseMatcher3=_interopRequireDefault(_BaseMatcher2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @classdesc matches and converts xs:datetime to Date
 */var SECONDS_IN_MIN=60;var MINUTES_IN_HOUR=60;var MILLISECONDS_IN_SECONDS=1000;var datetimeRegex=/^([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2})(?::([0-9]*)(\.[0-9]*)?)?(?:([+-])([0-9]{2})(?::?)([0-9]{2}))?/;var DateTimeMatcher=function(_BaseMatcher){_inherits(DateTimeMatcher,_BaseMatcher);function DateTimeMatcher(){_classCallCheck(this,DateTimeMatcher);return _possibleConstructorReturn(this,(DateTimeMatcher.__proto__||Object.getPrototypeOf(DateTimeMatcher)).call(this,function(attr){return datetimeRegex.test(attr.value);},function(str){var match=datetimeRegex.exec(str);var utcDate=void 0;// If the string does not contain a timezone offset different browsers can interpret it either
// as UTC or as a local time so we have to parse the string manually to normalize the given date value for
// all browsers
utcDate=Date.UTC(parseInt(match[1],10),parseInt(match[2],10)-1,// months start from zero
parseInt(match[3],10),parseInt(match[4],10),parseInt(match[5],10),match[6]&&parseInt(match[6],10)||0,match[7]&&parseFloat(match[7])*MILLISECONDS_IN_SECONDS||0);// If the date has timezone offset take it into account as well
if(match[9]&&match[10]){var timezoneOffset=parseInt(match[9],10)*MINUTES_IN_HOUR+parseInt(match[10],10);utcDate+=(match[8]==='+'?-1:+1)*timezoneOffset*SECONDS_IN_MIN*MILLISECONDS_IN_SECONDS;}return new Date(utcDate);}));}return DateTimeMatcher;}(_BaseMatcher3.default);exports.default=DateTimeMatcher;


},{"./BaseMatcher":"../node_modules/dashjs/build/es5/src/dash/parser/matchers/BaseMatcher.js"}],"../node_modules/dashjs/build/es5/src/dash/parser/matchers/NumericMatcher.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _BaseMatcher2=require('./BaseMatcher');var _BaseMatcher3=_interopRequireDefault(_BaseMatcher2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @classdesc Matches and converts xs:numeric to float
 */var numericRegex=/^[-+]?[0-9]+[.]?[0-9]*([eE][-+]?[0-9]+)?$/;var NumericMatcher=function(_BaseMatcher){_inherits(NumericMatcher,_BaseMatcher);function NumericMatcher(){_classCallCheck(this,NumericMatcher);return _possibleConstructorReturn(this,(NumericMatcher.__proto__||Object.getPrototypeOf(NumericMatcher)).call(this,function(attr){return numericRegex.test(attr.value);},function(str){return parseFloat(str);}));}return NumericMatcher;}(_BaseMatcher3.default);exports.default=NumericMatcher;


},{"./BaseMatcher":"../node_modules/dashjs/build/es5/src/dash/parser/matchers/BaseMatcher.js"}],"../node_modules/dashjs/build/es5/src/dash/parser/maps/CommonProperty.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @classdesc a property belonging to a MapNode
 * @ignore
 */var CommonProperty=function(){function CommonProperty(name){_classCallCheck(this,CommonProperty);var getDefaultMergeForName=function getDefaultMergeForName(n){return n&&n.length&&n.charAt(0)===n.charAt(0).toUpperCase();};this._name=name;this._merge=getDefaultMergeForName(name);}_createClass(CommonProperty,[{key:"name",get:function get(){return this._name;}},{key:"merge",get:function get(){return this._merge;}}]);return CommonProperty;}();exports.default=CommonProperty;


},{}],"../node_modules/dashjs/build/es5/src/dash/parser/maps/MapNode.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @classdesc a node at some level in a ValueMap
 */var _CommonProperty=require('./CommonProperty');var _CommonProperty2=_interopRequireDefault(_CommonProperty);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var MapNode=function(){function MapNode(name,properties,children){var _this=this;_classCallCheck(this,MapNode);this._name=name||'';this._properties=[];this._children=children||[];if(Array.isArray(properties)){properties.forEach(function(p){_this._properties.push(new _CommonProperty2.default(p));});}}_createClass(MapNode,[{key:'name',get:function get(){return this._name;}},{key:'children',get:function get(){return this._children;}},{key:'properties',get:function get(){return this._properties;}}]);return MapNode;}();exports.default=MapNode;


},{"./CommonProperty":"../node_modules/dashjs/build/es5/src/dash/parser/maps/CommonProperty.js"}],"../node_modules/dashjs/build/es5/src/dash/parser/maps/RepresentationBaseValuesMap.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _MapNode2=require('./MapNode');var _MapNode3=_interopRequireDefault(_MapNode2);var _DashConstants=require('../../constants/DashConstants');var _DashConstants2=_interopRequireDefault(_DashConstants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @classdesc a RepresentationBaseValuesMap type for input to objectiron
 */var RepresentationBaseValuesMap=function(_MapNode){_inherits(RepresentationBaseValuesMap,_MapNode);function RepresentationBaseValuesMap(){_classCallCheck(this,RepresentationBaseValuesMap);var commonProperties=[_DashConstants2.default.PROFILES,_DashConstants2.default.WIDTH,_DashConstants2.default.HEIGHT,_DashConstants2.default.SAR,_DashConstants2.default.FRAMERATE,_DashConstants2.default.AUDIO_SAMPLING_RATE,_DashConstants2.default.MIME_TYPE,_DashConstants2.default.SEGMENT_PROFILES,_DashConstants2.default.CODECS,_DashConstants2.default.MAXIMUM_SAP_PERIOD,_DashConstants2.default.START_WITH_SAP,_DashConstants2.default.MAX_PLAYOUT_RATE,_DashConstants2.default.CODING_DEPENDENCY,_DashConstants2.default.SCAN_TYPE,_DashConstants2.default.FRAME_PACKING,_DashConstants2.default.AUDIO_CHANNEL_CONFIGURATION,_DashConstants2.default.CONTENT_PROTECTION,_DashConstants2.default.ESSENTIAL_PROPERTY,_DashConstants2.default.SUPPLEMENTAL_PROPERTY,_DashConstants2.default.INBAND_EVENT_STREAM];return _possibleConstructorReturn(this,(RepresentationBaseValuesMap.__proto__||Object.getPrototypeOf(RepresentationBaseValuesMap)).call(this,_DashConstants2.default.ADAPTATION_SET,commonProperties,[new _MapNode3.default(_DashConstants2.default.REPRESENTATION,commonProperties,[new _MapNode3.default(_DashConstants2.default.SUB_REPRESENTATION,commonProperties)])]));}return RepresentationBaseValuesMap;}(_MapNode3.default);exports.default=RepresentationBaseValuesMap;


},{"./MapNode":"../node_modules/dashjs/build/es5/src/dash/parser/maps/MapNode.js","../../constants/DashConstants":"../node_modules/dashjs/build/es5/src/dash/constants/DashConstants.js"}],"../node_modules/dashjs/build/es5/src/dash/parser/maps/SegmentValuesMap.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _MapNode2=require('./MapNode');var _MapNode3=_interopRequireDefault(_MapNode2);var _DashConstants=require('../../constants/DashConstants');var _DashConstants2=_interopRequireDefault(_DashConstants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @classdesc a SegmentValuesMap type for input to objectiron
 */var SegmentValuesMap=function(_MapNode){_inherits(SegmentValuesMap,_MapNode);function SegmentValuesMap(){_classCallCheck(this,SegmentValuesMap);var commonProperties=[_DashConstants2.default.SEGMENT_BASE,_DashConstants2.default.SEGMENT_TEMPLATE,_DashConstants2.default.SEGMENT_LIST];return _possibleConstructorReturn(this,(SegmentValuesMap.__proto__||Object.getPrototypeOf(SegmentValuesMap)).call(this,_DashConstants2.default.PERIOD,commonProperties,[new _MapNode3.default(_DashConstants2.default.ADAPTATION_SET,commonProperties,[new _MapNode3.default(_DashConstants2.default.REPRESENTATION,commonProperties)])]));}return SegmentValuesMap;}(_MapNode3.default);exports.default=SegmentValuesMap;


},{"./MapNode":"../node_modules/dashjs/build/es5/src/dash/parser/maps/MapNode.js","../../constants/DashConstants":"../node_modules/dashjs/build/es5/src/dash/constants/DashConstants.js"}],"../node_modules/dashjs/build/es5/src/dash/parser/DashParser.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _objectiron=require('./objectiron');var _objectiron2=_interopRequireDefault(_objectiron);var _xml2json=require('../../../externals/xml2json');var _xml2json2=_interopRequireDefault(_xml2json);var _StringMatcher=require('./matchers/StringMatcher');var _StringMatcher2=_interopRequireDefault(_StringMatcher);var _DurationMatcher=require('./matchers/DurationMatcher');var _DurationMatcher2=_interopRequireDefault(_DurationMatcher);var _DateTimeMatcher=require('./matchers/DateTimeMatcher');var _DateTimeMatcher2=_interopRequireDefault(_DateTimeMatcher);var _NumericMatcher=require('./matchers/NumericMatcher');var _NumericMatcher2=_interopRequireDefault(_NumericMatcher);var _RepresentationBaseValuesMap=require('./maps/RepresentationBaseValuesMap');var _RepresentationBaseValuesMap2=_interopRequireDefault(_RepresentationBaseValuesMap);var _SegmentValuesMap=require('./maps/SegmentValuesMap');var _SegmentValuesMap2=_interopRequireDefault(_SegmentValuesMap);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function DashParser(config){config=config||{};var context=this.context;var debug=config.debug;var instance=void 0,logger=void 0,matchers=void 0,converter=void 0,objectIron=void 0;function setup(){logger=debug.getLogger(instance);matchers=[new _DurationMatcher2.default(),new _DateTimeMatcher2.default(),new _NumericMatcher2.default(),new _StringMatcher2.default()// last in list to take precedence over NumericMatcher
];converter=new _xml2json2.default({escapeMode:false,attributePrefix:'',arrayAccessForm:'property',emptyNodeForm:'object',stripWhitespaces:false,enableToStringFunc:true,ignoreRoot:true,matchers:matchers});objectIron=(0,_objectiron2.default)(context).create({adaptationset:new _RepresentationBaseValuesMap2.default(),period:new _SegmentValuesMap2.default()});}function getMatchers(){return matchers;}function getIron(){return objectIron;}function parse(data){var manifest=void 0;var startTime=window.performance.now();manifest=converter.xml_str2json(data);if(!manifest){throw new Error('parsing the manifest failed');}var jsonTime=window.performance.now();objectIron.run(manifest);var ironedTime=window.performance.now();logger.info('Parsing complete: ( xml2json: '+(jsonTime-startTime).toPrecision(3)+'ms, objectiron: '+(ironedTime-jsonTime).toPrecision(3)+'ms, total: '+((ironedTime-startTime)/1000).toPrecision(3)+'s)');manifest.protocol='DASH';return manifest;}instance={parse:parse,getMatchers:getMatchers,getIron:getIron};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */DashParser.__dashjs_factory_name='DashParser';exports.default=_FactoryMaker2.default.getClassFactory(DashParser);


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","./objectiron":"../node_modules/dashjs/build/es5/src/dash/parser/objectiron.js","../../../externals/xml2json":"../node_modules/dashjs/build/es5/externals/xml2json.js","./matchers/StringMatcher":"../node_modules/dashjs/build/es5/src/dash/parser/matchers/StringMatcher.js","./matchers/DurationMatcher":"../node_modules/dashjs/build/es5/src/dash/parser/matchers/DurationMatcher.js","./matchers/DateTimeMatcher":"../node_modules/dashjs/build/es5/src/dash/parser/matchers/DateTimeMatcher.js","./matchers/NumericMatcher":"../node_modules/dashjs/build/es5/src/dash/parser/matchers/NumericMatcher.js","./maps/RepresentationBaseValuesMap":"../node_modules/dashjs/build/es5/src/dash/parser/maps/RepresentationBaseValuesMap.js","./maps/SegmentValuesMap":"../node_modules/dashjs/build/es5/src/dash/parser/maps/SegmentValuesMap.js"}],"../node_modules/dashjs/build/es5/src/streaming/ManifestLoader.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('./constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _DashConstants=require('../dash/constants/DashConstants');var _DashConstants2=_interopRequireDefault(_DashConstants);var _XlinkController=require('./controllers/XlinkController');var _XlinkController2=_interopRequireDefault(_XlinkController);var _URLLoader=require('./net/URLLoader');var _URLLoader2=_interopRequireDefault(_URLLoader);var _URLUtils=require('./utils/URLUtils');var _URLUtils2=_interopRequireDefault(_URLUtils);var _TextRequest=require('./vo/TextRequest');var _TextRequest2=_interopRequireDefault(_TextRequest);var _DashJSError=require('./vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);var _HTTPRequest=require('./vo/metrics/HTTPRequest');var _EventBus=require('../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _Errors=require('../core/errors/Errors');var _Errors2=_interopRequireDefault(_Errors);var _FactoryMaker=require('../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _DashParser=require('../dash/parser/DashParser');var _DashParser2=_interopRequireDefault(_DashParser);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function ManifestLoader(config){config=config||{};var context=this.context;var debug=config.debug;var eventBus=(0,_EventBus2.default)(context).getInstance();var urlUtils=(0,_URLUtils2.default)(context).getInstance();var instance=void 0,logger=void 0,urlLoader=void 0,xlinkController=void 0,parser=void 0;var mssHandler=config.mssHandler;var errHandler=config.errHandler;function setup(){logger=debug.getLogger(instance);eventBus.on(_Events2.default.XLINK_READY,onXlinkReady,instance);urlLoader=(0,_URLLoader2.default)(context).create({errHandler:config.errHandler,dashMetrics:config.dashMetrics,mediaPlayerModel:config.mediaPlayerModel,requestModifier:config.requestModifier,useFetch:config.settings.get().streaming.lowLatencyEnabled,urlUtils:urlUtils,constants:_Constants2.default,dashConstants:_DashConstants2.default,errors:_Errors2.default});xlinkController=(0,_XlinkController2.default)(context).create({errHandler:errHandler,dashMetrics:config.dashMetrics,mediaPlayerModel:config.mediaPlayerModel,requestModifier:config.requestModifier,settings:config.settings});parser=null;}function onXlinkReady(event){eventBus.trigger(_Events2.default.INTERNAL_MANIFEST_LOADED,{manifest:event.manifest});}function createParser(data){var parser=null;// Analyze manifest content to detect protocol and select appropriate parser
if(data.indexOf('SmoothStreamingMedia')>-1){//do some business to transform it into a Dash Manifest
if(mssHandler){parser=mssHandler.createMssParser();mssHandler.registerEvents();}return parser;}else if(data.indexOf('MPD')>-1){return(0,_DashParser2.default)(context).create({debug:debug});}else{return parser;}}function load(url){var request=new _TextRequest2.default(url,_HTTPRequest.HTTPRequest.MPD_TYPE);urlLoader.load({request:request,success:function success(data,textStatus,responseURL){// Manage situations in which success is called after calling reset
if(!xlinkController)return;var actualUrl=void 0,baseUri=void 0,manifest=void 0;// Handle redirects for the MPD - as per RFC3986 Section 5.1.3
// also handily resolves relative MPD URLs to absolute
if(responseURL&&responseURL!==url){baseUri=urlUtils.parseBaseUrl(responseURL);actualUrl=responseURL;}else{// usually this case will be caught and resolved by
// responseURL above but it is not available for IE11 and Edge/12 and Edge/13
// baseUri must be absolute for BaseURL resolution later
if(urlUtils.isRelative(url)){url=urlUtils.resolve(url,window.location.href);}baseUri=urlUtils.parseBaseUrl(url);}// Create parser according to manifest type
if(parser===null){parser=createParser(data);}if(parser===null){eventBus.trigger(_Events2.default.INTERNAL_MANIFEST_LOADED,{manifest:null,error:new _DashJSError2.default(_Errors2.default.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE,_Errors2.default.MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE+(''+url))});return;}// init xlinkcontroller with matchers and iron object from created parser
xlinkController.setMatchers(parser.getMatchers());xlinkController.setIron(parser.getIron());try{manifest=parser.parse(data);}catch(e){eventBus.trigger(_Events2.default.INTERNAL_MANIFEST_LOADED,{manifest:null,error:new _DashJSError2.default(_Errors2.default.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE,_Errors2.default.MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE+(''+url))});return;}if(manifest){manifest.url=actualUrl||url;// URL from which the MPD was originally retrieved (MPD updates will not change this value)
if(!manifest.originalUrl){manifest.originalUrl=manifest.url;}// In the following, we only use the first Location entry even if many are available
// Compare with ManifestUpdater/DashManifestModel
if(manifest.hasOwnProperty(_Constants2.default.LOCATION)){baseUri=urlUtils.parseBaseUrl(manifest.Location_asArray[0]);logger.debug('BaseURI set by Location to: '+baseUri);}manifest.baseUri=baseUri;manifest.loadedTime=new Date();xlinkController.resolveManifestOnLoad(manifest);eventBus.trigger(_Events2.default.ORIGINAL_MANIFEST_LOADED,{originalManifest:data});}else{eventBus.trigger(_Events2.default.INTERNAL_MANIFEST_LOADED,{manifest:null,error:new _DashJSError2.default(_Errors2.default.MANIFEST_LOADER_PARSING_FAILURE_ERROR_CODE,_Errors2.default.MANIFEST_LOADER_PARSING_FAILURE_ERROR_MESSAGE+(''+url))});}},error:function error(request,statusText,errorText){eventBus.trigger(_Events2.default.INTERNAL_MANIFEST_LOADED,{manifest:null,error:new _DashJSError2.default(_Errors2.default.MANIFEST_LOADER_LOADING_FAILURE_ERROR_CODE,_Errors2.default.MANIFEST_LOADER_LOADING_FAILURE_ERROR_MESSAGE+(url+', '+errorText))});}});}function reset(){eventBus.off(_Events2.default.XLINK_READY,onXlinkReady,instance);if(xlinkController){xlinkController.reset();xlinkController=null;}if(urlLoader){urlLoader.abort();urlLoader=null;}if(mssHandler){mssHandler.reset();}}instance={load:load,reset:reset};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */ManifestLoader.__dashjs_factory_name='ManifestLoader';var factory=_FactoryMaker2.default.getClassFactory(ManifestLoader);exports.default=factory;


},{"./constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../dash/constants/DashConstants":"../node_modules/dashjs/build/es5/src/dash/constants/DashConstants.js","./controllers/XlinkController":"../node_modules/dashjs/build/es5/src/streaming/controllers/XlinkController.js","./net/URLLoader":"../node_modules/dashjs/build/es5/src/streaming/net/URLLoader.js","./utils/URLUtils":"../node_modules/dashjs/build/es5/src/streaming/utils/URLUtils.js","./vo/TextRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/TextRequest.js","./vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js","./vo/metrics/HTTPRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/HTTPRequest.js","../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../core/errors/Errors":"../node_modules/dashjs/build/es5/src/core/errors/Errors.js","../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../dash/parser/DashParser":"../node_modules/dashjs/build/es5/src/dash/parser/DashParser.js"}],"../node_modules/dashjs/build/es5/src/streaming/utils/ErrorHandler.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * @module ErrorHandler
 * @ignore
 */function ErrorHandler(){var instance=void 0;var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();/**
     * @param {object} err DashJSError with code, message and data attributes
     * @memberof module:ErrorHandler
     */function error(err){eventBus.trigger(_Events2.default.ERROR,{error:err});}instance={error:error};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */ErrorHandler.__dashjs_factory_name='ErrorHandler';exports.default=_FactoryMaker2.default.getSingletonFactory(ErrorHandler);


},{"../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/streaming/utils/Capabilities.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function Capabilities(){var instance=void 0,encryptedMediaSupported=void 0;function setup(){encryptedMediaSupported=false;}function supportsMediaSource(){var hasWebKit='WebKitMediaSource'in window;var hasMediaSource='MediaSource'in window;return hasWebKit||hasMediaSource;}/**
     * Returns whether Encrypted Media Extensions are supported on this
     * user agent
     *
     * @return {boolean} true if EME is supported, false otherwise
     */function supportsEncryptedMedia(){return encryptedMediaSupported;}function setEncryptedMediaSupported(value){encryptedMediaSupported=value;}function supportsCodec(codec){if('MediaSource'in window&&MediaSource.isTypeSupported(codec)){return true;}if('WebKitMediaSource'in window&&WebKitMediaSource.isTypeSupported(codec)){return true;}return false;}instance={supportsMediaSource:supportsMediaSource,supportsEncryptedMedia:supportsEncryptedMedia,supportsCodec:supportsCodec,setEncryptedMediaSupported:setEncryptedMediaSupported};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */Capabilities.__dashjs_factory_name='Capabilities';exports.default=_FactoryMaker2.default.getSingletonFactory(Capabilities);


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/streaming/vo/URIFragmentData.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var URIFragmentData=function URIFragmentData(){_classCallCheck(this,URIFragmentData);this.t=null;this.xywh=null;this.track=null;this.id=null;this.s=null;this.r=null;};exports.default=URIFragmentData;/*
    From Spec http://www.w3.org/TR/media-frags/

    temporal (t)     - This dimension denotes a specific time range in the original media, such as "starting at second 10, continuing until second 20";
    spatial  (xywh)  - this dimension denotes a specific range of pixels in the original media, such as "a rectangle with size (100,100) with its top-left at coordinate (10,10)";
                       Media fragments support also addressing the media along two additional dimensions (in the advanced version defined in Media Fragments 1.0 URI (advanced)):
    track    (track) - this dimension denotes one or more tracks in the original media, such as "the english audio and the video track";
    id       (id)    - this dimension denotes a named temporal fragment within the original media, such as "chapter 2", and can be seen as a convenient way of specifying a temporal fragment.


    ## Note
    Akamai is purposing to add #s=X to the ISO standard.
        - (X) Value would be a start time to seek to at startup instead of starting at 0 or live edge
        - Allows for seeking back before the start time unlike a temporal clipping.
*/


},{}],"../node_modules/dashjs/build/es5/src/streaming/models/URIFragmentModel.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _URIFragmentData=require('../vo/URIFragmentData');var _URIFragmentData2=_interopRequireDefault(_URIFragmentData);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * Model class managing URI fragments.
 * @ignore
 *//**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function URIFragmentModel(){var instance=void 0,URIFragmentDataVO=void 0;/**
     * @param {string} uri The URI to parse for fragment extraction
     * @memberof module:URIFragmentModel
     * @instance
     */function initialize(uri){URIFragmentDataVO=new _URIFragmentData2.default();if(!uri)return null;var hashIndex=uri.indexOf('#');if(hashIndex!==-1){var fragments=uri.substr(hashIndex+1).split('&');for(var i=0,len=fragments.length;i<len;++i){var fragment=fragments[i];var equalIndex=fragment.indexOf('=');if(equalIndex!==-1){var key=fragment.substring(0,equalIndex);if(URIFragmentDataVO.hasOwnProperty(key)){URIFragmentDataVO[key]=fragment.substr(equalIndex+1);}}}}}/**
     * @returns {URIFragmentData} Object containing supported URI fragments
     * @memberof module:URIFragmentModel
     * @instance
     */function getURIFragmentData(){return URIFragmentDataVO;}instance={initialize:initialize,getURIFragmentData:getURIFragmentData};return instance;}URIFragmentModel.__dashjs_factory_name='URIFragmentModel';exports.default=_FactoryMaker2.default.getSingletonFactory(URIFragmentModel);


},{"../vo/URIFragmentData":"../node_modules/dashjs/build/es5/src/streaming/vo/URIFragmentData.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/streaming/models/ManifestModel.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function ManifestModel(){var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var instance=void 0,manifest=void 0;function getValue(){return manifest;}function setValue(value){manifest=value;if(value){eventBus.trigger(_Events2.default.MANIFEST_LOADED,{data:value});}}instance={getValue:getValue,setValue:setValue};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */ManifestModel.__dashjs_factory_name='ManifestModel';exports.default=_FactoryMaker2.default.getSingletonFactory(ManifestModel);


},{"../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/streaming/models/MediaPlayerModel.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _UTCTiming=require('../../dash/vo/UTCTiming');var _UTCTiming2=_interopRequireDefault(_UTCTiming);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Constants=require('../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _ABRRulesCollection=require('../rules/abr/ABRRulesCollection');var _ABRRulesCollection2=_interopRequireDefault(_ABRRulesCollection);var _Settings=require('../../core/Settings');var _Settings2=_interopRequireDefault(_Settings);var _SupervisorTools=require('../utils/SupervisorTools');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var DEFAULT_MIN_BUFFER_TIME=12;var DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH=20;var DEFAULT_LOW_LATENCY_LIVE_DELAY=3.0;var LOW_LATENCY_REDUCTION_FACTOR=10;var LOW_LATENCY_MULTIPLY_FACTOR=5;var DEFAULT_LIVE_LATENCY_CATCHUP_THRESHOLD_FACTOR=4;var MINIMUM_LIVE_LATENCY_CATCHUP=5;var DEFAULT_XHR_WITH_CREDENTIALS=false;function MediaPlayerModel(){var instance=void 0,UTCTimingSources=void 0,xhrWithCredentials=void 0,customABRRule=void 0;var DEFAULT_UTC_TIMING_SOURCE={scheme:'urn:mpeg:dash:utc:http-xsdate:2014',value:'http://time.akamai.com/?iso&ms'};var context=this.context;var settings=(0,_Settings2.default)(context).getInstance();function setup(){UTCTimingSources=[];xhrWithCredentials={default:DEFAULT_XHR_WITH_CREDENTIALS};customABRRule=[];}//TODO Should we use Object.define to have setters/getters? makes more readable code on other side.
function findABRCustomRuleIndex(rulename){var i=void 0;for(i=0;i<customABRRule.length;i++){if(customABRRule[i].rulename===rulename){return i;}}return-1;}function getABRCustomRules(){return customABRRule;}function addABRCustomRule(type,rulename,rule){if(typeof type!=='string'||type!==_ABRRulesCollection2.default.ABANDON_FRAGMENT_RULES&&type!==_ABRRulesCollection2.default.QUALITY_SWITCH_RULES||typeof rulename!=='string'){throw _Constants2.default.BAD_ARGUMENT_ERROR;}var index=findABRCustomRuleIndex(rulename);if(index===-1){// add rule
customABRRule.push({type:type,rulename:rulename,rule:rule});}else{// update rule
customABRRule[index].type=type;customABRRule[index].rule=rule;}}function removeABRCustomRule(rulename){if(rulename){var index=findABRCustomRuleIndex(rulename);//if no rulename custom rule has been found, do nothing
if(index!==-1){// remove rule
customABRRule.splice(index,1);}}else{//if no rulename is defined, remove all ABR custome rules
customABRRule=[];}}function getStableBufferTime(){if(settings.get().streaming.lowLatencyEnabled){return getLiveDelay()*0.6;}var stableBufferTime=settings.get().streaming.stableBufferTime;return stableBufferTime>-1?stableBufferTime:settings.get().streaming.fastSwitchEnabled?DEFAULT_MIN_BUFFER_TIME_FAST_SWITCH:DEFAULT_MIN_BUFFER_TIME;}function getRetryAttemptsForType(type){var lowLatencyMultiplyFactor=!isNaN(settings.get().streaming.retryAttempts.lowLatencyMultiplyFactor)?settings.get().streaming.retryAttempts.lowLatencyMultiplyFactor:LOW_LATENCY_MULTIPLY_FACTOR;return settings.get().streaming.lowLatencyEnabled?settings.get().streaming.retryAttempts[type]*lowLatencyMultiplyFactor:settings.get().streaming.retryAttempts[type];}function getRetryIntervalsForType(type){var lowLatencyReductionFactor=!isNaN(settings.get().streaming.retryIntervals.lowLatencyReductionFactor)?settings.get().streaming.retryIntervals.lowLatencyReductionFactor:LOW_LATENCY_REDUCTION_FACTOR;return settings.get().streaming.lowLatencyEnabled?settings.get().streaming.retryIntervals[type]/lowLatencyReductionFactor:settings.get().streaming.retryIntervals[type];}function getLiveDelay(){if(settings.get().streaming.lowLatencyEnabled){return settings.get().streaming.liveDelay||DEFAULT_LOW_LATENCY_LIVE_DELAY;}return settings.get().streaming.liveDelay;}function getLiveCatchupLatencyThreshold(){try{var liveCatchupLatencyThreshold=settings.get().streaming.liveCatchup.latencyThreshold;var liveDelay=getLiveDelay();if(liveCatchupLatencyThreshold!==null&&!isNaN(liveCatchupLatencyThreshold)){return Math.max(liveCatchupLatencyThreshold,liveDelay);}var liveCatchupMinDrift=settings.get().streaming.liveCatchup.minDrift;var maximumLiveDelay=!isNaN(liveDelay)&&liveDelay?!isNaN(liveCatchupMinDrift)?settings.get().streaming.liveCatchup.minDrift+getLiveDelay():getLiveDelay():NaN;if(maximumLiveDelay&&!isNaN(maximumLiveDelay)){return Math.max(maximumLiveDelay*DEFAULT_LIVE_LATENCY_CATCHUP_THRESHOLD_FACTOR,MINIMUM_LIVE_LATENCY_CATCHUP);}return NaN;}catch(e){return NaN;}}function addUTCTimingSource(schemeIdUri,value){removeUTCTimingSource(schemeIdUri,value);//check if it already exists and remove if so.
var vo=new _UTCTiming2.default();vo.schemeIdUri=schemeIdUri;vo.value=value;UTCTimingSources.push(vo);}function getUTCTimingSources(){return UTCTimingSources;}function removeUTCTimingSource(schemeIdUri,value){(0,_SupervisorTools.checkParameterType)(schemeIdUri,'string');(0,_SupervisorTools.checkParameterType)(value,'string');UTCTimingSources.forEach(function(obj,idx){if(obj.schemeIdUri===schemeIdUri&&obj.value===value){UTCTimingSources.splice(idx,1);}});}function clearDefaultUTCTimingSources(){UTCTimingSources=[];}function restoreDefaultUTCTimingSources(){addUTCTimingSource(DEFAULT_UTC_TIMING_SOURCE.scheme,DEFAULT_UTC_TIMING_SOURCE.value);}function setXHRWithCredentialsForType(type,value){if(!type){Object.keys(xhrWithCredentials).forEach(function(key){setXHRWithCredentialsForType(key,value);});}else{xhrWithCredentials[type]=!!value;}}function getXHRWithCredentialsForType(type){var useCreds=xhrWithCredentials[type];return useCreds===undefined?xhrWithCredentials.default:useCreds;}function getDefaultUtcTimingSource(){return DEFAULT_UTC_TIMING_SOURCE;}function reset(){//TODO need to figure out what props to persist across sessions and which to reset if any.
//setup();
}instance={getABRCustomRules:getABRCustomRules,addABRCustomRule:addABRCustomRule,removeABRCustomRule:removeABRCustomRule,getStableBufferTime:getStableBufferTime,getRetryAttemptsForType:getRetryAttemptsForType,getRetryIntervalsForType:getRetryIntervalsForType,getLiveDelay:getLiveDelay,getLiveCatchupLatencyThreshold:getLiveCatchupLatencyThreshold,addUTCTimingSource:addUTCTimingSource,removeUTCTimingSource:removeUTCTimingSource,getUTCTimingSources:getUTCTimingSources,clearDefaultUTCTimingSources:clearDefaultUTCTimingSources,restoreDefaultUTCTimingSources:restoreDefaultUTCTimingSources,setXHRWithCredentialsForType:setXHRWithCredentialsForType,getXHRWithCredentialsForType:getXHRWithCredentialsForType,getDefaultUtcTimingSource:getDefaultUtcTimingSource,reset:reset};setup();return instance;}//TODO see if you can move this and not export and just getter to get default value.
MediaPlayerModel.__dashjs_factory_name='MediaPlayerModel';exports.default=_FactoryMaker2.default.getSingletonFactory(MediaPlayerModel);


},{"../../dash/vo/UTCTiming":"../node_modules/dashjs/build/es5/src/dash/vo/UTCTiming.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../rules/abr/ABRRulesCollection":"../node_modules/dashjs/build/es5/src/streaming/rules/abr/ABRRulesCollection.js","../../core/Settings":"../node_modules/dashjs/build/es5/src/core/Settings.js","../utils/SupervisorTools":"../node_modules/dashjs/build/es5/src/streaming/utils/SupervisorTools.js"}],"../node_modules/dashjs/build/es5/src/streaming/models/VideoModel.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _Debug=require('../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function VideoModel(){var instance=void 0,logger=void 0,element=void 0,TTMLRenderingDiv=void 0,previousPlaybackRate=void 0;var VIDEO_MODEL_WRONG_ELEMENT_TYPE='element is not video or audio DOM type!';var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var stalledStreams=[];function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);}function initialize(){eventBus.on(_Events2.default.PLAYBACK_PLAYING,onPlaying,this);}function reset(){eventBus.off(_Events2.default.PLAYBACK_PLAYING,onPlaying,this);}function onPlaybackCanPlay(){if(element){element.playbackRate=previousPlaybackRate||1;element.removeEventListener('canplay',onPlaybackCanPlay);}}function setPlaybackRate(value){if(!element)return;if(element.readyState<=2&&value>0){// If media element hasn't loaded enough data to play yet, wait until it has
element.addEventListener('canplay',onPlaybackCanPlay);}else{element.playbackRate=value;}}//TODO Move the DVR window calculations from MediaPlayer to Here.
function setCurrentTime(currentTime,stickToBuffered){if(element){//_currentTime = currentTime;
// We don't set the same currentTime because it can cause firing unexpected Pause event in IE11
// providing playbackRate property equals to zero.
if(element.currentTime==currentTime)return;// TODO Despite the fact that MediaSource 'open' event has been fired IE11 cannot set videoElement.currentTime
// immediately (it throws InvalidStateError). It seems that this is related to videoElement.readyState property
// Initially it is 0, but soon after 'open' event it goes to 1 and setting currentTime is allowed. Chrome allows to
// set currentTime even if readyState = 0.
// setTimeout is used to workaround InvalidStateError in IE11
try{currentTime=stickToBuffered?stickTimeToBuffered(currentTime):currentTime;element.currentTime=currentTime;}catch(e){if(element.readyState===0&&e.code===e.INVALID_STATE_ERR){setTimeout(function(){element.currentTime=currentTime;},400);}}}}function stickTimeToBuffered(time){var buffered=getBufferRange();var closestTime=time;var closestDistance=9999999999;if(buffered){for(var i=0;i<buffered.length;i++){var start=buffered.start(i);var end=buffered.end(i);var distanceToStart=Math.abs(start-time);var distanceToEnd=Math.abs(end-time);if(time>=start&&time<=end){return time;}if(distanceToStart<closestDistance){closestDistance=distanceToStart;closestTime=start;}if(distanceToEnd<closestDistance){closestDistance=distanceToEnd;closestTime=end;}}}return closestTime;}function getElement(){return element;}function setElement(value){//add check of value type
if(value===null||value===undefined||value&&/^(VIDEO|AUDIO)$/i.test(value.nodeName)){element=value;// Workaround to force Firefox to fire the canplay event.
if(element){element.preload='auto';}}else{throw VIDEO_MODEL_WRONG_ELEMENT_TYPE;}}function setSource(source){if(element){if(source){element.src=source;}else{element.removeAttribute('src');element.load();}}}function getSource(){return element?element.src:null;}function getTTMLRenderingDiv(){return TTMLRenderingDiv;}function setTTMLRenderingDiv(div){TTMLRenderingDiv=div;// The styling will allow the captions to match the video window size and position.
TTMLRenderingDiv.style.position='absolute';TTMLRenderingDiv.style.display='flex';TTMLRenderingDiv.style.overflow='hidden';TTMLRenderingDiv.style.pointerEvents='none';TTMLRenderingDiv.style.top=0;TTMLRenderingDiv.style.left=0;}function setStallState(type,state){stallStream(type,state);}function isStalled(){return stalledStreams.length>0;}function addStalledStream(type){var event=void 0;if(type===null||!element||element.seeking||stalledStreams.indexOf(type)!==-1){return;}stalledStreams.push(type);if(element&&stalledStreams.length===1){// Halt playback until nothing is stalled.
event=document.createEvent('Event');event.initEvent('waiting',true,false);previousPlaybackRate=element.playbackRate;setPlaybackRate(0);element.dispatchEvent(event);}}function removeStalledStream(type){var index=stalledStreams.indexOf(type);var event=void 0;if(type===null){return;}if(index!==-1){stalledStreams.splice(index,1);}// If nothing is stalled resume playback.
if(element&&isStalled()===false&&element.playbackRate===0){setPlaybackRate(previousPlaybackRate||1);if(!element.paused){event=document.createEvent('Event');event.initEvent('playing',true,false);element.dispatchEvent(event);}}}function stallStream(type,isStalled){if(isStalled){addStalledStream(type);}else{removeStalledStream(type);}}//Calling play on the element will emit playing - even if the stream is stalled. If the stream is stalled, emit a waiting event.
function onPlaying(){if(element&&isStalled()&&element.playbackRate===0){var event=document.createEvent('Event');event.initEvent('waiting',true,false);element.dispatchEvent(event);}}function getPlaybackQuality(){if(!element){return null;}var hasWebKit='webkitDroppedFrameCount'in element&&'webkitDecodedFrameCount'in element;var hasQuality='getVideoPlaybackQuality'in element;var result=null;if(hasQuality){result=element.getVideoPlaybackQuality();}else if(hasWebKit){result={droppedVideoFrames:element.webkitDroppedFrameCount,totalVideoFrames:element.webkitDroppedFrameCount+element.webkitDecodedFrameCount,creationTime:new Date()};}return result;}function play(){if(element){element.autoplay=true;var p=element.play();if(p&&p.catch&&typeof Promise!=='undefined'){p.catch(function(e){if(e.name==='NotAllowedError'){eventBus.trigger(_Events2.default.PLAYBACK_NOT_ALLOWED);}logger.warn('Caught pending play exception - continuing ('+e+')');});}}}function isPaused(){return element?element.paused:null;}function pause(){if(element){element.pause();element.autoplay=false;}}function isSeeking(){return element?element.seeking:null;}function getTime(){return element?element.currentTime:null;}function getPlaybackRate(){return element?element.playbackRate:null;}function getPlayedRanges(){return element?element.played:null;}function getEnded(){return element?element.ended:null;}function addEventListener(eventName,eventCallBack){if(element){element.addEventListener(eventName,eventCallBack);}}function removeEventListener(eventName,eventCallBack){if(element){element.removeEventListener(eventName,eventCallBack);}}function getReadyState(){return element?element.readyState:NaN;}function getBufferRange(){return element?element.buffered:null;}function getClientWidth(){return element?element.clientWidth:NaN;}function getClientHeight(){return element?element.clientHeight:NaN;}function getVideoWidth(){return element?element.videoWidth:NaN;}function getVideoHeight(){return element?element.videoHeight:NaN;}function getVideoRelativeOffsetTop(){var parentElement=element.parentNode.host||element.parentNode;return parentElement?element.getBoundingClientRect().top-parentElement.getBoundingClientRect().top:NaN;}function getVideoRelativeOffsetLeft(){var parentElement=element.parentNode.host||element.parentNode;return parentElement?element.getBoundingClientRect().left-parentElement.getBoundingClientRect().left:NaN;}function getTextTracks(){return element?element.textTracks:[];}function getTextTrack(kind,label,lang,isTTML,isEmbedded){if(element){for(var i=0;i<element.textTracks.length;i++){//label parameter could be a number (due to adaptationSet), but label, the attribute of textTrack, is a string => to modify...
//label could also be undefined (due to adaptationSet)
if(element.textTracks[i].kind===kind&&(label?element.textTracks[i].label==label:true)&&element.textTracks[i].language===lang&&element.textTracks[i].isTTML===isTTML&&element.textTracks[i].isEmbedded===isEmbedded){return element.textTracks[i];}}}return null;}function addTextTrack(kind,label,lang,isTTML,isEmbedded){if(!element){return null;}// check if track of same type has not been already created for previous stream
// then use it (no way to remove existing text track from video element)
var track=getTextTrack(kind,label,lang,isTTML,isEmbedded);if(!track){track=element.addTextTrack(kind,label,lang);track.isEmbedded=isEmbedded;track.isTTML=isTTML;}return track;}function appendChild(childElement){if(element){element.appendChild(childElement);//in Chrome, we need to differenciate textTrack with same lang, kind and label but different format (vtt, ttml, etc...)
if(childElement.isTTML!==undefined){element.textTracks[element.textTracks.length-1].isTTML=childElement.isTTML;element.textTracks[element.textTracks.length-1].isEmbedded=childElement.isEmbedded;}}}function removeChild(childElement){if(element){element.removeChild(childElement);}}instance={initialize:initialize,setCurrentTime:setCurrentTime,play:play,isPaused:isPaused,pause:pause,isStalled:isStalled,isSeeking:isSeeking,getTime:getTime,getPlaybackRate:getPlaybackRate,setPlaybackRate:setPlaybackRate,getPlayedRanges:getPlayedRanges,getEnded:getEnded,setStallState:setStallState,getElement:getElement,setElement:setElement,setSource:setSource,getSource:getSource,getTTMLRenderingDiv:getTTMLRenderingDiv,setTTMLRenderingDiv:setTTMLRenderingDiv,getPlaybackQuality:getPlaybackQuality,addEventListener:addEventListener,removeEventListener:removeEventListener,getReadyState:getReadyState,getBufferRange:getBufferRange,getClientWidth:getClientWidth,getClientHeight:getClientHeight,getTextTracks:getTextTracks,getTextTrack:getTextTrack,addTextTrack:addTextTrack,appendChild:appendChild,removeChild:removeChild,getVideoWidth:getVideoWidth,getVideoHeight:getVideoHeight,getVideoRelativeOffsetTop:getVideoRelativeOffsetTop,getVideoRelativeOffsetLeft:getVideoRelativeOffsetLeft,reset:reset};setup();return instance;}VideoModel.__dashjs_factory_name='VideoModel';exports.default=_FactoryMaker2.default.getSingletonFactory(VideoModel);


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js"}],"../node_modules/dashjs/build/es5/src/streaming/utils/DOMStorage.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Debug=require('../../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _Constants=require('../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var legacyKeysAndReplacements=[{oldKey:'dashjs_vbitrate',newKey:'dashjs_video_bitrate'},{oldKey:'dashjs_abitrate',newKey:'dashjs_audio_bitrate'},{oldKey:'dashjs_vsettings',newKey:'dashjs_video_settings'},{oldKey:'dashjs_asettings',newKey:'dashjs_audio_settings'}];/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var LOCAL_STORAGE_BITRATE_KEY_TEMPLATE='dashjs_?_bitrate';var LOCAL_STORAGE_SETTINGS_KEY_TEMPLATE='dashjs_?_settings';var STORAGE_TYPE_LOCAL='localStorage';var STORAGE_TYPE_SESSION='sessionStorage';var LAST_BITRATE='lastBitrate';var LAST_MEDIA_SETTINGS='lastMediaSettings';function DOMStorage(config){config=config||{};var context=this.context;var settings=config.settings;var instance=void 0,logger=void 0,supported=void 0;function setup(){logger=(0,_Debug2.default)(context).getInstance().getLogger(instance);translateLegacyKeys();}//type can be local, session
function isSupported(type){if(supported!==undefined)return supported;supported=false;var testKey='1';var testValue='1';var storage=void 0;try{if(typeof window!=='undefined'){storage=window[type];}}catch(error){logger.warn('DOMStorage access denied: '+error.message);return supported;}if(!storage||type!==STORAGE_TYPE_LOCAL&&type!==STORAGE_TYPE_SESSION){return supported;}/* When Safari (OS X or iOS) is in private browsing mode, it appears as though localStorage is available, but trying to call setItem throws an exception.
         http://stackoverflow.com/questions/14555347/html5-localstorage-error-with-safari-quota-exceeded-err-dom-exception-22-an

         Check if the storage can be used
         */try{storage.setItem(testKey,testValue);storage.removeItem(testKey);supported=true;}catch(error){logger.warn('DOMStorage is supported, but cannot be used: '+error.message);}return supported;}function translateLegacyKeys(){if(isSupported(STORAGE_TYPE_LOCAL)){legacyKeysAndReplacements.forEach(function(entry){var value=localStorage.getItem(entry.oldKey);if(value){localStorage.removeItem(entry.oldKey);try{localStorage.setItem(entry.newKey,value);}catch(e){logger.error(e.message);}}});}}// Return current epoch time, ms, rounded to the nearest 10m to avoid fingerprinting user
function getTimestamp(){var ten_minutes_ms=60*1000*10;return Math.round(new Date().getTime()/ten_minutes_ms)*ten_minutes_ms;}function canStore(storageType,key){return isSupported(storageType)&&settings.get().streaming[key+'CachingInfo'].enabled;}function checkConfig(){if(!settings){throw new Error(_Constants2.default.MISSING_CONFIG_ERROR);}}function getSavedMediaSettings(type){var mediaSettings=null;checkConfig();//Checks local storage to see if there is valid, non-expired media settings
if(canStore(STORAGE_TYPE_LOCAL,LAST_MEDIA_SETTINGS)){var key=LOCAL_STORAGE_SETTINGS_KEY_TEMPLATE.replace(/\?/,type);try{var obj=JSON.parse(localStorage.getItem(key))||{};var isExpired=new Date().getTime()-parseInt(obj.timestamp,10)>=settings.get().streaming.lastMediaSettingsCachingInfo.ttl||false;mediaSettings=obj.settings;if(isExpired){localStorage.removeItem(key);mediaSettings=null;}}catch(e){return null;}}return mediaSettings;}function getSavedBitrateSettings(type){var savedBitrate=NaN;checkConfig();//Checks local storage to see if there is valid, non-expired bit rate
//hinting from the last play session to use as a starting bit rate.
if(canStore(STORAGE_TYPE_LOCAL,LAST_BITRATE)){var key=LOCAL_STORAGE_BITRATE_KEY_TEMPLATE.replace(/\?/,type);try{var obj=JSON.parse(localStorage.getItem(key))||{};var isExpired=new Date().getTime()-parseInt(obj.timestamp,10)>=settings.get().streaming.lastBitrateCachingInfo.ttl||false;var bitrate=parseFloat(obj.bitrate);if(!isNaN(bitrate)&&!isExpired){savedBitrate=bitrate;logger.debug('Last saved bitrate for '+type+' was '+bitrate);}else if(isExpired){localStorage.removeItem(key);}}catch(e){return null;}}return savedBitrate;}function setSavedMediaSettings(type,value){if(canStore(STORAGE_TYPE_LOCAL,LAST_MEDIA_SETTINGS)){var key=LOCAL_STORAGE_SETTINGS_KEY_TEMPLATE.replace(/\?/,type);try{localStorage.setItem(key,JSON.stringify({settings:value,timestamp:getTimestamp()}));}catch(e){logger.error(e.message);}}}function setSavedBitrateSettings(type,bitrate){if(canStore(STORAGE_TYPE_LOCAL,LAST_BITRATE)&&bitrate){var key=LOCAL_STORAGE_BITRATE_KEY_TEMPLATE.replace(/\?/,type);try{localStorage.setItem(key,JSON.stringify({bitrate:bitrate.toFixed(3),timestamp:getTimestamp()}));}catch(e){logger.error(e.message);}}}instance={getSavedBitrateSettings:getSavedBitrateSettings,setSavedBitrateSettings:setSavedBitrateSettings,getSavedMediaSettings:getSavedMediaSettings,setSavedMediaSettings:setSavedMediaSettings};setup();return instance;}DOMStorage.__dashjs_factory_name='DOMStorage';var factory=_FactoryMaker2.default.getSingletonFactory(DOMStorage);exports.default=factory;


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js"}],"../node_modules/dashjs/build/es5/src/core/Version.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.getVersionString=getVersionString;var VERSION='3.2.0';function getVersionString(){return VERSION;}


},{}],"../node_modules/dashjs/build/es5/src/dash/SegmentBaseLoader.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Segment=require('./vo/Segment');var _Segment2=_interopRequireDefault(_Segment);var _DashJSError=require('../streaming/vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);var _FactoryMaker=require('../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _FragmentRequest=require('../streaming/vo/FragmentRequest');var _FragmentRequest2=_interopRequireDefault(_FragmentRequest);var _URLLoader=require('../streaming/net/URLLoader');var _URLLoader2=_interopRequireDefault(_URLLoader);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function SegmentBaseLoader(){var context=this.context;var instance=void 0,logger=void 0,errHandler=void 0,boxParser=void 0,requestModifier=void 0,dashMetrics=void 0,settings=void 0,mediaPlayerModel=void 0,urlLoader=void 0,events=void 0,eventBus=void 0,errors=void 0,constants=void 0,dashConstants=void 0,urlUtils=void 0,baseURLController=void 0;function setup(){}function initialize(){urlLoader=(0,_URLLoader2.default)(context).create({errHandler:errHandler,dashMetrics:dashMetrics,mediaPlayerModel:mediaPlayerModel,requestModifier:requestModifier,useFetch:settings?settings.get().streaming.lowLatencyEnabled:null,boxParser:boxParser,errors:errors,urlUtils:urlUtils,constants:constants,dashConstants:dashConstants});}function setConfig(config){if(config.baseURLController){baseURLController=config.baseURLController;}if(config.dashMetrics){dashMetrics=config.dashMetrics;}if(config.mediaPlayerModel){mediaPlayerModel=config.mediaPlayerModel;}if(config.errHandler){errHandler=config.errHandler;}if(config.settings){settings=config.settings;}if(config.boxParser){boxParser=config.boxParser;}if(config.events){events=config.events;}if(config.eventBus){eventBus=config.eventBus;}if(config.debug){logger=config.debug.getLogger(instance);}if(config.requestModifier){requestModifier=config.requestModifier;}if(config.errors){errors=config.errors;}if(config.urlUtils){urlUtils=config.urlUtils;}if(config.constants){constants=config.constants;}if(config.dashConstants){dashConstants=config.dashConstants;}}function checkConfig(){if(!baseURLController||!baseURLController.hasOwnProperty('resolve')){throw new Error('setConfig function has to be called previously');}}function loadInitialization(streamId,mediaType,representation,loadingInfo){checkConfig();var initRange=null;var baseUrl=representation?baseURLController.resolve(representation.path):null;var info=loadingInfo||{init:true,url:baseUrl?baseUrl.url:undefined,range:{start:0,end:1500},searching:false,bytesLoaded:0,bytesToLoad:1500,mediaType:mediaType};logger.debug('Start searching for initialization.');var request=getFragmentRequest(info);var onload=function onload(response){info.bytesLoaded=info.range.end;initRange=boxParser.findInitRange(response);if(initRange){representation.range=initRange;// note that we don't explicitly set rep.initialization as this
// will be computed when all BaseURLs are resolved later
eventBus.trigger(events.INITIALIZATION_LOADED,{representation:representation},{streamId:streamId,mediaType:mediaType});}else{info.range.end=info.bytesLoaded+info.bytesToLoad;loadInitialization(streamId,mediaType,representation,info);}};var onerror=function onerror(){eventBus.trigger(events.INITIALIZATION_LOADED,{representation:representation},{streamId:streamId,mediaType:mediaType});};urlLoader.load({request:request,success:onload,error:onerror});logger.debug('Perform init search: '+info.url);}function loadSegments(streamId,mediaType,representation,range,callback,loadingInfo){checkConfig();if(range&&(range.start===undefined||range.end===undefined)){var parts=range?range.toString().split('-'):null;range=parts?{start:parseFloat(parts[0]),end:parseFloat(parts[1])}:null;}callback=!callback?onLoaded:callback;var isoFile=null;var sidx=null;var hasRange=!!range;var baseUrl=representation?baseURLController.resolve(representation.path):null;var info={init:false,url:baseUrl?baseUrl.url:undefined,range:hasRange?range:{start:0,end:1500},searching:!hasRange,bytesLoaded:loadingInfo?loadingInfo.bytesLoaded:0,bytesToLoad:1500,mediaType:mediaType};var request=getFragmentRequest(info);var onload=function onload(response){var extraBytes=info.bytesToLoad;var loadedLength=response.byteLength;info.bytesLoaded=info.range.end-info.range.start;isoFile=boxParser.parse(response);sidx=isoFile.getBox('sidx');if(!sidx||!sidx.isComplete){if(sidx){info.range.start=sidx.offset||info.range.start;info.range.end=info.range.start+(sidx.size||extraBytes);}else if(loadedLength<info.bytesLoaded){// if we have reached a search limit or if we have reached the end of the file we have to stop trying to find sidx
callback(streamId,mediaType,null,representation);return;}else{var lastBox=isoFile.getLastBox();if(lastBox&&lastBox.size){info.range.start=lastBox.offset+lastBox.size;info.range.end=info.range.start+extraBytes;}else{info.range.end+=extraBytes;}}loadSegments(streamId,mediaType,representation,info.range,callback,info);}else{var ref=sidx.references;var loadMultiSidx=void 0,segments=void 0;if(ref!==null&&ref!==undefined&&ref.length>0){loadMultiSidx=ref[0].reference_type===1;}if(loadMultiSidx){logger.debug('Initiate multiple SIDX load.');info.range.end=info.range.start+sidx.size;var j=void 0,len=void 0,ss=void 0,se=void 0,r=void 0;var segs=[];var count=0;var offset=(sidx.offset||info.range.start)+sidx.size;var tmpCallback=function tmpCallback(streamId,mediaType,result){if(result){segs=segs.concat(result);count++;if(count>=len){// http requests can be processed in a wrong order, so, we have to reorder segments with an ascending start Time order
segs.sort(function(a,b){return a.startTime-b.startTime<0?-1:0;});callback(streamId,mediaType,segs,representation);}}else{callback(streamId,mediaType,null,representation);}};for(j=0,len=ref.length;j<len;j++){ss=offset;se=offset+ref[j].referenced_size-1;offset=offset+ref[j].referenced_size;r={start:ss,end:se};loadSegments(streamId,mediaType,representation,r,tmpCallback,info);}}else{logger.debug('Parsing segments from SIDX. representation '+mediaType+' - id: '+representation.id+' for range : '+info.range.start+' - '+info.range.end);segments=getSegmentsForSidx(sidx,info);callback(streamId,mediaType,segments,representation);}}};var onerror=function onerror(){callback(streamId,mediaType,null,representation);};urlLoader.load({request:request,success:onload,error:onerror});logger.debug('Perform SIDX load: '+info.url+' with range : '+info.range.start+' - '+info.range.end);}function reset(){urlLoader.abort();urlLoader=null;errHandler=null;boxParser=null;requestModifier=null;}function getSegmentsForSidx(sidx,info){var refs=sidx.references;var len=refs.length;var timescale=sidx.timescale;var time=sidx.earliest_presentation_time;var start=info.range.start+sidx.offset+sidx.first_offset+sidx.size;var segments=[];var segment=void 0,end=void 0,duration=void 0,size=void 0;for(var i=0;i<len;i++){duration=refs[i].subsegment_duration;size=refs[i].referenced_size;segment=new _Segment2.default();// note that we don't explicitly set segment.media as this will be
// computed when all BaseURLs are resolved later
segment.duration=duration;segment.startTime=time;segment.timescale=timescale;end=start+size-1;segment.mediaRange=start+'-'+end;segments.push(segment);time+=duration;start+=size;}return segments;}function getFragmentRequest(info){if(!info.url){return;}var request=new _FragmentRequest2.default();request.setInfo(info);return request;}function onLoaded(streamId,mediaType,segments,representation){eventBus.trigger(events.SEGMENTS_LOADED,{segments:segments,representation:representation,error:segments?undefined:new _DashJSError2.default(errors.SEGMENT_BASE_LOADER_ERROR_CODE,errors.SEGMENT_BASE_LOADER_ERROR_MESSAGE)},{streamId:streamId,mediaType:mediaType});}instance={setConfig:setConfig,initialize:initialize,loadInitialization:loadInitialization,loadSegments:loadSegments,reset:reset};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */SegmentBaseLoader.__dashjs_factory_name='SegmentBaseLoader';exports.default=_FactoryMaker2.default.getSingletonFactory(SegmentBaseLoader);


},{"./vo/Segment":"../node_modules/dashjs/build/es5/src/dash/vo/Segment.js","../streaming/vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js","../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../streaming/vo/FragmentRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/FragmentRequest.js","../streaming/net/URLLoader":"../node_modules/dashjs/build/es5/src/streaming/net/URLLoader.js"}],"../node_modules/dashjs/build/es5/src/streaming/utils/EBMLParser.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * Creates an instance of an EBMLParser class which implements a large subset
 * of the functionality required to parse Matroska EBML
 *
 * @param {Object} config object with data member which is the buffer to parse
 * @ignore
 */function EBMLParser(config){config=config||{};var instance=void 0;var data=new DataView(config.data);var pos=0;function getPos(){return pos;}function setPos(value){pos=value;}/**
     * Consumes an EBML tag from the data stream.
     *
     * @param {Object} tag to parse, A tag is an object with at least a {number} tag and
     * {boolean} required flag.
     * @param {boolean} test whether or not the function should throw if a required
     * tag is not found
     * @return {boolean} whether or not the tag was found
     * @throws will throw an exception if a required tag is not found and test
     * param is false or undefined, or if the stream is malformed.
     * @memberof EBMLParser
     */function consumeTag(tag,test){var found=true;var bytesConsumed=0;var p1=void 0,p2=void 0;if(test===undefined){test=false;}if(tag.tag>0xFFFFFF){if(data.getUint32(pos)!==tag.tag){found=false;}bytesConsumed=4;}else if(tag.tag>0xFFFF){// 3 bytes
p1=data.getUint16(pos);p2=data.getUint8(pos+2);// shift p1 over a byte and add p2
if(p1*256+p2!==tag.tag){found=false;}bytesConsumed=3;}else if(tag.tag>0xFF){if(data.getUint16(pos)!==tag.tag){found=false;}bytesConsumed=2;}else{if(data.getUint8(pos)!==tag.tag){found=false;}bytesConsumed=1;}if(!found&&tag.required&&!test){throw new Error('required tag not found');}if(found){pos+=bytesConsumed;}return found;}/**
     * Consumes an EBML tag from the data stream.   If the tag is found then this
     * function will also remove the size field which follows the tag from the
     * data stream.
     *
     * @param {Object} tag to parse, A tag is an object with at least a {number} tag and
     * {boolean} required flag.
     * @param {boolean} test whether or not the function should throw if a required
     * tag is not found
     * @return {boolean} whether or not the tag was found
     * @throws will throw an exception if a required tag is not found and test
     * param is false or undefined, or if the stream is malformedata.
     * @memberof EBMLParser
     */function consumeTagAndSize(tag,test){var found=consumeTag(tag,test);if(found){getMatroskaCodedNum();}return found;}/**
     * Consumes an EBML tag from the data stream.   If the tag is found then this
     * function will also remove the size field which follows the tag from the
     * data stream.  It will use the value of the size field to parse a binary
     * field, using a parser defined in the tag itself
     *
     * @param {Object} tag to parse, A tag is an object with at least a {number} tag,
     * {boolean} required flag, and a parse function which takes a size parameter
     * @return {boolean} whether or not the tag was found
     * @throws will throw an exception if a required tag is not found,
     * or if the stream is malformed
     * @memberof EBMLParser
     */function parseTag(tag){var size=void 0;consumeTag(tag);size=getMatroskaCodedNum();return instance[tag.parse](size);}/**
     * Consumes an EBML tag from the data stream.   If the tag is found then this
     * function will also remove the size field which follows the tag from the
     * data stream.  It will use the value of the size field to skip over the
     * entire section of EBML encapsulated by the tag.
     *
     * @param {Object} tag to parse, A tag is an object with at least a {number} tag, and
     * {boolean} required flag
     * @param {boolean} test a flag to indicate if an exception should be thrown
     * if a required tag is not found
     * @return {boolean} whether or not the tag was found
     * @throws will throw an exception if a required tag is not found and test is
     * false or undefined or if the stream is malformed
     * @memberof EBMLParser
     */function skipOverElement(tag,test){var found=consumeTag(tag,test);var headerSize=void 0;if(found){headerSize=getMatroskaCodedNum();pos+=headerSize;}return found;}/**
     * Returns and consumes a number encoded according to the Matroska EBML
     * specification from the bitstream.
     *
     * @param {boolean} retainMSB whether or not to retain the Most Significant Bit (the
     * first 1). this is usually true when reading Tag IDs.
     * @return {number} the decoded number
     * @throws will throw an exception if the bit stream is malformed or there is
     * not enough data
     * @memberof EBMLParser
     */function getMatroskaCodedNum(retainMSB){var bytesUsed=1;var mask=0x80;var maxBytes=8;var extraBytes=-1;var num=0;var ch=data.getUint8(pos);var i=0;for(i=0;i<maxBytes;i+=1){if((ch&mask)===mask){num=retainMSB===undefined?ch&~mask:ch;extraBytes=i;break;}mask>>=1;}for(i=0;i<extraBytes;i+=1,bytesUsed+=1){num=num<<8|0xff&data.getUint8(pos+bytesUsed);}pos+=bytesUsed;return num;}/**
     * Returns and consumes a float from the bitstream.
     *
     * @param {number} size 4 or 8 byte floats are supported
     * @return {number} the decoded number
     * @throws will throw an exception if the bit stream is malformed or there is
     * not enough data
     * @memberof EBMLParser
     */function getMatroskaFloat(size){var outFloat=void 0;switch(size){case 4:outFloat=data.getFloat32(pos);pos+=4;break;case 8:outFloat=data.getFloat64(pos);pos+=8;break;}return outFloat;}/**
     * Consumes and returns an unsigned int from the bitstream.
     *
     * @param {number} size 1 to 8 bytes
     * @return {number} the decoded number
     * @throws will throw an exception if the bit stream is malformed or there is
     * not enough data
     * @memberof EBMLParser
     */function getMatroskaUint(size){var val=0;for(var i=0;i<size;i+=1){val<<=8;val|=data.getUint8(pos+i)&0xff;}pos+=size;return val;}/**
     * Tests whether there is more data in the bitstream for parsing
     *
     * @return {boolean} whether there is more data to parse
     * @memberof EBMLParser
     */function moreData(){return pos<data.byteLength;}instance={getPos:getPos,setPos:setPos,consumeTag:consumeTag,consumeTagAndSize:consumeTagAndSize,parseTag:parseTag,skipOverElement:skipOverElement,getMatroskaCodedNum:getMatroskaCodedNum,getMatroskaFloat:getMatroskaFloat,getMatroskaUint:getMatroskaUint,moreData:moreData};return instance;}EBMLParser.__dashjs_factory_name='EBMLParser';exports.default=_FactoryMaker2.default.getClassFactory(EBMLParser);


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/dash/WebmSegmentBaseLoader.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _EBMLParser=require('../streaming/utils/EBMLParser');var _EBMLParser2=_interopRequireDefault(_EBMLParser);var _Constants=require('../streaming/constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _FactoryMaker=require('../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Segment=require('./vo/Segment');var _Segment2=_interopRequireDefault(_Segment);var _FragmentRequest=require('../streaming/vo/FragmentRequest');var _FragmentRequest2=_interopRequireDefault(_FragmentRequest);var _URLLoader=require('../streaming/net/URLLoader');var _URLLoader2=_interopRequireDefault(_URLLoader);var _DashJSError=require('../streaming/vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function WebmSegmentBaseLoader(){var context=this.context;var instance=void 0,logger=void 0,WebM=void 0,errHandler=void 0,requestModifier=void 0,dashMetrics=void 0,mediaPlayerModel=void 0,urlLoader=void 0,settings=void 0,eventBus=void 0,events=void 0,errors=void 0,baseURLController=void 0;function setup(){WebM={EBML:{tag:0x1A45DFA3,required:true},Segment:{tag:0x18538067,required:true,SeekHead:{tag:0x114D9B74,required:true},Info:{tag:0x1549A966,required:true,TimecodeScale:{tag:0x2AD7B1,required:true,parse:'getMatroskaUint'},Duration:{tag:0x4489,required:true,parse:'getMatroskaFloat'}},Tracks:{tag:0x1654AE6B,required:true},Cues:{tag:0x1C53BB6B,required:true,CuePoint:{tag:0xBB,required:true,CueTime:{tag:0xB3,required:true,parse:'getMatroskaUint'},CueTrackPositions:{tag:0xB7,required:true,CueTrack:{tag:0xF7,required:true,parse:'getMatroskaUint'},CueClusterPosition:{tag:0xF1,required:true,parse:'getMatroskaUint'}}}}},Void:{tag:0xEC,required:true}};}function initialize(){urlLoader=(0,_URLLoader2.default)(context).create({errHandler:errHandler,dashMetrics:dashMetrics,mediaPlayerModel:mediaPlayerModel,requestModifier:requestModifier,useFetch:settings?settings.get().streaming.lowLatencyEnabled:null,errors:errors});}function setConfig(config){if(!config.baseURLController||!config.dashMetrics||!config.mediaPlayerModel||!config.errHandler){throw new Error(_Constants2.default.MISSING_CONFIG_ERROR);}baseURLController=config.baseURLController;dashMetrics=config.dashMetrics;mediaPlayerModel=config.mediaPlayerModel;errHandler=config.errHandler;settings=config.settings;events=config.events;eventBus=config.eventBus;errors=config.errors;logger=config.debug.getLogger(instance);requestModifier=config.requestModifier;}function parseCues(ab){var cues=[];var ebmlParser=(0,_EBMLParser2.default)(context).create({data:ab});var cue=void 0,cueTrack=void 0;ebmlParser.consumeTagAndSize(WebM.Segment.Cues);while(ebmlParser.moreData()&&ebmlParser.consumeTagAndSize(WebM.Segment.Cues.CuePoint,true)){cue={};cue.CueTime=ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTime);cue.CueTracks=[];while(ebmlParser.moreData()&&ebmlParser.consumeTag(WebM.Segment.Cues.CuePoint.CueTrackPositions,true)){var cueTrackPositionSize=ebmlParser.getMatroskaCodedNum();var startPos=ebmlParser.getPos();cueTrack={};cueTrack.Track=ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTrackPositions.CueTrack);if(cueTrack.Track===0){throw new Error('Cue track cannot be 0');}cueTrack.ClusterPosition=ebmlParser.parseTag(WebM.Segment.Cues.CuePoint.CueTrackPositions.CueClusterPosition);cue.CueTracks.push(cueTrack);// we're not interested any other elements - skip remaining bytes
ebmlParser.setPos(startPos+cueTrackPositionSize);}if(cue.CueTracks.length===0){throw new Error('Mandatory cuetrack not found');}cues.push(cue);}if(cues.length===0){throw new Error('mandatory cuepoint not found');}return cues;}function parseSegments(data,segmentStart,segmentEnd,segmentDuration){var duration=void 0,parsed=void 0,segments=void 0,segment=void 0,i=void 0,len=void 0,start=void 0,end=void 0;parsed=parseCues(data);segments=[];// we are assuming one cue track per cue point
// both duration and media range require the i + 1 segment
// the final segment has to use global segment parameters
for(i=0,len=parsed.length;i<len;i+=1){segment=new _Segment2.default();duration=0;if(i<parsed.length-1){duration=parsed[i+1].CueTime-parsed[i].CueTime;}else{duration=segmentDuration-parsed[i].CueTime;}// note that we don't explicitly set segment.media as this will be
// computed when all BaseURLs are resolved later
segment.duration=duration;segment.startTime=parsed[i].CueTime;segment.timescale=1000;// hardcoded for ms
start=parsed[i].CueTracks[0].ClusterPosition+segmentStart;if(i<parsed.length-1){end=parsed[i+1].CueTracks[0].ClusterPosition+segmentStart-1;}else{end=segmentEnd-1;}segment.mediaRange=start+'-'+end;segments.push(segment);}logger.debug('Parsed cues: '+segments.length+' cues.');return segments;}function parseEbmlHeader(data,media,theRange,callback){if(!data||data.byteLength===0){callback(null);return;}var ebmlParser=(0,_EBMLParser2.default)(context).create({data:data});var duration=void 0,segments=void 0,segmentEnd=void 0,segmentStart=void 0;var parts=theRange?theRange.split('-'):null;var request=null;var info={url:media,range:{start:parts?parseFloat(parts[0]):null,end:parts?parseFloat(parts[1]):null},request:request};logger.debug('Parse EBML header: '+info.url);// skip over the header itself
ebmlParser.skipOverElement(WebM.EBML);ebmlParser.consumeTag(WebM.Segment);// segments start here
segmentEnd=ebmlParser.getMatroskaCodedNum();segmentEnd+=ebmlParser.getPos();segmentStart=ebmlParser.getPos();// skip over any top level elements to get to the segment info
while(ebmlParser.moreData()&&!ebmlParser.consumeTagAndSize(WebM.Segment.Info,true)){if(!(ebmlParser.skipOverElement(WebM.Segment.SeekHead,true)||ebmlParser.skipOverElement(WebM.Segment.Tracks,true)||ebmlParser.skipOverElement(WebM.Segment.Cues,true)||ebmlParser.skipOverElement(WebM.Void,true))){throw new Error('no valid top level element found');}}// we only need one thing in segment info, duration
while(duration===undefined){var infoTag=ebmlParser.getMatroskaCodedNum(true);var infoElementSize=ebmlParser.getMatroskaCodedNum();switch(infoTag){case WebM.Segment.Info.Duration.tag:duration=ebmlParser[WebM.Segment.Info.Duration.parse](infoElementSize);break;default:ebmlParser.setPos(ebmlParser.getPos()+infoElementSize);break;}}// once we have what we need from segment info, we jump right to the
// cues
request=getFragmentRequest(info);var onload=function onload(response){segments=parseSegments(response,segmentStart,segmentEnd,duration);callback(segments);};var onloadend=function onloadend(){logger.error('Download Error: Cues '+info.url);callback(null);};urlLoader.load({request:request,success:onload,error:onloadend});logger.debug('Perform cues load: '+info.url+' bytes='+info.range.start+'-'+info.range.end);}function checkConfig(){if(!baseURLController||!baseURLController.hasOwnProperty('resolve')){throw new Error('setConfig function has to be called previously');}}function loadInitialization(streamId,mediaType,representation,loadingInfo){checkConfig();var request=null;var baseUrl=representation?baseURLController.resolve(representation.path):null;var initRange=representation?representation.range.split('-'):null;var info=loadingInfo||{range:{start:initRange?parseFloat(initRange[0]):null,end:initRange?parseFloat(initRange[1]):null},request:request,url:baseUrl?baseUrl.url:undefined,init:true,mediaType:mediaType};logger.info('Start loading initialization.');request=getFragmentRequest(info);var onload=function onload(){// note that we don't explicitly set rep.initialization as this
// will be computed when all BaseURLs are resolved later
eventBus.trigger(events.INITIALIZATION_LOADED,{representation:representation},{streamId:streamId,mediaType:mediaType});};var onloadend=function onloadend(){eventBus.trigger(events.INITIALIZATION_LOADED,{representation:representation},{streamId:streamId,mediaType:mediaType});};urlLoader.load({request:request,success:onload,error:onloadend});logger.debug('Perform init load: '+info.url);}function loadSegments(streamId,mediaType,representation,theRange,callback){checkConfig();var request=null;var baseUrl=representation?baseURLController.resolve(representation.path):null;var media=baseUrl?baseUrl.url:undefined;var bytesToLoad=8192;var info={bytesLoaded:0,bytesToLoad:bytesToLoad,range:{start:0,end:bytesToLoad},request:request,url:media,init:false,mediaType:mediaType};callback=!callback?onLoaded:callback;request=getFragmentRequest(info);// first load the header, but preserve the manifest range so we can
// load the cues after parsing the header
// NOTE: we expect segment info to appear in the first 8192 bytes
logger.debug('Parsing ebml header');var onload=function onload(response){parseEbmlHeader(response,media,theRange,function(segments){callback(streamId,mediaType,segments,representation);});};var onloadend=function onloadend(){callback(streamId,mediaType,null,representation);};urlLoader.load({request:request,success:onload,error:onloadend});}function onLoaded(streamId,mediaType,segments,representation){eventBus.trigger(events.SEGMENTS_LOADED,{segments:segments,representation:representation,error:segments?undefined:new _DashJSError2.default(errors.SEGMENT_BASE_LOADER_ERROR_CODE,errors.SEGMENT_BASE_LOADER_ERROR_MESSAGE)},{streamId:streamId,mediaType:mediaType});}function getFragmentRequest(info){var request=new _FragmentRequest2.default();request.setInfo(info);return request;}function reset(){errHandler=null;requestModifier=null;}instance={setConfig:setConfig,initialize:initialize,loadInitialization:loadInitialization,loadSegments:loadSegments,reset:reset};setup();return instance;}WebmSegmentBaseLoader.__dashjs_factory_name='WebmSegmentBaseLoader';exports.default=_FactoryMaker2.default.getSingletonFactory(WebmSegmentBaseLoader);


},{"../streaming/utils/EBMLParser":"../node_modules/dashjs/build/es5/src/streaming/utils/EBMLParser.js","../streaming/constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","./vo/Segment":"../node_modules/dashjs/build/es5/src/dash/vo/Segment.js","../streaming/vo/FragmentRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/FragmentRequest.js","../streaming/net/URLLoader":"../node_modules/dashjs/build/es5/src/streaming/net/URLLoader.js","../streaming/vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js"}],"../node_modules/dashjs/build/es5/src/dash/controllers/SegmentBaseController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _SegmentBaseLoader=require('../SegmentBaseLoader');var _SegmentBaseLoader2=_interopRequireDefault(_SegmentBaseLoader);var _WebmSegmentBaseLoader=require('../WebmSegmentBaseLoader');var _WebmSegmentBaseLoader2=_interopRequireDefault(_WebmSegmentBaseLoader);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function SegmentBaseController(config){config=config||{};var context=this.context;var eventBus=config.eventBus;var events=config.events;var dashMetrics=config.dashMetrics;var mediaPlayerModel=config.mediaPlayerModel;var errHandler=config.errHandler;var baseURLController=config.baseURLController;var debug=config.debug;var boxParser=config.boxParser;var requestModifier=config.requestModifier;var errors=config.errors;var instance=void 0,segmentBaseLoader=void 0,webmSegmentBaseLoader=void 0;function setup(){segmentBaseLoader=(0,_SegmentBaseLoader2.default)(context).getInstance();webmSegmentBaseLoader=(0,_WebmSegmentBaseLoader2.default)(context).getInstance();segmentBaseLoader.setConfig({baseURLController:baseURLController,dashMetrics:dashMetrics,mediaPlayerModel:mediaPlayerModel,errHandler:errHandler,eventBus:eventBus,events:events,errors:errors,debug:debug,boxParser:boxParser,requestModifier:requestModifier});webmSegmentBaseLoader.setConfig({baseURLController:baseURLController,dashMetrics:dashMetrics,mediaPlayerModel:mediaPlayerModel,errHandler:errHandler,eventBus:eventBus,events:events,errors:errors,debug:debug,requestModifier:requestModifier});}function isWebM(mimeType){var type=mimeType?mimeType.split('/')[1]:'';return'webm'===type.toLowerCase();}function initialize(){eventBus.on(events.SEGMENTBASE_INIT_REQUEST_NEEDED,onInitSegmentBaseNeeded,instance);eventBus.on(events.SEGMENTBASE_SEGMENTSLIST_REQUEST_NEEDED,onSegmentsListSegmentBaseNeeded,instance);segmentBaseLoader.initialize();webmSegmentBaseLoader.initialize();}function onInitSegmentBaseNeeded(e){if(isWebM(e.mimeType)){webmSegmentBaseLoader.loadInitialization(e.streamId,e.mediaType,e.representation);}else{segmentBaseLoader.loadInitialization(e.streamId,e.mediaType,e.representation);}}function onSegmentsListSegmentBaseNeeded(e){if(isWebM(e.mimeType)){webmSegmentBaseLoader.loadSegments(e.streamId,e.mediaType,e.representation,e.representation?e.representation.indexRange:null,e.callback);}else{segmentBaseLoader.loadSegments(e.streamId,e.mediaType,e.representation,e.representation?e.representation.indexRange:null,e.callback);}}function reset(){eventBus.off(events.SEGMENTBASE_INIT_REQUEST_NEEDED,onInitSegmentBaseNeeded,instance);eventBus.off(events.SEGMENTBASE_SEGMENTSLIST_REQUEST_NEEDED,onSegmentsListSegmentBaseNeeded,instance);}instance={initialize:initialize,reset:reset};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */SegmentBaseController.__dashjs_factory_name='SegmentBaseController';var factory=_FactoryMaker2.default.getSingletonFactory(SegmentBaseController);exports.default=factory;


},{"../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../SegmentBaseLoader":"../node_modules/dashjs/build/es5/src/dash/SegmentBaseLoader.js","../WebmSegmentBaseLoader":"../node_modules/dashjs/build/es5/src/dash/WebmSegmentBaseLoader.js"}],"../node_modules/dashjs/build/es5/src/dash/vo/RepresentationInfo.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var RepresentationInfo=function RepresentationInfo(){_classCallCheck(this,RepresentationInfo);this.id=null;this.quality=null;this.DVRWindow=null;this.fragmentDuration=null;this.mediaInfo=null;this.MSETimeOffset=null;};exports.default=RepresentationInfo;


},{}],"../node_modules/dashjs/build/es5/src/dash/vo/MediaInfo.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var MediaInfo=function MediaInfo(){_classCallCheck(this,MediaInfo);this.id=null;this.index=null;this.type=null;this.streamInfo=null;this.representationCount=0;this.lang=null;this.viewpoint=null;this.accessibility=null;this.audioChannelConfiguration=null;this.roles=null;this.codec=null;this.mimeType=null;this.contentProtection=null;this.isText=false;this.KID=null;this.bitrateList=null;};exports.default=MediaInfo;


},{}],"../node_modules/dashjs/build/es5/src/dash/vo/StreamInfo.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var StreamInfo=function StreamInfo(){_classCallCheck(this,StreamInfo);this.id=null;this.index=null;this.start=NaN;this.duration=NaN;this.manifestInfo=null;this.isLast=true;};exports.default=StreamInfo;


},{}],"../node_modules/dashjs/build/es5/src/dash/vo/ManifestInfo.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var ManifestInfo=function ManifestInfo(){_classCallCheck(this,ManifestInfo);this.DVRWindowSize=NaN;this.loadedTime=null;this.availableFrom=null;this.minBufferTime=NaN;this.duration=NaN;this.isDynamic=false;this.maxFragmentDuration=null;};exports.default=ManifestInfo;


},{}],"../node_modules/dashjs/build/es5/src/dash/DashAdapter.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _DashConstants=require('./constants/DashConstants');var _DashConstants2=_interopRequireDefault(_DashConstants);var _RepresentationInfo=require('./vo/RepresentationInfo');var _RepresentationInfo2=_interopRequireDefault(_RepresentationInfo);var _MediaInfo=require('./vo/MediaInfo');var _MediaInfo2=_interopRequireDefault(_MediaInfo);var _StreamInfo=require('./vo/StreamInfo');var _StreamInfo2=_interopRequireDefault(_StreamInfo);var _ManifestInfo=require('./vo/ManifestInfo');var _ManifestInfo2=_interopRequireDefault(_ManifestInfo);var _Event=require('./vo/Event');var _Event2=_interopRequireDefault(_Event);var _FactoryMaker=require('../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _DashManifestModel=require('./models/DashManifestModel');var _DashManifestModel2=_interopRequireDefault(_DashManifestModel);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * @module DashAdapter
 *//**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function DashAdapter(){var instance=void 0,dashManifestModel=void 0,voPeriods=void 0,voAdaptations=void 0,currentMediaInfo=void 0,constants=void 0,cea608parser=void 0;var context=this.context;var PROFILE_DVB='urn:dvb:dash:profile:dvb-dash:2014';function setup(){dashManifestModel=(0,_DashManifestModel2.default)(context).getInstance();reset();}// #region PUBLIC FUNCTIONS
// --------------------------------------------------
function getVoAdaptations(){return voAdaptations;}function getVoPeriods(){return voPeriods;}function setConfig(config){if(!config)return;if(config.constants){constants=config.constants;}if(config.cea608parser){cea608parser=config.cea608parser;}if(config.errHandler){dashManifestModel.setConfig({errHandler:config.errHandler});}if(config.BASE64){dashManifestModel.setConfig({BASE64:config.BASE64});}}/**
     * Creates an instance of RepresentationInfo based on a representation value object
     * @param {object} voRepresentation
     * @returns {RepresentationInfo|null} representationInfo
     * @memberOf module:DashAdapter
     * @instance
     * @ignore
     */function convertRepresentationToRepresentationInfo(voRepresentation){if(voRepresentation){var representationInfo=new _RepresentationInfo2.default();var realAdaptation=voRepresentation.adaptation.period.mpd.manifest.Period_asArray[voRepresentation.adaptation.period.index].AdaptationSet_asArray[voRepresentation.adaptation.index];var realRepresentation=dashManifestModel.getRepresentationFor(voRepresentation.index,realAdaptation);representationInfo.id=voRepresentation.id;representationInfo.quality=voRepresentation.index;representationInfo.bandwidth=dashManifestModel.getBandwidth(realRepresentation);representationInfo.DVRWindow=voRepresentation.segmentAvailabilityRange;representationInfo.fragmentDuration=voRepresentation.segmentDuration||(voRepresentation.segments&&voRepresentation.segments.length>0?voRepresentation.segments[0].duration:NaN);representationInfo.MSETimeOffset=voRepresentation.MSETimeOffset;representationInfo.mediaInfo=convertAdaptationToMediaInfo(voRepresentation.adaptation);return representationInfo;}else{return null;}}/**
     * Returns a MediaInfo object for a given media type.
     * @param {object} streamInfo
     * @param {MediaType }type
     * @returns {null|MediaInfo} mediaInfo
     * @memberOf module:DashAdapter
     * @instance
     */function getMediaInfoForType(streamInfo,type){if(voPeriods.length===0||!streamInfo){return null;}var selectedVoPeriod=getPeriodForStreamInfo(streamInfo,voPeriods);if(!selectedVoPeriod)return null;var periodId=selectedVoPeriod.id;voAdaptations[periodId]=voAdaptations[periodId]||dashManifestModel.getAdaptationsForPeriod(selectedVoPeriod);var realAdaptation=getAdaptationForType(streamInfo.index,type,streamInfo);if(!realAdaptation)return null;var idx=dashManifestModel.getIndexForAdaptation(realAdaptation,voPeriods[0].mpd.manifest,streamInfo.index);return convertAdaptationToMediaInfo(voAdaptations[periodId][idx]);}/**
     * Checks if the role of the specified AdaptationSet is set to main
     * @param {object} adaptation
     * @returns {boolean}
     * @memberOf module:DashAdapter
     * @instance
     */function getIsMain(adaptation){return dashManifestModel.getRolesForAdaptation(adaptation).filter(function(role){return role.value===_DashConstants2.default.MAIN;})[0];}/**
     * Returns the AdaptationSet for a given period and a given mediaType.
     * @param {number} periodIndex
     * @param {MediaType} type
     * @param {object} streamInfo
     * @returns {null|object} adaptation
     * @memberOf module:DashAdapter
     * @instance
     */function getAdaptationForType(periodIndex,type,streamInfo){var adaptations=dashManifestModel.getAdaptationsForType(voPeriods[0].mpd.manifest,periodIndex,type);if(!adaptations||adaptations.length===0)return null;if(adaptations.length>1&&streamInfo){var allMediaInfoForType=getAllMediaInfoForType(streamInfo,type);if(currentMediaInfo[streamInfo.id]&&currentMediaInfo[streamInfo.id][type]){for(var i=0,ln=adaptations.length;i<ln;i++){if(areMediaInfosEqual(currentMediaInfo[streamInfo.id][type],allMediaInfoForType[i])){return adaptations[i];}}}for(var _i=0,_ln=adaptations.length;_i<_ln;_i++){if(getIsMain(adaptations[_i])){return adaptations[_i];}}}return adaptations[0];}/**
     * Compares two mediaInfo objects
     * @param {MediaInfo} mInfoOne
     * @param {MediaInfo} mInfoTwo
     * @returns {boolean}
     */function areMediaInfosEqual(mInfoOne,mInfoTwo){if(!mInfoOne||!mInfoTwo){return false;}var sameId=mInfoOne.id===mInfoTwo.id;var sameViewpoint=mInfoOne.viewpoint===mInfoTwo.viewpoint;var sameLang=mInfoOne.lang===mInfoTwo.lang;var sameRoles=mInfoOne.roles.toString()===mInfoTwo.roles.toString();var sameAccessibility=mInfoOne.accessibility.toString()===mInfoTwo.accessibility.toString();var sameAudioChannelConfiguration=mInfoOne.audioChannelConfiguration.toString()===mInfoTwo.audioChannelConfiguration.toString();return sameId&&sameViewpoint&&sameLang&&sameRoles&&sameAccessibility&&sameAudioChannelConfiguration;}/**
     * Returns the mediaInfo for a given mediaType
     * @param {object} streamInfo
     * @param {MediaType} type
     * @param {object} externalManifest Set to null or undefined if no external manifest is to be used
     * @returns {Array} mediaArr
     * @memberOf module:DashAdapter
     * @instance
     */function getAllMediaInfoForType(streamInfo,type,externalManifest){var voLocalPeriods=voPeriods;var manifest=externalManifest;var mediaArr=[];var data=void 0,media=void 0,idx=void 0,i=void 0,j=void 0,ln=void 0,periodId=void 0;if(manifest){checkConfig();voLocalPeriods=getRegularPeriods(manifest);}else{if(voPeriods.length>0){manifest=voPeriods[0].mpd.manifest;}else{return mediaArr;}}var selectedVoPeriod=getPeriodForStreamInfo(streamInfo,voLocalPeriods);if(selectedVoPeriod){periodId=selectedVoPeriod.id;}var adaptationsForType=dashManifestModel.getAdaptationsForType(manifest,streamInfo?streamInfo.index:null,type!==constants.EMBEDDED_TEXT?type:constants.VIDEO);if(!adaptationsForType||adaptationsForType.length===0)return mediaArr;voAdaptations[periodId]=voAdaptations[periodId]||dashManifestModel.getAdaptationsForPeriod(selectedVoPeriod);for(i=0,ln=adaptationsForType.length;i<ln;i++){data=adaptationsForType[i];idx=dashManifestModel.getIndexForAdaptation(data,manifest,streamInfo.index);media=convertAdaptationToMediaInfo(voAdaptations[periodId][idx]);if(type===constants.EMBEDDED_TEXT){var accessibilityLength=media.accessibility.length;for(j=0;j<accessibilityLength;j++){if(!media){continue;}var accessibility=media.accessibility[j];if(accessibility.indexOf('cea-608:')===0){var value=accessibility.substring(8);var parts=value.split(';');if(parts[0].substring(0,2)==='CC'){for(j=0;j<parts.length;j++){if(!media){media=convertAdaptationToMediaInfo.call(this,voAdaptations[periodId][idx]);}convertVideoInfoToEmbeddedTextInfo(media,parts[j].substring(0,3),parts[j].substring(4));mediaArr.push(media);media=null;}}else{for(j=0;j<parts.length;j++){// Only languages for CC1, CC2, ...
if(!media){media=convertAdaptationToMediaInfo.call(this,voAdaptations[periodId][idx]);}convertVideoInfoToEmbeddedTextInfo(media,'CC'+(j+1),parts[j]);mediaArr.push(media);media=null;}}}else if(accessibility.indexOf('cea-608')===0){// Nothing known. We interpret it as CC1=eng
convertVideoInfoToEmbeddedTextInfo(media,constants.CC1,'eng');mediaArr.push(media);media=null;}}}else if(type===constants.IMAGE){convertVideoInfoToThumbnailInfo(media);mediaArr.push(media);media=null;}else if(media){mediaArr.push(media);}}return mediaArr;}/**
     * @param {object} newManifest
     * @returns {*}
     * @memberOf module:DashAdapter
     * @instance
     * @ignore
     */function updatePeriods(newManifest){if(!newManifest)return null;checkConfig();voPeriods=getRegularPeriods(newManifest);voAdaptations={};}/**
     * @param {object} externalManifest
     * @param {number} maxStreamsInfo
     * @returns {Array} streams
     * @memberOf module:DashAdapter
     * @instance
     * @ignore
     */function getStreamsInfo(externalManifest,maxStreamsInfo){var streams=[];var voLocalPeriods=voPeriods;//if manifest is defined, getStreamsInfo is for an outside manifest, not the current one
if(externalManifest){checkConfig();voLocalPeriods=getRegularPeriods(externalManifest);}if(voLocalPeriods.length>0){if(!maxStreamsInfo||maxStreamsInfo>voLocalPeriods.length){maxStreamsInfo=voLocalPeriods.length;}for(var i=0;i<maxStreamsInfo;i++){streams.push(convertPeriodToStreamInfo(voLocalPeriods[i]));}}return streams;}/**
     *
     * @param {object} streamInfo
     * @param {object} mediaInfo
     * @returns {object} realAdaptation
     * @memberOf module:DashAdapter
     * @instance
     */function getRealAdaptation(streamInfo,mediaInfo){var id=void 0,realAdaptation=void 0;var selectedVoPeriod=getPeriodForStreamInfo(streamInfo,voPeriods);id=mediaInfo?mediaInfo.id:null;if(voPeriods.length>0&&selectedVoPeriod){realAdaptation=id?dashManifestModel.getAdaptationForId(id,voPeriods[0].mpd.manifest,selectedVoPeriod.index):dashManifestModel.getAdaptationForIndex(mediaInfo?mediaInfo.index:null,voPeriods[0].mpd.manifest,selectedVoPeriod.index);}return realAdaptation;}/**
     * Returns all voRepresentations for a given mediaInfo
     * @param {object} mediaInfo
     * @returns {Array} voReps
     * @memberOf module:DashAdapter
     * @instance
     */function getVoRepresentations(mediaInfo){var voReps=void 0;var voAdaptation=getAdaptationForMediaInfo(mediaInfo);voReps=dashManifestModel.getRepresentationsForAdaptation(voAdaptation);return voReps;}/**
     *
     * @param {object} eventBox
     * @param {object} eventStreams
     * @param {number} mediaStartTime
     * @param {object} voRepresentation
     * @returns {null|Event}
     * @memberOf module:DashAdapter
     * @instance
     * @ignore
     */function getEvent(eventBox,eventStreams,mediaStartTime,voRepresentation){try{if(!eventBox||!eventStreams||isNaN(mediaStartTime)||!voRepresentation){return null;}var event=new _Event2.default();var schemeIdUri=eventBox.scheme_id_uri;var value=eventBox.value;var timescale=eventBox.timescale||1;var presentationTimeOffset=voRepresentation.presentationTimeOffset||0;var periodStart=voRepresentation.adaptation.period.start;var presentationTimeDelta=eventBox.presentation_time_delta/timescale;// In case of version 1 events the presentation_time is parsed as presentation_time_delta
var calculatedPresentationTime=void 0;if(eventBox.version===0){calculatedPresentationTime=periodStart+mediaStartTime-presentationTimeOffset+presentationTimeDelta;}else{calculatedPresentationTime=periodStart-presentationTimeOffset+presentationTimeDelta;}var duration=eventBox.event_duration;var id=eventBox.id;var messageData=eventBox.message_data;if(!eventStreams[schemeIdUri+'/'+value]){return null;}event.eventStream=eventStreams[schemeIdUri+'/'+value];event.eventStream.value=value;event.eventStream.timescale=timescale;event.duration=duration;event.id=id;event.calculatedPresentationTime=calculatedPresentationTime;event.messageData=messageData;event.presentationTimeDelta=presentationTimeDelta;return event;}catch(e){return null;}}/**
     *
     * @param {object} info
     * @param {object} voRepresentation
     * @returns {Array}
     * @memberOf module:DashAdapter
     * @instance
     * @ignore
     */function getEventsFor(info,voRepresentation){var events=[];if(voPeriods.length>0){var manifest=voPeriods[0].mpd.manifest;if(info instanceof _StreamInfo2.default){events=dashManifestModel.getEventsForPeriod(getPeriodForStreamInfo(info,voPeriods));}else if(info instanceof _MediaInfo2.default){events=dashManifestModel.getEventStreamForAdaptationSet(manifest,getAdaptationForMediaInfo(info));}else if(info instanceof _RepresentationInfo2.default){events=dashManifestModel.getEventStreamForRepresentation(manifest,voRepresentation);}}return events;}/**
     *
     * @param {number} streamId
     * @param {MediaType} type
     * @param {object} mediaInfo
     * @memberOf module:DashAdapter
     * @instance
     * @ignore
     */function setCurrentMediaInfo(streamId,type,mediaInfo){currentMediaInfo[streamId]=currentMediaInfo[streamId]||{};currentMediaInfo[streamId][type]=currentMediaInfo[streamId][type]||{};currentMediaInfo[streamId][type]=mediaInfo;}/**
     *
     * @param {String} type
     * @returns {boolean}
     * @memberOf module:DashAdapter
     * @instance
     * @ignore
     */function getIsTextTrack(type){return dashManifestModel.getIsTextTrack(type);}/**
     * Returns the UTC Timing Sources specified in the manifest
     * @returns {Array} utcTimingSources
     * @memberOf module:DashAdapter
     * @instance
     */function getUTCTimingSources(){var manifest=getManifest();return dashManifestModel.getUTCTimingSources(manifest);}/**
     * Returns the suggestedPresentationDelay as specified in the manifest
     * @returns {String} suggestedPresentationDelay
     * @memberOf module:DashAdapter
     * @instance
     */function getSuggestedPresentationDelay(){var mpd=voPeriods.length>0?voPeriods[0].mpd:null;return dashManifestModel.getSuggestedPresentationDelay(mpd);}/**
     * Returns the availabilityStartTime as specified in the manifest
     * @param {object} externalManifest Omit this value if no external manifest should be used
     * @returns {string} availabilityStartTime
     * @memberOf module:DashAdapter
     * @instance
     */function getAvailabilityStartTime(externalManifest){var mpd=getMpd(externalManifest);return dashManifestModel.getAvailabilityStartTime(mpd);}/**
     * Returns a boolean indicating if the manifest is dynamic or not
     * @param {object} externalManifest Omit this value if no external manifest should be used
     * @returns {boolean}
     * @memberOf module:DashAdapter
     * @instance
     */function getIsDynamic(externalManifest){var manifest=getManifest(externalManifest);return dashManifestModel.getIsDynamic(manifest);}/**
     * Returns the duration of the MPD
     * @param {object} externalManifest Omit this value if no external manifest should be used
     * @returns {number} duration
     * @memberOf module:DashAdapter
     * @instance
     */function getDuration(externalManifest){var manifest=getManifest(externalManifest);return dashManifestModel.getDuration(manifest);}/**
     * Returns all periods of the MPD
     * @param {object} externalManifest Omit this value if no external manifest should be used
     * @returns {Array} periods
     * @memberOf module:DashAdapter
     * @instance
     */function getRegularPeriods(externalManifest){var mpd=getMpd(externalManifest);return dashManifestModel.getRegularPeriods(mpd);}/**
     * Returns an MPD object
     * @param {object} externalManifest Omit this value if no external manifest should be used
     * @returns {object} MPD
     * @memberOf module:DashAdapter
     * @instance
     */function getMpd(externalManifest){var manifest=getManifest(externalManifest);return dashManifestModel.getMpd(manifest);}/**
     * Returns the location element of the MPD
     * @param {object} manifest
     * @returns {String} location
     * @memberOf module:DashAdapter
     * @instance
     */function getLocation(manifest){return dashManifestModel.getLocation(manifest);}/**
     * Returns the manifest update period used for dynamic manifests
     * @param {object} manifest
     * @param {number} latencyOfLastUpdate
     * @returns {NaN|number} manifestUpdatePeriod
     * @memberOf module:DashAdapter
     * @instance
     */function getManifestUpdatePeriod(manifest){var latencyOfLastUpdate=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;return dashManifestModel.getManifestUpdatePeriod(manifest,latencyOfLastUpdate);}/**
     * Checks if the manifest has a DVB profile
     * @param {object} manifest
     * @returns {boolean}
     * @memberOf module:DashAdapter
     * @instance
     * @ignore
     */function getIsDVB(manifest){return dashManifestModel.hasProfile(manifest,PROFILE_DVB);}/**
     *
     * @param {object} node
     * @returns {Array}
     * @memberOf module:DashAdapter
     * @instance
     * @ignore
     */function getBaseURLsFromElement(node){return dashManifestModel.getBaseURLsFromElement(node);}/**
     *
     * @returns {*}
     * @memberOf module:DashAdapter
     * @instance
     * @ignore
     */function getRepresentationSortFunction(){return dashManifestModel.getRepresentationSortFunction();}/**
     * Returns the codec for a given adaptation set and a given representation id.
     * @param {object} adaptation
     * @param {number} representationId
     * @param {boolean} addResolutionInfo Defines whether to include resolution information in the output
     * @returns {String} codec
     * @memberOf module:DashAdapter
     * @instance
     */function getCodec(adaptation,representationId,addResolutionInfo){return dashManifestModel.getCodec(adaptation,representationId,addResolutionInfo);}/**
     * Returns the bandwidth for a given representation id
     * @param {number} representationId
     * @param {number} periodIdx
     * @returns {number} bandwidth
     * @memberOf module:DashAdapter
     * @instance
     */function getBandwidthForRepresentation(representationId,periodIdx){var representation=void 0;var period=getPeriod(periodIdx);representation=findRepresentation(period,representationId);return representation?representation.bandwidth:null;}/**
     * Returns the index for a given representation id
     * @param {string} representationId
     * @param {number} periodIdx
     * @returns {number} index
     * @memberOf module:DashAdapter
     * @instance
     */function getIndexForRepresentation(representationId,periodIdx){var period=getPeriod(periodIdx);return findRepresentationIndex(period,representationId);}/**
     * This method returns the current max index based on what is defined in the MPD.
     *
     * @param {string} bufferType - String 'audio' or 'video',
     * @param {number} periodIdx - Make sure this is the period index not id
     * @return {number}
     * @memberof module:DashAdapter
     * @instance
     */function getMaxIndexForBufferType(bufferType,periodIdx){var period=getPeriod(periodIdx);return findMaxBufferIndex(period,bufferType);}/**
     * Returns the voPeriod object for a given id
     * @param {String} id
     * @returns {object|null}
     */function getPeriodById(id){if(!id||voPeriods.length===0){return null;}var periods=voPeriods.filter(function(p){return p.id===id;});if(periods&&periods.length>0){return periods[0];}return null;}function reset(){voPeriods=[];voAdaptations={};currentMediaInfo={};}// #endregion PUBLIC FUNCTIONS
// #region PRIVATE FUNCTIONS
// --------------------------------------------------
function getManifest(externalManifest){return externalManifest?externalManifest:voPeriods.length>0?voPeriods[0].mpd.manifest:null;}function getAdaptationForMediaInfo(mediaInfo){if(!mediaInfo||!mediaInfo.streamInfo||mediaInfo.streamInfo.id===undefined||!voAdaptations[mediaInfo.streamInfo.id])return null;return voAdaptations[mediaInfo.streamInfo.id][mediaInfo.index];}function getPeriodForStreamInfo(streamInfo,voPeriodsArray){var ln=voPeriodsArray.length;for(var i=0;i<ln;i++){var voPeriod=voPeriodsArray[i];if(streamInfo&&streamInfo.id===voPeriod.id)return voPeriod;}return null;}function convertAdaptationToMediaInfo(adaptation){if(!adaptation){return null;}var mediaInfo=new _MediaInfo2.default();var realAdaptation=adaptation.period.mpd.manifest.Period_asArray[adaptation.period.index].AdaptationSet_asArray[adaptation.index];var viewpoint=void 0;mediaInfo.id=adaptation.id;mediaInfo.index=adaptation.index;mediaInfo.type=adaptation.type;mediaInfo.streamInfo=convertPeriodToStreamInfo(adaptation.period);mediaInfo.representationCount=dashManifestModel.getRepresentationCount(realAdaptation);mediaInfo.labels=dashManifestModel.getLabelsForAdaptation(realAdaptation);mediaInfo.lang=dashManifestModel.getLanguageForAdaptation(realAdaptation);viewpoint=dashManifestModel.getViewpointForAdaptation(realAdaptation);mediaInfo.viewpoint=viewpoint?viewpoint.value:undefined;mediaInfo.accessibility=dashManifestModel.getAccessibilityForAdaptation(realAdaptation).map(function(accessibility){var accessibilityValue=accessibility.value;var accessibilityData=accessibilityValue;if(accessibility.schemeIdUri&&accessibility.schemeIdUri.search('cea-608')>=0&&typeof cea608parser!=='undefined'){if(accessibilityValue){accessibilityData='cea-608:'+accessibilityValue;}else{accessibilityData='cea-608';}mediaInfo.embeddedCaptions=true;}return accessibilityData;});mediaInfo.audioChannelConfiguration=dashManifestModel.getAudioChannelConfigurationForAdaptation(realAdaptation).map(function(audioChannelConfiguration){return audioChannelConfiguration.value;});if(mediaInfo.audioChannelConfiguration.length===0&&Array.isArray(realAdaptation.Representation_asArray)&&realAdaptation.Representation_asArray.length>0){mediaInfo.audioChannelConfiguration=dashManifestModel.getAudioChannelConfigurationForRepresentation(realAdaptation.Representation_asArray[0]).map(function(audioChannelConfiguration){return audioChannelConfiguration.value;});}mediaInfo.roles=dashManifestModel.getRolesForAdaptation(realAdaptation).map(function(role){return role.value;});mediaInfo.codec=dashManifestModel.getCodec(realAdaptation);mediaInfo.mimeType=dashManifestModel.getMimeType(realAdaptation);mediaInfo.contentProtection=dashManifestModel.getContentProtectionData(realAdaptation);mediaInfo.bitrateList=dashManifestModel.getBitrateListForAdaptation(realAdaptation);if(mediaInfo.contentProtection){mediaInfo.contentProtection.forEach(function(item){item.KID=dashManifestModel.getKID(item);});}mediaInfo.isText=dashManifestModel.getIsTextTrack(mediaInfo.mimeType);mediaInfo.supplementalProperties=dashManifestModel.getSupplementalPropperties(realAdaptation);return mediaInfo;}function convertVideoInfoToEmbeddedTextInfo(mediaInfo,channel,lang){mediaInfo.id=channel;// CC1, CC2, CC3, or CC4
mediaInfo.index=100+parseInt(channel.substring(2,3));mediaInfo.type=constants.EMBEDDED_TEXT;mediaInfo.codec='cea-608-in-SEI';mediaInfo.isText=true;mediaInfo.isEmbedded=true;mediaInfo.lang=lang;mediaInfo.roles=['caption'];}function convertVideoInfoToThumbnailInfo(mediaInfo){mediaInfo.type=constants.IMAGE;}function convertPeriodToStreamInfo(period){var streamInfo=new _StreamInfo2.default();var THRESHOLD=1;streamInfo.id=period.id;streamInfo.index=period.index;streamInfo.start=period.start;streamInfo.duration=period.duration;streamInfo.manifestInfo=convertMpdToManifestInfo(period.mpd);streamInfo.isLast=period.mpd.manifest.Period_asArray.length===1||Math.abs(streamInfo.start+streamInfo.duration-streamInfo.manifestInfo.duration)<THRESHOLD;return streamInfo;}function convertMpdToManifestInfo(mpd){var manifestInfo=new _ManifestInfo2.default();manifestInfo.DVRWindowSize=mpd.timeShiftBufferDepth;manifestInfo.loadedTime=mpd.manifest.loadedTime;manifestInfo.availableFrom=mpd.availabilityStartTime;manifestInfo.minBufferTime=mpd.manifest.minBufferTime;manifestInfo.maxFragmentDuration=mpd.maxSegmentDuration;manifestInfo.duration=dashManifestModel.getDuration(mpd.manifest);manifestInfo.isDynamic=dashManifestModel.getIsDynamic(mpd.manifest);manifestInfo.serviceDescriptions=dashManifestModel.getServiceDescriptions(mpd.manifest);manifestInfo.protocol=mpd.manifest.protocol;return manifestInfo;}function checkConfig(){if(!constants){throw new Error('setConfig function has to be called previously');}}function getPeriod(periodIdx){return voPeriods.length>0?voPeriods[0].mpd.manifest.Period_asArray[periodIdx]:null;}function findRepresentationIndex(period,representationId){var index=findRepresentation(period,representationId,true);return index!==null?index:-1;}function findRepresentation(period,representationId,returnIndex){var adaptationSet=void 0,adaptationSetArray=void 0,representation=void 0,representationArray=void 0,adaptationSetArrayIndex=void 0,representationArrayIndex=void 0;if(period){adaptationSetArray=period.AdaptationSet_asArray;for(adaptationSetArrayIndex=0;adaptationSetArrayIndex<adaptationSetArray.length;adaptationSetArrayIndex=adaptationSetArrayIndex+1){adaptationSet=adaptationSetArray[adaptationSetArrayIndex];representationArray=adaptationSet.Representation_asArray;for(representationArrayIndex=0;representationArrayIndex<representationArray.length;representationArrayIndex=representationArrayIndex+1){representation=representationArray[representationArrayIndex];if(representationId===representation.id){if(returnIndex){return representationArrayIndex;}else{return representation;}}}}}return null;}function findMaxBufferIndex(period,bufferType){var adaptationSet=void 0,adaptationSetArray=void 0,representationArray=void 0,adaptationSetArrayIndex=void 0;if(!period||!bufferType)return-1;adaptationSetArray=period.AdaptationSet_asArray;for(adaptationSetArrayIndex=0;adaptationSetArrayIndex<adaptationSetArray.length;adaptationSetArrayIndex=adaptationSetArrayIndex+1){adaptationSet=adaptationSetArray[adaptationSetArrayIndex];representationArray=adaptationSet.Representation_asArray;if(dashManifestModel.getIsTypeOf(adaptationSet,bufferType)){return representationArray.length;}}return-1;}// #endregion PRIVATE FUNCTIONS
instance={getBandwidthForRepresentation:getBandwidthForRepresentation,getIndexForRepresentation:getIndexForRepresentation,getMaxIndexForBufferType:getMaxIndexForBufferType,convertDataToRepresentationInfo:convertRepresentationToRepresentationInfo,getDataForMedia:getAdaptationForMediaInfo,getStreamsInfo:getStreamsInfo,getMediaInfoForType:getMediaInfoForType,getAllMediaInfoForType:getAllMediaInfoForType,getAdaptationForType:getAdaptationForType,getRealAdaptation:getRealAdaptation,getVoRepresentations:getVoRepresentations,getEventsFor:getEventsFor,getEvent:getEvent,getMpd:getMpd,setConfig:setConfig,updatePeriods:updatePeriods,getIsTextTrack:getIsTextTrack,getUTCTimingSources:getUTCTimingSources,getSuggestedPresentationDelay:getSuggestedPresentationDelay,getAvailabilityStartTime:getAvailabilityStartTime,getIsDynamic:getIsDynamic,getDuration:getDuration,getRegularPeriods:getRegularPeriods,getLocation:getLocation,getManifestUpdatePeriod:getManifestUpdatePeriod,getIsDVB:getIsDVB,getBaseURLsFromElement:getBaseURLsFromElement,getRepresentationSortFunction:getRepresentationSortFunction,getCodec:getCodec,getVoAdaptations:getVoAdaptations,getVoPeriods:getVoPeriods,getPeriodById:getPeriodById,setCurrentMediaInfo:setCurrentMediaInfo,reset:reset};setup();return instance;}DashAdapter.__dashjs_factory_name='DashAdapter';exports.default=_FactoryMaker2.default.getSingletonFactory(DashAdapter);


},{"./constants/DashConstants":"../node_modules/dashjs/build/es5/src/dash/constants/DashConstants.js","./vo/RepresentationInfo":"../node_modules/dashjs/build/es5/src/dash/vo/RepresentationInfo.js","./vo/MediaInfo":"../node_modules/dashjs/build/es5/src/dash/vo/MediaInfo.js","./vo/StreamInfo":"../node_modules/dashjs/build/es5/src/dash/vo/StreamInfo.js","./vo/ManifestInfo":"../node_modules/dashjs/build/es5/src/dash/vo/ManifestInfo.js","./vo/Event":"../node_modules/dashjs/build/es5/src/dash/vo/Event.js","../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","./models/DashManifestModel":"../node_modules/dashjs/build/es5/src/dash/models/DashManifestModel.js"}],"../node_modules/dashjs/build/es5/src/dash/utils/Round10.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * Static methods for rounding decimals
 *
 * Modified version of the CC0-licenced example at:
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round
 *
 * @export
 * @class Round10
 * @ignore
 */var Round10=function(){function Round10(){_classCallCheck(this,Round10);}_createClass(Round10,null,[{key:'round10',/**
    * Decimal round.
    *
    * @param {Number}  value The number.
    * @param {Integer} exp   The exponent (the 10 logarithm of the adjustment base).
    * @returns {Number} The adjusted value.
    * @ignore
    */value:function round10(value,exp){return _decimalAdjust('round',value,exp);}}]);return Round10;}();/**
 * Decimal adjustment of a number.
 *
 * @param {String}  type  The type of adjustment.
 * @param {Number}  value The number.
 * @param {Integer} exp   The exponent (the 10 logarithm of the adjustment base).
 * @returns {Number} The adjusted value.
 * @ignore
 */exports.default=Round10;function _decimalAdjust(type,value,exp){// If the exp is undefined or zero...
if(typeof exp==='undefined'||+exp===0){return Math[type](value);}value=+value;exp=+exp;// If the value is not a number or the exp is not an integer...
if(value===null||isNaN(value)||!(typeof exp==='number'&&exp%1===0)){return NaN;}// Shift
value=value.toString().split('e');value=Math[type](+(value[0]+'e'+(value[1]?+value[1]-exp:-exp)));// Shift back
value=value.toString().split('e');return+(value[0]+'e'+(value[1]?+value[1]+exp:exp));}


},{}],"../node_modules/dashjs/build/es5/src/streaming/vo/MetricsList.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var MetricsList=function MetricsList(){_classCallCheck(this,MetricsList);this.TcpList=[];this.HttpList=[];this.RepSwitchList=[];this.BufferLevel=[];this.BufferState=[];this.PlayList=[];this.DroppedFrames=[];this.SchedulingInfo=[];this.DVRInfo=[];this.ManifestUpdate=[];this.RequestsQueue=null;this.DVBErrors=[];};exports.default=MetricsList;


},{}],"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/RepresentationSwitch.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var RepresentationSwitch=/**
     * @description This Object holds reference to the info at quality switch between two representations.
     */function RepresentationSwitch(){_classCallCheck(this,RepresentationSwitch);/**
         * Time of the switch event.
         * @public
         */this.t=null;/**
         * The media presentation time of the earliest access unit
         * (out of all media content components) played out from
         * the Representation.
         *
         * @public
         */this.mt=null;/**
         * Value of Representation@id identifying the switch-to Representation.
         * @public
         */this.to=null;/**
         * If not present, this metrics concerns the Representation as a whole.
         * If present, lto indicates the value of SubRepresentation@level within
         * Representation identifying the switch-to level of the Representation.
         *
         * @public
         */this.lto=null;};exports.default=RepresentationSwitch;


},{}],"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/BufferLevel.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var BufferLevel=/**
     * @description This Object holds reference to the current buffer level and the time it was recorded.
     */function BufferLevel(){_classCallCheck(this,BufferLevel);/**
         * Real-Time | Time of the measurement of the buffer level.
         * @public
         */this.t=null;/**
         * Level of the buffer in milliseconds. Indicates the playout duration for which
         * media data of all active media components is available starting from the
         * current playout time.
         * @public
         */this.level=null;};exports.default=BufferLevel;


},{}],"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/BufferState.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _MetricsConstants=require('../../constants/MetricsConstants');var _MetricsConstants2=_interopRequireDefault(_MetricsConstants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var BufferState=/**
     * @description This Object holds reference to the current buffer state of the video element.
     */function BufferState(){_classCallCheck(this,BufferState);/**
         * The Buffer Level Target determined by the BufferLevelRule.
         * @public
         */this.target=null;/**
         * Current buffer state. Will be MetricsConstants.BUFFER_EMPTY or MetricsConstants.BUFFER_LOADED.
         * @public
         */this.state=_MetricsConstants2.default.BUFFER_EMPTY;};exports.default=BufferState;


},{"../../constants/MetricsConstants":"../node_modules/dashjs/build/es5/src/streaming/constants/MetricsConstants.js"}],"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/DVRInfo.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var DVRInfo=/**
     * @description This Object holds reference to DVR availability window information.
     */function DVRInfo(){_classCallCheck(this,DVRInfo);/**
         * The current time of the video element when this was created.
         * @public
         */this.time=null;/**
         * The current Segment Availability Range as an object with start and end properties.
         * It's delta defined by the timeShiftBufferDepth MPD attribute.
         * @public
         */this.range=null;/**
         * Reference to the internal ManifestInfo.js VO.
         * @public
         */this.manifestInfo=null;};exports.default=DVRInfo;


},{}],"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/DroppedFrames.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var DroppedFrames=/**
     * @description This Object holds reference to DroppedFrames count and the time it was recorded.
     */function DroppedFrames(){_classCallCheck(this,DroppedFrames);/**
         * Real-Time | Time of the measurement of the dropped frames.
         * @public
         */this.time=null;/**
         * Number of dropped frames
         * @public
         */this.droppedFrames=null;};exports.default=DroppedFrames;


},{}],"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/ManifestUpdate.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @classdesc This Object holds reference to the manifest update information.
 * @ignore
 */var ManifestUpdate=/**
     * @class
     */function ManifestUpdate(){_classCallCheck(this,ManifestUpdate);/**
         * Media Type Video | Audio | FragmentedText
         * @public
         */this.mediaType=null;/**
         * MPD Type static | dynamic
         * @public
         */this.type=null;/**
         * When this manifest update was requested
         * @public
         */this.requestTime=null;/**
         * When this manifest update was received
         * @public
         */this.fetchTime=null;/**
         * Calculated Availability Start time of the stream.
         * @public
         */this.availabilityStartTime=null;/**
         * the seek point (liveEdge for dynamic, Stream[0].startTime for static)
         * @public
         */this.presentationStartTime=0;/**
         * The calculated difference between the server and client wall clock time
         * @public
         */this.clientTimeOffset=0;/**
         * Actual element.currentTime
         * @public
         */this.currentTime=null;/**
         * Actual element.ranges
         * @public
         */this.buffered=null;/**
         * Static is fixed value of zero. dynamic should be ((Now-@availabilityStartTime) - elementCurrentTime)
         * @public
         */this.latency=0;/**
         * Array holding list of StreamInfo VO Objects
         * @public
         */this.streamInfo=[];/**
         * Array holding list of RepresentationInfo VO Objects
         * @public
         */this.representationInfo=[];};/**
 * @classdesc This Object holds reference to the current period's stream information when the manifest was updated.
 * @ignore
 */var ManifestUpdateStreamInfo=/**
     * @class
     */function ManifestUpdateStreamInfo(){_classCallCheck(this,ManifestUpdateStreamInfo);/**
         * Stream@id
         * @public
         */this.id=null;/**
         * Period Index
         * @public
         */this.index=null;/**
         * Stream@start
         * @public
         */this.start=null;/**
         * Stream@duration
         * @public
         */this.duration=null;};/**
 * @classdesc This Object holds reference to the current representation's info when the manifest was updated.
 * @ignore
 */var ManifestUpdateRepresentationInfo=/**
     * @class
     */function ManifestUpdateRepresentationInfo(){_classCallCheck(this,ManifestUpdateRepresentationInfo);/**
         * Track@id
         * @public
         */this.id=null;/**
         * Representation Index
         * @public
         */this.index=null;/**
         * Media Type Video | Audio | FragmentedText
         * @public
         */this.mediaType=null;/**
         * Which representation
         * @public
         */this.streamIndex=null;/**
         * Holds reference to @presentationTimeOffset
         * @public
         */this.presentationTimeOffset=null;/**
         * Holds reference to @startNumber
         * @public
         */this.startNumber=null;/**
         * list|template|timeline
         * @public
         */this.fragmentInfoType=null;};exports.ManifestUpdate=ManifestUpdate;exports.ManifestUpdateStreamInfo=ManifestUpdateStreamInfo;exports.ManifestUpdateRepresentationInfo=ManifestUpdateRepresentationInfo;


},{}],"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/SchedulingInfo.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var SchedulingInfo=/**
     * @description This Object holds reference to the index handling of the current fragment being loaded or executed.
     */function SchedulingInfo(){_classCallCheck(this,SchedulingInfo);/**
         * Type of stream Audio | Video | FragmentedText
         * @public
         */this.mediaType=null;/**
         * Time of the scheduling event.
         * @public
         */this.t=null;/**
         * Type of fragment (initialization | media)
         * @public
         */this.type=null;/**
         * Presentation start time of fragment
         * @public
         */this.startTime=null;/**
         * Availability start time of fragment
         * @public
         */this.availabilityStartTime=null;/**
         * Duration of fragment
         * @public
         */this.duration=null;/**
         * Bit Rate Quality of fragment
         * @public
         */this.quality=null;/**
         * Range of fragment
         * @public
         */this.range=null;/**
         * Current state of fragment
         * @public
         */this.state=null;};exports.default=SchedulingInfo;


},{}],"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/RequestsQueue.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var RequestsQueue=/**
     * @description This Object holds reference to Fragment Model's request queues
     */function RequestsQueue(){_classCallCheck(this,RequestsQueue);/**
         * Array of all of the requests that have begun to load
         * This request may not make it into the executed queue if it is abandon due to ABR rules for example.
         * @public
         */this.loadingRequests=[];/**
         * Array of the The requests that have completed
         * @public
         */this.executedRequests=[];};exports.default=RequestsQueue;


},{}],"../node_modules/dashjs/build/es5/src/streaming/models/MetricsModel.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('../constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _MetricsConstants=require('../constants/MetricsConstants');var _MetricsConstants2=_interopRequireDefault(_MetricsConstants);var _MetricsList=require('../vo/MetricsList');var _MetricsList2=_interopRequireDefault(_MetricsList);var _HTTPRequest=require('../vo/metrics/HTTPRequest');var _RepresentationSwitch=require('../vo/metrics/RepresentationSwitch');var _RepresentationSwitch2=_interopRequireDefault(_RepresentationSwitch);var _BufferLevel=require('../vo/metrics/BufferLevel');var _BufferLevel2=_interopRequireDefault(_BufferLevel);var _BufferState=require('../vo/metrics/BufferState');var _BufferState2=_interopRequireDefault(_BufferState);var _DVRInfo=require('../vo/metrics/DVRInfo');var _DVRInfo2=_interopRequireDefault(_DVRInfo);var _DroppedFrames=require('../vo/metrics/DroppedFrames');var _DroppedFrames2=_interopRequireDefault(_DroppedFrames);var _ManifestUpdate=require('../vo/metrics/ManifestUpdate');var _SchedulingInfo=require('../vo/metrics/SchedulingInfo');var _SchedulingInfo2=_interopRequireDefault(_SchedulingInfo);var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _RequestsQueue=require('../vo/metrics/RequestsQueue');var _RequestsQueue2=_interopRequireDefault(_RequestsQueue);var _Events=require('../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function MetricsModel(config){config=config||{};var settings=config.settings;var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var instance=void 0,streamMetrics=void 0;function setup(){streamMetrics={};}function metricsChanged(){eventBus.trigger(_Events2.default.METRICS_CHANGED);}function metricChanged(mediaType){eventBus.trigger(_Events2.default.METRIC_CHANGED,{mediaType:mediaType});metricsChanged();}function metricUpdated(mediaType,metricType,vo){eventBus.trigger(_Events2.default.METRIC_UPDATED,{mediaType:mediaType,metric:metricType,value:vo});metricChanged(mediaType);}function metricAdded(mediaType,metricType,vo){eventBus.trigger(_Events2.default.METRIC_ADDED,{mediaType:mediaType,metric:metricType,value:vo});metricChanged(mediaType);}function clearCurrentMetricsForType(type){delete streamMetrics[type];metricChanged(type);}function clearAllCurrentMetrics(){streamMetrics={};metricsChanged();}function getMetricsFor(type,readOnly){var metrics=null;if(!type){return metrics;}if(streamMetrics.hasOwnProperty(type)){metrics=streamMetrics[type];}else if(!readOnly){metrics=new _MetricsList2.default();streamMetrics[type]=metrics;}return metrics;}function pushMetrics(type,list,value){var metrics=getMetricsFor(type);if(metrics!==null){metrics[list].push(value);if(metrics[list].length>settings.get().streaming.metricsMaxListDepth){metrics[list].shift();}}}function appendHttpTrace(httpRequest,s,d,b){var vo=new _HTTPRequest.HTTPRequestTrace();vo.s=s;vo.d=d;vo.b=b;httpRequest.trace.push(vo);if(!httpRequest.interval){httpRequest.interval=0;}httpRequest.interval+=d;return vo;}function addHttpRequest(mediaType,tcpid,type,url,quality,actualurl,serviceLocation,range,trequest,tresponse,tfinish,responsecode,mediaduration,responseHeaders,traces){var vo=new _HTTPRequest.HTTPRequest();// ISO 23009-1 D.4.3 NOTE 2:
// All entries for a given object will have the same URL and range
// and so can easily be correlated. If there were redirects or
// failures there will be one entry for each redirect/failure.
// The redirect-to URL or alternative url (where multiple have been
// provided in the MPD) will appear as the actualurl of the next
// entry with the same url value.
if(actualurl&&actualurl!==url){// given the above, add an entry for the original request
addHttpRequest(mediaType,null,type,url,quality,null,null,range,trequest,null,// unknown
null,// unknown
null,// unknown, probably a 302
mediaduration,null,null);vo.actualurl=actualurl;}vo.tcpid=tcpid;vo.type=type;vo.url=url;vo.range=range;vo.trequest=trequest;vo.tresponse=tresponse;vo.responsecode=responsecode;vo._tfinish=tfinish;vo._stream=mediaType;vo._mediaduration=mediaduration;vo._quality=quality;vo._responseHeaders=responseHeaders;vo._serviceLocation=serviceLocation;if(traces){traces.forEach(function(trace){appendHttpTrace(vo,trace.s,trace.d,trace.b);});}else{// The interval and trace shall be absent for redirect and failure records.
delete vo.interval;delete vo.trace;}pushAndNotify(mediaType,_MetricsConstants2.default.HTTP_REQUEST,vo);}function addRepresentationSwitch(mediaType,t,mt,to,lto){var vo=new _RepresentationSwitch2.default();vo.t=t;vo.mt=mt;vo.to=to;if(lto){vo.lto=lto;}else{delete vo.lto;}pushAndNotify(mediaType,_MetricsConstants2.default.TRACK_SWITCH,vo);}function pushAndNotify(mediaType,metricType,metricObject){pushMetrics(mediaType,metricType,metricObject);metricAdded(mediaType,metricType,metricObject);}function addBufferLevel(mediaType,t,level){var vo=new _BufferLevel2.default();vo.t=t;vo.level=level;pushAndNotify(mediaType,_MetricsConstants2.default.BUFFER_LEVEL,vo);}function addBufferState(mediaType,state,target){var vo=new _BufferState2.default();vo.target=target;vo.state=state;pushAndNotify(mediaType,_MetricsConstants2.default.BUFFER_STATE,vo);}function addDVRInfo(mediaType,currentTime,mpd,range){var vo=new _DVRInfo2.default();vo.time=currentTime;vo.range=range;vo.manifestInfo=mpd;pushAndNotify(mediaType,_MetricsConstants2.default.DVR_INFO,vo);}function addDroppedFrames(mediaType,quality){var vo=new _DroppedFrames2.default();var list=getMetricsFor(mediaType).DroppedFrames;if(!quality){return;}vo.time=quality.creationTime;vo.droppedFrames=quality.droppedVideoFrames;if(list.length>0&&list[list.length-1]==vo){return;}pushAndNotify(mediaType,_MetricsConstants2.default.DROPPED_FRAMES,vo);}function addSchedulingInfo(mediaType,t,type,startTime,availabilityStartTime,duration,quality,range,state){var vo=new _SchedulingInfo2.default();vo.mediaType=mediaType;vo.t=t;vo.type=type;vo.startTime=startTime;vo.availabilityStartTime=availabilityStartTime;vo.duration=duration;vo.quality=quality;vo.range=range;vo.state=state;pushAndNotify(mediaType,_MetricsConstants2.default.SCHEDULING_INFO,vo);}function addRequestsQueue(mediaType,loadingRequests,executedRequests){var vo=new _RequestsQueue2.default();vo.loadingRequests=loadingRequests;vo.executedRequests=executedRequests;getMetricsFor(mediaType).RequestsQueue=vo;metricAdded(mediaType,_MetricsConstants2.default.REQUESTS_QUEUE,vo);}function addManifestUpdate(mediaType,type,requestTime,fetchTime,availabilityStartTime,presentationStartTime,clientTimeOffset,currentTime,buffered,latency){var vo=new _ManifestUpdate.ManifestUpdate();vo.mediaType=mediaType;vo.type=type;vo.requestTime=requestTime;// when this manifest update was requested
vo.fetchTime=fetchTime;// when this manifest update was received
vo.availabilityStartTime=availabilityStartTime;vo.presentationStartTime=presentationStartTime;// the seek point (liveEdge for dynamic, Stream[0].startTime for static)
vo.clientTimeOffset=clientTimeOffset;// the calculated difference between the server and client wall clock time
vo.currentTime=currentTime;// actual element.currentTime
vo.buffered=buffered;// actual element.ranges
vo.latency=latency;// (static is fixed value of zero. dynamic should be ((Now-@availabilityStartTime) - currentTime)
pushMetrics(_Constants2.default.STREAM,_MetricsConstants2.default.MANIFEST_UPDATE,vo);metricAdded(mediaType,_MetricsConstants2.default.MANIFEST_UPDATE,vo);}function updateManifestUpdateInfo(manifestUpdate,updatedFields){if(manifestUpdate){for(var field in updatedFields){manifestUpdate[field]=updatedFields[field];}metricUpdated(manifestUpdate.mediaType,_MetricsConstants2.default.MANIFEST_UPDATE,manifestUpdate);}}function addManifestUpdateStreamInfo(manifestUpdate,id,index,start,duration){if(manifestUpdate){var vo=new _ManifestUpdate.ManifestUpdateStreamInfo();vo.id=id;vo.index=index;vo.start=start;vo.duration=duration;manifestUpdate.streamInfo.push(vo);metricUpdated(manifestUpdate.mediaType,_MetricsConstants2.default.MANIFEST_UPDATE_STREAM_INFO,manifestUpdate);}}function addManifestUpdateRepresentationInfo(manifestUpdate,id,index,streamIndex,mediaType,presentationTimeOffset,startNumber,fragmentInfoType){if(manifestUpdate&&manifestUpdate.representationInfo){var vo=new _ManifestUpdate.ManifestUpdateRepresentationInfo();vo.id=id;vo.index=index;vo.streamIndex=streamIndex;vo.mediaType=mediaType;vo.startNumber=startNumber;vo.fragmentInfoType=fragmentInfoType;vo.presentationTimeOffset=presentationTimeOffset;manifestUpdate.representationInfo.push(vo);metricUpdated(manifestUpdate.mediaType,_MetricsConstants2.default.MANIFEST_UPDATE_TRACK_INFO,manifestUpdate);}}function addPlayList(vo){if(vo.trace&&Array.isArray(vo.trace)){vo.trace.forEach(function(trace){if(trace.hasOwnProperty('subreplevel')&&!trace.subreplevel){delete trace.subreplevel;}});}else{delete vo.trace;}pushAndNotify(_Constants2.default.STREAM,_MetricsConstants2.default.PLAY_LIST,vo);}function addDVBErrors(vo){pushAndNotify(_Constants2.default.STREAM,_MetricsConstants2.default.DVB_ERRORS,vo);}instance={clearCurrentMetricsForType:clearCurrentMetricsForType,clearAllCurrentMetrics:clearAllCurrentMetrics,getMetricsFor:getMetricsFor,addHttpRequest:addHttpRequest,addRepresentationSwitch:addRepresentationSwitch,addBufferLevel:addBufferLevel,addBufferState:addBufferState,addDVRInfo:addDVRInfo,addDroppedFrames:addDroppedFrames,addSchedulingInfo:addSchedulingInfo,addRequestsQueue:addRequestsQueue,addManifestUpdate:addManifestUpdate,updateManifestUpdateInfo:updateManifestUpdateInfo,addManifestUpdateStreamInfo:addManifestUpdateStreamInfo,addManifestUpdateRepresentationInfo:addManifestUpdateRepresentationInfo,addPlayList:addPlayList,addDVBErrors:addDVBErrors};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */MetricsModel.__dashjs_factory_name='MetricsModel';exports.default=_FactoryMaker2.default.getSingletonFactory(MetricsModel);


},{"../constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../constants/MetricsConstants":"../node_modules/dashjs/build/es5/src/streaming/constants/MetricsConstants.js","../vo/MetricsList":"../node_modules/dashjs/build/es5/src/streaming/vo/MetricsList.js","../vo/metrics/HTTPRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/HTTPRequest.js","../vo/metrics/RepresentationSwitch":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/RepresentationSwitch.js","../vo/metrics/BufferLevel":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/BufferLevel.js","../vo/metrics/BufferState":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/BufferState.js","../vo/metrics/DVRInfo":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/DVRInfo.js","../vo/metrics/DroppedFrames":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/DroppedFrames.js","../vo/metrics/ManifestUpdate":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/ManifestUpdate.js","../vo/metrics/SchedulingInfo":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/SchedulingInfo.js","../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../vo/metrics/RequestsQueue":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/RequestsQueue.js","../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js"}],"../node_modules/dashjs/build/es5/src/dash/DashMetrics.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Constants=require('../streaming/constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _HTTPRequest=require('../streaming/vo/metrics/HTTPRequest');var _FactoryMaker=require('../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _MetricsConstants=require('../streaming/constants/MetricsConstants');var _MetricsConstants2=_interopRequireDefault(_MetricsConstants);var _Round=require('./utils/Round10');var _Round2=_interopRequireDefault(_Round);var _MetricsModel=require('../streaming/models/MetricsModel');var _MetricsModel2=_interopRequireDefault(_MetricsModel);var _PlayList=require('../streaming/vo/metrics/PlayList');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * @module DashMetrics
 * @param {object} config
 */function DashMetrics(config){config=config||{};var context=this.context;var instance=void 0,playListTraceMetricsClosed=void 0,playListTraceMetrics=void 0,playListMetrics=void 0;var metricsModel=config.metricsModel;function setup(){metricsModel=metricsModel||(0,_MetricsModel2.default)(context).getInstance({settings:config.settings});resetInitialSettings();}function resetInitialSettings(){playListTraceMetricsClosed=true;playListTraceMetrics=null;playListMetrics=null;}/**
     * @param {MediaType} mediaType
     * @returns {*}
     * @memberof module:DashMetrics
     * @instance
     */function getCurrentRepresentationSwitch(mediaType){var metrics=metricsModel.getMetricsFor(mediaType,true);return getCurrent(metrics,_MetricsConstants2.default.TRACK_SWITCH);}/**
     * @param {MediaType} mediaType
     * @param {Date} t time of the switch event
     * @param {Date} mt media presentation time
     * @param {string} to id of representation
     * @param {string} lto if present, subrepresentation reference
     * @memberof module:DashMetrics
     * @instance
     * @ignore
     */function addRepresentationSwitch(mediaType,t,mt,to,lto){metricsModel.addRepresentationSwitch(mediaType,t,mt,to,lto);}/**
     * @param {MediaType} type
     * @returns {number}
     * @memberof module:DashMetrics
     * @instance
     */function getCurrentBufferState(type){var metrics=metricsModel.getMetricsFor(type,true);return getCurrent(metrics,_MetricsConstants2.default.BUFFER_STATE);}/**
     * @param {MediaType} type
     * @returns {number}
     * @memberof module:DashMetrics
     * @instance
     */function getCurrentBufferLevel(type){var metrics=metricsModel.getMetricsFor(type,true);var metric=getCurrent(metrics,_MetricsConstants2.default.BUFFER_LEVEL);if(metric){return _Round2.default.round10(metric.level/1000,-3);}return 0;}/**
     * @param {MediaType} mediaType
     * @param {number} t
     * @param {number} level
     * @memberof module:DashMetrics
     * @instance
     * @ignore
     */function addBufferLevel(mediaType,t,level){metricsModel.addBufferLevel(mediaType,t,level);}/**
     * @param {MediaType} mediaType
     * @param {string} state
     * @param {number} target
     * @memberof module:DashMetrics
     * @instance
     * @ignore
     */function addBufferState(mediaType,state,target){metricsModel.addBufferState(mediaType,state,target);}/**
     * @memberof module:DashMetrics
     * @instance
     * @ignore
     */function clearAllCurrentMetrics(){metricsModel.clearAllCurrentMetrics();}/**
     * @param {MediaType} mediaType
     * @returns {*}
     * @memberof module:DashMetrics
     * @instance
     */function getCurrentHttpRequest(mediaType){var metrics=metricsModel.getMetricsFor(mediaType,true);if(!metrics){return null;}var httpList=metrics.HttpList;var currentHttpList=null;var httpListLastIndex=void 0;if(!httpList||httpList.length<=0){return null;}httpListLastIndex=httpList.length-1;while(httpListLastIndex>=0){if(httpList[httpListLastIndex].responsecode){currentHttpList=httpList[httpListLastIndex];break;}httpListLastIndex--;}return currentHttpList;}/**
     * @param {MediaType} mediaType
     * @returns {*}
     * @memberof module:DashMetrics
     * @instance
     */function getHttpRequests(mediaType){var metrics=metricsModel.getMetricsFor(mediaType,true);if(!metrics){return[];}return!!metrics.HttpList?metrics.HttpList:[];}/**
     * @param {MediaType} mediaType
     * @param {Array} loadingRequests
     * @param {Array} executedRequests
     * @memberof module:DashMetrics
     * @instance
     * @ignore
     */function addRequestsQueue(mediaType,loadingRequests,executedRequests){metricsModel.addRequestsQueue(mediaType,loadingRequests,executedRequests);}/**
     * @param {MetricsList} metrics
     * @param {string} metricName
     * @returns {*}
     * @memberof module:DashMetrics
     * @instance
     */function getCurrent(metrics,metricName){if(!metrics){return null;}var list=metrics[metricName];return!list||list.length===0?null:list[list.length-1];}/**
     * @returns {*}
     * @memberof module:DashMetrics
     * @instance
     * @ignore
     */function getCurrentDroppedFrames(){var metrics=metricsModel.getMetricsFor(_Constants2.default.VIDEO,true);return getCurrent(metrics,_MetricsConstants2.default.DROPPED_FRAMES);}/**
     * @param {number} quality
     * @memberof module:DashMetrics
     * @instance
     * @ignore
     */function addDroppedFrames(quality){metricsModel.addDroppedFrames(_Constants2.default.VIDEO,quality);}/**
     * @param {MediaType} mediaType
     * @returns {*}
     * @memberof module:DashMetrics
     * @instance
     */function getCurrentSchedulingInfo(mediaType){var metrics=metricsModel.getMetricsFor(mediaType,true);return getCurrent(metrics,_MetricsConstants2.default.SCHEDULING_INFO);}/**
     * @param {object} request
     * @param {string} state
     * @memberof module:DashMetrics
     * @instance
     * @ignore
     */function addSchedulingInfo(request,state){metricsModel.addSchedulingInfo(request.mediaType,new Date(),request.type,request.startTime,request.availabilityStartTime,request.duration,request.quality,request.range,state);}/**
     * @returns {*}
     * @memberof module:DashMetrics
     * @instance
     */function getCurrentManifestUpdate(){var streamMetrics=metricsModel.getMetricsFor(_Constants2.default.STREAM);return getCurrent(streamMetrics,_MetricsConstants2.default.MANIFEST_UPDATE);}/**
     * @param {object} updatedFields fields to be updated
     * @memberof module:DashMetrics
     * @instance
     * @ignore
     */function updateManifestUpdateInfo(updatedFields){var manifestUpdate=this.getCurrentManifestUpdate();metricsModel.updateManifestUpdateInfo(manifestUpdate,updatedFields);}/**
     * @param {object} streamInfo
     * @memberof module:DashMetrics
     * @instance
     * @ignore
     */function addManifestUpdateStreamInfo(streamInfo){if(streamInfo){var manifestUpdate=this.getCurrentManifestUpdate();metricsModel.addManifestUpdateStreamInfo(manifestUpdate,streamInfo.id,streamInfo.index,streamInfo.start,streamInfo.duration);}}/**
     * @param {object} request
     * @memberof module:DashMetrics
     * @instance
     * @ignore
     */function addManifestUpdate(request){metricsModel.addManifestUpdate(_Constants2.default.STREAM,request.type,request.requestStartDate,request.requestEndDate);}/**
     * @param {object} request
     * @param {string} responseURL
     * @param {number} responseStatus
     * @param {object} responseHeaders
     * @param {object} traces
     * @memberof module:DashMetrics
     * @instance
     * @ignore
     */function addHttpRequest(request,responseURL,responseStatus,responseHeaders,traces){metricsModel.addHttpRequest(request.mediaType,null,request.type,request.url,request.quality,responseURL,request.serviceLocation||null,request.range||null,request.requestStartDate,request.firstByteDate,request.requestEndDate,responseStatus,request.duration,responseHeaders,traces);}/**
     * @param {object} representation
     * @param {MediaType} mediaType
     * @memberof module:DashMetrics
     * @instance
     * @ignore
     */function addManifestUpdateRepresentationInfo(representation,mediaType){if(representation){var manifestUpdateInfo=this.getCurrentManifestUpdate();metricsModel.addManifestUpdateRepresentationInfo(manifestUpdateInfo,representation.id,representation.index,representation.streamIndex,mediaType,representation.presentationTimeOffset,representation.startNumber,representation.fragmentInfoType);}}/**
     * @param {MediaType} mediaType
     * @returns {*}
     * @memberof module:DashMetrics
     * @instance
     */function getCurrentDVRInfo(mediaType){var metrics=mediaType?metricsModel.getMetricsFor(mediaType,true):metricsModel.getMetricsFor(_Constants2.default.VIDEO,true)||metricsModel.getMetricsFor(_Constants2.default.AUDIO,true);return getCurrent(metrics,_MetricsConstants2.default.DVR_INFO);}/**
     * @param {MediaType} mediaType
     * @param {Date} currentTime time of the switch event
     * @param {object} mpd mpd reference
     * @param {object} range range of the dvr info
     * @memberof module:DashMetrics
     * @instance
     * @ignore
     */function addDVRInfo(mediaType,currentTime,mpd,range){metricsModel.addDVRInfo(mediaType,currentTime,mpd,range);}/**
     * @param {string} id
     * @returns {*}
     * @memberof module:DashMetrics
     * @instance
     */function getLatestMPDRequestHeaderValueByID(id){var headers={};var httpRequestList=void 0,httpRequest=void 0,i=void 0;httpRequestList=getHttpRequests(_Constants2.default.STREAM);for(i=httpRequestList.length-1;i>=0;i--){httpRequest=httpRequestList[i];if(httpRequest.type===_HTTPRequest.HTTPRequest.MPD_TYPE){headers=parseResponseHeaders(httpRequest._responseHeaders);break;}}return headers[id]===undefined?null:headers[id];}/**
     * @param {string} type
     * @param {string} id
     * @returns {*}
     * @memberof module:DashMetrics
     * @instance
     */function getLatestFragmentRequestHeaderValueByID(type,id){var headers={};var httpRequest=getCurrentHttpRequest(type,true);if(httpRequest){headers=parseResponseHeaders(httpRequest._responseHeaders);}return headers[id]===undefined?null:headers[id];}function parseResponseHeaders(headerStr){var headers={};if(!headerStr){return headers;}// Trim headerStr to fix a MS Edge bug with xhr.getAllResponseHeaders method
// which send a string starting with a "\n" character
var headerPairs=headerStr.trim().split('\r\n');for(var i=0,ilen=headerPairs.length;i<ilen;i++){var headerPair=headerPairs[i];var index=headerPair.indexOf(': ');if(index>0){headers[headerPair.substring(0,index)]=headerPair.substring(index+2);}}return headers;}/**
     * @memberof module:DashMetrics
     * @instance
     * @ignore
     */function addPlayList(){if(playListMetrics){metricsModel.addPlayList(playListMetrics);playListMetrics=null;}}function createPlaylistMetrics(mediaStartTime,startReason){playListMetrics=new _PlayList.PlayList();playListMetrics.start=new Date();playListMetrics.mstart=mediaStartTime;playListMetrics.starttype=startReason;}function createPlaylistTraceMetrics(representationId,mediaStartTime,speed){if(playListTraceMetricsClosed===true){playListTraceMetricsClosed=false;playListTraceMetrics=new _PlayList.PlayListTrace();playListTraceMetrics.representationid=representationId;playListTraceMetrics.start=new Date();playListTraceMetrics.mstart=mediaStartTime;playListTraceMetrics.playbackspeed=speed!==null?speed.toString():null;}}function updatePlayListTraceMetrics(traceToUpdate){if(playListTraceMetrics){for(var field in playListTraceMetrics){playListTraceMetrics[field]=traceToUpdate[field];}}}function pushPlayListTraceMetrics(endTime,reason){if(playListTraceMetricsClosed===false&&playListMetrics&&playListTraceMetrics&&playListTraceMetrics.start){var startTime=playListTraceMetrics.start;var duration=endTime.getTime()-startTime.getTime();playListTraceMetrics.duration=duration;playListTraceMetrics.stopreason=reason;playListMetrics.trace.push(playListTraceMetrics);playListTraceMetricsClosed=true;}}/**
     * @param {object} errors
     * @memberof module:DashMetrics
     * @instance
     * @ignore
     */function addDVBErrors(errors){metricsModel.addDVBErrors(errors);}instance={getCurrentRepresentationSwitch:getCurrentRepresentationSwitch,getCurrentBufferState:getCurrentBufferState,getCurrentBufferLevel:getCurrentBufferLevel,getCurrentHttpRequest:getCurrentHttpRequest,getHttpRequests:getHttpRequests,getCurrentDroppedFrames:getCurrentDroppedFrames,getCurrentSchedulingInfo:getCurrentSchedulingInfo,getCurrentDVRInfo:getCurrentDVRInfo,getCurrentManifestUpdate:getCurrentManifestUpdate,getLatestFragmentRequestHeaderValueByID:getLatestFragmentRequestHeaderValueByID,getLatestMPDRequestHeaderValueByID:getLatestMPDRequestHeaderValueByID,addRepresentationSwitch:addRepresentationSwitch,addDVRInfo:addDVRInfo,updateManifestUpdateInfo:updateManifestUpdateInfo,addManifestUpdateStreamInfo:addManifestUpdateStreamInfo,addManifestUpdateRepresentationInfo:addManifestUpdateRepresentationInfo,addManifestUpdate:addManifestUpdate,addHttpRequest:addHttpRequest,addSchedulingInfo:addSchedulingInfo,addRequestsQueue:addRequestsQueue,addBufferLevel:addBufferLevel,addBufferState:addBufferState,addDroppedFrames:addDroppedFrames,addPlayList:addPlayList,addDVBErrors:addDVBErrors,createPlaylistMetrics:createPlaylistMetrics,createPlaylistTraceMetrics:createPlaylistTraceMetrics,updatePlayListTraceMetrics:updatePlayListTraceMetrics,pushPlayListTraceMetrics:pushPlayListTraceMetrics,clearAllCurrentMetrics:clearAllCurrentMetrics};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */DashMetrics.__dashjs_factory_name='DashMetrics';exports.default=_FactoryMaker2.default.getSingletonFactory(DashMetrics);


},{"../streaming/constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../streaming/vo/metrics/HTTPRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/HTTPRequest.js","../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../streaming/constants/MetricsConstants":"../node_modules/dashjs/build/es5/src/streaming/constants/MetricsConstants.js","./utils/Round10":"../node_modules/dashjs/build/es5/src/dash/utils/Round10.js","../streaming/models/MetricsModel":"../node_modules/dashjs/build/es5/src/streaming/models/MetricsModel.js","../streaming/vo/metrics/PlayList":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/PlayList.js"}],"../node_modules/dashjs/build/es5/src/dash/utils/TimelineConverter.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _EventBus=require('../../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('../../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _FactoryMaker=require('../../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _DashConstants=require('../constants/DashConstants');var _DashConstants2=_interopRequireDefault(_DashConstants);var _DashManifestModel=require('../models/DashManifestModel');var _DashManifestModel2=_interopRequireDefault(_DashManifestModel);var _Settings=require('../../core/Settings');var _Settings2=_interopRequireDefault(_Settings);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function TimelineConverter(){var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var settings=(0,_Settings2.default)(context).getInstance();var instance=void 0,dashManifestModel=void 0,clientServerTimeShift=void 0,isClientServerTimeSyncCompleted=void 0,expectedLiveEdge=void 0;function setup(){dashManifestModel=(0,_DashManifestModel2.default)(context).getInstance();reset();}function initialize(){resetInitialSettings();eventBus.on(_Events2.default.TIME_SYNCHRONIZATION_COMPLETED,onTimeSyncComplete,this);}function isTimeSyncCompleted(){return isClientServerTimeSyncCompleted;}function setTimeSyncCompleted(value){isClientServerTimeSyncCompleted=value;}function getClientTimeOffset(){return clientServerTimeShift;}function setClientTimeOffset(value){clientServerTimeShift=value;}function getExpectedLiveEdge(){return expectedLiveEdge;}function setExpectedLiveEdge(value){expectedLiveEdge=value;}function calcAvailabilityTimeFromPresentationTime(presentationTime,mpd,isDynamic,calculateEnd){var availabilityTime=NaN;if(calculateEnd){//@timeShiftBufferDepth specifies the duration of the time shifting buffer that is guaranteed
// to be available for a Media Presentation with type 'dynamic'.
// When not present, the value is infinite.
if(isDynamic&&mpd.timeShiftBufferDepth!=Number.POSITIVE_INFINITY){availabilityTime=new Date(mpd.availabilityStartTime.getTime()+(presentationTime+mpd.timeShiftBufferDepth)*1000);}else{availabilityTime=mpd.availabilityEndTime;}}else{if(isDynamic){availabilityTime=new Date(mpd.availabilityStartTime.getTime()+(presentationTime-clientServerTimeShift)*1000);}else{// in static mpd, all segments are available at the same time
availabilityTime=mpd.availabilityStartTime;}}return availabilityTime;}function calcAvailabilityStartTimeFromPresentationTime(presentationTime,mpd,isDynamic){return calcAvailabilityTimeFromPresentationTime.call(this,presentationTime,mpd,isDynamic);}function calcAvailabilityEndTimeFromPresentationTime(presentationTime,mpd,isDynamic){return calcAvailabilityTimeFromPresentationTime.call(this,presentationTime,mpd,isDynamic,true);}function calcPresentationTimeFromWallTime(wallTime,period){return(wallTime.getTime()-period.mpd.availabilityStartTime.getTime()+clientServerTimeShift*1000)/1000;}function calcPresentationTimeFromMediaTime(mediaTime,representation){var periodStart=representation.adaptation.period.start;var presentationOffset=representation.presentationTimeOffset;return mediaTime+(periodStart-presentationOffset);}function calcMediaTimeFromPresentationTime(presentationTime,representation){var periodStart=representation.adaptation.period.start;var presentationOffset=representation.presentationTimeOffset;return presentationTime-periodStart+presentationOffset;}function calcWallTimeForSegment(segment,isDynamic){var suggestedPresentationDelay=void 0,displayStartTime=void 0,wallTime=void 0;if(isDynamic){suggestedPresentationDelay=segment.representation.adaptation.period.mpd.suggestedPresentationDelay;displayStartTime=segment.presentationStartTime+suggestedPresentationDelay;wallTime=new Date(segment.availabilityStartTime.getTime()+displayStartTime*1000);}return wallTime;}function calcSegmentAvailabilityRange(voRepresentation,isDynamic){// Static Range Finder
var voPeriod=voRepresentation.adaptation.period;var range={start:voPeriod.start,end:voPeriod.start+voPeriod.duration};if(!isDynamic)return range;if(!isClientServerTimeSyncCompleted&&voRepresentation.segmentAvailabilityRange){return voRepresentation.segmentAvailabilityRange;}// Dynamic Range Finder
var d=voRepresentation.segmentDuration||(voRepresentation.segments&&voRepresentation.segments.length?voRepresentation.segments[voRepresentation.segments.length-1].duration:0);// Specific use case of SegmentTimeline without timeShiftBufferDepth
if(voRepresentation.segmentInfoType===_DashConstants2.default.SEGMENT_TIMELINE&&settings.get().streaming.calcSegmentAvailabilityRangeFromTimeline){return calcSegmentAvailabilityRangeFromTimeline(voRepresentation);}var now=calcPresentationTimeFromWallTime(new Date(),voPeriod);var periodEnd=voPeriod.start+voPeriod.duration;range.start=Math.max(now-voPeriod.mpd.timeShiftBufferDepth,voPeriod.start);var endOffset=voRepresentation.availabilityTimeOffset!==undefined&&voRepresentation.availabilityTimeOffset<d?d-voRepresentation.availabilityTimeOffset:d;range.end=now>=periodEnd&&now-endOffset<periodEnd?periodEnd:now-endOffset;return range;}function calcSegmentAvailabilityRangeFromTimeline(voRepresentation){var adaptation=voRepresentation.adaptation.period.mpd.manifest.Period_asArray[voRepresentation.adaptation.period.index].AdaptationSet_asArray[voRepresentation.adaptation.index];var representation=dashManifestModel.getRepresentationFor(voRepresentation.index,adaptation);var timeline=representation.SegmentTemplate.SegmentTimeline;var timescale=representation.SegmentTemplate.timescale;var segments=timeline.S_asArray;var range={start:0,end:0};var d=0;var segment=void 0,repeat=void 0,i=void 0,len=void 0;range.start=calcPresentationTimeFromMediaTime(segments[0].t/timescale,voRepresentation);for(i=0,len=segments.length;i<len;i++){segment=segments[i];repeat=0;if(segment.hasOwnProperty('r')){repeat=segment.r;}d+=segment.d/timescale*(1+repeat);}range.end=range.start+d;return range;}function getPeriodEnd(voRepresentation,isDynamic){// Static Range Finder
var voPeriod=voRepresentation.adaptation.period;if(!isDynamic){return voPeriod.start+voPeriod.duration;}if(!isClientServerTimeSyncCompleted&&voRepresentation.segmentAvailabilityRange){return voRepresentation.segmentAvailabilityRange;}// Dynamic Range Finder
var d=voRepresentation.segmentDuration||(voRepresentation.segments&&voRepresentation.segments.length?voRepresentation.segments[voRepresentation.segments.length-1].duration:0);var now=calcPresentationTimeFromWallTime(new Date(),voPeriod);var periodEnd=voPeriod.start+voPeriod.duration;var endOffset=voRepresentation.availabilityTimeOffset!==undefined&&voRepresentation.availabilityTimeOffset<d?d-voRepresentation.availabilityTimeOffset:d;return Math.min(now-endOffset,periodEnd);}function calcPeriodRelativeTimeFromMpdRelativeTime(representation,mpdRelativeTime){var periodStartTime=representation.adaptation.period.start;return mpdRelativeTime-periodStartTime;}/*
    * We need to figure out if we want to timesync for segmentTimeine where useCalculatedLiveEdge = true
    * seems we figure out client offset based on logic in liveEdgeFinder getLiveEdge timelineConverter.setClientTimeOffset(liveEdge - representationInfo.DVRWindow.end);
    * FYI StreamController's onManifestUpdated entry point to timeSync
    * */function onTimeSyncComplete(e){if(isClientServerTimeSyncCompleted)return;if(e.offset!==undefined){setClientTimeOffset(e.offset/1000);isClientServerTimeSyncCompleted=true;}}function resetInitialSettings(){clientServerTimeShift=0;isClientServerTimeSyncCompleted=false;expectedLiveEdge=NaN;}function reset(){eventBus.off(_Events2.default.TIME_SYNCHRONIZATION_COMPLETED,onTimeSyncComplete,this);resetInitialSettings();}instance={initialize:initialize,isTimeSyncCompleted:isTimeSyncCompleted,setTimeSyncCompleted:setTimeSyncCompleted,getClientTimeOffset:getClientTimeOffset,setClientTimeOffset:setClientTimeOffset,getExpectedLiveEdge:getExpectedLiveEdge,setExpectedLiveEdge:setExpectedLiveEdge,calcAvailabilityStartTimeFromPresentationTime:calcAvailabilityStartTimeFromPresentationTime,calcAvailabilityEndTimeFromPresentationTime:calcAvailabilityEndTimeFromPresentationTime,calcPresentationTimeFromWallTime:calcPresentationTimeFromWallTime,calcPresentationTimeFromMediaTime:calcPresentationTimeFromMediaTime,calcPeriodRelativeTimeFromMpdRelativeTime:calcPeriodRelativeTimeFromMpdRelativeTime,calcMediaTimeFromPresentationTime:calcMediaTimeFromPresentationTime,calcSegmentAvailabilityRange:calcSegmentAvailabilityRange,getPeriodEnd:getPeriodEnd,calcWallTimeForSegment:calcWallTimeForSegment,reset:reset};setup();return instance;}TimelineConverter.__dashjs_factory_name='TimelineConverter';exports.default=_FactoryMaker2.default.getSingletonFactory(TimelineConverter);


},{"../../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","../../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","../../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../constants/DashConstants":"../node_modules/dashjs/build/es5/src/dash/constants/DashConstants.js","../models/DashManifestModel":"../node_modules/dashjs/build/es5/src/dash/models/DashManifestModel.js","../../core/Settings":"../node_modules/dashjs/build/es5/src/core/Settings.js"}],"../node_modules/dashjs/build/es5/externals/base64.js":[function(require,module,exports) {
'use strict';/* $Date: 2007-06-12 18:02:31 $ */// from: http://bannister.us/weblog/2007/06/09/simple-base64-encodedecode-javascript/
// Handles encode/decode of ASCII and Unicode strings.
var UTF8={};UTF8.encode=function(s){var u=[];for(var i=0;i<s.length;++i){var c=s.charCodeAt(i);if(c<0x80){u.push(c);}else if(c<0x800){u.push(0xC0|c>>6);u.push(0x80|63&c);}else if(c<0x10000){u.push(0xE0|c>>12);u.push(0x80|63&c>>6);u.push(0x80|63&c);}else{u.push(0xF0|c>>18);u.push(0x80|63&c>>12);u.push(0x80|63&c>>6);u.push(0x80|63&c);}}return u;};UTF8.decode=function(u){var a=[];var i=0;while(i<u.length){var v=u[i++];if(v<0x80){// no need to mask byte
}else if(v<0xE0){v=(31&v)<<6;v|=63&u[i++];}else if(v<0xF0){v=(15&v)<<12;v|=(63&u[i++])<<6;v|=63&u[i++];}else{v=(7&v)<<18;v|=(63&u[i++])<<12;v|=(63&u[i++])<<6;v|=63&u[i++];}a.push(String.fromCharCode(v));}return a.join('');};var BASE64={};(function(T){var encodeArray=function encodeArray(u){var i=0;var a=[];var n=0|u.length/3;while(0<n--){var v=(u[i]<<16)+(u[i+1]<<8)+u[i+2];i+=3;a.push(T.charAt(63&v>>18));a.push(T.charAt(63&v>>12));a.push(T.charAt(63&v>>6));a.push(T.charAt(63&v));}if(2==u.length-i){var v=(u[i]<<16)+(u[i+1]<<8);a.push(T.charAt(63&v>>18));a.push(T.charAt(63&v>>12));a.push(T.charAt(63&v>>6));a.push('=');}else if(1==u.length-i){var v=u[i]<<16;a.push(T.charAt(63&v>>18));a.push(T.charAt(63&v>>12));a.push('==');}return a.join('');};var R=function(){var a=[];for(var i=0;i<T.length;++i){a[T.charCodeAt(i)]=i;}a['='.charCodeAt(0)]=0;return a;}();var decodeArray=function decodeArray(s){var i=0;var u=[];var n=0|s.length/4;while(0<n--){var v=(R[s.charCodeAt(i)]<<18)+(R[s.charCodeAt(i+1)]<<12)+(R[s.charCodeAt(i+2)]<<6)+R[s.charCodeAt(i+3)];u.push(255&v>>16);u.push(255&v>>8);u.push(255&v);i+=4;}if(u){if('='==s.charAt(i-2)){u.pop();u.pop();}else if('='==s.charAt(i-1)){u.pop();}}return u;};var ASCII={};ASCII.encode=function(s){var u=[];for(var i=0;i<s.length;++i){u.push(s.charCodeAt(i));}return u;};ASCII.decode=function(u){for(var i=0;i<s.length;++i){a[i]=String.fromCharCode(a[i]);}return a.join('');};BASE64.decodeArray=function(s){var u=decodeArray(s);return new Uint8Array(u);};BASE64.encodeASCII=function(s){var u=ASCII.encode(s);return encodeArray(u);};BASE64.decodeASCII=function(s){var a=decodeArray(s);return ASCII.decode(a);};BASE64.encode=function(s){var u=UTF8.encode(s);return encodeArray(u);};BASE64.decode=function(s){var u=decodeArray(s);return UTF8.decode(u);};})("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");/*The following polyfills are not used in dash.js but have caused multiplayer integration issues.
 Therefore commenting them out.
if (undefined === btoa) {
    var btoa = BASE64.encode;
}
if (undefined === atob) {
    var atob = BASE64.decode;
}
*/if(typeof exports!=='undefined'){exports.decode=BASE64.decode;exports.decodeArray=BASE64.decodeArray;exports.encode=BASE64.encode;exports.encodeASCII=BASE64.encodeASCII;}


},{}],"../node_modules/dashjs/build/es5/src/streaming/MediaPlayer.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _cea608Parser=require('../../externals/cea608-parser');var _cea608Parser2=_interopRequireDefault(_cea608Parser);var _Constants=require('./constants/Constants');var _Constants2=_interopRequireDefault(_Constants);var _DashConstants=require('../dash/constants/DashConstants');var _DashConstants2=_interopRequireDefault(_DashConstants);var _MetricsConstants=require('./constants/MetricsConstants');var _MetricsConstants2=_interopRequireDefault(_MetricsConstants);var _PlaybackController=require('./controllers/PlaybackController');var _PlaybackController2=_interopRequireDefault(_PlaybackController);var _StreamController=require('./controllers/StreamController');var _StreamController2=_interopRequireDefault(_StreamController);var _GapController=require('./controllers/GapController');var _GapController2=_interopRequireDefault(_GapController);var _MediaController=require('./controllers/MediaController');var _MediaController2=_interopRequireDefault(_MediaController);var _BaseURLController=require('./controllers/BaseURLController');var _BaseURLController2=_interopRequireDefault(_BaseURLController);var _ManifestLoader=require('./ManifestLoader');var _ManifestLoader2=_interopRequireDefault(_ManifestLoader);var _ErrorHandler=require('./utils/ErrorHandler');var _ErrorHandler2=_interopRequireDefault(_ErrorHandler);var _Capabilities=require('./utils/Capabilities');var _Capabilities2=_interopRequireDefault(_Capabilities);var _TextTracks=require('./text/TextTracks');var _TextTracks2=_interopRequireDefault(_TextTracks);var _RequestModifier=require('./utils/RequestModifier');var _RequestModifier2=_interopRequireDefault(_RequestModifier);var _TextController=require('./text/TextController');var _TextController2=_interopRequireDefault(_TextController);var _URIFragmentModel=require('./models/URIFragmentModel');var _URIFragmentModel2=_interopRequireDefault(_URIFragmentModel);var _ManifestModel=require('./models/ManifestModel');var _ManifestModel2=_interopRequireDefault(_ManifestModel);var _MediaPlayerModel=require('./models/MediaPlayerModel');var _MediaPlayerModel2=_interopRequireDefault(_MediaPlayerModel);var _AbrController=require('./controllers/AbrController');var _AbrController2=_interopRequireDefault(_AbrController);var _SchemeLoaderFactory=require('./net/SchemeLoaderFactory');var _SchemeLoaderFactory2=_interopRequireDefault(_SchemeLoaderFactory);var _VideoModel=require('./models/VideoModel');var _VideoModel2=_interopRequireDefault(_VideoModel);var _CmcdModel=require('./models/CmcdModel');var _CmcdModel2=_interopRequireDefault(_CmcdModel);var _DOMStorage=require('./utils/DOMStorage');var _DOMStorage2=_interopRequireDefault(_DOMStorage);var _Debug=require('./../core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _Errors=require('./../core/errors/Errors');var _Errors2=_interopRequireDefault(_Errors);var _EventBus=require('./../core/EventBus');var _EventBus2=_interopRequireDefault(_EventBus);var _Events=require('./../core/events/Events');var _Events2=_interopRequireDefault(_Events);var _MediaPlayerEvents=require('./MediaPlayerEvents');var _MediaPlayerEvents2=_interopRequireDefault(_MediaPlayerEvents);var _FactoryMaker=require('../core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Settings=require('../core/Settings');var _Settings2=_interopRequireDefault(_Settings);var _Version=require('./../core/Version');var _SegmentBaseController=require('../dash/controllers/SegmentBaseController');var _SegmentBaseController2=_interopRequireDefault(_SegmentBaseController);var _DashAdapter=require('../dash/DashAdapter');var _DashAdapter2=_interopRequireDefault(_DashAdapter);var _DashMetrics=require('../dash/DashMetrics');var _DashMetrics2=_interopRequireDefault(_DashMetrics);var _TimelineConverter=require('../dash/utils/TimelineConverter');var _TimelineConverter2=_interopRequireDefault(_TimelineConverter);var _HTTPRequest=require('./vo/metrics/HTTPRequest');var _base=require('../../externals/base64');var _base2=_interopRequireDefault(_base);var _codemIsoboxer=require('codem-isoboxer');var _codemIsoboxer2=_interopRequireDefault(_codemIsoboxer);var _DashJSError=require('./vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);var _SupervisorTools=require('./utils/SupervisorTools');var _ManifestUpdater=require('./ManifestUpdater');var _ManifestUpdater2=_interopRequireDefault(_ManifestUpdater);var _URLUtils=require('../streaming/utils/URLUtils');var _URLUtils2=_interopRequireDefault(_URLUtils);var _BoxParser=require('./utils/BoxParser');var _BoxParser2=_interopRequireDefault(_BoxParser);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/* jscs:disable *//**
 * The media types
 * @typedef {("video" | "audio" | "text" | "fragmentedText" | "embeddedText" | "image")} MediaType
 *//* jscs:enable *//**
 * @module MediaPlayer
 * @description The MediaPlayer is the primary dash.js Module and a Facade to build your player around.
 * It will allow you access to all the important dash.js properties/methods via the public API and all the
 * events to build a robust DASH media player.
 *///Dash
function MediaPlayer(){/**
    * @constant {string} STREAMING_NOT_INITIALIZED_ERROR error string thrown when a function is called before the dash.js has been fully initialized
    * @inner
    */var STREAMING_NOT_INITIALIZED_ERROR='You must first call initialize() and set a source before calling this method';/**
    * @constant {string} PLAYBACK_NOT_INITIALIZED_ERROR error string thrown when a function is called before the dash.js has been fully initialized
    * @inner
    */var PLAYBACK_NOT_INITIALIZED_ERROR='You must first call initialize() and set a valid source and view before calling this method';/**
    * @constant {string} ELEMENT_NOT_ATTACHED_ERROR error string thrown when a function is called before the dash.js has received a reference of an HTML5 video element
    * @inner
    */var ELEMENT_NOT_ATTACHED_ERROR='You must first call attachView() to set the video element before calling this method';/**
    * @constant {string} SOURCE_NOT_ATTACHED_ERROR error string thrown when a function is called before the dash.js has received a valid source stream.
    * @inner
    */var SOURCE_NOT_ATTACHED_ERROR='You must first call attachSource() with a valid source before calling this method';/**
    * @constant {string} MEDIA_PLAYER_NOT_INITIALIZED_ERROR error string thrown when a function is called before the dash.js has been fully initialized.
    * @inner
    */var MEDIA_PLAYER_NOT_INITIALIZED_ERROR='MediaPlayer not initialized!';var context=this.context;var eventBus=(0,_EventBus2.default)(context).getInstance();var settings=(0,_Settings2.default)(context).getInstance();var debug=(0,_Debug2.default)(context).getInstance({settings:settings});var instance=void 0,logger=void 0,source=void 0,protectionData=void 0,mediaPlayerInitialized=void 0,streamingInitialized=void 0,playbackInitialized=void 0,autoPlay=void 0,abrController=void 0,schemeLoaderFactory=void 0,timelineConverter=void 0,mediaController=void 0,protectionController=void 0,metricsReportingController=void 0,mssHandler=void 0,offlineController=void 0,adapter=void 0,mediaPlayerModel=void 0,errHandler=void 0,baseURLController=void 0,capabilities=void 0,streamController=void 0,gapController=void 0,playbackController=void 0,dashMetrics=void 0,manifestModel=void 0,cmcdModel=void 0,videoModel=void 0,textController=void 0,uriFragmentModel=void 0,domStorage=void 0,segmentBaseController=void 0;/*
    ---------------------------------------------------------------------------

        INIT FUNCTIONS

    ---------------------------------------------------------------------------
    */function setup(){logger=debug.getLogger(instance);mediaPlayerInitialized=false;playbackInitialized=false;streamingInitialized=false;autoPlay=true;protectionController=null;offlineController=null;protectionData=null;adapter=null;segmentBaseController=null;_Events2.default.extend(_MediaPlayerEvents2.default);mediaPlayerModel=(0,_MediaPlayerModel2.default)(context).getInstance();videoModel=(0,_VideoModel2.default)(context).getInstance();uriFragmentModel=(0,_URIFragmentModel2.default)(context).getInstance();}/**
     * Configure media player with customs controllers. Helpful for tests
     *
     * @param {object=} config controllers configuration
     * @memberof module:MediaPlayer
     * @instance
     */function setConfig(config){if(!config){return;}if(config.capabilities){capabilities=config.capabilities;}if(config.streamController){streamController=config.streamController;}if(config.gapController){gapController=config.gapController;}if(config.playbackController){playbackController=config.playbackController;}if(config.mediaPlayerModel){mediaPlayerModel=config.mediaPlayerModel;}if(config.abrController){abrController=config.abrController;}if(config.schemeLoaderFactory){schemeLoaderFactory=config.schemeLoaderFactory;}if(config.mediaController){mediaController=config.mediaController;}if(config.settings){settings=config.settings;}}/**
     * Upon creating the MediaPlayer you must call initialize before you call anything else.
     * There is one exception to this rule. It is crucial to call {@link module:MediaPlayer#extend extend()}
     * with all your extensions prior to calling initialize.
     *
     * ALL arguments are optional and there are individual methods to set each argument later on.
     * The args in this method are just for convenience and should only be used for a simple player setup.
     *
     * @param {HTML5MediaElement=} view - Optional arg to set the video element. {@link module:MediaPlayer#attachView attachView()}
     * @param {string=} source - Optional arg to set the media source. {@link module:MediaPlayer#attachSource attachSource()}
     * @param {boolean=} AutoPlay - Optional arg to set auto play. {@link module:MediaPlayer#setAutoPlay setAutoPlay()}
     * @see {@link module:MediaPlayer#attachView attachView()}
     * @see {@link module:MediaPlayer#attachSource attachSource()}
     * @see {@link module:MediaPlayer#setAutoPlay setAutoPlay()}
     * @memberof module:MediaPlayer
     * @instance
     */function initialize(view,source,AutoPlay){if(!capabilities){capabilities=(0,_Capabilities2.default)(context).getInstance();}errHandler=(0,_ErrorHandler2.default)(context).getInstance();if(!capabilities.supportsMediaSource()){errHandler.error(new _DashJSError2.default(_Errors2.default.CAPABILITY_MEDIASOURCE_ERROR_CODE,_Errors2.default.CAPABILITY_MEDIASOURCE_ERROR_MESSAGE));return;}if(mediaPlayerInitialized)return;mediaPlayerInitialized=true;// init some controllers and models
timelineConverter=(0,_TimelineConverter2.default)(context).getInstance();if(!abrController){abrController=(0,_AbrController2.default)(context).getInstance();abrController.setConfig({settings:settings});}if(!schemeLoaderFactory){schemeLoaderFactory=(0,_SchemeLoaderFactory2.default)(context).getInstance();}if(!playbackController){playbackController=(0,_PlaybackController2.default)(context).getInstance();}if(!mediaController){mediaController=(0,_MediaController2.default)(context).getInstance();}if(!streamController){streamController=(0,_StreamController2.default)(context).getInstance();}if(!gapController){gapController=(0,_GapController2.default)(context).getInstance();}adapter=(0,_DashAdapter2.default)(context).getInstance();manifestModel=(0,_ManifestModel2.default)(context).getInstance();cmcdModel=(0,_CmcdModel2.default)(context).getInstance();dashMetrics=(0,_DashMetrics2.default)(context).getInstance({settings:settings});textController=(0,_TextController2.default)(context).getInstance();domStorage=(0,_DOMStorage2.default)(context).getInstance({settings:settings});adapter.setConfig({constants:_Constants2.default,cea608parser:_cea608Parser2.default,errHandler:errHandler,BASE64:_base2.default});if(!baseURLController){baseURLController=(0,_BaseURLController2.default)(context).create();}baseURLController.setConfig({adapter:adapter});segmentBaseController=(0,_SegmentBaseController2.default)(context).getInstance({dashMetrics:dashMetrics,mediaPlayerModel:mediaPlayerModel,errHandler:errHandler,baseURLController:baseURLController,events:_Events2.default,eventBus:eventBus,debug:debug,boxParser:(0,_BoxParser2.default)(context).getInstance(),requestModifier:(0,_RequestModifier2.default)(context).getInstance(),errors:_Errors2.default});segmentBaseController.initialize();// configure controllers
mediaController.setConfig({domStorage:domStorage,settings:settings});restoreDefaultUTCTimingSources();setAutoPlay(AutoPlay!==undefined?AutoPlay:true);// Detect and initialize offline module to support offline contents playback
detectOffline();if(view){attachView(view);}if(source){attachSource(source);}logger.info('[dash.js '+getVersion()+'] '+'MediaPlayer has been initialized');}/**
     * Sets the MPD source and the video element to null. You can also reset the MediaPlayer by
     * calling attachSource with a new source file.
     *
     * This call does not destroy the MediaPlayer. To destroy the MediaPlayer and free all of its
     * memory, call destroy().
     *
     * @memberof module:MediaPlayer
     * @instance
     */function reset(){attachSource(null);attachView(null);protectionData=null;if(protectionController){protectionController.reset();protectionController=null;}if(metricsReportingController){metricsReportingController.reset();metricsReportingController=null;}segmentBaseController.reset();settings.reset();if(offlineController){offlineController.reset();offlineController=null;}}/**
     * Completely destroys the media player and frees all memory.
     *
     * @memberof module:MediaPlayer
     * @instance
     */function destroy(){reset();_FactoryMaker2.default.deleteSingletonInstances(context);}/**
     * The ready state of the MediaPlayer based on both the video element and MPD source being defined.
     *
     * @returns {boolean} The current ready state of the MediaPlayer
     * @see {@link module:MediaPlayer#attachView attachView()}
     * @see {@link module:MediaPlayer#attachSource attachSource()}
     * @memberof module:MediaPlayer
     * @instance
     */function isReady(){return!!source&&!!videoModel.getElement();}/**
     * Use the on method to listen for public events found in MediaPlayer.events. {@link MediaPlayerEvents}
     *
     * @param {string} type - {@link MediaPlayerEvents}
     * @param {Function} listener - callback method when the event fires.
     * @param {Object} scope - context of the listener so it can be removed properly.
     * @param {Object} options - object to define various options such as priority and mode
     * @memberof module:MediaPlayer
     * @instance
     */function on(type,listener,scope,options){eventBus.on(type,listener,scope,options);}/**
     * Use the off method to remove listeners for public events found in MediaPlayer.events. {@link MediaPlayerEvents}
     *
     * @param {string} type - {@link MediaPlayerEvents}
     * @param {Function} listener - callback method when the event fires.
     * @param {Object} scope - context of the listener so it can be removed properly.
     * @memberof module:MediaPlayer
     * @instance
     */function off(type,listener,scope){eventBus.off(type,listener,scope);}/**
     * Current version of Dash.js
     * @returns {string} the current dash.js version string.
     * @memberof module:MediaPlayer
     * @instance
     */function getVersion(){return(0,_Version.getVersionString)();}/**
     * Use this method to access the dash.js logging class.
     *
     * @returns {Debug}
     * @memberof module:MediaPlayer
     * @instance
     */function getDebug(){return debug;}/*
    ---------------------------------------------------------------------------

        PLAYBACK FUNCTIONS

    ---------------------------------------------------------------------------
    *//**
     * Causes the player to begin streaming the media as set by the {@link module:MediaPlayer#attachSource attachSource()}
     * method in preparation for playing. It specifically does not require a view to be attached with {@link module:MediaPlayer#attachSource attachView()} to begin preloading.
     * When a view is attached after preloading, the buffered data is transferred to the attached mediaSource buffers.
     *
     * @see {@link module:MediaPlayer#attachSource attachSource()}
     * @see {@link module:MediaPlayer#attachView attachView()}
     * @memberof module:MediaPlayer
     * @throws {@link module:MediaPlayer~SOURCE_NOT_ATTACHED_ERROR SOURCE_NOT_ATTACHED_ERROR} if called before attachSource function
     * @instance
     */function preload(){if(videoModel.getElement()||streamingInitialized){return false;}if(source){initializePlayback();}else{throw SOURCE_NOT_ATTACHED_ERROR;}}/**
     * The play method initiates playback of the media defined by the {@link module:MediaPlayer#attachSource attachSource()} method.
     * This method will call play on the native Video Element.
     *
     * @see {@link module:MediaPlayer#attachSource attachSource()}
     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function
     * @memberof module:MediaPlayer
     * @instance
     */function play(){if(!playbackInitialized){throw PLAYBACK_NOT_INITIALIZED_ERROR;}if(!autoPlay||isPaused()&&playbackInitialized){playbackController.play();}}/**
     * This method will call pause on the native Video Element.
     *
     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function
     * @memberof module:MediaPlayer
     * @instance
     */function pause(){if(!playbackInitialized){throw PLAYBACK_NOT_INITIALIZED_ERROR;}playbackController.pause();}/**
     * Returns a Boolean that indicates whether the Video Element is paused.
     * @return {boolean}
     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function
     * @memberof module:MediaPlayer
     * @instance
     */function isPaused(){if(!playbackInitialized){throw PLAYBACK_NOT_INITIALIZED_ERROR;}return playbackController.isPaused();}/**
     * Sets the currentTime property of the attached video element.  If it is a live stream with a
     * timeShiftBufferLength, then the DVR window offset will be automatically calculated.
     *
     * @param {number} value - A relative time, in seconds, based on the return value of the {@link module:MediaPlayer#duration duration()} method is expected
     * @see {@link module:MediaPlayer#getDVRSeekOffset getDVRSeekOffset()}
     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function
     * @throws {@link Constants#BAD_ARGUMENT_ERROR BAD_ARGUMENT_ERROR} if called with an invalid argument, not number type or is NaN.
     * @memberof module:MediaPlayer
     * @instance
     */function seek(value){if(!playbackInitialized){throw PLAYBACK_NOT_INITIALIZED_ERROR;}(0,_SupervisorTools.checkParameterType)(value,'number');if(isNaN(value)){throw _Constants2.default.BAD_ARGUMENT_ERROR;}var s=playbackController.getIsDynamic()?getDVRSeekOffset(value):value;playbackController.seek(s);}/**
     * Returns a Boolean that indicates whether the media is in the process of seeking to a new position.
     * @return {boolean}
     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function
     * @memberof module:MediaPlayer
     * @instance
     */function isSeeking(){if(!playbackInitialized){throw PLAYBACK_NOT_INITIALIZED_ERROR;}return playbackController.isSeeking();}/**
     * Returns a Boolean that indicates whether the media is in the process of dynamic.
     * @return {boolean}
     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function
     * @memberof module:MediaPlayer
     * @instance
     */function isDynamic(){if(!playbackInitialized){throw PLAYBACK_NOT_INITIALIZED_ERROR;}return playbackController.getIsDynamic();}/**
     * Use this method to set the native Video Element's playback rate.
     * @param {number} value
     * @memberof module:MediaPlayer
     * @instance
     */function setPlaybackRate(value){getVideoElement().playbackRate=value;}/**
     * Returns the current playback rate.
     * @returns {number}
     * @memberof module:MediaPlayer
     * @instance
     */function getPlaybackRate(){return getVideoElement().playbackRate;}/**
     * Use this method to set the native Video Element's muted state. Takes a Boolean that determines whether audio is muted. true if the audio is muted and false otherwise.
     * @param {boolean} value
     * @memberof module:MediaPlayer
     * @throws {@link Constants#BAD_ARGUMENT_ERROR BAD_ARGUMENT_ERROR} if called with an invalid argument, not boolean type.
     * @instance
     */function setMute(value){(0,_SupervisorTools.checkParameterType)(value,'boolean');getVideoElement().muted=value;}/**
     * A Boolean that determines whether audio is muted.
     * @returns {boolean}
     * @memberof module:MediaPlayer
     * @instance
     */function isMuted(){return getVideoElement().muted;}/**
     * A double indicating the audio volume, from 0.0 (silent) to 1.0 (loudest).
     * @param {number} value
     * @memberof module:MediaPlayer
     * @throws {@link Constants#BAD_ARGUMENT_ERROR BAD_ARGUMENT_ERROR} if called with an invalid argument, not number type, or is NaN or not between 0 and 1.
     * @instance
     */function setVolume(value){if(typeof value!=='number'||isNaN(value)||value<0.0||value>1.0){throw _Constants2.default.BAD_ARGUMENT_ERROR;}getVideoElement().volume=value;}/**
     * Returns the current audio volume, from 0.0 (silent) to 1.0 (loudest).
     * @returns {number}
     * @memberof module:MediaPlayer
     * @instance
     */function getVolume(){return getVideoElement().volume;}/**
     * The length of the buffer for a given media type, in seconds. Valid media
     * types are "video", "audio" and "fragmentedText". If no type is passed
     * in, then the minimum of video, audio and fragmentedText buffer length is
     * returned. NaN is returned if an invalid type is requested, the
     * presentation does not contain that type, or if no arguments are passed
     * and the presentation does not include any adaption sets of valid media
     * type.
     *
     * @param {MediaType} type - 'video', 'audio' or 'fragmentedText'
     * @returns {number} The length of the buffer for the given media type, in
     *  seconds, or NaN
     * @memberof module:MediaPlayer
     * @instance
     */function getBufferLength(type){var types=[_Constants2.default.VIDEO,_Constants2.default.AUDIO,_Constants2.default.FRAGMENTED_TEXT];if(!type){var buffer=types.map(function(t){return getTracksFor(t).length>0?getDashMetrics().getCurrentBufferLevel(t):Number.MAX_VALUE;}).reduce(function(p,c){return Math.min(p,c);});return buffer===Number.MAX_VALUE?NaN:buffer;}else{if(types.indexOf(type)!==-1){var _buffer=getDashMetrics().getCurrentBufferLevel(type);return _buffer?_buffer:NaN;}else{logger.warn('getBufferLength requested for invalid type');return NaN;}}}/**
     * The timeShiftBufferLength (DVR Window), in seconds.
     *
     * @returns {number} The window of allowable play time behind the live point of a live stream.
     * @memberof module:MediaPlayer
     * @instance
     */function getDVRWindowSize(){var metric=dashMetrics.getCurrentDVRInfo();if(!metric){return 0;}return metric.manifestInfo.DVRWindowSize;}/**
     * This method should only be used with a live stream that has a valid timeShiftBufferLength (DVR Window).
     * NOTE - If you do not need the raw offset value (i.e. media analytics, tracking, etc) consider using the {@link module:MediaPlayer#seek seek()} method
     * which will calculate this value for you and set the video element's currentTime property all in one simple call.
     *
     * @param {number} value - A relative time, in seconds, based on the return value of the {@link module:MediaPlayer#duration duration()} method is expected.
     * @returns {number} A value that is relative the available range within the timeShiftBufferLength (DVR Window).
     * @see {@link module:MediaPlayer#seek seek()}
     * @memberof module:MediaPlayer
     * @instance
     */function getDVRSeekOffset(value){var metric=dashMetrics.getCurrentDVRInfo();if(!metric){return 0;}var liveDelay=playbackController.getLiveDelay();var val=metric.range.start+value;if(val>metric.range.end-liveDelay){val=metric.range.end-liveDelay;}return val;}/**
     * Current time of the playhead, in seconds.
     *
     * If called with no arguments then the returned time value is time elapsed since the start point of the first stream, or if it is a live stream, then the time will be based on the return value of the {@link module:MediaPlayer#duration duration()} method.
     * However if a stream ID is supplied then time is relative to the start of that stream, or is null if there is no such stream id in the manifest.
     *
     * @param {string} streamId - The ID of a stream that the returned playhead time must be relative to the start of. If undefined, then playhead time is relative to the first stream.
     * @returns {number} The current playhead time of the media, or null.
     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function
     * @memberof module:MediaPlayer
     * @instance
     */function time(streamId){if(!playbackInitialized){throw PLAYBACK_NOT_INITIALIZED_ERROR;}var t=getVideoElement().currentTime;if(streamId!==undefined){t=streamController.getTimeRelativeToStreamId(t,streamId);}else if(playbackController.getIsDynamic()){var metric=dashMetrics.getCurrentDVRInfo();t=metric===null?0:duration()-(metric.range.end-metric.time);}return t;}/**
     * Duration of the media's playback, in seconds.
     *
     * @returns {number} The current duration of the media.
     * @memberof module:MediaPlayer
     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function
     * @instance
     */function duration(){if(!playbackInitialized){throw PLAYBACK_NOT_INITIALIZED_ERROR;}var d=getVideoElement().duration;if(playbackController.getIsDynamic()){var metric=dashMetrics.getCurrentDVRInfo();var range=void 0;if(!metric){return 0;}range=metric.range.end-metric.range.start;d=range<metric.manifestInfo.DVRWindowSize?range:metric.manifestInfo.DVRWindowSize;}return d;}/**
     * Use this method to get the current playhead time as an absolute value, the time in seconds since midnight UTC, Jan 1 1970.
     * Note - this property only has meaning for live streams. If called before play() has begun, it will return a value of NaN.
     *
     * @returns {number} The current playhead time as UTC timestamp.
     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function
     * @memberof module:MediaPlayer
     * @instance
     */function timeAsUTC(){if(!playbackInitialized){throw PLAYBACK_NOT_INITIALIZED_ERROR;}if(time()<0){return NaN;}return getAsUTC(time());}/**
     * Use this method to get the current duration as an absolute value, the time in seconds since midnight UTC, Jan 1 1970.
     * Note - this property only has meaning for live streams.
     *
     * @returns {number} The current duration as UTC timestamp.
     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function
     * @memberof module:MediaPlayer
     * @instance
     */function durationAsUTC(){if(!playbackInitialized){throw PLAYBACK_NOT_INITIALIZED_ERROR;}return getAsUTC(duration());}/*
    ---------------------------------------------------------------------------

        AUTO BITRATE

    ---------------------------------------------------------------------------
    *//**
     * Gets the top quality BitrateInfo checking portal limit and max allowed.
     * It calls getTopQualityIndexFor internally
     *
     * @param {MediaType} type - 'video' or 'audio'
     * @memberof module:MediaPlayer
     * @returns {BitrateInfo | null}
     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function
     * @instance
     */function getTopBitrateInfoFor(type){if(!streamingInitialized){throw STREAMING_NOT_INITIALIZED_ERROR;}return abrController.getTopBitrateInfoFor(type);}/**
     * Gets the current download quality for media type video, audio or images. For video and audio types the ABR
     * rules update this value before every new download unless setAutoSwitchQualityFor(type, false) is called. For 'image'
     * type, thumbnails, there is no ABR algorithm and quality is set manually.
     *
     * @param {MediaType} type - 'video', 'audio' or 'image' (thumbnails)
     * @returns {number} the quality index, 0 corresponding to the lowest bitrate
     * @memberof module:MediaPlayer
     * @see {@link module:MediaPlayer#setAutoSwitchQualityFor setAutoSwitchQualityFor()}
     * @see {@link module:MediaPlayer#setQualityFor setQualityFor()}
     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function
     * @instance
     */function getQualityFor(type){if(!streamingInitialized){throw STREAMING_NOT_INITIALIZED_ERROR;}if(type===_Constants2.default.IMAGE){var activeStream=getActiveStream();if(!activeStream){return-1;}var thumbnailController=activeStream.getThumbnailController();return!thumbnailController?-1:thumbnailController.getCurrentTrackIndex();}return abrController.getQualityFor(type);}/**
     * Sets the current quality for media type instead of letting the ABR Heuristics automatically selecting it.
     * This value will be overwritten by the ABR rules unless setAutoSwitchQualityFor(type, false) is called.
     *
     * @param {MediaType} type - 'video', 'audio' or 'image'
     * @param {number} value - the quality index, 0 corresponding to the lowest bitrate
     * @memberof module:MediaPlayer
     * @see {@link module:MediaPlayer#setAutoSwitchQualityFor setAutoSwitchQualityFor()}
     * @see {@link module:MediaPlayer#getQualityFor getQualityFor()}
     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function
     * @instance
     */function setQualityFor(type,value){if(!streamingInitialized){throw STREAMING_NOT_INITIALIZED_ERROR;}if(type===_Constants2.default.IMAGE){var activeStream=getActiveStream();if(!activeStream){return;}var thumbnailController=activeStream.getThumbnailController();if(thumbnailController){thumbnailController.setTrackByIndex(value);}}abrController.setPlaybackQuality(type,streamController.getActiveStreamInfo(),value);}/**
     * Update the video element size variables
     * Should be called on window resize (or any other time player is resized). Fullscreen does trigger a window resize event.
     *
     * Once windowResizeEventCalled = true, abrController.checkPortalSize() will use element size variables rather than querying clientWidth every time.
     *
     * @memberof module:MediaPlayer
     * @instance
     */function updatePortalSize(){abrController.setElementSize();abrController.setWindowResizeEventCalled(true);}/*
    ---------------------------------------------------------------------------

        MEDIA PLAYER CONFIGURATION

    ---------------------------------------------------------------------------
    *//**
     * <p>Set to false to prevent stream from auto-playing when the view is attached.</p>
     *
     * @param {boolean} value
     * @default true
     * @memberof module:MediaPlayer
     * @see {@link module:MediaPlayer#attachView attachView()}
     * @throws {@link Constants#BAD_ARGUMENT_ERROR BAD_ARGUMENT_ERROR} if called with an invalid argument, not boolean type.
     * @instance
     *
     */function setAutoPlay(value){(0,_SupervisorTools.checkParameterType)(value,'boolean');autoPlay=value;}/**
     * @returns {boolean} The current autoPlay state.
     * @memberof module:MediaPlayer
     * @instance
     */function getAutoPlay(){return autoPlay;}/**
     * @memberof module:MediaPlayer
     * @instance
     * @returns {number|NaN} Current live stream latency in seconds. It is the difference between current time and time position at the playback head.
     * @throws {@link module:MediaPlayer~MEDIA_PLAYER_NOT_INITIALIZED_ERROR MEDIA_PLAYER_NOT_INITIALIZED_ERROR} if called before initialize function
     */function getCurrentLiveLatency(){if(!mediaPlayerInitialized){throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;}if(!playbackInitialized){return NaN;}return playbackController.getCurrentLiveLatency();}/**
     * Add a custom ABR Rule
     * Rule will be apply on next stream if a stream is being played
     *
     * @param {string} type - rule type (one of ['qualitySwitchRules','abandonFragmentRules'])
     * @param {string} rulename - name of rule (used to identify custom rule). If one rule of same name has been added, then existing rule will be updated
     * @param {object} rule - the rule object instance
     * @memberof module:MediaPlayer
     * @throws {@link Constants#BAD_ARGUMENT_ERROR BAD_ARGUMENT_ERROR} if called with invalid arguments.
     * @instance
     */function addABRCustomRule(type,rulename,rule){mediaPlayerModel.addABRCustomRule(type,rulename,rule);}/**
     * Remove a custom ABR Rule
     *
     * @param {string} rulename - name of the rule to be removed
     * @memberof module:MediaPlayer
     * @instance
     */function removeABRCustomRule(rulename){mediaPlayerModel.removeABRCustomRule(rulename);}/**
     * Remove all custom rules
     * @memberof module:MediaPlayer
     * @instance
     */function removeAllABRCustomRule(){mediaPlayerModel.removeABRCustomRule();}/**
     * <p>Allows you to set a scheme and server source for UTC live edge detection for dynamic streams.
     * If UTCTiming is defined in the manifest, it will take precedence over any time source manually added.</p>
     * <p>If you have exposed the Date header, use the method {@link module:MediaPlayer#clearDefaultUTCTimingSources clearDefaultUTCTimingSources()}.
     * This will allow the date header on the manifest to be used instead of a time server</p>
     * @param {string} schemeIdUri - <ul>
     * <li>urn:mpeg:dash:utc:http-head:2014</li>
     * <li>urn:mpeg:dash:utc:http-xsdate:2014</li>
     * <li>urn:mpeg:dash:utc:http-iso:2014</li>
     * <li>urn:mpeg:dash:utc:direct:2014</li>
     * </ul>
     * <p>Some specs referencing early ISO23009-1 drafts incorrectly use
     * 2012 in the URI, rather than 2014. support these for now.</p>
     * <ul>
     * <li>urn:mpeg:dash:utc:http-head:2012</li>
     * <li>urn:mpeg:dash:utc:http-xsdate:2012</li>
     * <li>urn:mpeg:dash:utc:http-iso:2012</li>
     * <li>urn:mpeg:dash:utc:direct:2012</li>
     * </ul>
     * @param {string} value - Path to a time source.
     * @default
     * <ul>
     *     <li>schemeIdUri:urn:mpeg:dash:utc:http-xsdate:2014</li>
     *     <li>value:http://time.akamai.com/?iso&ms/li>
     * </ul>
     * @memberof module:MediaPlayer
     * @see {@link module:MediaPlayer#removeUTCTimingSource removeUTCTimingSource()}
     * @instance
     */function addUTCTimingSource(schemeIdUri,value){mediaPlayerModel.addUTCTimingSource(schemeIdUri,value);}/**
     * <p>Allows you to remove a UTC time source. Both schemeIdUri and value need to match the Dash.vo.UTCTiming properties in order for the
     * entry to be removed from the array</p>
     * @param {string} schemeIdUri - see {@link module:MediaPlayer#addUTCTimingSource addUTCTimingSource()}
     * @param {string} value - see {@link module:MediaPlayer#addUTCTimingSource addUTCTimingSource()}
     * @memberof module:MediaPlayer
     * @see {@link module:MediaPlayer#clearDefaultUTCTimingSources clearDefaultUTCTimingSources()}
     * @throws {@link Constants#BAD_ARGUMENT_ERROR BAD_ARGUMENT_ERROR} if called with invalid arguments, schemeIdUri and value are not string type.
     * @instance
     */function removeUTCTimingSource(schemeIdUri,value){mediaPlayerModel.removeUTCTimingSource(schemeIdUri,value);}/**
     * <p>Allows you to clear the stored array of time sources.</p>
     * <p>Example use: If you have exposed the Date header, calling this method
     * will allow the date header on the manifest to be used instead of the time server.</p>
     * <p>Example use: Calling this method, assuming there is not an exposed date header on the manifest,  will default back
     * to using a binary search to discover the live edge</p>
     *
     * @memberof module:MediaPlayer
     * @see {@link module:MediaPlayer#restoreDefaultUTCTimingSources restoreDefaultUTCTimingSources()}
     * @instance
     */function clearDefaultUTCTimingSources(){mediaPlayerModel.clearDefaultUTCTimingSources();}/**
     * <p>Allows you to restore the default time sources after calling {@link module:MediaPlayer#clearDefaultUTCTimingSources clearDefaultUTCTimingSources()}</p>
     *
     * @default
     * <ul>
     *     <li>schemeIdUri:urn:mpeg:dash:utc:http-xsdate:2014</li>
     *     <li>value:http://time.akamai.com/?iso&ms</li>
     * </ul>
     *
     * @memberof module:MediaPlayer
     * @see {@link module:MediaPlayer#addUTCTimingSource addUTCTimingSource()}
     * @instance
     */function restoreDefaultUTCTimingSources(){mediaPlayerModel.restoreDefaultUTCTimingSources();}/**
     * Returns the average throughput computed in the ABR logic
     *
     * @param {MediaType} type
     * @return {number} value
     * @memberof module:MediaPlayer
     * @instance
     */function getAverageThroughput(type){var throughputHistory=abrController.getThroughputHistory();return throughputHistory?throughputHistory.getAverageThroughput(type):0;}/**
     * Sets whether withCredentials on XHR requests for a particular request
     * type is true or false
     *
     * @default false
     * @param {string} type - one of HTTPRequest.*_TYPE
     * @param {boolean} value
     * @memberof module:MediaPlayer
     * @instance
     */function setXHRWithCredentialsForType(type,value){mediaPlayerModel.setXHRWithCredentialsForType(type,value);}/**
     * Gets whether withCredentials on XHR requests for a particular request
     * type is true or false
     *
     * @param {string} type - one of HTTPRequest.*_TYPE
     * @return {boolean}
     * @memberof module:MediaPlayer
     * @instance
     */function getXHRWithCredentialsForType(type){return mediaPlayerModel.getXHRWithCredentialsForType(type);}/*
    ---------------------------------------------------------------------------

        OFFLINE

    ---------------------------------------------------------------------------
    *//**
     * Detects if Offline is included and returns an instance of OfflineController.js
     * @memberof module:MediaPlayer
     * @instance
     */function getOfflineController(){return detectOffline();}/*
    ---------------------------------------------------------------------------

        METRICS

    ---------------------------------------------------------------------------
    *//**
     * Returns the DashMetrics.js Module. You use this Module to get access to all the public metrics
     * stored in dash.js
     *
     * @see {@link module:DashMetrics}
     * @returns {Object}
     * @memberof module:MediaPlayer
     * @instance
     */function getDashMetrics(){return dashMetrics;}/*
    ---------------------------------------------------------------------------

        TEXT MANAGEMENT

    ---------------------------------------------------------------------------
    *//**
     * Set default language for text. If default language is not one of text tracks, dash will choose the first one.
     *
     * @param {string} lang - default language
     * @memberof module:MediaPlayer
     * @instance
     * @deprecated will be removed in version 3.2.0. Please use setInitialMediaSettingsFor("fragmentedText", { lang: lang }) instead
     */function setTextDefaultLanguage(lang){logger.warn('setTextDefaultLanguage is deprecated and will be removed in version 3.2.0. Please use setInitialMediaSettingsFor("fragmentedText", { lang: lang }) instead');if(textController===undefined){textController=(0,_TextController2.default)(context).getInstance();}textController.setTextDefaultLanguage(lang);}/**
     * Get default language for text.
     *
     * @return {string} the default language if it has been set using setTextDefaultLanguage
     * @memberof module:MediaPlayer
     * @instance
     * @deprecated will be removed in version 3.2.0. Please use getInitialMediaSettingsFor("fragmentedText").lang instead
     */function getTextDefaultLanguage(){logger.warn('getTextDefaultLanguage is deprecated and will be removed in version 3.2.0. Please use getInitialMediaSettingsFor("fragmentedText").lang instead');if(textController===undefined){textController=(0,_TextController2.default)(context).getInstance();}return textController.getTextDefaultLanguage();}/**
     * Set enabled default state.
     * This is used to enable/disable text when a file is loaded.
     * During playback, use enableText to enable text for the file
     *
     * @param {boolean} enable - true to enable text, false otherwise
     * @memberof module:MediaPlayer
     * @instance
     */function setTextDefaultEnabled(enable){if(textController===undefined){textController=(0,_TextController2.default)(context).getInstance();}textController.setTextDefaultEnabled(enable);}/**
     * Get enabled default state.
     *
     * @return {boolean}  default enable state
     * @memberof module:MediaPlayer
     * @instance
     */function getTextDefaultEnabled(){if(textController===undefined){textController=(0,_TextController2.default)(context).getInstance();}return textController.getTextDefaultEnabled();}/**
     * Enable/disable text
     * When enabling text, dash will choose the previous selected text track
     *
     * @param {boolean} enable - true to enable text, false otherwise (same as setTextTrack(-1))
     * @memberof module:MediaPlayer
     * @instance
     */function enableText(enable){if(textController===undefined){textController=(0,_TextController2.default)(context).getInstance();}textController.enableText(enable);}/**
     * Enable/disable text
     * When enabling dash will keep downloading and process fragmented text tracks even if all tracks are in mode "hidden"
     *
     * @param {boolean} enable - true to enable text streaming even if all text tracks are hidden.
     * @memberof module:MediaPlayer
     * @instance
     */function enableForcedTextStreaming(enable){if(textController===undefined){textController=(0,_TextController2.default)(context).getInstance();}textController.enableForcedTextStreaming(enable);}/**
     * Return if text is enabled
     *
     * @return {boolean} return true if text is enabled, false otherwise
     * @memberof module:MediaPlayer
     * @instance
     */function isTextEnabled(){if(textController===undefined){textController=(0,_TextController2.default)(context).getInstance();}return textController.isTextEnabled();}/**
     * Use this method to change the current text track for both external time text files and fragmented text tracks. There is no need to
     * set the track mode on the video object to switch a track when using this method.
     * @param {number} idx - Index of track based on the order of the order the tracks are added Use -1 to disable all tracks. (turn captions off).  Use module:MediaPlayer#dashjs.MediaPlayer.events.TEXT_TRACK_ADDED.
     * @see {@link MediaPlayerEvents#event:TEXT_TRACK_ADDED dashjs.MediaPlayer.events.TEXT_TRACK_ADDED}
     * @throws {@link module:MediaPlayer~PLAYBACK_NOT_INITIALIZED_ERROR PLAYBACK_NOT_INITIALIZED_ERROR} if called before initializePlayback function
     * @memberof module:MediaPlayer
     * @instance
     */function setTextTrack(idx){if(!playbackInitialized){throw PLAYBACK_NOT_INITIALIZED_ERROR;}if(textController===undefined){textController=(0,_TextController2.default)(context).getInstance();}textController.setTextTrack(idx);}function getCurrentTextTrackIndex(){var idx=NaN;if(textController){idx=textController.getCurrentTrackIdx();}return idx;}/**
     * This method serves to control captions z-index value. If 'true' is passed, the captions will have the highest z-index and be
     * displayed on top of other html elements. Default value is 'false' (z-index is not set).
     * @param {boolean} value
     * @memberof module:MediaPlayer
     * @instance
     */function displayCaptionsOnTop(value){var textTracks=(0,_TextTracks2.default)(context).getInstance();textTracks.setConfig({videoModel:videoModel});textTracks.initialize();textTracks.setDisplayCConTop(value);}/*
    ---------------------------------------------------------------------------

        VIDEO ELEMENT MANAGEMENT

    ---------------------------------------------------------------------------
    *//**
     * Returns instance of Video Element that was attached by calling attachView()
     * @returns {Object}
     * @memberof module:MediaPlayer
     * @throws {@link module:MediaPlayer~ELEMENT_NOT_ATTACHED_ERROR ELEMENT_NOT_ATTACHED_ERROR} if called before attachView function
     * @instance
     */function getVideoElement(){if(!videoModel.getElement()){throw ELEMENT_NOT_ATTACHED_ERROR;}return videoModel.getElement();}/**
     * Use this method to attach an HTML5 VideoElement for dash.js to operate upon.
     *
     * @param {Object} element - An HTMLMediaElement that has already been defined in the DOM (or equivalent stub).
     * @memberof module:MediaPlayer
     * @throws {@link module:MediaPlayer~MEDIA_PLAYER_NOT_INITIALIZED_ERROR MEDIA_PLAYER_NOT_INITIALIZED_ERROR} if called before initialize function
     * @instance
     */function attachView(element){if(!mediaPlayerInitialized){throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;}videoModel.setElement(element);if(element){detectProtection();detectMetricsReporting();detectMss();if(streamController){streamController.switchToVideoElement();}}if(playbackInitialized){//Reset if we have been playing before, so this is a new element.
resetPlaybackControllers();}initializePlayback();}/**
     * Returns instance of Div that was attached by calling attachTTMLRenderingDiv()
     * @returns {Object}
     * @memberof module:MediaPlayer
     * @instance
     */function getTTMLRenderingDiv(){return videoModel?videoModel.getTTMLRenderingDiv():null;}/**
     * Use this method to attach an HTML5 div for dash.js to render rich TTML subtitles.
     *
     * @param {HTMLDivElement} div - An unstyled div placed after the video element. It will be styled to match the video size and overlay z-order.
     * @memberof module:MediaPlayer
     * @throws {@link module:MediaPlayer~ELEMENT_NOT_ATTACHED_ERROR ELEMENT_NOT_ATTACHED_ERROR} if called before attachView function
     * @instance
     */function attachTTMLRenderingDiv(div){if(!videoModel.getElement()){throw ELEMENT_NOT_ATTACHED_ERROR;}videoModel.setTTMLRenderingDiv(div);}/*
    ---------------------------------------------------------------------------

        STREAM AND TRACK MANAGEMENT

    ---------------------------------------------------------------------------
    *//**
     * @param {MediaType} type
     * @returns {Array}
     * @memberof module:MediaPlayer
     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function
     * @instance
     */function getBitrateInfoListFor(type){if(!streamingInitialized){throw STREAMING_NOT_INITIALIZED_ERROR;}var stream=getActiveStream();return stream?stream.getBitrateListFor(type):[];}/**
     * This method returns the list of all available streams from a given manifest
     * @param {Object} manifest
     * @returns {Array} list of {@link StreamInfo}
     * @memberof module:MediaPlayer
     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function
     * @instance
     */function getStreamsFromManifest(manifest){if(!streamingInitialized){throw STREAMING_NOT_INITIALIZED_ERROR;}return adapter.getStreamsInfo(manifest);}/**
     * This method returns the list of all available tracks for a given media type
     * @param {MediaType} type
     * @returns {Array} list of {@link MediaInfo}
     * @memberof module:MediaPlayer
     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function
     * @instance
     */function getTracksFor(type){if(!streamingInitialized){throw STREAMING_NOT_INITIALIZED_ERROR;}var streamInfo=streamController.getActiveStreamInfo();return mediaController.getTracksFor(type,streamInfo);}/**
     * This method returns the list of all available tracks for a given media type and streamInfo from a given manifest
     * @param {MediaType} type
     * @param {Object} manifest
     * @param {Object} streamInfo
     * @returns {Array}  list of {@link MediaInfo}
     * @memberof module:MediaPlayer
     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function
     * @instance
     */function getTracksForTypeFromManifest(type,manifest,streamInfo){if(!streamingInitialized){throw STREAMING_NOT_INITIALIZED_ERROR;}streamInfo=streamInfo||adapter.getStreamsInfo(manifest,1)[0];return streamInfo?adapter.getAllMediaInfoForType(streamInfo,type,manifest):[];}/**
     * @param {MediaType} type
     * @returns {Object|null} {@link MediaInfo}
     *
     * @memberof module:MediaPlayer
     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function
     * @instance
     */function getCurrentTrackFor(type){if(!streamingInitialized){throw STREAMING_NOT_INITIALIZED_ERROR;}var streamInfo=streamController.getActiveStreamInfo();return mediaController.getCurrentTrackFor(type,streamInfo);}/**
     * This method allows to set media settings that will be used to pick the initial track. Format of the settings
     * is following: <br />
     * {lang: langValue (can be either a string or a regex to match),
     *  viewpoint: viewpointValue,
     *  audioChannelConfiguration: audioChannelConfigurationValue,
     *  accessibility: accessibilityValue,
     *  role: roleValue}
     *
     * @param {MediaType} type
     * @param {Object} value
     * @memberof module:MediaPlayer
     * @throws {@link module:MediaPlayer~MEDIA_PLAYER_NOT_INITIALIZED_ERROR MEDIA_PLAYER_NOT_INITIALIZED_ERROR} if called before initialize function
     * @instance
     */function setInitialMediaSettingsFor(type,value){if(!mediaPlayerInitialized){throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;}mediaController.setInitialSettings(type,value);if(type===_Constants2.default.FRAGMENTED_TEXT){textController.setInitialSettings(value);}}/**
     * This method returns media settings that is used to pick the initial track. Format of the settings
     * is following:
     * {lang: langValue,
     *  viewpoint: viewpointValue,
     *  audioChannelConfiguration: audioChannelConfigurationValue,
     *  accessibility: accessibilityValue,
     *  role: roleValue}
     * @param {MediaType} type
     * @returns {Object}
     * @memberof module:MediaPlayer
     * @throws {@link module:MediaPlayer~MEDIA_PLAYER_NOT_INITIALIZED_ERROR MEDIA_PLAYER_NOT_INITIALIZED_ERROR} if called before initialize function
     * @instance
     */function getInitialMediaSettingsFor(type){if(!mediaPlayerInitialized){throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;}return mediaController.getInitialSettings(type);}/**
     * @param {MediaInfo} track - instance of {@link MediaInfo}
     * @memberof module:MediaPlayer
     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function
     * @instance
     */function setCurrentTrack(track){if(!streamingInitialized){throw STREAMING_NOT_INITIALIZED_ERROR;}mediaController.setTrack(track);}/**
     * This method returns the current track switch mode.
     *
     * @param {MediaType} type
     * @returns {string} mode
     * @memberof module:MediaPlayer
     * @throws {@link module:MediaPlayer~MEDIA_PLAYER_NOT_INITIALIZED_ERROR MEDIA_PLAYER_NOT_INITIALIZED_ERROR} if called before initialize function
     * @instance
     */function getTrackSwitchModeFor(type){if(!mediaPlayerInitialized){throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;}return mediaController.getSwitchMode(type);}/**
     * This method sets the current track switch mode. Available options are:
     *
     * Constants.TRACK_SWITCH_MODE_NEVER_REPLACE
     * (used to forbid clearing the buffered data (prior to current playback position) after track switch.
     * Defers to fastSwitchEnabled for placement of new data. Default for video)
     *
     * Constants.TRACK_SWITCH_MODE_ALWAYS_REPLACE
     * (used to clear the buffered data (prior to current playback position) after track switch. Default for audio)
     *
     * @param {MediaType} type
     * @param {string} mode
     * @memberof module:MediaPlayer
     * @throws {@link module:MediaPlayer~MEDIA_PLAYER_NOT_INITIALIZED_ERROR MEDIA_PLAYER_NOT_INITIALIZED_ERROR} if called before initialize function
     * @instance
     */function setTrackSwitchModeFor(type,mode){if(!mediaPlayerInitialized){throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;}mediaController.setSwitchMode(type,mode);}/**
     * This method sets the selection mode for the initial track. This mode defines how the initial track will be selected
     * if no initial media settings are set. If initial media settings are set this parameter will be ignored. Available options are:
     *
     * Constants.TRACK_SELECTION_MODE_HIGHEST_BITRATE
     * this mode makes the player select the track with a highest bitrate. This mode is a default mode.
     *
     * Constants.TRACK_SELECTION_MODE_WIDEST_RANGE
     * this mode makes the player select the track with a widest range of bitrates
     *
     * @param {string} mode
     * @memberof module:MediaPlayer
     * @throws {@link module:MediaPlayer~MEDIA_PLAYER_NOT_INITIALIZED_ERROR MEDIA_PLAYER_NOT_INITIALIZED_ERROR} if called before initialize function
     * @instance
     */function setSelectionModeForInitialTrack(mode){if(!mediaPlayerInitialized){throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;}mediaController.setSelectionModeForInitialTrack(mode);}/**
     * This method returns the track selection mode.
     *
     * @returns {string} mode
     * @memberof module:MediaPlayer
     * @throws {@link module:MediaPlayer~MEDIA_PLAYER_NOT_INITIALIZED_ERROR MEDIA_PLAYER_NOT_INITIALIZED_ERROR} if called before initialize function
     * @instance
     */function getSelectionModeForInitialTrack(){if(!mediaPlayerInitialized){throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;}return mediaController.getSelectionModeForInitialTrack();}/*
    ---------------------------------------------------------------------------

        PROTECTION MANAGEMENT

    ---------------------------------------------------------------------------
    *//**
     * Detects if Protection is included and returns an instance of ProtectionController.js
     * @memberof module:MediaPlayer
     * @instance
     */function getProtectionController(){return detectProtection();}/**
     * Will override dash.js protection controller.
     * @param {ProtectionController} value - valid protection controller instance.
     * @memberof module:MediaPlayer
     * @instance
     */function attachProtectionController(value){protectionController=value;}/**
     * Sets Protection Data required to setup the Protection Module (DRM). Protection Data must
     * be set before initializing MediaPlayer or, once initialized, before PROTECTION_CREATED event is fired.
     * @see {@link module:MediaPlayer#initialize initialize()}
     * @see {@link ProtectionEvents#event:PROTECTION_CREATED dashjs.Protection.events.PROTECTION_CREATED}
     * @param {ProtectionDataSet} value - object containing
     * property names corresponding to key system name strings and associated
     * values being instances of.
     * @memberof module:MediaPlayer
     * @instance
     */function setProtectionData(value){protectionData=value;// Propagate changes in case StreamController is already created
if(streamController){streamController.setProtectionData(protectionData);}}/*
    ---------------------------------------------------------------------------

        THUMBNAILS MANAGEMENT

    ---------------------------------------------------------------------------
    *//**
     * Provide the thumbnail at time position. This can be asynchronous, so you must provide a callback ro retrieve thumbnails informations
     * @param {number} time - A relative time, in seconds, based on the return value of the {@link module:MediaPlayer#duration duration()} method is expected
     * @param {function} callback - A Callback function provided when retrieving thumbnail the given time position. Thumbnail object is null in case there are is not a thumbnails representation or
     * if it doesn't contain a thumbnail for the given time position.
     * @memberof module:MediaPlayer
     * @instance
     */function provideThumbnail(time,callback){if(typeof callback!=='function'){return;}if(time<0){callback(null);return;}var s=playbackController.getIsDynamic()?getDVRSeekOffset(time):time;var stream=streamController.getStreamForTime(s);if(stream===null){callback(null);return;}var thumbnailController=stream.getThumbnailController();if(!thumbnailController){callback(null);return;}var timeInPeriod=streamController.getTimeRelativeToStreamId(s,stream.getId());return thumbnailController.provide(timeInPeriod,callback);}/*
    ---------------------------------------------------------------------------

        TOOLS AND OTHERS FUNCTIONS

    ---------------------------------------------------------------------------
    *//**
     * Allows application to retrieve a manifest.  Manifest loading is asynchro
     * nous and
     * requires the app-provided callback function
     *
     * @param {string} url - url the manifest url
     * @param {function} callback - A Callback function provided when retrieving manifests
     * @memberof module:MediaPlayer
     * @instance
     */function retrieveManifest(url,callback){var manifestLoader=createManifestLoader();var self=this;var handler=function handler(e){if(!e.error){callback(e.manifest);}else{callback(null,e.error);}eventBus.off(_Events2.default.INTERNAL_MANIFEST_LOADED,handler,self);manifestLoader.reset();};eventBus.on(_Events2.default.INTERNAL_MANIFEST_LOADED,handler,self);uriFragmentModel.initialize(url);manifestLoader.load(url);}/**
     * Returns the source string or manifest that was attached by calling attachSource()
     * @returns {string | manifest}
     * @memberof module:MediaPlayer
     * @throws {@link module:MediaPlayer~SOURCE_NOT_ATTACHED_ERROR SOURCE_NOT_ATTACHED_ERROR} if called before attachSource function
     * @instance
     */function getSource(){if(!source){throw SOURCE_NOT_ATTACHED_ERROR;}return source;}/**
     * Use this method to set a source URL to a valid MPD manifest file OR
     * a previously downloaded and parsed manifest object.  Optionally, can
     * also provide protection information
     *
     * @param {string|Object} urlOrManifest - A URL to a valid MPD manifest file, or a
     * parsed manifest object.
     *
     *
     * @throws {@link module:MediaPlayer~MEDIA_PLAYER_NOT_INITIALIZED_ERROR MEDIA_PLAYER_NOT_INITIALIZED_ERROR} if called before initialize function
     *
     * @memberof module:MediaPlayer
     * @instance
     */function attachSource(urlOrManifest){if(!mediaPlayerInitialized){throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;}if(typeof urlOrManifest==='string'){uriFragmentModel.initialize(urlOrManifest);}source=urlOrManifest;if(streamingInitialized||playbackInitialized){resetPlaybackControllers();}if(isReady()){initializePlayback();}}/**
     * Get the current settings object being used on the player.
     * @returns {PlayerSettings} The settings object being used.
     *
     * @memberof module:MediaPlayer
     * @instance
     */function getSettings(){return settings.get();}/**
     * @summary Update the current settings object being used on the player. Anything left unspecified is not modified.
     * @param {PlayerSettings} settingsObj - An object corresponding to the settings definition.
     * @description This function does not update the entire object, only properties in the passed in object are updated.
     *
     * This means that updateSettings({a: x}) and updateSettings({b: y}) are functionally equivalent to
     * updateSettings({a: x, b: y}). If the default values are required again, @see{@link resetSettings}.
     * @example
     * player.updateSettings({
     *      streaming: {
     *          liveDelayFragmentCount: 8
     *          abr: {
     *              maxBitrate: { audio: 100, video: 1000 }
     *          }
     *      }
     *  });
     * @memberof module:MediaPlayer
     * @instance
     */function updateSettings(settingsObj){settings.update(settingsObj);}/**
     * Resets the settings object back to the default.
     *
     * @memberof module:MediaPlayer
     * @instance
     */function resetSettings(){settings.reset();}/**
     * A utility methods which converts UTC timestamp value into a valid time and date string.
     *
     * @param {number} time - UTC timestamp to be converted into date and time.
     * @param {string} locales - a region identifier (i.e. en_US).
     * @param {boolean} hour12 - 12 vs 24 hour. Set to true for 12 hour time formatting.
     * @param {boolean} withDate - default is false. Set to true to append current date to UTC time format.
     * @returns {string} A formatted time and date string.
     * @memberof module:MediaPlayer
     * @instance
     */function formatUTC(time,locales,hour12){var withDate=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;var dt=new Date(time*1000);var d=dt.toLocaleDateString(locales);var t=dt.toLocaleTimeString(locales,{hour12:hour12});return withDate?t+' '+d:t;}/**
     * A utility method which converts seconds into TimeCode (i.e. 300 --> 05:00).
     *
     * @param {number} value - A number in seconds to be converted into a formatted time code.
     * @returns {string} A formatted time code string.
     * @memberof module:MediaPlayer
     * @instance
     */function convertToTimeCode(value){value=Math.max(value,0);var h=Math.floor(value/3600);var m=Math.floor(value%3600/60);var s=Math.floor(value%3600%60);return(h===0?'':h<10?'0'+h.toString()+':':h.toString()+':')+(m<10?'0'+m.toString():m.toString())+':'+(s<10?'0'+s.toString():s.toString());}/**
     * This method should be used to extend or replace internal dash.js objects.
     * There are two ways to extend dash.js (determined by the override argument):
     * <ol>
     * <li>If you set override to true any public method or property in your custom object will
     * override the dash.js parent object's property(ies) and will be used instead but the
     * dash.js parent module will still be created.</li>
     *
     * <li>If you set override to false your object will completely replace the dash.js object.
     * (Note: This is how it was in 1.x of Dash.js with Dijon).</li>
     * </ol>
     * <b>When you extend you get access to this.context, this.factory and this.parent to operate with in your custom object.</b>
     * <ul>
     * <li><b>this.context</b> - can be used to pass context for singleton access.</li>
     * <li><b>this.factory</b> - can be used to call factory.getSingletonInstance().</li>
     * <li><b>this.parent</b> - is the reference of the parent object to call other public methods. (this.parent is excluded if you extend with override set to false or option 2)</li>
     * </ul>
     * <b>You must call extend before you call initialize</b>
     * @see {@link module:MediaPlayer#initialize initialize()}
     * @param {string} parentNameString - name of parent module
     * @param {Object} childInstance - overriding object
     * @param {boolean} override - replace only some methods (true) or the whole object (false)
     * @memberof module:MediaPlayer
     * @instance
     */function extend(parentNameString,childInstance,override){_FactoryMaker2.default.extend(parentNameString,childInstance,override,context);}/**
     * This method returns the active stream
     *
     * @throws {@link module:MediaPlayer~STREAMING_NOT_INITIALIZED_ERROR STREAMING_NOT_INITIALIZED_ERROR} if called before initializePlayback function
     * @memberof module:MediaPlayer
     * @instance
     */function getActiveStream(){if(!streamingInitialized){throw STREAMING_NOT_INITIALIZED_ERROR;}var streamInfo=streamController.getActiveStreamInfo();return streamInfo?streamController.getStreamById(streamInfo.id):null;}//***********************************
// PRIVATE METHODS
//***********************************
function resetPlaybackControllers(){playbackInitialized=false;streamingInitialized=false;adapter.reset();streamController.reset();gapController.reset();playbackController.reset();abrController.reset();mediaController.reset();textController.reset();if(protectionController){if(settings.get().streaming.keepProtectionMediaKeys){protectionController.stop();}else{protectionController.reset();protectionController=null;detectProtection();}}cmcdModel.reset();}function createPlaybackControllers(){// creates or get objects instances
var manifestLoader=createManifestLoader();if(!streamController){streamController=(0,_StreamController2.default)(context).getInstance();}streamController.setConfig({capabilities:capabilities,manifestLoader:manifestLoader,manifestModel:manifestModel,mediaPlayerModel:mediaPlayerModel,protectionController:protectionController,adapter:adapter,dashMetrics:dashMetrics,errHandler:errHandler,timelineConverter:timelineConverter,videoModel:videoModel,playbackController:playbackController,abrController:abrController,mediaController:mediaController,textController:textController,settings:settings,baseURLController:baseURLController});gapController.setConfig({settings:settings,playbackController:playbackController,streamController:streamController,videoModel:videoModel,timelineConverter:timelineConverter,adapter:adapter});playbackController.setConfig({streamController:streamController,dashMetrics:dashMetrics,mediaPlayerModel:mediaPlayerModel,adapter:adapter,videoModel:videoModel,timelineConverter:timelineConverter,uriFragmentModel:uriFragmentModel,settings:settings});abrController.setConfig({streamController:streamController,domStorage:domStorage,mediaPlayerModel:mediaPlayerModel,dashMetrics:dashMetrics,adapter:adapter,videoModel:videoModel,settings:settings});textController.setConfig({errHandler:errHandler,manifestModel:manifestModel,adapter:adapter,mediaController:mediaController,streamController:streamController,videoModel:videoModel});cmcdModel.setConfig({abrController:abrController,dashMetrics:dashMetrics,playbackController:playbackController});// initialises controller
streamController.initialize(autoPlay,protectionData);gapController.initialize();cmcdModel.initialize();}function createManifestLoader(){return(0,_ManifestLoader2.default)(context).create({debug:debug,errHandler:errHandler,dashMetrics:dashMetrics,mediaPlayerModel:mediaPlayerModel,requestModifier:(0,_RequestModifier2.default)(context).getInstance(),mssHandler:mssHandler,settings:settings});}function detectProtection(){if(protectionController){return protectionController;}// do not require Protection as dependencies as this is optional and intended to be loaded separately
var Protection=dashjs.Protection;/* jshint ignore:line */if(typeof Protection==='function'){//TODO need a better way to register/detect plugin components
var protection=Protection(context).create();_Events2.default.extend(Protection.events);_MediaPlayerEvents2.default.extend(Protection.events,{publicOnly:true});_Errors2.default.extend(Protection.errors);if(!capabilities){capabilities=(0,_Capabilities2.default)(context).getInstance();}protectionController=protection.createProtectionSystem({debug:debug,errHandler:errHandler,videoModel:videoModel,capabilities:capabilities,eventBus:eventBus,events:_Events2.default,BASE64:_base2.default,constants:_Constants2.default});return protectionController;}return null;}function detectMetricsReporting(){if(metricsReportingController){return;}// do not require MetricsReporting as dependencies as this is optional and intended to be loaded separately
var MetricsReporting=dashjs.MetricsReporting;/* jshint ignore:line */if(typeof MetricsReporting==='function'){//TODO need a better way to register/detect plugin components
var metricsReporting=MetricsReporting(context).create();metricsReportingController=metricsReporting.createMetricsReporting({debug:debug,eventBus:eventBus,mediaElement:getVideoElement(),adapter:adapter,dashMetrics:dashMetrics,events:_Events2.default,constants:_Constants2.default,metricsConstants:_MetricsConstants2.default});}}function detectMss(){if(mssHandler){return;}// do not require MssHandler as dependencies as this is optional and intended to be loaded separately
var MssHandler=dashjs.MssHandler;/* jshint ignore:line */if(typeof MssHandler==='function'){//TODO need a better way to register/detect plugin components
_Errors2.default.extend(MssHandler.errors);mssHandler=MssHandler(context).create({eventBus:eventBus,mediaPlayerModel:mediaPlayerModel,dashMetrics:dashMetrics,manifestModel:manifestModel,playbackController:playbackController,streamController:streamController,protectionController:protectionController,baseURLController:baseURLController,errHandler:errHandler,events:_Events2.default,constants:_Constants2.default,debug:debug,initSegmentType:_HTTPRequest.HTTPRequest.INIT_SEGMENT_TYPE,BASE64:_base2.default,ISOBoxer:_codemIsoboxer2.default,settings:settings});}}function detectOffline(){if(!mediaPlayerInitialized){throw MEDIA_PLAYER_NOT_INITIALIZED_ERROR;}if(offlineController){return offlineController;}// do not require Offline as dependencies as this is optional and intended to be loaded separately
var OfflineController=dashjs.OfflineController;/* jshint ignore:line */if(typeof OfflineController==='function'){//TODO need a better way to register/detect plugin components
_Events2.default.extend(OfflineController.events);_MediaPlayerEvents2.default.extend(OfflineController.events,{publicOnly:true});_Errors2.default.extend(OfflineController.errors);var manifestLoader=createManifestLoader();var manifestUpdater=(0,_ManifestUpdater2.default)(context).create();manifestUpdater.setConfig({manifestModel:manifestModel,adapter:adapter,manifestLoader:manifestLoader,errHandler:errHandler});offlineController=OfflineController(context).create({debug:debug,manifestUpdater:manifestUpdater,baseURLController:baseURLController,manifestLoader:manifestLoader,manifestModel:manifestModel,mediaPlayerModel:mediaPlayerModel,abrController:abrController,playbackController:playbackController,adapter:adapter,errHandler:errHandler,dashMetrics:dashMetrics,timelineConverter:timelineConverter,schemeLoaderFactory:schemeLoaderFactory,eventBus:eventBus,events:_Events2.default,errors:_Errors2.default,constants:_Constants2.default,settings:settings,dashConstants:_DashConstants2.default,urlUtils:(0,_URLUtils2.default)(context).getInstance()});return offlineController;}return null;}function getAsUTC(valToConvert){var metric=dashMetrics.getCurrentDVRInfo();var availableFrom=void 0,utcValue=void 0;if(!metric){return 0;}availableFrom=metric.manifestInfo.availableFrom.getTime()/1000;utcValue=valToConvert+(availableFrom+metric.range.start);return utcValue;}function initializePlayback(){if(offlineController){offlineController.resetRecords();}if(!streamingInitialized&&source){streamingInitialized=true;logger.info('Streaming Initialized');createPlaybackControllers();if(typeof source==='string'){streamController.load(source);}else{streamController.loadWithManifest(source);}}if(!playbackInitialized&&isReady()){playbackInitialized=true;logger.info('Playback Initialized');}}/**
     * Returns the DashAdapter.js Module.
     *
     * @see {@link module:DashAdapter}
     * @returns {Object}
     * @memberof module:MediaPlayer
     * @instance
     */function getDashAdapter(){return adapter;}instance={initialize:initialize,setConfig:setConfig,on:on,off:off,extend:extend,attachView:attachView,attachSource:attachSource,isReady:isReady,preload:preload,play:play,isPaused:isPaused,pause:pause,isSeeking:isSeeking,isDynamic:isDynamic,seek:seek,setPlaybackRate:setPlaybackRate,getPlaybackRate:getPlaybackRate,setMute:setMute,isMuted:isMuted,setVolume:setVolume,getVolume:getVolume,time:time,duration:duration,timeAsUTC:timeAsUTC,durationAsUTC:durationAsUTC,getActiveStream:getActiveStream,getDVRWindowSize:getDVRWindowSize,getDVRSeekOffset:getDVRSeekOffset,convertToTimeCode:convertToTimeCode,formatUTC:formatUTC,getVersion:getVersion,getDebug:getDebug,getBufferLength:getBufferLength,getTTMLRenderingDiv:getTTMLRenderingDiv,getVideoElement:getVideoElement,getSource:getSource,getCurrentLiveLatency:getCurrentLiveLatency,getTopBitrateInfoFor:getTopBitrateInfoFor,setAutoPlay:setAutoPlay,getAutoPlay:getAutoPlay,getDashMetrics:getDashMetrics,getQualityFor:getQualityFor,setQualityFor:setQualityFor,updatePortalSize:updatePortalSize,setTextDefaultLanguage:setTextDefaultLanguage,getTextDefaultLanguage:getTextDefaultLanguage,setTextDefaultEnabled:setTextDefaultEnabled,getTextDefaultEnabled:getTextDefaultEnabled,enableText:enableText,enableForcedTextStreaming:enableForcedTextStreaming,isTextEnabled:isTextEnabled,setTextTrack:setTextTrack,getBitrateInfoListFor:getBitrateInfoListFor,getStreamsFromManifest:getStreamsFromManifest,getTracksFor:getTracksFor,getTracksForTypeFromManifest:getTracksForTypeFromManifest,getCurrentTrackFor:getCurrentTrackFor,setInitialMediaSettingsFor:setInitialMediaSettingsFor,getInitialMediaSettingsFor:getInitialMediaSettingsFor,setCurrentTrack:setCurrentTrack,getTrackSwitchModeFor:getTrackSwitchModeFor,setTrackSwitchModeFor:setTrackSwitchModeFor,setSelectionModeForInitialTrack:setSelectionModeForInitialTrack,getSelectionModeForInitialTrack:getSelectionModeForInitialTrack,addABRCustomRule:addABRCustomRule,removeABRCustomRule:removeABRCustomRule,removeAllABRCustomRule:removeAllABRCustomRule,getAverageThroughput:getAverageThroughput,retrieveManifest:retrieveManifest,addUTCTimingSource:addUTCTimingSource,removeUTCTimingSource:removeUTCTimingSource,clearDefaultUTCTimingSources:clearDefaultUTCTimingSources,restoreDefaultUTCTimingSources:restoreDefaultUTCTimingSources,setXHRWithCredentialsForType:setXHRWithCredentialsForType,getXHRWithCredentialsForType:getXHRWithCredentialsForType,getProtectionController:getProtectionController,attachProtectionController:attachProtectionController,setProtectionData:setProtectionData,displayCaptionsOnTop:displayCaptionsOnTop,attachTTMLRenderingDiv:attachTTMLRenderingDiv,getCurrentTextTrackIndex:getCurrentTextTrackIndex,provideThumbnail:provideThumbnail,getDashAdapter:getDashAdapter,getOfflineController:getOfflineController,getSettings:getSettings,updateSettings:updateSettings,resetSettings:resetSettings,reset:reset,destroy:destroy};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */MediaPlayer.__dashjs_factory_name='MediaPlayer';var factory=_FactoryMaker2.default.getClassFactory(MediaPlayer);factory.events=_MediaPlayerEvents2.default;factory.errors=_Errors2.default;_FactoryMaker2.default.updateClassFactory(MediaPlayer.__dashjs_factory_name,factory);exports.default=factory;


},{"../../externals/cea608-parser":"../node_modules/dashjs/build/es5/externals/cea608-parser.js","./constants/Constants":"../node_modules/dashjs/build/es5/src/streaming/constants/Constants.js","../dash/constants/DashConstants":"../node_modules/dashjs/build/es5/src/dash/constants/DashConstants.js","./constants/MetricsConstants":"../node_modules/dashjs/build/es5/src/streaming/constants/MetricsConstants.js","./controllers/PlaybackController":"../node_modules/dashjs/build/es5/src/streaming/controllers/PlaybackController.js","./controllers/StreamController":"../node_modules/dashjs/build/es5/src/streaming/controllers/StreamController.js","./controllers/GapController":"../node_modules/dashjs/build/es5/src/streaming/controllers/GapController.js","./controllers/MediaController":"../node_modules/dashjs/build/es5/src/streaming/controllers/MediaController.js","./controllers/BaseURLController":"../node_modules/dashjs/build/es5/src/streaming/controllers/BaseURLController.js","./ManifestLoader":"../node_modules/dashjs/build/es5/src/streaming/ManifestLoader.js","./utils/ErrorHandler":"../node_modules/dashjs/build/es5/src/streaming/utils/ErrorHandler.js","./utils/Capabilities":"../node_modules/dashjs/build/es5/src/streaming/utils/Capabilities.js","./text/TextTracks":"../node_modules/dashjs/build/es5/src/streaming/text/TextTracks.js","./utils/RequestModifier":"../node_modules/dashjs/build/es5/src/streaming/utils/RequestModifier.js","./text/TextController":"../node_modules/dashjs/build/es5/src/streaming/text/TextController.js","./models/URIFragmentModel":"../node_modules/dashjs/build/es5/src/streaming/models/URIFragmentModel.js","./models/ManifestModel":"../node_modules/dashjs/build/es5/src/streaming/models/ManifestModel.js","./models/MediaPlayerModel":"../node_modules/dashjs/build/es5/src/streaming/models/MediaPlayerModel.js","./controllers/AbrController":"../node_modules/dashjs/build/es5/src/streaming/controllers/AbrController.js","./net/SchemeLoaderFactory":"../node_modules/dashjs/build/es5/src/streaming/net/SchemeLoaderFactory.js","./models/VideoModel":"../node_modules/dashjs/build/es5/src/streaming/models/VideoModel.js","./models/CmcdModel":"../node_modules/dashjs/build/es5/src/streaming/models/CmcdModel.js","./utils/DOMStorage":"../node_modules/dashjs/build/es5/src/streaming/utils/DOMStorage.js","./../core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","./../core/errors/Errors":"../node_modules/dashjs/build/es5/src/core/errors/Errors.js","./../core/EventBus":"../node_modules/dashjs/build/es5/src/core/EventBus.js","./../core/events/Events":"../node_modules/dashjs/build/es5/src/core/events/Events.js","./MediaPlayerEvents":"../node_modules/dashjs/build/es5/src/streaming/MediaPlayerEvents.js","../core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","../core/Settings":"../node_modules/dashjs/build/es5/src/core/Settings.js","./../core/Version":"../node_modules/dashjs/build/es5/src/core/Version.js","../dash/controllers/SegmentBaseController":"../node_modules/dashjs/build/es5/src/dash/controllers/SegmentBaseController.js","../dash/DashAdapter":"../node_modules/dashjs/build/es5/src/dash/DashAdapter.js","../dash/DashMetrics":"../node_modules/dashjs/build/es5/src/dash/DashMetrics.js","../dash/utils/TimelineConverter":"../node_modules/dashjs/build/es5/src/dash/utils/TimelineConverter.js","./vo/metrics/HTTPRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/metrics/HTTPRequest.js","../../externals/base64":"../node_modules/dashjs/build/es5/externals/base64.js","codem-isoboxer":"../node_modules/codem-isoboxer/dist/iso_boxer.js","./vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js","./utils/SupervisorTools":"../node_modules/dashjs/build/es5/src/streaming/utils/SupervisorTools.js","./ManifestUpdater":"../node_modules/dashjs/build/es5/src/streaming/ManifestUpdater.js","../streaming/utils/URLUtils":"../node_modules/dashjs/build/es5/src/streaming/utils/URLUtils.js","./utils/BoxParser":"../node_modules/dashjs/build/es5/src/streaming/utils/BoxParser.js"}],"../node_modules/dashjs/build/es5/index_mediaplayerOnly.js":[function(require,module,exports) {
var global = arguments[3];
'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.Debug=exports.FactoryMaker=exports.MediaPlayer=undefined;var _MediaPlayer=require('./src/streaming/MediaPlayer');var _MediaPlayer2=_interopRequireDefault(_MediaPlayer);var _FactoryMaker=require('./src/core/FactoryMaker');var _FactoryMaker2=_interopRequireDefault(_FactoryMaker);var _Debug=require('./src/core/Debug');var _Debug2=_interopRequireDefault(_Debug);var _Version=require('./src/core/Version');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}// Shove both of these into the global scope
/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var context=typeof window!=='undefined'&&window||global;var dashjs=context.dashjs;if(!dashjs){dashjs=context.dashjs={};}dashjs.MediaPlayer=_MediaPlayer2.default;dashjs.FactoryMaker=_FactoryMaker2.default;dashjs.Debug=_Debug2.default;dashjs.Version=(0,_Version.getVersionString)();exports.default=dashjs;exports.MediaPlayer=_MediaPlayer2.default;exports.FactoryMaker=_FactoryMaker2.default;exports.Debug=_Debug2.default;


},{"./src/streaming/MediaPlayer":"../node_modules/dashjs/build/es5/src/streaming/MediaPlayer.js","./src/core/FactoryMaker":"../node_modules/dashjs/build/es5/src/core/FactoryMaker.js","./src/core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js","./src/core/Version":"../node_modules/dashjs/build/es5/src/core/Version.js"}],"../node_modules/dashjs/build/es5/src/streaming/metrics/vo/DVBErrors.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var DVBErrors=function DVBErrors(){_classCallCheck(this,DVBErrors);this.mpdurl=null;// String - Absolute URL from which the MPD was originally
// retrieved (MPD updates will not change this value).
this.errorcode=null;// String - The value of errorcode depends upon the type
// of error being reported. For an error listed in the
// ErrorType column below the value is as described in the
// Value column.
//
// ErrorType                                            Value
// ---------                                            -----
// HTTP error status code                               HTTP status code
// Unknown HTTP status code                             HTTP status code
// SSL connection failed                                "SSL" followed by SSL alert value
// DNS resolution failed                                "C00"
// Host unreachable                                     "C01"
// Connection refused                                   "C02"
// Connection error – Not otherwise specified           "C03"
// Corrupt media – ISO BMFF container cannot be parsed  "M00"
// Corrupt media – Not otherwise specified              "M01"
// Changing Base URL in use due to errors               "F00"
// Becoming an error reporting Player                   "S00"
this.terror=null;// Real-Time - Date and time at which error occurred in UTC,
// formatted as a combined date and time according to ISO 8601.
this.url=null;// String - Absolute URL from which data was being requested
// when this error occurred. If the error report is in relation
// to corrupt media or changing BaseURL, this may be a null
// string if the URL from which the media was obtained or
// which led to the change of BaseURL is no longer known.
this.ipaddress=null;// String - IP Address which the host name in "url" resolved to.
// If the error report is in relation to corrupt media or
// changing BaseURL, this may be a null string if the URL
// from which the media was obtained or which led to the
// change of BaseURL is no longer known.
this.servicelocation=null;// String - The value of the serviceLocation field in the
// BaseURL being used. In the event of this report indicating
// a change of BaseURL this is the value from the BaseURL
// being moved from.
};DVBErrors.SSL_CONNECTION_FAILED_PREFIX='SSL';DVBErrors.DNS_RESOLUTION_FAILED='C00';DVBErrors.HOST_UNREACHABLE='C01';DVBErrors.CONNECTION_REFUSED='C02';DVBErrors.CONNECTION_ERROR='C03';DVBErrors.CORRUPT_MEDIA_ISOBMFF='M00';DVBErrors.CORRUPT_MEDIA_OTHER='M01';DVBErrors.BASE_URL_CHANGED='F00';DVBErrors.BECAME_REPORTER='S00';exports.default=DVBErrors;


},{}],"../node_modules/dashjs/build/es5/src/streaming/metrics/utils/DVBErrorsTranslator.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _DVBErrors=require('../vo/DVBErrors');var _DVBErrors2=_interopRequireDefault(_DVBErrors);var _MetricsReportingEvents=require('../MetricsReportingEvents');var _MetricsReportingEvents2=_interopRequireDefault(_MetricsReportingEvents);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function DVBErrorsTranslator(config){config=config||{};var instance=void 0,mpd=void 0;var eventBus=config.eventBus;var dashMetrics=config.dashMetrics;var metricsConstants=config.metricsConstants;//MediaPlayerEvents have been added to Events in MediaPlayer class
var Events=config.events;function report(vo){var o=new _DVBErrors2.default();if(!mpd){return;}for(var key in vo){if(vo.hasOwnProperty(key)){o[key]=vo[key];}}if(!o.mpdurl){o.mpdurl=mpd.originalUrl||mpd.url;}if(!o.terror){o.terror=new Date();}dashMetrics.addDVBErrors(o);}function onManifestUpdate(e){if(e.error){return;}mpd=e.manifest;}function onServiceLocationChanged(e){report({errorcode:_DVBErrors2.default.BASE_URL_CHANGED,servicelocation:e.entry});}function onBecameReporter(){report({errorcode:_DVBErrors2.default.BECAME_REPORTER});}function handleHttpMetric(vo){if(vo.responsecode===0||// connection failure - unknown
vo.responsecode>=400||// HTTP error status code
vo.responsecode<100||// unknown status codes
vo.responsecode>=600){// unknown status codes
report({errorcode:vo.responsecode||_DVBErrors2.default.CONNECTION_ERROR,url:vo.url,terror:vo.tresponse,servicelocation:vo._serviceLocation});}}function onMetricEvent(e){switch(e.metric){case metricsConstants.HTTP_REQUEST:handleHttpMetric(e.value);break;default:break;}}function onPlaybackError(e){var reason=e.error?e.error.code:0;var errorcode=void 0;switch(reason){case MediaError.MEDIA_ERR_NETWORK:errorcode=_DVBErrors2.default.CONNECTION_ERROR;break;case MediaError.MEDIA_ERR_DECODE:errorcode=_DVBErrors2.default.CORRUPT_MEDIA_OTHER;break;default:return;}report({errorcode:errorcode});}function initialise(){eventBus.on(Events.MANIFEST_UPDATED,onManifestUpdate,instance);eventBus.on(Events.SERVICE_LOCATION_BLACKLIST_CHANGED,onServiceLocationChanged,instance);eventBus.on(Events.METRIC_ADDED,onMetricEvent,instance);eventBus.on(Events.METRIC_UPDATED,onMetricEvent,instance);eventBus.on(Events.PLAYBACK_ERROR,onPlaybackError,instance);eventBus.on(_MetricsReportingEvents2.default.BECAME_REPORTING_PLAYER,onBecameReporter,instance);}function reset(){eventBus.off(Events.MANIFEST_UPDATED,onManifestUpdate,instance);eventBus.off(Events.SERVICE_LOCATION_BLACKLIST_CHANGED,onServiceLocationChanged,instance);eventBus.off(Events.METRIC_ADDED,onMetricEvent,instance);eventBus.off(Events.METRIC_UPDATED,onMetricEvent,instance);eventBus.off(Events.PLAYBACK_ERROR,onPlaybackError,instance);eventBus.off(_MetricsReportingEvents2.default.BECAME_REPORTING_PLAYER,onBecameReporter,instance);}instance={initialise:initialise,reset:reset};initialise();return instance;}DVBErrorsTranslator.__dashjs_factory_name='DVBErrorsTranslator';exports.default=dashjs.FactoryMaker.getSingletonFactory(DVBErrorsTranslator);/* jshint ignore:line */


},{"../vo/DVBErrors":"../node_modules/dashjs/build/es5/src/streaming/metrics/vo/DVBErrors.js","../MetricsReportingEvents":"../node_modules/dashjs/build/es5/src/streaming/metrics/MetricsReportingEvents.js"}],"../node_modules/dashjs/build/es5/src/streaming/metrics/controllers/RangeController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _CustomTimeRanges=require('../../utils/CustomTimeRanges');var _CustomTimeRanges2=_interopRequireDefault(_CustomTimeRanges);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function RangeController(config){config=config||{};var useWallClockTime=false;var context=this.context;var instance=void 0,ranges=void 0;var mediaElement=config.mediaElement;function initialize(rs){if(rs&&rs.length){rs.forEach(function(r){var start=r.starttime;var end=start+r.duration;ranges.add(start,end);});useWallClockTime=!!rs[0]._useWallClockTime;}}function reset(){ranges.clear();}function setup(){ranges=(0,_CustomTimeRanges2.default)(context).create();}function isEnabled(){var numRanges=ranges.length;var time=void 0;if(!numRanges){return true;}// When not present, DASH Metrics reporting is requested
// for the whole duration of the content.
time=useWallClockTime?new Date().getTime()/1000:mediaElement.currentTime;for(var i=0;i<numRanges;i+=1){var start=ranges.start(i);var end=ranges.end(i);if(start<=time&&time<end){return true;}}return false;}instance={initialize:initialize,reset:reset,isEnabled:isEnabled};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */RangeController.__dashjs_factory_name='RangeController';exports.default=dashjs.FactoryMaker.getClassFactory(RangeController);/* jshint ignore:line */


},{"../../utils/CustomTimeRanges":"../node_modules/dashjs/build/es5/src/streaming/utils/CustomTimeRanges.js"}],"../node_modules/dashjs/build/es5/src/streaming/metrics/utils/MetricSerialiser.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @ignore
 */function MetricSerialiser(){// For each entry in the top level list within the metric (in the case
// of the DVBErrors metric each entry corresponds to an "error event"
// described in clause 10.8.4) the Player shall:
function serialise(metric){var pairs=[];var obj=[];var key=void 0,value=void 0;// Take each (key, value) pair from the metric entry and create a
// string consisting of the name of the key, followed by an equals
// ('=') character, followed by the string representation of the
// value. The string representation of the value is created based
// on the type of the value following the instructions in Table 22.
for(key in metric){if(metric.hasOwnProperty(key)&&key.indexOf('_')!==0){value=metric[key];// we want to ensure that keys still end up in the report
// even if there is no value
if(value===undefined||value===null){value='';}// DVB A168 10.12.4 Table 22
if(Array.isArray(value)){// if trace or similar is null, do not include in output
if(!value.length){continue;}obj=[];value.forEach(function(v){var isBuiltIn=Object.prototype.toString.call(v).slice(8,-1)!=='Object';obj.push(isBuiltIn?v:serialise(v));});value=obj.map(encodeURIComponent).join(',');}else if(typeof value==='string'){value=encodeURIComponent(value);}else if(value instanceof Date){value=value.toISOString();}else if(typeof value==='number'){value=Math.round(value);}pairs.push(key+'='+value);}}// Concatenate the strings created in the previous step with an
// ampersand ('&') character between each one.
return pairs.join('&');}return{serialise:serialise};}MetricSerialiser.__dashjs_factory_name='MetricSerialiser';exports.default=dashjs.FactoryMaker.getSingletonFactory(MetricSerialiser);/* jshint ignore:line */


},{}],"../node_modules/dashjs/build/es5/src/streaming/metrics/utils/RNG.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
  * @ignore
  */function RNG(){// check whether secure random numbers are available. if not, revert to
// using Math.random
var crypto=window.crypto||window.msCrypto;// could just as easily use any other array type by changing line below
var ArrayType=Uint32Array;var MAX_VALUE=Math.pow(2,ArrayType.BYTES_PER_ELEMENT*8)-1;// currently there is only one client for this code, and that only uses
// a single random number per initialisation. may want to increase this
// number if more consumers in the future
var NUM_RANDOM_NUMBERS=10;var randomNumbers=void 0,index=void 0,instance=void 0;function initialise(){if(crypto){if(!randomNumbers){randomNumbers=new ArrayType(NUM_RANDOM_NUMBERS);}crypto.getRandomValues(randomNumbers);index=0;}}function rand(min,max){var r=void 0;if(!min){min=0;}if(!max){max=1;}if(crypto){if(index===randomNumbers.length){initialise();}r=randomNumbers[index]/MAX_VALUE;index+=1;}else{r=Math.random();}return r*(max-min)+min;}instance={random:rand};initialise();return instance;}RNG.__dashjs_factory_name='RNG';exports.default=dashjs.FactoryMaker.getSingletonFactory(RNG);/* jshint ignore:line */


},{}],"../node_modules/dashjs/build/es5/src/streaming/metrics/reporting/reporters/DVBReporting.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _MetricSerialiser=require('../../utils/MetricSerialiser');var _MetricSerialiser2=_interopRequireDefault(_MetricSerialiser);var _RNG=require('../../utils/RNG');var _RNG2=_interopRequireDefault(_RNG);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function DVBReporting(config){config=config||{};var instance=void 0;var context=this.context;var metricSerialiser=void 0,randomNumberGenerator=void 0,reportingPlayerStatusDecided=void 0,isReportingPlayer=void 0,reportingUrl=void 0,rangeController=void 0;var USE_DRAFT_DVB_SPEC=true;var allowPendingRequestsToCompleteOnReset=true;var pendingRequests=[];var metricsConstants=config.metricsConstants;function setup(){metricSerialiser=(0,_MetricSerialiser2.default)(context).getInstance();randomNumberGenerator=(0,_RNG2.default)(context).getInstance();resetInitialSettings();}function doGetRequest(url,successCB,failureCB){var req=new XMLHttpRequest();var oncomplete=function oncomplete(){var reqIndex=pendingRequests.indexOf(req);if(reqIndex===-1){return;}else{pendingRequests.splice(reqIndex,1);}if(req.status>=200&&req.status<300){if(successCB){successCB();}}else{if(failureCB){failureCB();}}};pendingRequests.push(req);try{req.open('GET',url);req.onloadend=oncomplete;req.onerror=oncomplete;req.send();}catch(e){req.onerror();}}function report(type,vos){if(!Array.isArray(vos)){vos=[vos];}// If the Player is not a reporting Player, then the Player shall
// not report any errors.
// ... In addition to any time restrictions specified by a Range
// element within the Metrics element.
if(isReportingPlayer&&rangeController.isEnabled()){// This reporting mechanism operates by creating one HTTP GET
// request for every entry in the top level list of the metric.
vos.forEach(function(vo){var url=metricSerialiser.serialise(vo);// this has been proposed for errata
if(USE_DRAFT_DVB_SPEC&&type!==metricsConstants.DVB_ERRORS){url='metricname='+type+'&'+url;}// Take the value of the @reportingUrl attribute, append a
// question mark ('?') character and then append the string
// created in the previous step.
url=reportingUrl+'?'+url;// Make an HTTP GET request to the URL contained within the
// string created in the previous step.
doGetRequest(url,null,function(){// If the Player is unable to make the report, for
// example because the @reportingUrl is invalid, the
// host cannot be reached, or an HTTP status code other
// than one in the 200 series is received, the Player
// shall cease being a reporting Player for the
// duration of the MPD.
isReportingPlayer=false;});});}}function initialize(entry,rc){var probability=void 0;rangeController=rc;reportingUrl=entry.dvb_reportingUrl;// If a required attribute is missing, the Reporting descriptor may
// be ignored by the Player
if(!reportingUrl){throw new Error('required parameter missing (dvb:reportingUrl)');}// A Player's status, as a reporting Player or not, shall remain
// static for the duration of the MPD, regardless of MPD updates.
// (i.e. only calling reset (or failure) changes this state)
if(!reportingPlayerStatusDecided){probability=entry.dvb_probability;// TS 103 285 Clause 10.12.3.4
// If the @probability attribute is set to 1000, it shall be a reporting Player.
// If the @probability attribute is absent it will take the default value of 1000.
// For any other value of the @probability attribute, it shall decide at random whether to be a
// reporting Player, such that the probability of being one is @probability/1000.
if(probability&&(probability===1000||probability/1000>=randomNumberGenerator.random())){isReportingPlayer=true;}reportingPlayerStatusDecided=true;}}function resetInitialSettings(){reportingPlayerStatusDecided=false;isReportingPlayer=false;reportingUrl=null;rangeController=null;}function reset(){if(!allowPendingRequestsToCompleteOnReset){pendingRequests.forEach(function(req){return req.abort();});pendingRequests=[];}resetInitialSettings();}instance={report:report,initialize:initialize,reset:reset};setup();return instance;}DVBReporting.__dashjs_factory_name='DVBReporting';exports.default=dashjs.FactoryMaker.getClassFactory(DVBReporting);/* jshint ignore:line */


},{"../../utils/MetricSerialiser":"../node_modules/dashjs/build/es5/src/streaming/metrics/utils/MetricSerialiser.js","../../utils/RNG":"../node_modules/dashjs/build/es5/src/streaming/metrics/utils/RNG.js"}],"../node_modules/dashjs/build/es5/src/streaming/metrics/reporting/ReportingFactory.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _DVBReporting=require('./reporters/DVBReporting');var _DVBReporting2=_interopRequireDefault(_DVBReporting);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function ReportingFactory(config){config=config||{};var knownReportingSchemeIdUris={'urn:dvb:dash:reporting:2014':_DVBReporting2.default};var context=this.context;var instance=void 0;var logger=config.debug?config.debug.getLogger(instance):{};var metricsConstants=config.metricsConstants;function create(entry,rangeController){var reporting=void 0;try{reporting=knownReportingSchemeIdUris[entry.schemeIdUri](context).create({metricsConstants:metricsConstants});reporting.initialize(entry,rangeController);}catch(e){reporting=null;logger.error('ReportingFactory: could not create Reporting with schemeIdUri '+entry.schemeIdUri+' ('+e.message+')');}return reporting;}function register(schemeIdUri,moduleName){knownReportingSchemeIdUris[schemeIdUri]=moduleName;}function unregister(schemeIdUri){delete knownReportingSchemeIdUris[schemeIdUri];}instance={create:create,register:register,unregister:unregister};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */ReportingFactory.__dashjs_factory_name='ReportingFactory';exports.default=dashjs.FactoryMaker.getSingletonFactory(ReportingFactory);/* jshint ignore:line */


},{"./reporters/DVBReporting":"../node_modules/dashjs/build/es5/src/streaming/metrics/reporting/reporters/DVBReporting.js"}],"../node_modules/dashjs/build/es5/src/streaming/metrics/controllers/ReportingController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _ReportingFactory=require('../reporting/ReportingFactory');var _ReportingFactory2=_interopRequireDefault(_ReportingFactory);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function ReportingController(config){var reporters=[];var instance=void 0;var reportingFactory=(0,_ReportingFactory2.default)(this.context).getInstance(config);function initialize(reporting,rangeController){// "if multiple Reporting elements are present, it is expected that
// the client processes one of the recognized reporting schemes."
// to ignore this, and support multiple Reporting per Metric,
// simply change the 'some' below to 'forEach'
reporting.some(function(r){var reporter=reportingFactory.create(r,rangeController);if(reporter){reporters.push(reporter);return true;}});}function reset(){reporters.forEach(function(r){return r.reset();});reporters=[];}function report(type,vos){reporters.forEach(function(r){return r.report(type,vos);});}instance={initialize:initialize,reset:reset,report:report};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */ReportingController.__dashjs_factory_name='ReportingController';exports.default=dashjs.FactoryMaker.getClassFactory(ReportingController);/* jshint ignore:line */


},{"../reporting/ReportingFactory":"../node_modules/dashjs/build/es5/src/streaming/metrics/reporting/ReportingFactory.js"}],"../node_modules/dashjs/build/es5/src/streaming/metrics/utils/HandlerHelpers.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
  * @ignore
  */function HandlerHelpers(){return{reconstructFullMetricName:function reconstructFullMetricName(key,n,type){var mn=key;if(n){mn+='('+n;if(type&&type.length){mn+=','+type;}mn+=')';}return mn;},validateN:function validateN(n_ms){if(!n_ms){throw new Error('missing n');}if(isNaN(n_ms)){throw new Error('n is NaN');}// n is a positive integer is defined to refer to the metric
// in which the buffer level is recorded every n ms.
if(n_ms<0){throw new Error('n must be positive');}return n_ms;}};}HandlerHelpers.__dashjs_factory_name='HandlerHelpers';exports.default=dashjs.FactoryMaker.getSingletonFactory(HandlerHelpers);/* jshint ignore:line */


},{}],"../node_modules/dashjs/build/es5/src/streaming/metrics/metrics/handlers/BufferLevelHandler.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _HandlerHelpers=require('../../utils/HandlerHelpers');var _HandlerHelpers2=_interopRequireDefault(_HandlerHelpers);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function BufferLevelHandler(config){config=config||{};var instance=void 0,reportingController=void 0,n=void 0,name=void 0,interval=void 0,lastReportedTime=void 0;var context=this.context;var handlerHelpers=(0,_HandlerHelpers2.default)(context).getInstance();var storedVOs=[];var metricsConstants=config.metricsConstants;function getLowestBufferLevelVO(){try{return Object.keys(storedVOs).map(function(key){return storedVOs[key];}).reduce(function(a,b){return a.level<b.level?a:b;});}catch(e){return;}}function intervalCallback(){var vo=getLowestBufferLevelVO();if(vo){if(lastReportedTime!==vo.t){lastReportedTime=vo.t;reportingController.report(name,vo);}}}function initialize(basename,rc,n_ms){if(rc){// this will throw if n is invalid, to be
// caught by the initialize caller.
n=handlerHelpers.validateN(n_ms);reportingController=rc;name=handlerHelpers.reconstructFullMetricName(basename,n_ms);interval=setInterval(intervalCallback,n);}}function reset(){clearInterval(interval);interval=null;n=0;reportingController=null;lastReportedTime=null;}function handleNewMetric(metric,vo,type){if(metric===metricsConstants.BUFFER_LEVEL){storedVOs[type]=vo;}}instance={initialize:initialize,reset:reset,handleNewMetric:handleNewMetric};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */BufferLevelHandler.__dashjs_factory_name='BufferLevelHandler';exports.default=dashjs.FactoryMaker.getClassFactory(BufferLevelHandler);/* jshint ignore:line */


},{"../../utils/HandlerHelpers":"../node_modules/dashjs/build/es5/src/streaming/metrics/utils/HandlerHelpers.js"}],"../node_modules/dashjs/build/es5/src/streaming/metrics/metrics/handlers/DVBErrorsHandler.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _MetricsReportingEvents=require('../../MetricsReportingEvents');var _MetricsReportingEvents2=_interopRequireDefault(_MetricsReportingEvents);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function DVBErrorsHandler(config){config=config||{};var instance=void 0,reportingController=void 0;var eventBus=config.eventBus;var metricsConstants=config.metricsConstants;function onInitialisationComplete(){// we only want to report this once per call to initialize
eventBus.off(_MetricsReportingEvents2.default.METRICS_INITIALISATION_COMPLETE,onInitialisationComplete,this);// Note: A Player becoming a reporting Player is itself
// something which is recorded by the DVBErrors metric.
eventBus.trigger(_MetricsReportingEvents2.default.BECAME_REPORTING_PLAYER);}function initialize(unused,rc){if(rc){reportingController=rc;eventBus.on(_MetricsReportingEvents2.default.METRICS_INITIALISATION_COMPLETE,onInitialisationComplete,this);}}function reset(){reportingController=null;}function handleNewMetric(metric,vo){// simply pass metric straight through
if(metric===metricsConstants.DVB_ERRORS){if(reportingController){reportingController.report(metric,vo);}}}instance={initialize:initialize,reset:reset,handleNewMetric:handleNewMetric};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */exports.default=dashjs.FactoryMaker.getClassFactory(DVBErrorsHandler);/* jshint ignore:line */


},{"../../MetricsReportingEvents":"../node_modules/dashjs/build/es5/src/streaming/metrics/MetricsReportingEvents.js"}],"../node_modules/dashjs/build/es5/src/streaming/metrics/metrics/handlers/HttpListHandler.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _HandlerHelpers=require('../../utils/HandlerHelpers');var _HandlerHelpers2=_interopRequireDefault(_HandlerHelpers);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function HttpListHandler(config){config=config||{};var instance=void 0,reportingController=void 0,n=void 0,type=void 0,name=void 0,interval=void 0;var storedVos=[];var handlerHelpers=(0,_HandlerHelpers2.default)(this.context).getInstance();var metricsConstants=config.metricsConstants;function intervalCallback(){var vos=storedVos;if(vos.length){if(reportingController){reportingController.report(name,vos);}}storedVos=[];}function initialize(basename,rc,n_ms,requestType){if(rc){// this will throw if n is invalid, to be
// caught by the initialize caller.
n=handlerHelpers.validateN(n_ms);reportingController=rc;if(requestType&&requestType.length){type=requestType;}name=handlerHelpers.reconstructFullMetricName(basename,n_ms,requestType);interval=setInterval(intervalCallback,n);}}function reset(){clearInterval(interval);interval=null;n=null;type=null;storedVos=[];reportingController=null;}function handleNewMetric(metric,vo){if(metric===metricsConstants.HTTP_REQUEST){if(!type||type===vo.type){storedVos.push(vo);}}}instance={initialize:initialize,reset:reset,handleNewMetric:handleNewMetric};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */HttpListHandler.__dashjs_factory_name='HttpListHandler';exports.default=dashjs.FactoryMaker.getClassFactory(HttpListHandler);/* jshint ignore:line */


},{"../../utils/HandlerHelpers":"../node_modules/dashjs/build/es5/src/streaming/metrics/utils/HandlerHelpers.js"}],"../node_modules/dashjs/build/es5/src/streaming/metrics/metrics/handlers/GenericMetricHandler.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
  * @ignore
  */function GenericMetricHandler(){var instance=void 0,metricName=void 0,reportingController=void 0;function initialize(name,rc){metricName=name;reportingController=rc;}function reset(){reportingController=null;metricName=undefined;}function handleNewMetric(metric,vo){// simply pass metric straight through
if(metric===metricName){if(reportingController){reportingController.report(metricName,vo);}}}instance={initialize:initialize,reset:reset,handleNewMetric:handleNewMetric};return instance;}GenericMetricHandler.__dashjs_factory_name='GenericMetricHandler';exports.default=dashjs.FactoryMaker.getClassFactory(GenericMetricHandler);/* jshint ignore:line */


},{}],"../node_modules/dashjs/build/es5/src/streaming/metrics/metrics/MetricsHandlerFactory.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _BufferLevelHandler=require('./handlers/BufferLevelHandler');var _BufferLevelHandler2=_interopRequireDefault(_BufferLevelHandler);var _DVBErrorsHandler=require('./handlers/DVBErrorsHandler');var _DVBErrorsHandler2=_interopRequireDefault(_DVBErrorsHandler);var _HttpListHandler=require('./handlers/HttpListHandler');var _HttpListHandler2=_interopRequireDefault(_HttpListHandler);var _GenericMetricHandler=require('./handlers/GenericMetricHandler');var _GenericMetricHandler2=_interopRequireDefault(_GenericMetricHandler);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function MetricsHandlerFactory(config){config=config||{};var instance=void 0;var logger=config.debug?config.debug.getLogger(instance):{};// group 1: key, [group 3: n [, group 5: type]]
var keyRegex=/([a-zA-Z]*)(\(([0-9]*)(\,\s*([a-zA-Z]*))?\))?/;var context=this.context;var knownFactoryProducts={BufferLevel:_BufferLevelHandler2.default,DVBErrors:_DVBErrorsHandler2.default,HttpList:_HttpListHandler2.default,PlayList:_GenericMetricHandler2.default,RepSwitchList:_GenericMetricHandler2.default,TcpList:_GenericMetricHandler2.default};function create(listType,reportingController){var matches=listType.match(keyRegex);var handler;if(!matches){return;}try{handler=knownFactoryProducts[matches[1]](context).create({eventBus:config.eventBus,metricsConstants:config.metricsConstants});handler.initialize(matches[1],reportingController,matches[3],matches[5]);}catch(e){handler=null;logger.error('MetricsHandlerFactory: Could not create handler for type '+matches[1]+' with args '+matches[3]+', '+matches[5]+' ('+e.message+')');}return handler;}function register(key,handler){knownFactoryProducts[key]=handler;}function unregister(key){delete knownFactoryProducts[key];}instance={create:create,register:register,unregister:unregister};return instance;}MetricsHandlerFactory.__dashjs_factory_name='MetricsHandlerFactory';exports.default=dashjs.FactoryMaker.getSingletonFactory(MetricsHandlerFactory);/* jshint ignore:line */


},{"./handlers/BufferLevelHandler":"../node_modules/dashjs/build/es5/src/streaming/metrics/metrics/handlers/BufferLevelHandler.js","./handlers/DVBErrorsHandler":"../node_modules/dashjs/build/es5/src/streaming/metrics/metrics/handlers/DVBErrorsHandler.js","./handlers/HttpListHandler":"../node_modules/dashjs/build/es5/src/streaming/metrics/metrics/handlers/HttpListHandler.js","./handlers/GenericMetricHandler":"../node_modules/dashjs/build/es5/src/streaming/metrics/metrics/handlers/GenericMetricHandler.js"}],"../node_modules/dashjs/build/es5/src/streaming/metrics/controllers/MetricsHandlersController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _MetricsHandlerFactory=require('../metrics/MetricsHandlerFactory');var _MetricsHandlerFactory2=_interopRequireDefault(_MetricsHandlerFactory);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function MetricsHandlersController(config){config=config||{};var handlers=[];var instance=void 0;var context=this.context;var eventBus=config.eventBus;var Events=config.events;var metricsHandlerFactory=(0,_MetricsHandlerFactory2.default)(context).getInstance({debug:config.debug,eventBus:config.eventBus,metricsConstants:config.metricsConstants});function handle(e){handlers.forEach(function(handler){handler.handleNewMetric(e.metric,e.value,e.mediaType);});}function initialize(metrics,reportingController){metrics.split(',').forEach(function(m,midx,ms){var handler=void 0;// there is a bug in ISO23009-1 where the metrics attribute
// is a comma-separated list but HttpList key can contain a
// comma enclosed by ().
if(m.indexOf('(')!==-1&&m.indexOf(')')===-1){var nextm=ms[midx+1];if(nextm&&nextm.indexOf('(')===-1&&nextm.indexOf(')')!==-1){m+=','+nextm;// delete the next metric so forEach does not visit.
delete ms[midx+1];}}handler=metricsHandlerFactory.create(m,reportingController);if(handler){handlers.push(handler);}});eventBus.on(Events.METRIC_ADDED,handle,instance);eventBus.on(Events.METRIC_UPDATED,handle,instance);}function reset(){eventBus.off(Events.METRIC_ADDED,handle,instance);eventBus.off(Events.METRIC_UPDATED,handle,instance);handlers.forEach(function(handler){return handler.reset();});handlers=[];}instance={initialize:initialize,reset:reset};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */MetricsHandlersController.__dashjs_factory_name='MetricsHandlersController';exports.default=dashjs.FactoryMaker.getClassFactory(MetricsHandlersController);/* jshint ignore:line */


},{"../metrics/MetricsHandlerFactory":"../node_modules/dashjs/build/es5/src/streaming/metrics/metrics/MetricsHandlerFactory.js"}],"../node_modules/dashjs/build/es5/src/streaming/metrics/controllers/MetricsController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _RangeController=require('./RangeController');var _RangeController2=_interopRequireDefault(_RangeController);var _ReportingController=require('./ReportingController');var _ReportingController2=_interopRequireDefault(_ReportingController);var _MetricsHandlersController=require('./MetricsHandlersController');var _MetricsHandlersController2=_interopRequireDefault(_MetricsHandlersController);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function MetricsController(config){config=config||{};var metricsHandlersController=void 0,reportingController=void 0,rangeController=void 0,instance=void 0;var context=this.context;function initialize(metricsEntry){try{rangeController=(0,_RangeController2.default)(context).create({mediaElement:config.mediaElement});rangeController.initialize(metricsEntry.Range);reportingController=(0,_ReportingController2.default)(context).create({debug:config.debug,metricsConstants:config.metricsConstants});reportingController.initialize(metricsEntry.Reporting,rangeController);metricsHandlersController=(0,_MetricsHandlersController2.default)(context).create({debug:config.debug,eventBus:config.eventBus,metricsConstants:config.metricsConstants,events:config.events});metricsHandlersController.initialize(metricsEntry.metrics,reportingController);}catch(e){reset();throw e;}}function reset(){if(metricsHandlersController){metricsHandlersController.reset();}if(reportingController){reportingController.reset();}if(rangeController){rangeController.reset();}}instance={initialize:initialize,reset:reset};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */MetricsController.__dashjs_factory_name='MetricsController';exports.default=dashjs.FactoryMaker.getClassFactory(MetricsController);/* jshint ignore:line */


},{"./RangeController":"../node_modules/dashjs/build/es5/src/streaming/metrics/controllers/RangeController.js","./ReportingController":"../node_modules/dashjs/build/es5/src/streaming/metrics/controllers/ReportingController.js","./MetricsHandlersController":"../node_modules/dashjs/build/es5/src/streaming/metrics/controllers/MetricsHandlersController.js"}],"../node_modules/dashjs/build/es5/src/streaming/metrics/vo/Metrics.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var Metrics=function Metrics(){_classCallCheck(this,Metrics);this.metrics='';this.Range=[];this.Reporting=[];};exports.default=Metrics;


},{}],"../node_modules/dashjs/build/es5/src/streaming/metrics/vo/Range.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var Range=function Range(){_classCallCheck(this,Range);// as defined in ISO23009-1
this.starttime=0;this.duration=Infinity;// for internal use
this._useWallClockTime=false;};exports.default=Range;


},{}],"../node_modules/dashjs/build/es5/src/streaming/metrics/vo/Reporting.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */// TS 103 285 Clause 10.12.3.3
var DEFAULT_DVB_PROBABILITY=1000;var Reporting=function Reporting(){_classCallCheck(this,Reporting);this.schemeIdUri='';this.value='';// DVB Extensions
this.dvb_reportingUrl='';this.dvb_probability=DEFAULT_DVB_PROBABILITY;};exports.default=Reporting;


},{}],"../node_modules/dashjs/build/es5/src/streaming/metrics/utils/ManifestParsing.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _Metrics=require('../vo/Metrics');var _Metrics2=_interopRequireDefault(_Metrics);var _Range=require('../vo/Range');var _Range2=_interopRequireDefault(_Range);var _Reporting=require('../vo/Reporting');var _Reporting2=_interopRequireDefault(_Reporting);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function ManifestParsing(config){config=config||{};var instance=void 0;var adapter=config.adapter;var constants=config.constants;function getMetricsRangeStartTime(manifest,dynamic,range){var voPeriods=void 0,reportingStartTime=void 0;var presentationStartTime=0;if(dynamic){// For services with MPD@type='dynamic', the start time is
// indicated in wall clock time by adding the value of this
// attribute to the value of the MPD@availabilityStartTime
// attribute.
presentationStartTime=adapter.getAvailabilityStartTime(manifest)/1000;}else{// For services with MPD@type='static', the start time is indicated
// in Media Presentation time and is relative to the PeriodStart
// time of the first Period in this MPD.
voPeriods=adapter.getRegularPeriods(manifest);if(voPeriods.length){presentationStartTime=voPeriods[0].start;}}// When not present, DASH Metrics collection is
// requested from the beginning of content
// consumption.
reportingStartTime=presentationStartTime;if(range&&range.hasOwnProperty(constants.START_TIME)){reportingStartTime+=range.starttime;}return reportingStartTime;}function getMetrics(manifest){var metrics=[];if(manifest&&manifest.Metrics_asArray){manifest.Metrics_asArray.forEach(function(metric){var metricEntry=new _Metrics2.default();var isDynamic=adapter.getIsDynamic(manifest);if(metric.hasOwnProperty('metrics')){metricEntry.metrics=metric.metrics;}else{return;}if(metric.Range_asArray){metric.Range_asArray.forEach(function(range){var rangeEntry=new _Range2.default();rangeEntry.starttime=getMetricsRangeStartTime(manifest,isDynamic,range);if(range.hasOwnProperty('duration')){rangeEntry.duration=range.duration;}else{// if not present, the value is identical to the
// Media Presentation duration.
rangeEntry.duration=adapter.getDuration(manifest);}rangeEntry._useWallClockTime=isDynamic;metricEntry.Range.push(rangeEntry);});}if(metric.Reporting_asArray){metric.Reporting_asArray.forEach(function(reporting){var reportingEntry=new _Reporting2.default();if(reporting.hasOwnProperty(constants.SCHEME_ID_URI)){reportingEntry.schemeIdUri=reporting.schemeIdUri;}else{// Invalid Reporting. schemeIdUri must be set. Ignore.
return;}if(reporting.hasOwnProperty('value')){reportingEntry.value=reporting.value;}if(reporting.hasOwnProperty(constants.DVB_REPORTING_URL)){reportingEntry.dvb_reportingUrl=reporting[constants.DVB_REPORTING_URL];}if(reporting.hasOwnProperty(constants.DVB_PROBABILITY)){reportingEntry.dvb_probability=reporting[constants.DVB_PROBABILITY];}metricEntry.Reporting.push(reportingEntry);});}else{// Invalid Metrics. At least one reporting must be present. Ignore
return;}metrics.push(metricEntry);});}return metrics;}instance={getMetrics:getMetrics};return instance;}ManifestParsing.__dashjs_factory_name='ManifestParsing';exports.default=dashjs.FactoryMaker.getSingletonFactory(ManifestParsing);/* jshint ignore:line */


},{"../vo/Metrics":"../node_modules/dashjs/build/es5/src/streaming/metrics/vo/Metrics.js","../vo/Range":"../node_modules/dashjs/build/es5/src/streaming/metrics/vo/Range.js","../vo/Reporting":"../node_modules/dashjs/build/es5/src/streaming/metrics/vo/Reporting.js"}],"../node_modules/dashjs/build/es5/src/streaming/metrics/controllers/MetricsCollectionController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _MetricsController=require('./MetricsController');var _MetricsController2=_interopRequireDefault(_MetricsController);var _ManifestParsing=require('../utils/ManifestParsing');var _ManifestParsing2=_interopRequireDefault(_ManifestParsing);var _MetricsReportingEvents=require('../MetricsReportingEvents');var _MetricsReportingEvents2=_interopRequireDefault(_MetricsReportingEvents);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function MetricsCollectionController(config){config=config||{};var instance=void 0;var metricsControllers={};var context=this.context;var eventBus=config.eventBus;var events=config.events;function update(e){if(e.error){return;}// start by assuming all existing controllers need removing
var controllersToRemove=Object.keys(metricsControllers);var metrics=(0,_ManifestParsing2.default)(context).getInstance({adapter:config.adapter,constants:config.constants}).getMetrics(e.manifest);metrics.forEach(function(m){var key=JSON.stringify(m);if(!metricsControllers.hasOwnProperty(key)){try{var controller=(0,_MetricsController2.default)(context).create(config);controller.initialize(m);metricsControllers[key]=controller;}catch(e){// fail quietly
}}else{// we still need this controller - delete from removal list
controllersToRemove.splice(key,1);}});// now remove the unwanted controllers
controllersToRemove.forEach(function(c){metricsControllers[c].reset();delete metricsControllers[c];});eventBus.trigger(_MetricsReportingEvents2.default.METRICS_INITIALISATION_COMPLETE);}function resetMetricsControllers(){Object.keys(metricsControllers).forEach(function(key){metricsControllers[key].reset();});metricsControllers={};}function setup(){eventBus.on(events.MANIFEST_UPDATED,update,instance);eventBus.on(events.STREAM_TEARDOWN_COMPLETE,resetMetricsControllers,instance);}function reset(){eventBus.off(events.MANIFEST_UPDATED,update,instance);eventBus.off(events.STREAM_TEARDOWN_COMPLETE,resetMetricsControllers,instance);}instance={reset:reset};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */MetricsCollectionController.__dashjs_factory_name='MetricsCollectionController';exports.default=dashjs.FactoryMaker.getClassFactory(MetricsCollectionController);/* jshint ignore:line */


},{"./MetricsController":"../node_modules/dashjs/build/es5/src/streaming/metrics/controllers/MetricsController.js","../utils/ManifestParsing":"../node_modules/dashjs/build/es5/src/streaming/metrics/utils/ManifestParsing.js","../MetricsReportingEvents":"../node_modules/dashjs/build/es5/src/streaming/metrics/MetricsReportingEvents.js"}],"../node_modules/dashjs/build/es5/src/streaming/metrics/MetricsReporting.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _DVBErrorsTranslator=require('./utils/DVBErrorsTranslator');var _DVBErrorsTranslator2=_interopRequireDefault(_DVBErrorsTranslator);var _MetricsReportingEvents=require('./MetricsReportingEvents');var _MetricsReportingEvents2=_interopRequireDefault(_MetricsReportingEvents);var _MetricsCollectionController=require('./controllers/MetricsCollectionController');var _MetricsCollectionController2=_interopRequireDefault(_MetricsCollectionController);var _MetricsHandlerFactory=require('./metrics/MetricsHandlerFactory');var _MetricsHandlerFactory2=_interopRequireDefault(_MetricsHandlerFactory);var _ReportingFactory=require('./reporting/ReportingFactory');var _ReportingFactory2=_interopRequireDefault(_ReportingFactory);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function MetricsReporting(){var context=this.context;var instance=void 0,dvbErrorsTranslator=void 0;/**
     * Create a MetricsCollectionController, and a DVBErrorsTranslator
     * @param {Object} config - dependancies from owner
     * @return {MetricsCollectionController} Metrics Collection Controller
     */function createMetricsReporting(config){dvbErrorsTranslator=(0,_DVBErrorsTranslator2.default)(context).getInstance({eventBus:config.eventBus,dashMetrics:config.dashMetrics,metricsConstants:config.metricsConstants,events:config.events});return(0,_MetricsCollectionController2.default)(context).create(config);}/**
     * Get the ReportingFactory to allow new reporters to be registered
     * @return {ReportingFactory} Reporting Factory
     */function getReportingFactory(){return(0,_ReportingFactory2.default)(context).getInstance();}/**
     * Get the MetricsHandlerFactory to allow new handlers to be registered
     * @return {MetricsHandlerFactory} Metrics Handler Factory
     */function getMetricsHandlerFactory(){return(0,_MetricsHandlerFactory2.default)(context).getInstance();}instance={createMetricsReporting:createMetricsReporting,getReportingFactory:getReportingFactory,getMetricsHandlerFactory:getMetricsHandlerFactory};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */MetricsReporting.__dashjs_factory_name='MetricsReporting';var factory=dashjs.FactoryMaker.getClassFactory(MetricsReporting);/* jshint ignore:line */factory.events=_MetricsReportingEvents2.default;dashjs.FactoryMaker.updateClassFactory(MetricsReporting.__dashjs_factory_name,factory);/* jshint ignore:line */exports.default=factory;


},{"./utils/DVBErrorsTranslator":"../node_modules/dashjs/build/es5/src/streaming/metrics/utils/DVBErrorsTranslator.js","./MetricsReportingEvents":"../node_modules/dashjs/build/es5/src/streaming/metrics/MetricsReportingEvents.js","./controllers/MetricsCollectionController":"../node_modules/dashjs/build/es5/src/streaming/metrics/controllers/MetricsCollectionController.js","./metrics/MetricsHandlerFactory":"../node_modules/dashjs/build/es5/src/streaming/metrics/metrics/MetricsHandlerFactory.js","./reporting/ReportingFactory":"../node_modules/dashjs/build/es5/src/streaming/metrics/reporting/ReportingFactory.js"}],"../node_modules/dashjs/build/es5/src/streaming/protection/CommonEncryption.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 * @ignore
 */var CommonEncryption=function(){function CommonEncryption(){_classCallCheck(this,CommonEncryption);}_createClass(CommonEncryption,null,[{key:'findCencContentProtection',/**
     * Find and return the ContentProtection element in the given array
     * that indicates support for MPEG Common Encryption
     *
     * @param {Array} cpArray array of content protection elements
     * @returns {Object|null} the Common Encryption content protection element or
     * null if one was not found
     */value:function findCencContentProtection(cpArray){var retVal=null;for(var i=0;i<cpArray.length;++i){var cp=cpArray[i];if(cp.schemeIdUri.toLowerCase()==='urn:mpeg:dash:mp4protection:2011'&&(cp.value.toLowerCase()==='cenc'||cp.value.toLowerCase()==='cbcs'))retVal=cp;}return retVal;}/**
     * Returns just the data portion of a single PSSH
     *
     * @param {ArrayBuffer} pssh - the PSSH
     * @return {ArrayBuffer} data portion of the PSSH
     */},{key:'getPSSHData',value:function getPSSHData(pssh){var offset=8;// Box size and type fields
var view=new DataView(pssh);// Read version
var version=view.getUint8(offset);offset+=20;// Version (1), flags (3), system ID (16)
if(version>0){offset+=4+16*view.getUint32(offset);// Key ID count (4) and All key IDs (16*count)
}offset+=4;// Data size
return pssh.slice(offset);}/**
     * Returns the PSSH associated with the given key system from the concatenated
     * list of PSSH boxes in the given initData
     *
     * @param {KeySystem} keySystem the desired
     * key system
     * @param {ArrayBuffer} initData 'cenc' initialization data.  Concatenated list of PSSH.
     * @returns {ArrayBuffer|null} The PSSH box data corresponding to the given key system, null if not found
     * or null if a valid association could not be found.
     */},{key:'getPSSHForKeySystem',value:function getPSSHForKeySystem(keySystem,initData){var psshList=CommonEncryption.parsePSSHList(initData);if(keySystem&&psshList.hasOwnProperty(keySystem.uuid.toLowerCase())){return psshList[keySystem.uuid.toLowerCase()];}return null;}/**
     * Parse a standard common encryption PSSH which contains a simple
     * base64-encoding of the init data
     *
     * @param {Object} cpData the ContentProtection element
     * @param {BASE64} BASE64 reference
     * @returns {ArrayBuffer|null} the init data or null if not found
     */},{key:'parseInitDataFromContentProtection',value:function parseInitDataFromContentProtection(cpData,BASE64){if('pssh'in cpData){// Remove whitespaces and newlines from pssh text
cpData.pssh.__text=cpData.pssh.__text.replace(/\r?\n|\r/g,'').replace(/\s+/g,'');return BASE64.decodeArray(cpData.pssh.__text).buffer;}return null;}/**
     * Parses list of PSSH boxes into keysystem-specific PSSH data
     *
     * @param {ArrayBuffer} data - the concatenated list of PSSH boxes as provided by
     * CDM as initialization data when CommonEncryption content is detected
     * @returns {Object|Array} an object that has a property named according to each of
     * the detected key system UUIDs (e.g. 00000000-0000-0000-0000-0000000000)
     * and a ArrayBuffer (the entire PSSH box) as the property value
     */},{key:'parsePSSHList',value:function parsePSSHList(data){if(data===null||data===undefined)return[];var dv=new DataView(data.buffer||data);// data.buffer first for Uint8Array support
var done=false;var pssh={};// TODO: Need to check every data read for end of buffer
var byteCursor=0;while(!done){var size=void 0,nextBox=void 0,version=void 0,systemID=void 0,psshDataSize=void 0;var boxStart=byteCursor;if(byteCursor>=dv.buffer.byteLength)break;/* Box size */size=dv.getUint32(byteCursor);nextBox=byteCursor+size;byteCursor+=4;/* Verify PSSH */if(dv.getUint32(byteCursor)!==0x70737368){byteCursor=nextBox;continue;}byteCursor+=4;/* Version must be 0 or 1 */version=dv.getUint8(byteCursor);if(version!==0&&version!==1){byteCursor=nextBox;continue;}byteCursor++;byteCursor+=3;/* skip flags */// 16-byte UUID/SystemID
systemID='';var i=void 0,val=void 0;for(i=0;i<4;i++){val=dv.getUint8(byteCursor+i).toString(16);systemID+=val.length===1?'0'+val:val;}byteCursor+=4;systemID+='-';for(i=0;i<2;i++){val=dv.getUint8(byteCursor+i).toString(16);systemID+=val.length===1?'0'+val:val;}byteCursor+=2;systemID+='-';for(i=0;i<2;i++){val=dv.getUint8(byteCursor+i).toString(16);systemID+=val.length===1?'0'+val:val;}byteCursor+=2;systemID+='-';for(i=0;i<2;i++){val=dv.getUint8(byteCursor+i).toString(16);systemID+=val.length===1?'0'+val:val;}byteCursor+=2;systemID+='-';for(i=0;i<6;i++){val=dv.getUint8(byteCursor+i).toString(16);systemID+=val.length===1?'0'+val:val;}byteCursor+=6;systemID=systemID.toLowerCase();/* PSSH Data Size */psshDataSize=dv.getUint32(byteCursor);byteCursor+=4;/* PSSH Data */pssh[systemID]=dv.buffer.slice(boxStart,nextBox);byteCursor=nextBox;}return pssh;}}]);return CommonEncryption;}();exports.default=CommonEncryption;


},{}],"../node_modules/dashjs/build/es5/src/streaming/protection/vo/MediaCapability.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @classdesc A media capability
 * @ignore
 */var MediaCapability=/**
     * @param {string} contentType MIME type and codecs (RFC6386)
     * @param {string} robustness
     * @class
     * @ignore
     */function MediaCapability(contentType,robustness){_classCallCheck(this,MediaCapability);this.contentType=contentType;this.robustness=robustness;};exports.default=MediaCapability;


},{}],"../node_modules/dashjs/build/es5/src/streaming/protection/vo/KeySystemConfiguration.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @classdesc Represents a set of configurations that describe the capabilities desired for
 *  support by a given CDM
 * @ignore
 */var KeySystemConfiguration=/**
     * @param {Array.<MediaCapability>} audioCapabilities array of
     * desired audio capabilities.  Higher preference capabilities should be placed earlier
     * in the array.
     * @param {Array.<MediaCapability>} videoCapabilities array of
     * desired video capabilities.  Higher preference capabilities should be placed earlier
     * in the array.
     * @param {string} distinctiveIdentifier desired use of distinctive identifiers.
     * One of "required", "optional", or "not-allowed"
     * @param {string} persistentState desired support for persistent storage of
     * key systems.  One of "required", "optional", or "not-allowed"
     * @param {Array.<string>} sessionTypes List of session types that must
     * be supported by the key system
     * @class
     */function KeySystemConfiguration(audioCapabilities,videoCapabilities,distinctiveIdentifier,persistentState,sessionTypes){_classCallCheck(this,KeySystemConfiguration);this.initDataTypes=['cenc'];if(audioCapabilities&&audioCapabilities.length){this.audioCapabilities=audioCapabilities;}if(videoCapabilities&&videoCapabilities.length){this.videoCapabilities=videoCapabilities;}this.distinctiveIdentifier=distinctiveIdentifier;this.persistentState=persistentState;this.sessionTypes=sessionTypes;};exports.default=KeySystemConfiguration;


},{}],"../node_modules/dashjs/build/es5/src/streaming/protection/errors/ProtectionErrors.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _ErrorsBase2=require('../../../core/errors/ErrorsBase');var _ErrorsBase3=_interopRequireDefault(_ErrorsBase2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 */var ProtectionErrors=function(_ErrorsBase){_inherits(ProtectionErrors,_ErrorsBase);function ProtectionErrors(){_classCallCheck(this,ProtectionErrors);/**
         *  Generid key Error code
         */var _this=_possibleConstructorReturn(this,(ProtectionErrors.__proto__||Object.getPrototypeOf(ProtectionErrors)).call(this));_this.MEDIA_KEYERR_CODE=100;/**
         *  Error code returned by keyerror api for ProtectionModel_01b
         */_this.MEDIA_KEYERR_UNKNOWN_CODE=101;/**
         *  Error code returned by keyerror api for ProtectionModel_01b
         */_this.MEDIA_KEYERR_CLIENT_CODE=102;/**
         *  Error code returned by keyerror api for ProtectionModel_01b
         */_this.MEDIA_KEYERR_SERVICE_CODE=103;/**
         *  Error code returned by keyerror api for ProtectionModel_01b
         */_this.MEDIA_KEYERR_OUTPUT_CODE=104;/**
         *  Error code returned by keyerror api for ProtectionModel_01b
         */_this.MEDIA_KEYERR_HARDWARECHANGE_CODE=105;/**
         *  Error code returned by keyerror api for ProtectionModel_01b
         */_this.MEDIA_KEYERR_DOMAIN_CODE=106;/**
         *  Error code returned when an error occured in keymessage event for ProtectionModel_01b
         */_this.MEDIA_KEY_MESSAGE_ERROR_CODE=107;/**
         *  Error code returned when challenge is invalid in keymessage event (event triggered by CDM)
         */_this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE=108;/**
         *  Error code returned when License server certificate has not been successfully updated
         */_this.SERVER_CERTIFICATE_UPDATED_ERROR_CODE=109;/**
         *  Error code returned when license validity has expired
         */_this.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE=110;/**
         *  Error code returned when no licenser url is defined
         */_this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE=111;/**
         *  Error code returned when key system access is denied
         */_this.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE=112;/**
         *  Error code returned when key session has not been successfully created
         */_this.KEY_SESSION_CREATED_ERROR_CODE=113;/**
         *  Error code returned when license request failed after a keymessage event has been triggered
         */_this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE=114;_this.MEDIA_KEYERR_UNKNOWN_MESSAGE='An unspecified error occurred. This value is used for errors that don\'t match any of the other codes.';_this.MEDIA_KEYERR_CLIENT_MESSAGE='The Key System could not be installed or updated.';_this.MEDIA_KEYERR_SERVICE_MESSAGE='The message passed into update indicated an error from the license service.';_this.MEDIA_KEYERR_OUTPUT_MESSAGE='There is no available output device with the required characteristics for the content protection system.';_this.MEDIA_KEYERR_HARDWARECHANGE_MESSAGE='A hardware configuration change caused a content protection error.';_this.MEDIA_KEYERR_DOMAIN_MESSAGE='An error occurred in a multi-device domain licensing configuration. The most common error is a failure to join the domain.';_this.MEDIA_KEY_MESSAGE_ERROR_MESSAGE='Multiple key sessions were creates with a user-agent that does not support sessionIDs!! Unpredictable behavior ahead!';_this.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE='DRM: Empty key message from CDM';_this.SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE='Error updating server certificate -- ';_this.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE='DRM: KeyStatusChange error! -- License has expired';_this.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE='DRM: No license server URL specified!';_this.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE='DRM: KeySystem Access Denied! -- ';_this.KEY_SESSION_CREATED_ERROR_MESSAGE='DRM: unable to create session! --';_this.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE='DRM: licenser error! --';return _this;}return ProtectionErrors;}(_ErrorsBase3.default);var protectionErrors=new ProtectionErrors();exports.default=protectionErrors;


},{"../../../core/errors/ErrorsBase":"../node_modules/dashjs/build/es5/src/core/errors/ErrorsBase.js"}],"../node_modules/dashjs/build/es5/src/streaming/protection/controllers/ProtectionController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var _CommonEncryption=require('../CommonEncryption');var _CommonEncryption2=_interopRequireDefault(_CommonEncryption);var _MediaCapability=require('../vo/MediaCapability');var _MediaCapability2=_interopRequireDefault(_MediaCapability);var _KeySystemConfiguration=require('../vo/KeySystemConfiguration');var _KeySystemConfiguration2=_interopRequireDefault(_KeySystemConfiguration);var _ProtectionErrors=require('../errors/ProtectionErrors');var _ProtectionErrors2=_interopRequireDefault(_ProtectionErrors);var _DashJSError=require('../../vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var NEEDKEY_BEFORE_INITIALIZE_RETRIES=5;var NEEDKEY_BEFORE_INITIALIZE_TIMEOUT=500;var LICENSE_SERVER_REQUEST_RETRIES=3;var LICENSE_SERVER_REQUEST_RETRY_INTERVAL=1000;var LICENSE_SERVER_REQUEST_DEFAULT_TIMEOUT=8000;/**
 * @module ProtectionController
 * @description Provides access to media protection information and functionality.  Each
 * ProtectionController manages a single {@link MediaPlayer.models.ProtectionModel}
 * which encapsulates a set of protection information (EME APIs, selected key system,
 * key sessions).  The APIs of ProtectionController mostly align with the latest EME
 * APIs.  Key system selection is mostly automated when combined with app-overrideable
 * functionality provided in {@link ProtectionKeyController}.
 * @todo ProtectionController does almost all of its tasks automatically after init() is
 * called.  Applications might want more control over this process and want to go through
 * each step manually (key system selection, session creation, session maintenance).
 * @param {Object} config
 */function ProtectionController(config){config=config||{};var protectionKeyController=config.protectionKeyController;var protectionModel=config.protectionModel;var eventBus=config.eventBus;var events=config.events;var debug=config.debug;var BASE64=config.BASE64;var constants=config.constants;var needkeyRetries=[];var instance=void 0,logger=void 0,pendingNeedKeyData=void 0,mediaInfoArr=void 0,protDataSet=void 0,sessionType=void 0,robustnessLevel=void 0,keySystem=void 0;function setup(){logger=debug.getLogger(instance);pendingNeedKeyData=[];mediaInfoArr=[];sessionType='temporary';robustnessLevel='';}function checkConfig(){if(!eventBus||!eventBus.hasOwnProperty('on')||!protectionKeyController||!protectionKeyController.hasOwnProperty('getSupportedKeySystemsFromContentProtection')){throw new Error('Missing config parameter(s)');}}/**
     * Initialize this protection system with a given audio
     * or video stream information.
     *
     * @param {StreamInfo} [mediaInfo] Media information
     * @memberof module:ProtectionController
     * @instance
     * @todo This API will change when we have better support for allowing applications
     * to select different adaptation sets for playback.  Right now it is clunky for
     * applications to create {@link StreamInfo} with the right information,
     * @ignore
     */function initializeForMedia(mediaInfo){// Not checking here if a session for similar KS/KID combination is already created
// because still don't know which keysystem will be selected.
// Once Keysystem is selected and before creating the session, we will do that check
// so we create the strictly necessary DRM sessions
if(!mediaInfo){throw new Error('mediaInfo can not be null or undefined');}checkConfig();eventBus.on(events.INTERNAL_KEY_MESSAGE,onKeyMessage,this);eventBus.on(events.INTERNAL_KEY_STATUS_CHANGED,onKeyStatusChanged,this);mediaInfoArr.push(mediaInfo);// ContentProtection elements are specified at the AdaptationSet level, so the CP for audio
// and video will be the same.  Just use one valid MediaInfo object
var supportedKS=protectionKeyController.getSupportedKeySystemsFromContentProtection(mediaInfo.contentProtection);if(supportedKS&&supportedKS.length>0){selectKeySystem(supportedKS,true);}}/**
     * Returns a set of supported key systems and CENC initialization data
     * from the given array of ContentProtection elements.  Only
     * key systems that are supported by this player will be returned.
     * Key systems are returned in priority order (highest first).
     *
     * @param {Array.<Object>} cps - array of content protection elements parsed
     * from the manifest
     * @returns {Array.<Object>} array of objects indicating which supported key
     * systems were found.  Empty array is returned if no
     * supported key systems were found
     * @memberof module:ProtectionKeyController
     * @instance
     * @ignore
     */function getSupportedKeySystemsFromContentProtection(cps){checkConfig();return protectionKeyController.getSupportedKeySystemsFromContentProtection(cps);}/**
     * Create a new key session associated with the given initialization data from
     * the MPD or from the PSSH box in the media
     *
     * @param {ArrayBuffer} initData the initialization data
     * @param {Uint8Array} cdmData the custom data to provide to licenser
     * @memberof module:ProtectionController
     * @instance
     * @fires ProtectionController#KeySessionCreated
     * @todo In older versions of the EME spec, there was a one-to-one relationship between
     * initialization data and key sessions.  That is no longer true in the latest APIs.  This
     * API will need to modified (and a new "generateRequest(keySession, initData)" API created)
     * to come up to speed with the latest EME standard
     * @ignore
     */function createKeySession(initData,cdmData){var initDataForKS=_CommonEncryption2.default.getPSSHForKeySystem(keySystem,initData);var protData=getProtData(keySystem);if(initDataForKS){// Check for duplicate initData
var currentInitData=protectionModel.getAllInitData();for(var i=0;i<currentInitData.length;i++){if(protectionKeyController.initDataEquals(initDataForKS,currentInitData[i])){logger.info('DRM: Ignoring initData because we have already seen it!');return;}}try{protectionModel.createKeySession(initDataForKS,protData,getSessionType(keySystem),cdmData);}catch(error){eventBus.trigger(events.KEY_SESSION_CREATED,{data:null,error:new _DashJSError2.default(_ProtectionErrors2.default.KEY_SESSION_CREATED_ERROR_CODE,_ProtectionErrors2.default.KEY_SESSION_CREATED_ERROR_MESSAGE+error.message)});}}else if(initData){protectionModel.createKeySession(initData,protData,getSessionType(keySystem),cdmData);}else{eventBus.trigger(events.KEY_SESSION_CREATED,{data:null,error:new _DashJSError2.default(_ProtectionErrors2.default.KEY_SESSION_CREATED_ERROR_CODE,_ProtectionErrors2.default.KEY_SESSION_CREATED_ERROR_MESSAGE+'Selected key system is '+(keySystem?keySystem.systemString:null)+'.  needkey/encrypted event contains no initData corresponding to that key system!')});}}/**
     * Loads a key session with the given session ID from persistent storage.  This
     * essentially creates a new key session
     *
     * @param {string} sessionID
     * @param {string} initData
     * @memberof module:ProtectionController
     * @instance
     * @fires ProtectionController#KeySessionCreated
     * @ignore
     */function loadKeySession(sessionID,initData){checkConfig();protectionModel.loadKeySession(sessionID,initData,getSessionType(keySystem));}/**
     * Removes the given key session from persistent storage and closes the session
     * as if {@link ProtectionController#closeKeySession}
     * was called
     *
     * @param {SessionToken} sessionToken the session
     * token
     * @memberof module:ProtectionController
     * @instance
     * @fires ProtectionController#KeySessionRemoved
     * @fires ProtectionController#KeySessionClosed
     * @ignore
     */function removeKeySession(sessionToken){checkConfig();protectionModel.removeKeySession(sessionToken);}/**
     * Closes the key session and releases all associated decryption keys.  These
     * keys will no longer be available for decrypting media
     *
     * @param {SessionToken} sessionToken the session
     * token
     * @memberof module:ProtectionController
     * @instance
     * @fires ProtectionController#KeySessionClosed
     * @ignore
     */function closeKeySession(sessionToken){checkConfig();protectionModel.closeKeySession(sessionToken);}/**
     * Sets a server certificate for use by the CDM when signing key messages
     * intended for a particular license server.  This will fire
     * an error event if a key system has not yet been selected.
     *
     * @param {ArrayBuffer} serverCertificate a CDM-specific license server
     * certificate
     * @memberof module:ProtectionController
     * @instance
     * @fires ProtectionController#ServerCertificateUpdated
     */function setServerCertificate(serverCertificate){checkConfig();protectionModel.setServerCertificate(serverCertificate);}/**
     * Associate this protection system with the given HTMLMediaElement.  This
     * causes the system to register for needkey/encrypted events from the given
     * element and provides a destination for setting of MediaKeys
     *
     * @param {HTMLMediaElement} element the media element to which the protection
     * system should be associated
     * @memberof module:ProtectionController
     * @instance
     */function setMediaElement(element){checkConfig();if(element){protectionModel.setMediaElement(element);eventBus.on(events.NEED_KEY,onNeedKey,this);}else if(element===null){protectionModel.setMediaElement(element);eventBus.off(events.NEED_KEY,onNeedKey,this);}}/**
     * Sets the session type to use when creating key sessions.  Either "temporary" or
     * "persistent-license".  Default is "temporary".
     *
     * @param {string} value the session type
     * @memberof module:ProtectionController
     * @instance
     */function setSessionType(value){sessionType=value;}/**
     * Sets the robustness level for video and audio capabilities. Optional to remove Chrome warnings.
     * Possible values are SW_SECURE_CRYPTO, SW_SECURE_DECODE, HW_SECURE_CRYPTO, HW_SECURE_CRYPTO, HW_SECURE_DECODE, HW_SECURE_ALL.
     *
     * @param {string} level the robustness level
     * @memberof module:ProtectionController
     * @instance
     */function setRobustnessLevel(level){robustnessLevel=level;}/**
     * Attach KeySystem-specific data to use for license acquisition with EME
     *
     * @param {Object} data an object containing property names corresponding to
     * key system name strings (e.g. "org.w3.clearkey") and associated values
     * being instances of {@link ProtectionData}
     * @memberof module:ProtectionController
     * @instance
     * @ignore
     */function setProtectionData(data){protDataSet=data;protectionKeyController.setProtectionData(data);}/**
     * Stop method is called when current playback is stopped/resetted.
     *
     * @memberof module:ProtectionController
     * @instance
     */function stop(){if(protectionModel){protectionModel.stop();}}/**
     * Destroys all protection data associated with this protection set.  This includes
     * deleting all key sessions. In the case of persistent key sessions, the sessions
     * will simply be unloaded and not deleted.  Additionally, if this protection set is
     * associated with a HTMLMediaElement, it will be detached from that element.
     *
     * @memberof module:ProtectionController
     * @instance
     * @ignore
     */function reset(){checkConfig();eventBus.off(events.INTERNAL_KEY_MESSAGE,onKeyMessage,this);eventBus.off(events.INTERNAL_KEY_STATUS_CHANGED,onKeyStatusChanged,this);setMediaElement(null);keySystem=undefined;//TODO-Refactor look at why undefined is needed for this. refactor
if(protectionModel){protectionModel.reset();protectionModel=null;}needkeyRetries.forEach(function(retryTimeout){return clearTimeout(retryTimeout);});needkeyRetries=[];mediaInfoArr=[];}///////////////
// Private
///////////////
function getProtData(keySystem){var protData=null;if(keySystem){var keySystemString=keySystem.systemString;if(protDataSet){protData=keySystemString in protDataSet?protDataSet[keySystemString]:null;}}return protData;}function getKeySystemConfiguration(keySystem){var protData=getProtData(keySystem);var audioCapabilities=[];var videoCapabilities=[];var audioRobustness=protData&&protData.audioRobustness&&protData.audioRobustness.length>0?protData.audioRobustness:robustnessLevel;var videoRobustness=protData&&protData.videoRobustness&&protData.videoRobustness.length>0?protData.videoRobustness:robustnessLevel;var ksSessionType=getSessionType(keySystem);var distinctiveIdentifier=protData&&protData.distinctiveIdentifier?protData.distinctiveIdentifier:'optional';var persistentState=protData&&protData.persistentState?protData.persistentState:ksSessionType==='temporary'?'optional':'required';mediaInfoArr.forEach(function(media){if(media.type===constants.AUDIO){audioCapabilities.push(new _MediaCapability2.default(media.codec,audioRobustness));}else if(media.type===constants.VIDEO){videoCapabilities.push(new _MediaCapability2.default(media.codec,videoRobustness));}});return new _KeySystemConfiguration2.default(audioCapabilities,videoCapabilities,distinctiveIdentifier,persistentState,[ksSessionType]);}function getSessionType(keySystem){var protData=getProtData(keySystem);var ksSessionType=protData&&protData.sessionType?protData.sessionType:sessionType;return ksSessionType;}function selectKeySystem(supportedKS,fromManifest){var self=this;var requestedKeySystems=[];// Reorder key systems according to priority order provided in protectionData
supportedKS=supportedKS.sort(function(ksA,ksB){var indexA=protDataSet&&protDataSet[ksA.ks.systemString]&&protDataSet[ksA.ks.systemString].priority>=0?protDataSet[ksA.ks.systemString].priority:supportedKS.length;var indexB=protDataSet&&protDataSet[ksB.ks.systemString]&&protDataSet[ksB.ks.systemString].priority>=0?protDataSet[ksB.ks.systemString].priority:supportedKS.length;return indexA-indexB;});var ksIdx=void 0;if(keySystem){// We have a key system
for(ksIdx=0;ksIdx<supportedKS.length;ksIdx++){if(keySystem===supportedKS[ksIdx].ks){var _ret=function(){requestedKeySystems.push({ks:supportedKS[ksIdx].ks,configs:[getKeySystemConfiguration(keySystem)]});// Ensure that we would be granted key system access using the key
// system and codec information
var onKeySystemAccessComplete=function onKeySystemAccessComplete(event){eventBus.off(events.KEY_SYSTEM_ACCESS_COMPLETE,onKeySystemAccessComplete,self);if(event.error){if(!fromManifest){eventBus.trigger(events.KEY_SYSTEM_SELECTED,{error:new _DashJSError2.default(_ProtectionErrors2.default.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE,_ProtectionErrors2.default.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE+event.error)});}}else{logger.info('DRM: KeySystem Access Granted');eventBus.trigger(events.KEY_SYSTEM_SELECTED,{data:event.data});var protData=getProtData(keySystem);if(protectionKeyController.isClearKey(keySystem)){// For Clearkey: if parameters for generating init data was provided by the user, use them for generating
// initData and overwrite possible initData indicated in encrypted event (EME)
if(protData&&protData.hasOwnProperty('clearkeys')){var initData={kids:Object.keys(protData.clearkeys)};supportedKS[ksIdx].initData=new TextEncoder().encode(JSON.stringify(initData));}}if(supportedKS[ksIdx].sessionId){// Load MediaKeySession with sessionId
loadKeySession(supportedKS[ksIdx].sessionId,supportedKS[ksIdx].initData);}else if(supportedKS[ksIdx].initData){// Create new MediaKeySession with initData
createKeySession(supportedKS[ksIdx].initData,supportedKS[ksIdx].cdmData);}}};eventBus.on(events.KEY_SYSTEM_ACCESS_COMPLETE,onKeySystemAccessComplete,self);protectionModel.requestKeySystemAccess(requestedKeySystems);return'break';}();if(_ret==='break')break;}}}else if(keySystem===undefined){// First time through, so we need to select a key system
keySystem=null;pendingNeedKeyData.push(supportedKS);// Add all key systems to our request list since we have yet to select a key system
for(var i=0;i<supportedKS.length;i++){requestedKeySystems.push({ks:supportedKS[i].ks,configs:[getKeySystemConfiguration(supportedKS[i].ks)]});}var keySystemAccess=void 0;var onKeySystemAccessComplete=function onKeySystemAccessComplete(event){eventBus.off(events.KEY_SYSTEM_ACCESS_COMPLETE,onKeySystemAccessComplete,self);if(event.error){keySystem=undefined;eventBus.off(events.INTERNAL_KEY_SYSTEM_SELECTED,onKeySystemSelected,self);if(!fromManifest){eventBus.trigger(events.KEY_SYSTEM_SELECTED,{data:null,error:new _DashJSError2.default(_ProtectionErrors2.default.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE,_ProtectionErrors2.default.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE+event.error)});}}else{keySystemAccess=event.data;logger.info('DRM: KeySystem Access Granted ('+keySystemAccess.keySystem.systemString+')!  Selecting key system...');protectionModel.selectKeySystem(keySystemAccess);}};var onKeySystemSelected=function onKeySystemSelected(event){eventBus.off(events.INTERNAL_KEY_SYSTEM_SELECTED,onKeySystemSelected,self);eventBus.off(events.KEY_SYSTEM_ACCESS_COMPLETE,onKeySystemAccessComplete,self);if(!event.error){if(!protectionModel){return;}keySystem=protectionModel.getKeySystem();eventBus.trigger(events.KEY_SYSTEM_SELECTED,{data:keySystemAccess});// Set server certificate from protData
var protData=getProtData(keySystem);if(protData&&protData.serverCertificate&&protData.serverCertificate.length>0){protectionModel.setServerCertificate(BASE64.decodeArray(protData.serverCertificate).buffer);}for(var _i=0;_i<pendingNeedKeyData.length;_i++){for(ksIdx=0;ksIdx<pendingNeedKeyData[_i].length;ksIdx++){if(keySystem===pendingNeedKeyData[_i][ksIdx].ks){if(protectionKeyController.isClearKey(keySystem)){// For Clearkey: if parameters for generating init data was provided by the user, use them for generating
// initData and overwrite possible initData indicated in encrypted event (EME)
if(protData&&protData.hasOwnProperty('clearkeys')){var initData={kids:Object.keys(protData.clearkeys)};pendingNeedKeyData[_i][ksIdx].initData=new TextEncoder().encode(JSON.stringify(initData));}}if(pendingNeedKeyData[_i][ksIdx].sessionId){// Load MediaKeySession with sessionId
loadKeySession(pendingNeedKeyData[_i][ksIdx].sessionId,pendingNeedKeyData[_i][ksIdx].initData);}else if(pendingNeedKeyData[_i][ksIdx].initData!==null){// Create new MediaKeySession with initData
createKeySession(pendingNeedKeyData[_i][ksIdx].initData,pendingNeedKeyData[_i][ksIdx].cdmData);}break;}}}}else{keySystem=undefined;if(!fromManifest){eventBus.trigger(events.KEY_SYSTEM_SELECTED,{data:null,error:new _DashJSError2.default(_ProtectionErrors2.default.KEY_SYSTEM_ACCESS_DENIED_ERROR_CODE,_ProtectionErrors2.default.KEY_SYSTEM_ACCESS_DENIED_ERROR_MESSAGE+'Error selecting key system! -- '+event.error)});}}};eventBus.on(events.INTERNAL_KEY_SYSTEM_SELECTED,onKeySystemSelected,self);eventBus.on(events.KEY_SYSTEM_ACCESS_COMPLETE,onKeySystemAccessComplete,self);protectionModel.requestKeySystemAccess(requestedKeySystems);}else{// We are in the process of selecting a key system, so just save the data
pendingNeedKeyData.push(supportedKS);}}function sendLicenseRequestCompleteEvent(data,error){eventBus.trigger(events.LICENSE_REQUEST_COMPLETE,{data:data,error:error});}function onKeyStatusChanged(e){if(e.error){eventBus.trigger(events.KEY_STATUSES_CHANGED,{data:null,error:e.error});}else{logger.debug('DRM: key status = '+e.status);}}function onKeyMessage(e){logger.debug('DRM: onKeyMessage');// Dispatch event to applications indicating we received a key message
var keyMessage=e.data;eventBus.trigger(events.KEY_MESSAGE,{data:keyMessage});var messageType=keyMessage.messageType?keyMessage.messageType:'license-request';var message=keyMessage.message;var sessionToken=keyMessage.sessionToken;var protData=getProtData(keySystem);var keySystemString=keySystem?keySystem.systemString:null;var licenseServerData=protectionKeyController.getLicenseServer(keySystem,protData,messageType);var eventData={sessionToken:sessionToken,messageType:messageType};// Ensure message from CDM is not empty
if(!message||message.byteLength===0){sendLicenseRequestCompleteEvent(eventData,new _DashJSError2.default(_ProtectionErrors2.default.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_CODE,_ProtectionErrors2.default.MEDIA_KEY_MESSAGE_NO_CHALLENGE_ERROR_MESSAGE));return;}// Message not destined for license server
if(!licenseServerData){logger.debug('DRM: License server request not required for this message (type = '+e.data.messageType+').  Session ID = '+sessionToken.getSessionID());sendLicenseRequestCompleteEvent(eventData);return;}// Perform any special handling for ClearKey
if(protectionKeyController.isClearKey(keySystem)){var clearkeys=protectionKeyController.processClearKeyLicenseRequest(keySystem,protData,message);if(clearkeys){logger.debug('DRM: ClearKey license request handled by application!');sendLicenseRequestCompleteEvent(eventData);protectionModel.updateKeySession(sessionToken,clearkeys);return;}}// All remaining key system scenarios require a request to a remote license server
// Determine license server URL
var url=null;if(protData&&protData.serverURL){var serverURL=protData.serverURL;if(typeof serverURL==='string'&&serverURL!==''){url=serverURL;}else if((typeof serverURL==='undefined'?'undefined':_typeof(serverURL))==='object'&&serverURL.hasOwnProperty(messageType)){url=serverURL[messageType];}}else if(protData&&protData.laURL&&protData.laURL!==''){// TODO: Deprecated!
url=protData.laURL;}else{// For clearkey use the url defined in the manifest
if(protectionKeyController.isClearKey(keySystem)){url=keySystem.getLicenseServerUrlFromMediaInfo(mediaInfoArr);}else{var psshData=_CommonEncryption2.default.getPSSHData(sessionToken.initData);url=keySystem.getLicenseServerURLFromInitData(psshData);if(!url){url=e.data.laURL;}}}// Possibly update or override the URL based on the message
url=licenseServerData.getServerURLFromMessage(url,message,messageType);// Ensure valid license server URL
if(!url){sendLicenseRequestCompleteEvent(eventData,new _DashJSError2.default(_ProtectionErrors2.default.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_CODE,_ProtectionErrors2.default.MEDIA_KEY_MESSAGE_NO_LICENSE_SERVER_URL_ERROR_MESSAGE));return;}// Set optional XMLHttpRequest headers from protection data and message
var reqHeaders={};var withCredentials=false;var updateHeaders=function updateHeaders(headers){if(headers){for(var key in headers){if('authorization'===key.toLowerCase()){withCredentials=true;}reqHeaders[key]=headers[key];}}};if(protData){updateHeaders(protData.httpRequestHeaders);}updateHeaders(keySystem.getRequestHeadersFromMessage(message));// Overwrite withCredentials property from protData if present
if(protData&&typeof protData.withCredentials=='boolean'){withCredentials=protData.withCredentials;}var reportError=function reportError(xhr,eventData,keySystemString,messageType){var errorMsg=xhr.response?licenseServerData.getErrorResponse(xhr.response,keySystemString,messageType):'NONE';sendLicenseRequestCompleteEvent(eventData,new _DashJSError2.default(_ProtectionErrors2.default.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,_ProtectionErrors2.default.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE+keySystemString+' update, XHR complete. status is "'+xhr.statusText+'" ('+xhr.status+'), readyState is '+xhr.readyState+'.  Response is '+errorMsg));};var onLoad=function onLoad(xhr){if(!protectionModel){return;}if(xhr.status===200){var licenseMessage=licenseServerData.getLicenseMessage(xhr.response,keySystemString,messageType);if(licenseMessage!==null){sendLicenseRequestCompleteEvent(eventData);protectionModel.updateKeySession(sessionToken,licenseMessage);}else{reportError(xhr,eventData,keySystemString,messageType);}}else{reportError(xhr,eventData,keySystemString,messageType);}};var onAbort=function onAbort(xhr){sendLicenseRequestCompleteEvent(eventData,new _DashJSError2.default(_ProtectionErrors2.default.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,_ProtectionErrors2.default.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE+keySystemString+' update, XHR aborted. status is "'+xhr.statusText+'" ('+xhr.status+'), readyState is '+xhr.readyState));};var onError=function onError(xhr){sendLicenseRequestCompleteEvent(eventData,new _DashJSError2.default(_ProtectionErrors2.default.MEDIA_KEY_MESSAGE_LICENSER_ERROR_CODE,_ProtectionErrors2.default.MEDIA_KEY_MESSAGE_LICENSER_ERROR_MESSAGE+keySystemString+' update, XHR error. status is "'+xhr.statusText+'" ('+xhr.status+'), readyState is '+xhr.readyState));};//const reqPayload = keySystem.getLicenseRequestFromMessage(message);
var reqPayload=keySystem.getLicenseRequestFromMessage(message);var reqMethod=licenseServerData.getHTTPMethod(messageType);var responseType=licenseServerData.getResponseType(keySystemString,messageType);var timeout=protData&&!isNaN(protData.httpTimeout)?protData.httpTimeout:LICENSE_SERVER_REQUEST_DEFAULT_TIMEOUT;var sessionId=sessionToken.getSessionID()||null;doLicenseRequest(url,reqHeaders,reqMethod,responseType,withCredentials,reqPayload,LICENSE_SERVER_REQUEST_RETRIES,timeout,onLoad,onAbort,onError,sessionId);}// Implement license requests with a retry mechanism to avoid temporary network issues to affect playback experience
function doLicenseRequest(url,headers,method,responseType,withCredentials,payload,retriesCount,timeout,onLoad,onAbort,onError,sessionId){var xhr=new XMLHttpRequest();xhr.open(method,url,true);xhr.responseType=responseType;xhr.withCredentials=withCredentials;if(timeout>0){xhr.timeout=timeout;}for(var key in headers){xhr.setRequestHeader(key,headers[key]);}var retryRequest=function retryRequest(){// fail silently and retry
retriesCount--;setTimeout(function(){doLicenseRequest(url,headers,method,responseType,withCredentials,payload,retriesCount,timeout,onLoad,onAbort,onError,sessionId);},LICENSE_SERVER_REQUEST_RETRY_INTERVAL);};xhr.onload=function(){if(this.status===200||retriesCount<=0){onLoad(this);}else{logger.warn('License request failed ('+this.status+'). Retrying it... Pending retries: '+retriesCount);retryRequest();}};xhr.ontimeout=xhr.onerror=function(){if(retriesCount<=0){onError(this);}else{logger.warn('License request network request failed . Retrying it... Pending retries: '+retriesCount);retryRequest();}};xhr.onabort=function(){onAbort(this);};eventBus.trigger(events.LICENSE_REQUEST_SENDING,{url:url,headers:headers,payload:payload,sessionId:sessionId});xhr.send(payload);}function onNeedKey(event,retry){logger.debug('DRM: onNeedKey');// Ignore non-cenc initData
if(event.key.initDataType!=='cenc'){logger.warn('DRM:  Only \'cenc\' initData is supported!  Ignoring initData of type: '+event.key.initDataType);return;}if(mediaInfoArr.length===0){logger.warn('DRM: onNeedKey called before initializeForMedia, wait until initialized');retry=typeof retry==='undefined'?1:retry+1;if(retry<NEEDKEY_BEFORE_INITIALIZE_RETRIES){needkeyRetries.push(setTimeout(function(){onNeedKey(event,retry);},NEEDKEY_BEFORE_INITIALIZE_TIMEOUT));return;}}// Some browsers return initData as Uint8Array (IE), some as ArrayBuffer (Chrome).
// Convert to ArrayBuffer
var abInitData=event.key.initData;if(ArrayBuffer.isView(abInitData)){abInitData=abInitData.buffer;}// If key system has already been selected and initData already seen, then do nothing
if(keySystem){var initDataForKS=_CommonEncryption2.default.getPSSHForKeySystem(keySystem,abInitData);if(initDataForKS){// Check for duplicate initData
var currentInitData=protectionModel.getAllInitData();for(var i=0;i<currentInitData.length;i++){if(protectionKeyController.initDataEquals(initDataForKS,currentInitData[i])){logger.warn('DRM: Ignoring initData because we have already seen it!');return;}}}}logger.debug('DRM: initData:',String.fromCharCode.apply(null,new Uint8Array(abInitData)));var supportedKS=protectionKeyController.getSupportedKeySystems(abInitData,protDataSet);if(supportedKS.length===0){logger.debug('DRM: Received needkey event with initData, but we don\'t support any of the key systems!');return;}selectKeySystem(supportedKS,false);}function getKeySystems(){return protectionKeyController?protectionKeyController.getKeySystems():[];}function setKeySystems(keySystems){if(protectionKeyController){protectionKeyController.setKeySystems(keySystems);}}instance={initializeForMedia:initializeForMedia,createKeySession:createKeySession,loadKeySession:loadKeySession,removeKeySession:removeKeySession,closeKeySession:closeKeySession,setServerCertificate:setServerCertificate,setMediaElement:setMediaElement,setSessionType:setSessionType,setRobustnessLevel:setRobustnessLevel,setProtectionData:setProtectionData,getSupportedKeySystemsFromContentProtection:getSupportedKeySystemsFromContentProtection,getKeySystems:getKeySystems,setKeySystems:setKeySystems,stop:stop,reset:reset};setup();return instance;}ProtectionController.__dashjs_factory_name='ProtectionController';exports.default=dashjs.FactoryMaker.getClassFactory(ProtectionController);/* jshint ignore:line */


},{"../CommonEncryption":"../node_modules/dashjs/build/es5/src/streaming/protection/CommonEncryption.js","../vo/MediaCapability":"../node_modules/dashjs/build/es5/src/streaming/protection/vo/MediaCapability.js","../vo/KeySystemConfiguration":"../node_modules/dashjs/build/es5/src/streaming/protection/vo/KeySystemConfiguration.js","../errors/ProtectionErrors":"../node_modules/dashjs/build/es5/src/streaming/protection/errors/ProtectionErrors.js","../../vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js"}],"../node_modules/dashjs/build/es5/src/streaming/protection/vo/KeyPair.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @classdesc Represents a 128-bit keyID and 128-bit encryption key
 * @ignore
 */var KeyPair=/**
     * @param {string} keyID 128-bit key ID, base64 encoded, with no padding
     * @param {string} key 128-bit encryption key, base64 encoded, with no padding
     * @class
     * @ignore
     */function KeyPair(keyID,key){_classCallCheck(this,KeyPair);this.keyID=keyID;this.key=key;};exports.default=KeyPair;


},{}],"../node_modules/dashjs/build/es5/src/streaming/protection/vo/ClearKeyKeySet.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @classdesc A collection of ClearKey encryption keys with an (optional) associated
 *  type
 * @ignore
 */var ClearKeyKeySet=function(){/**
     * @param {Array.<KeyPair>} keyPairs
     * @param {string} type the type of keys in this set.  One of either 'persistent'
     * or 'temporary'.  Can also be null or undefined.
     * @class
     * @ignore
     */function ClearKeyKeySet(keyPairs,type){_classCallCheck(this,ClearKeyKeySet);if(type&&type!=='persistent'&&type!=='temporary')throw new Error('Invalid ClearKey key set type!  Must be one of \'persistent\' or \'temporary\'');this.keyPairs=keyPairs;this.type=type;}/**
     * Convert this key set to its JSON Web Key (JWK) representation
     *
     * @return {ArrayBuffer} JWK object UTF-8 encoded as ArrayBuffer
     */_createClass(ClearKeyKeySet,[{key:'toJWK',value:function toJWK(){var i=void 0;var numKeys=this.keyPairs.length;var jwk={keys:[]};for(i=0;i<numKeys;i++){var key={kty:'oct',alg:'A128KW',kid:this.keyPairs[i].keyID,k:this.keyPairs[i].key};jwk.keys.push(key);}if(this.type){jwk.type=this.type;}var jwkString=JSON.stringify(jwk);var len=jwkString.length;// Convert JSON string to ArrayBuffer
var buf=new ArrayBuffer(len);var bView=new Uint8Array(buf);for(i=0;i<len;i++){bView[i]=jwkString.charCodeAt(i);}return buf;}}]);return ClearKeyKeySet;}();exports.default=ClearKeyKeySet;


},{}],"../node_modules/dashjs/build/es5/src/streaming/constants/ProtectionConstants.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * Protection Constants declaration
 * @class
 * @ignore
 */var ProtectionConstants=function(){_createClass(ProtectionConstants,[{key:'init',value:function init(){this.CLEARKEY_KEYSTEM_STRING='org.w3.clearkey';this.WIDEVINE_KEYSTEM_STRING='com.widevine.alpha';this.PLAYREADY_KEYSTEM_STRING='com.microsoft.playready';}}]);function ProtectionConstants(){_classCallCheck(this,ProtectionConstants);this.init();}return ProtectionConstants;}();var constants=new ProtectionConstants();exports.default=constants;


},{}],"../node_modules/dashjs/build/es5/src/streaming/protection/drm/KeySystemClearKey.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _KeyPair=require('../vo/KeyPair');var _KeyPair2=_interopRequireDefault(_KeyPair);var _ClearKeyKeySet=require('../vo/ClearKeyKeySet');var _ClearKeyKeySet2=_interopRequireDefault(_ClearKeyKeySet);var _CommonEncryption=require('../CommonEncryption');var _CommonEncryption2=_interopRequireDefault(_CommonEncryption);var _ProtectionConstants=require('../../constants/ProtectionConstants');var _ProtectionConstants2=_interopRequireDefault(_ProtectionConstants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var uuid='e2719d58-a985-b3c9-781a-b030af78d30e';var systemString=_ProtectionConstants2.default.CLEARKEY_KEYSTEM_STRING;var schemeIdURI='urn:uuid:'+uuid;function KeySystemClearKey(config){config=config||{};var instance=void 0;var BASE64=config.BASE64;var LICENSE_SERVER_MANIFEST_CONFIGURATIONS={attributes:['Laurl','laurl'],prefixes:['clearkey','dashif']};/**
     * Returns desired clearkeys (as specified in the CDM message) from protection data
     *
     * @param {ProtectionData} protectionData the protection data
     * @param {ArrayBuffer} message the ClearKey CDM message
     * @returns {ClearKeyKeySet} the key set or null if none found
     * @throws {Error} if a keyID specified in the CDM message was not found in the
     * protection data
     * @memberof KeySystemClearKey
     */function getClearKeysFromProtectionData(protectionData,message){var clearkeySet=null;if(protectionData){// ClearKey is the only system that does not require a license server URL, so we
// handle it here when keys are specified in protection data
var jsonMsg=JSON.parse(String.fromCharCode.apply(null,new Uint8Array(message)));var keyPairs=[];for(var i=0;i<jsonMsg.kids.length;i++){var clearkeyID=jsonMsg.kids[i];var clearkey=protectionData.clearkeys&&protectionData.clearkeys.hasOwnProperty(clearkeyID)?protectionData.clearkeys[clearkeyID]:null;if(!clearkey){throw new Error('DRM: ClearKey keyID ('+clearkeyID+') is not known!');}// KeyIDs from CDM are not base64 padded.  Keys may or may not be padded
keyPairs.push(new _KeyPair2.default(clearkeyID,clearkey));}clearkeySet=new _ClearKeyKeySet2.default(keyPairs);}return clearkeySet;}function getInitData(cp,cencContentProtection){try{var initData=_CommonEncryption2.default.parseInitDataFromContentProtection(cp,BASE64);if(!initData&&cencContentProtection){var cencDefaultKid=cencDefaultKidToBase64Representation(cencContentProtection['cenc:default_KID']);var data={kids:[cencDefaultKid]};initData=new TextEncoder().encode(JSON.stringify(data));}return initData;}catch(e){return null;}}function cencDefaultKidToBase64Representation(cencDefaultKid){try{var kid=cencDefaultKid.replace(/-/g,'');kid=btoa(kid.match(/\w{2}/g).map(function(a){return String.fromCharCode(parseInt(a,16));}).join(''));return kid.replace(/=/g,'');}catch(e){return null;}}function getRequestHeadersFromMessage()/*message*/{// Set content type to application/json by default
return{'Content-Type':'application/json'};}function getLicenseRequestFromMessage(message){return JSON.parse(String.fromCharCode.apply(null,new Uint8Array(message)));}function getLicenseServerURLFromInitData()/*initData*/{return null;}function getLicenseServerUrlFromMediaInfo(mediaInfo){try{if(!mediaInfo||mediaInfo.length===0){return null;}var i=0;var licenseServer=null;while(i<mediaInfo.length&&!licenseServer){var info=mediaInfo[i];if(info&&info.contentProtection&&info.contentProtection.length>0){var clearkeyProtData=info.contentProtection.filter(function(cp){return cp.schemeIdUri&&cp.schemeIdUri===schemeIdURI;});if(clearkeyProtData&&clearkeyProtData.length>0){var j=0;while(j<clearkeyProtData.length&&!licenseServer){var ckData=clearkeyProtData[j];var k=0;while(k<LICENSE_SERVER_MANIFEST_CONFIGURATIONS.attributes.length&&!licenseServer){var l=0;var attribute=LICENSE_SERVER_MANIFEST_CONFIGURATIONS.attributes[k];while(l<LICENSE_SERVER_MANIFEST_CONFIGURATIONS.prefixes.length&&!licenseServer){var prefix=LICENSE_SERVER_MANIFEST_CONFIGURATIONS.prefixes[l];if(ckData[attribute]&&ckData[attribute].__prefix&&ckData[attribute].__prefix===prefix&&ckData[attribute].__text){licenseServer=ckData[attribute].__text;}l+=1;}k+=1;}j+=1;}}}i+=1;}return licenseServer;}catch(e){return null;}}function getCDMData(){return null;}function getSessionId()/*cp*/{return null;}instance={uuid:uuid,schemeIdURI:schemeIdURI,systemString:systemString,getInitData:getInitData,getRequestHeadersFromMessage:getRequestHeadersFromMessage,getLicenseRequestFromMessage:getLicenseRequestFromMessage,getLicenseServerURLFromInitData:getLicenseServerURLFromInitData,getCDMData:getCDMData,getSessionId:getSessionId,getLicenseServerUrlFromMediaInfo:getLicenseServerUrlFromMediaInfo,getClearKeysFromProtectionData:getClearKeysFromProtectionData};return instance;}KeySystemClearKey.__dashjs_factory_name='KeySystemClearKey';exports.default=dashjs.FactoryMaker.getSingletonFactory(KeySystemClearKey);/* jshint ignore:line */


},{"../vo/KeyPair":"../node_modules/dashjs/build/es5/src/streaming/protection/vo/KeyPair.js","../vo/ClearKeyKeySet":"../node_modules/dashjs/build/es5/src/streaming/protection/vo/ClearKeyKeySet.js","../CommonEncryption":"../node_modules/dashjs/build/es5/src/streaming/protection/CommonEncryption.js","../../constants/ProtectionConstants":"../node_modules/dashjs/build/es5/src/streaming/constants/ProtectionConstants.js"}],"../node_modules/dashjs/build/es5/src/streaming/protection/drm/KeySystemW3CClearKey.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _KeyPair=require('../vo/KeyPair');var _KeyPair2=_interopRequireDefault(_KeyPair);var _ClearKeyKeySet=require('../vo/ClearKeyKeySet');var _ClearKeyKeySet2=_interopRequireDefault(_ClearKeyKeySet);var _CommonEncryption=require('../CommonEncryption');var _CommonEncryption2=_interopRequireDefault(_CommonEncryption);var _ProtectionConstants=require('../../constants/ProtectionConstants');var _ProtectionConstants2=_interopRequireDefault(_ProtectionConstants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var uuid='1077efec-c0b2-4d02-ace3-3c1e52e2fb4b';var systemString=_ProtectionConstants2.default.CLEARKEY_KEYSTEM_STRING;var schemeIdURI='urn:uuid:'+uuid;function KeySystemW3CClearKey(config){var instance=void 0;var BASE64=config.BASE64;var logger=config.debug.getLogger(instance);/**
     * Returns desired clearkeys (as specified in the CDM message) from protection data
     *
     * @param {ProtectionDataSet} protectionData the protection data
     * @param {ArrayBuffer} message the ClearKey CDM message
     * @returns {ClearKeyKeySet} the key set or null if none found
     * @throws {Error} if a keyID specified in the CDM message was not found in the
     * protection data
     * @memberof KeySystemClearKey
     */function getClearKeysFromProtectionData(protectionData,message){var clearkeySet=null;if(protectionData){// ClearKey is the only system that does not require a license server URL, so we
// handle it here when keys are specified in protection data
var jsonMsg=JSON.parse(String.fromCharCode.apply(null,new Uint8Array(message)));var keyPairs=[];for(var i=0;i<jsonMsg.kids.length;i++){var clearkeyID=jsonMsg.kids[i];var clearkey=protectionData.clearkeys&&protectionData.clearkeys.hasOwnProperty(clearkeyID)?protectionData.clearkeys[clearkeyID]:null;if(!clearkey){throw new Error('DRM: ClearKey keyID ('+clearkeyID+') is not known!');}// KeyIDs from CDM are not base64 padded.  Keys may or may not be padded
keyPairs.push(new _KeyPair2.default(clearkeyID,clearkey));}clearkeySet=new _ClearKeyKeySet2.default(keyPairs);logger.warn('ClearKey schemeIdURI is using W3C Common PSSH systemID (1077efec-c0b2-4d02-ace3-3c1e52e2fb4b) in Content Protection. See DASH-IF IOP v4.1 section 7.6.2.4');}return clearkeySet;}function getInitData(cp){return _CommonEncryption2.default.parseInitDataFromContentProtection(cp,BASE64);}function getRequestHeadersFromMessage()/*message*/{return null;}function getLicenseRequestFromMessage(message){return new Uint8Array(message);}function getLicenseServerURLFromInitData()/*initData*/{return null;}function getCDMData(){return null;}function getSessionId()/*cp*/{return null;}instance={uuid:uuid,schemeIdURI:schemeIdURI,systemString:systemString,getInitData:getInitData,getRequestHeadersFromMessage:getRequestHeadersFromMessage,getLicenseRequestFromMessage:getLicenseRequestFromMessage,getLicenseServerURLFromInitData:getLicenseServerURLFromInitData,getCDMData:getCDMData,getSessionId:getSessionId,getClearKeysFromProtectionData:getClearKeysFromProtectionData};return instance;}KeySystemW3CClearKey.__dashjs_factory_name='KeySystemW3CClearKey';exports.default=dashjs.FactoryMaker.getSingletonFactory(KeySystemW3CClearKey);/* jshint ignore:line */


},{"../vo/KeyPair":"../node_modules/dashjs/build/es5/src/streaming/protection/vo/KeyPair.js","../vo/ClearKeyKeySet":"../node_modules/dashjs/build/es5/src/streaming/protection/vo/ClearKeyKeySet.js","../CommonEncryption":"../node_modules/dashjs/build/es5/src/streaming/protection/CommonEncryption.js","../../constants/ProtectionConstants":"../node_modules/dashjs/build/es5/src/streaming/constants/ProtectionConstants.js"}],"../node_modules/dashjs/build/es5/src/streaming/protection/drm/KeySystemWidevine.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _CommonEncryption=require('../CommonEncryption');var _CommonEncryption2=_interopRequireDefault(_CommonEncryption);var _ProtectionConstants=require('../../constants/ProtectionConstants');var _ProtectionConstants2=_interopRequireDefault(_ProtectionConstants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * Google Widevine DRM
 *
 * @class
 * @implements MediaPlayer.dependencies.protection.KeySystem
 */var uuid='edef8ba9-79d6-4ace-a3c8-27dcd51d21ed';var systemString=_ProtectionConstants2.default.WIDEVINE_KEYSTEM_STRING;var schemeIdURI='urn:uuid:'+uuid;function KeySystemWidevine(config){config=config||{};var instance=void 0;var protData=null;var BASE64=config.BASE64;function init(protectionData){if(protectionData){protData=protectionData;}}function getInitData(cp){return _CommonEncryption2.default.parseInitDataFromContentProtection(cp,BASE64);}function getRequestHeadersFromMessage()/*message*/{return null;}function getLicenseRequestFromMessage(message){return new Uint8Array(message);}function getLicenseServerURLFromInitData()/*initData*/{return null;}function getCDMData(){return null;}function getSessionId(cp){// Get sessionId from protectionData or from manifest
if(protData&&protData.sessionId){return protData.sessionId;}else if(cp&&cp.sessionId){return cp.sessionId;}return null;}instance={uuid:uuid,schemeIdURI:schemeIdURI,systemString:systemString,init:init,getInitData:getInitData,getRequestHeadersFromMessage:getRequestHeadersFromMessage,getLicenseRequestFromMessage:getLicenseRequestFromMessage,getLicenseServerURLFromInitData:getLicenseServerURLFromInitData,getCDMData:getCDMData,getSessionId:getSessionId};return instance;}KeySystemWidevine.__dashjs_factory_name='KeySystemWidevine';exports.default=dashjs.FactoryMaker.getSingletonFactory(KeySystemWidevine);/* jshint ignore:line */


},{"../CommonEncryption":"../node_modules/dashjs/build/es5/src/streaming/protection/CommonEncryption.js","../../constants/ProtectionConstants":"../node_modules/dashjs/build/es5/src/streaming/constants/ProtectionConstants.js"}],"../node_modules/dashjs/build/es5/src/streaming/protection/drm/KeySystemPlayReady.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _CommonEncryption=require('../CommonEncryption');var _CommonEncryption2=_interopRequireDefault(_CommonEncryption);var _ProtectionConstants=require('../../constants/ProtectionConstants');var _ProtectionConstants2=_interopRequireDefault(_ProtectionConstants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * Microsoft PlayReady DRM
 *
 * @class
 * @implements KeySystem
 */var uuid='9a04f079-9840-4286-ab92-e65be0885f95';var systemString=_ProtectionConstants2.default.PLAYREADY_KEYSTEM_STRING;var schemeIdURI='urn:uuid:'+uuid;var PRCDMData='<PlayReadyCDMData type="LicenseAcquisition"><LicenseAcquisition version="1.0" Proactive="false"><CustomData encoding="base64encoded">%CUSTOMDATA%</CustomData></LicenseAcquisition></PlayReadyCDMData>';var protData=void 0;function KeySystemPlayReady(config){config=config||{};var instance=void 0;var messageFormat='utf-16';var BASE64=config.BASE64;function checkConfig(){if(!BASE64||!BASE64.hasOwnProperty('decodeArray')||!BASE64.hasOwnProperty('decodeArray')){throw new Error('Missing config parameter(s)');}}function getRequestHeadersFromMessage(message){var msg=void 0,xmlDoc=void 0;var headers={};var parser=new DOMParser();var dataview=messageFormat==='utf-16'?new Uint16Array(message):new Uint8Array(message);msg=String.fromCharCode.apply(null,dataview);xmlDoc=parser.parseFromString(msg,'application/xml');var headerNameList=xmlDoc.getElementsByTagName('name');var headerValueList=xmlDoc.getElementsByTagName('value');for(var i=0;i<headerNameList.length;i++){headers[headerNameList[i].childNodes[0].nodeValue]=headerValueList[i].childNodes[0].nodeValue;}// Some versions of the PlayReady CDM return 'Content' instead of 'Content-Type'.
// this is NOT w3c conform and license servers may reject the request!
// -> rename it to proper w3c definition!
if(headers.hasOwnProperty('Content')){headers['Content-Type']=headers.Content;delete headers.Content;}// Set Content-Type header by default if not provided in the the CDM message (<PlayReadyKeyMessage/>)
// or if the message contains directly the challenge itself (Ex: LG SmartTVs)
if(!headers.hasOwnProperty('Content-Type')){headers['Content-Type']='text/xml; charset=utf-8';}return headers;}function getLicenseRequestFromMessage(message){var licenseRequest=null;var parser=new DOMParser();var dataview=messageFormat==='utf-16'?new Uint16Array(message):new Uint8Array(message);checkConfig();var msg=String.fromCharCode.apply(null,dataview);var xmlDoc=parser.parseFromString(msg,'application/xml');if(xmlDoc.getElementsByTagName('PlayReadyKeyMessage')[0]){var Challenge=xmlDoc.getElementsByTagName('Challenge')[0].childNodes[0].nodeValue;if(Challenge){licenseRequest=BASE64.decode(Challenge);}}else{// The message from CDM is not a wrapped message as on IE11 and Edge,
// thus it contains direclty the challenge itself
// (note that the xmlDoc at this point may be unreadable since it may have been interpreted as UTF-16)
return message;}return licenseRequest;}function getLicenseServerURLFromInitData(initData){if(initData){var data=new DataView(initData);var numRecords=data.getUint16(4,true);var offset=6;var parser=new DOMParser();for(var i=0;i<numRecords;i++){// Parse the PlayReady Record header
var recordType=data.getUint16(offset,true);offset+=2;var recordLength=data.getUint16(offset,true);offset+=2;if(recordType!==0x0001){offset+=recordLength;continue;}var recordData=initData.slice(offset,offset+recordLength);var record=String.fromCharCode.apply(null,new Uint16Array(recordData));var xmlDoc=parser.parseFromString(record,'application/xml');// First try <LA_URL>
if(xmlDoc.getElementsByTagName('LA_URL')[0]){var laurl=xmlDoc.getElementsByTagName('LA_URL')[0].childNodes[0].nodeValue;if(laurl){return laurl;}}// Optionally, try <LUI_URL>
if(xmlDoc.getElementsByTagName('LUI_URL')[0]){var luiurl=xmlDoc.getElementsByTagName('LUI_URL')[0].childNodes[0].nodeValue;if(luiurl){return luiurl;}}}}return null;}function getInitData(cpData){// * desc@ getInitData
// *   generate PSSH data from PROHeader defined in MPD file
// *   PSSH format:
// *   size (4)
// *   box type(PSSH) (8)
// *   Protection SystemID (16)
// *   protection system data size (4) - length of decoded PROHeader
// *   decoded PROHeader data from MPD file
var PSSHBoxType=new Uint8Array([0x70,0x73,0x73,0x68,0x00,0x00,0x00,0x00]);//'PSSH' 8 bytes
var playreadySystemID=new Uint8Array([0x9a,0x04,0xf0,0x79,0x98,0x40,0x42,0x86,0xab,0x92,0xe6,0x5b,0xe0,0x88,0x5f,0x95]);var byteCursor=0;var uint8arraydecodedPROHeader=null;var PROSize=void 0,PSSHSize=void 0,PSSHBoxBuffer=void 0,PSSHBox=void 0,PSSHData=void 0;checkConfig();if(!cpData){return null;}// Handle common encryption PSSH
if('pssh'in cpData){return _CommonEncryption2.default.parseInitDataFromContentProtection(cpData,BASE64);}// Handle native MS PlayReady ContentProtection elements
if('pro'in cpData){uint8arraydecodedPROHeader=BASE64.decodeArray(cpData.pro.__text);}else if('prheader'in cpData){uint8arraydecodedPROHeader=BASE64.decodeArray(cpData.prheader.__text);}else{return null;}PROSize=uint8arraydecodedPROHeader.length;PSSHSize=0x4+PSSHBoxType.length+playreadySystemID.length+0x4+PROSize;PSSHBoxBuffer=new ArrayBuffer(PSSHSize);PSSHBox=new Uint8Array(PSSHBoxBuffer);PSSHData=new DataView(PSSHBoxBuffer);PSSHData.setUint32(byteCursor,PSSHSize);byteCursor+=0x4;PSSHBox.set(PSSHBoxType,byteCursor);byteCursor+=PSSHBoxType.length;PSSHBox.set(playreadySystemID,byteCursor);byteCursor+=playreadySystemID.length;PSSHData.setUint32(byteCursor,PROSize);byteCursor+=0x4;PSSHBox.set(uint8arraydecodedPROHeader,byteCursor);byteCursor+=PROSize;return PSSHBox.buffer;}/**
     * It seems that some PlayReady implementations return their XML-based CDM
     * messages using UTF16, while others return them as UTF8.  Use this function
     * to modify the message format to expect when parsing CDM messages.
     *
     * @param {string} format the expected message format.  Either "utf-8" or "utf-16".
     * @throws {Error} Specified message format is not one of "utf8" or "utf16"
     */function setPlayReadyMessageFormat(format){if(format!=='utf-8'&&format!=='utf-16'){throw new Error('Specified message format is not one of "utf-8" or "utf-16"');}messageFormat=format;}/**
     * Initialize the Key system with protection data
     * @param {Object} protectionData the protection data
     */function init(protectionData){if(protectionData){protData=protectionData;}}/**
     * Get Playready Custom data
     */function getCDMData(){var customData=void 0,cdmData=void 0,cdmDataBytes=void 0,i=void 0;checkConfig();if(protData&&protData.cdmData){// Convert custom data into multibyte string
customData=[];for(i=0;i<protData.cdmData.length;++i){customData.push(protData.cdmData.charCodeAt(i));customData.push(0);}customData=String.fromCharCode.apply(null,customData);// Encode in Base 64 the custom data string
customData=BASE64.encode(customData);// Initialize CDM data with Base 64 encoded custom data
// (see https://msdn.microsoft.com/en-us/library/dn457361.aspx)
cdmData=PRCDMData.replace('%CUSTOMDATA%',customData);// Convert CDM data into multibyte characters
cdmDataBytes=[];for(i=0;i<cdmData.length;++i){cdmDataBytes.push(cdmData.charCodeAt(i));cdmDataBytes.push(0);}return new Uint8Array(cdmDataBytes).buffer;}return null;}function getSessionId(cp){// Get sessionId from protectionData or from manifest
if(protData&&protData.sessionId){return protData.sessionId;}else if(cp&&cp.sessionId){return cp.sessionId;}return null;}instance={uuid:uuid,schemeIdURI:schemeIdURI,systemString:systemString,getInitData:getInitData,getRequestHeadersFromMessage:getRequestHeadersFromMessage,getLicenseRequestFromMessage:getLicenseRequestFromMessage,getLicenseServerURLFromInitData:getLicenseServerURLFromInitData,getCDMData:getCDMData,getSessionId:getSessionId,setPlayReadyMessageFormat:setPlayReadyMessageFormat,init:init};return instance;}KeySystemPlayReady.__dashjs_factory_name='KeySystemPlayReady';exports.default=dashjs.FactoryMaker.getSingletonFactory(KeySystemPlayReady);/* jshint ignore:line */


},{"../CommonEncryption":"../node_modules/dashjs/build/es5/src/streaming/protection/CommonEncryption.js","../../constants/ProtectionConstants":"../node_modules/dashjs/build/es5/src/streaming/constants/ProtectionConstants.js"}],"../node_modules/dashjs/build/es5/src/streaming/protection/servers/DRMToday.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _ProtectionConstants=require('../../constants/ProtectionConstants');var _ProtectionConstants2=_interopRequireDefault(_ProtectionConstants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function DRMToday(config){config=config||{};var BASE64=config.BASE64;var keySystems={};keySystems[_ProtectionConstants2.default.WIDEVINE_KEYSTEM_STRING]={responseType:'json',getLicenseMessage:function getLicenseMessage(response){return BASE64.decodeArray(response.license);},getErrorResponse:function getErrorResponse(response){return response;}};keySystems[_ProtectionConstants2.default.PLAYREADY_KEYSTEM_STRING]={responseType:'arraybuffer',getLicenseMessage:function getLicenseMessage(response){return response;},getErrorResponse:function getErrorResponse(response){return String.fromCharCode.apply(null,new Uint8Array(response));}};var instance=void 0;function checkConfig(){if(!BASE64||!BASE64.hasOwnProperty('decodeArray')){throw new Error('Missing config parameter(s)');}}function getServerURLFromMessage(url/*, message, messageType*/){return url;}function getHTTPMethod()/*messageType*/{return'POST';}function getResponseType(keySystemStr/*, messageType*/){return keySystems[keySystemStr].responseType;}function getLicenseMessage(serverResponse,keySystemStr/*, messageType*/){checkConfig();return keySystems[keySystemStr].getLicenseMessage(serverResponse);}function getErrorResponse(serverResponse,keySystemStr/*, messageType*/){return keySystems[keySystemStr].getErrorResponse(serverResponse);}instance={getServerURLFromMessage:getServerURLFromMessage,getHTTPMethod:getHTTPMethod,getResponseType:getResponseType,getLicenseMessage:getLicenseMessage,getErrorResponse:getErrorResponse};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * CastLabs DRMToday License Server implementation
 *
 * @implements LicenseServer
 * @class
 */DRMToday.__dashjs_factory_name='DRMToday';exports.default=dashjs.FactoryMaker.getSingletonFactory(DRMToday);/* jshint ignore:line */


},{"../../constants/ProtectionConstants":"../node_modules/dashjs/build/es5/src/streaming/constants/ProtectionConstants.js"}],"../node_modules/dashjs/build/es5/src/streaming/protection/servers/PlayReady.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//* global escape: true *//**
 * Microsoft PlayReady Test License Server
 *
 * For testing content that uses the PlayReady test server at
 *
 * @implements LicenseServer
 * @class
 * @ignore
 */function PlayReady(){var instance=void 0;var soap='http://schemas.xmlsoap.org/soap/envelope/';function uintToString(arrayBuffer){var encodedString=String.fromCharCode.apply(null,new Uint8Array(arrayBuffer));var decodedString=decodeURIComponent(escape(encodedString));return decodedString;}function parseServerResponse(serverResponse){if(window.DOMParser){var stringResponse=uintToString(serverResponse);var parser=new window.DOMParser();var xmlDoc=parser.parseFromString(stringResponse,'text/xml');var envelope=xmlDoc?xmlDoc.getElementsByTagNameNS(soap,'Envelope')[0]:null;var body=envelope?envelope.getElementsByTagNameNS(soap,'Body')[0]:null;var fault=body?body.getElementsByTagNameNS(soap,'Fault')[0]:null;if(fault){return null;}}return serverResponse;}function parseErrorResponse(serverResponse){var faultstring='';var statusCode='';var message='';var idStart=-1;var idEnd=-1;if(window.DOMParser){var stringResponse=uintToString(serverResponse);var parser=new window.DOMParser();var xmlDoc=parser.parseFromString(stringResponse,'text/xml');var envelope=xmlDoc?xmlDoc.getElementsByTagNameNS(soap,'Envelope')[0]:null;var body=envelope?envelope.getElementsByTagNameNS(soap,'Body')[0]:null;var fault=body?body.getElementsByTagNameNS(soap,'Fault')[0]:null;var detail=fault?fault.getElementsByTagName('detail')[0]:null;var exception=detail?detail.getElementsByTagName('Exception')[0]:null;var node=null;if(fault===null){return stringResponse;}node=fault.getElementsByTagName('faultstring')[0].firstChild;faultstring=node?node.nodeValue:null;if(exception!==null){node=exception.getElementsByTagName('StatusCode')[0];statusCode=node?node.firstChild.nodeValue:null;node=exception.getElementsByTagName('Message')[0];message=node?node.firstChild.nodeValue:null;idStart=message?message.lastIndexOf('[')+1:-1;idEnd=message?message.indexOf(']'):-1;message=message?message.substring(idStart,idEnd):'';}}var errorString='code: '+statusCode+', name: '+faultstring;if(message){errorString+=', message: '+message;}return errorString;}function getServerURLFromMessage(url/*, message, messageType*/){return url;}function getHTTPMethod()/*messageType*/{return'POST';}function getResponseType()/*keySystemStr, messageType*/{return'arraybuffer';}function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/){return parseServerResponse.call(this,serverResponse);}function getErrorResponse(serverResponse/*, keySystemStr, messageType*/){return parseErrorResponse.call(this,serverResponse);}instance={getServerURLFromMessage:getServerURLFromMessage,getHTTPMethod:getHTTPMethod,getResponseType:getResponseType,getLicenseMessage:getLicenseMessage,getErrorResponse:getErrorResponse};return instance;}PlayReady.__dashjs_factory_name='PlayReady';exports.default=dashjs.FactoryMaker.getSingletonFactory(PlayReady);/* jshint ignore:line */


},{}],"../node_modules/dashjs/build/es5/src/streaming/protection/servers/Widevine.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @ignore
 */function Widevine(){var instance=void 0;function getServerURLFromMessage(url/*, message, messageType*/){return url;}function getHTTPMethod()/*messageType*/{return'POST';}function getResponseType()/*keySystemStr, messageType*/{return'arraybuffer';}function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/){return serverResponse;}function getErrorResponse(serverResponse/*, keySystemStr, messageType*/){return String.fromCharCode.apply(null,new Uint8Array(serverResponse));}instance={getServerURLFromMessage:getServerURLFromMessage,getHTTPMethod:getHTTPMethod,getResponseType:getResponseType,getLicenseMessage:getLicenseMessage,getErrorResponse:getErrorResponse};return instance;}Widevine.__dashjs_factory_name='Widevine';exports.default=dashjs.FactoryMaker.getSingletonFactory(Widevine);/* jshint ignore:line */


},{}],"../node_modules/dashjs/build/es5/src/streaming/protection/servers/ClearKey.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _KeyPair=require('../vo/KeyPair');var _KeyPair2=_interopRequireDefault(_KeyPair);var _ClearKeyKeySet=require('../vo/ClearKeyKeySet');var _ClearKeyKeySet2=_interopRequireDefault(_ClearKeyKeySet);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * CableLabs ClearKey license server implementation
 *
 * For testing purposes and evaluating potential uses for ClearKey, we have developed
 * a dirt-simple API for requesting ClearKey licenses from a remote server.
 *
 * @implements LicenseServer
 * @class
 */function ClearKey(){var instance=void 0;function getServerURLFromMessage(url/* message, messageType*/){return url;}function getHTTPMethod()/*messageType*/{return'POST';}function getResponseType()/*keySystemStr*/{return'json';}function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/){if(!serverResponse.hasOwnProperty('keys')){return null;}var keyPairs=[];for(var i=0;i<serverResponse.keys.length;i++){var keypair=serverResponse.keys[i];var keyid=keypair.kid.replace(/=/g,'');var key=keypair.k.replace(/=/g,'');keyPairs.push(new _KeyPair2.default(keyid,key));}return new _ClearKeyKeySet2.default(keyPairs);}function getErrorResponse(serverResponse/*, keySystemStr, messageType*/){return String.fromCharCode.apply(null,new Uint8Array(serverResponse));}instance={getServerURLFromMessage:getServerURLFromMessage,getHTTPMethod:getHTTPMethod,getResponseType:getResponseType,getLicenseMessage:getLicenseMessage,getErrorResponse:getErrorResponse};return instance;}ClearKey.__dashjs_factory_name='ClearKey';exports.default=dashjs.FactoryMaker.getSingletonFactory(ClearKey);/* jshint ignore:line */


},{"../vo/KeyPair":"../node_modules/dashjs/build/es5/src/streaming/protection/vo/KeyPair.js","../vo/ClearKeyKeySet":"../node_modules/dashjs/build/es5/src/streaming/protection/vo/ClearKeyKeySet.js"}],"../node_modules/dashjs/build/es5/src/streaming/protection/controllers/ProtectionKeyController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _CommonEncryption=require('./../CommonEncryption');var _CommonEncryption2=_interopRequireDefault(_CommonEncryption);var _KeySystemClearKey=require('./../drm/KeySystemClearKey');var _KeySystemClearKey2=_interopRequireDefault(_KeySystemClearKey);var _KeySystemW3CClearKey=require('./../drm/KeySystemW3CClearKey');var _KeySystemW3CClearKey2=_interopRequireDefault(_KeySystemW3CClearKey);var _KeySystemWidevine=require('./../drm/KeySystemWidevine');var _KeySystemWidevine2=_interopRequireDefault(_KeySystemWidevine);var _KeySystemPlayReady=require('./../drm/KeySystemPlayReady');var _KeySystemPlayReady2=_interopRequireDefault(_KeySystemPlayReady);var _DRMToday=require('./../servers/DRMToday');var _DRMToday2=_interopRequireDefault(_DRMToday);var _PlayReady=require('./../servers/PlayReady');var _PlayReady2=_interopRequireDefault(_PlayReady);var _Widevine=require('./../servers/Widevine');var _Widevine2=_interopRequireDefault(_Widevine);var _ClearKey=require('./../servers/ClearKey');var _ClearKey2=_interopRequireDefault(_ClearKey);var _ProtectionConstants=require('../../constants/ProtectionConstants');var _ProtectionConstants2=_interopRequireDefault(_ProtectionConstants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * @module ProtectionKeyController
 * @ignore
 * @description Media protection key system functionality that can be modified/overridden by applications
 *//**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function ProtectionKeyController(){var context=this.context;var instance=void 0,debug=void 0,logger=void 0,keySystems=void 0,BASE64=void 0,clearkeyKeySystem=void 0,clearkeyW3CKeySystem=void 0;function setConfig(config){if(!config)return;if(config.debug){debug=config.debug;logger=debug.getLogger(instance);}if(config.BASE64){BASE64=config.BASE64;}}function initialize(){keySystems=[];var keySystem=void 0;// PlayReady
keySystem=(0,_KeySystemPlayReady2.default)(context).getInstance({BASE64:BASE64});keySystems.push(keySystem);// Widevine
keySystem=(0,_KeySystemWidevine2.default)(context).getInstance({BASE64:BASE64});keySystems.push(keySystem);// ClearKey
keySystem=(0,_KeySystemClearKey2.default)(context).getInstance({BASE64:BASE64});keySystems.push(keySystem);clearkeyKeySystem=keySystem;// W3C ClearKey
keySystem=(0,_KeySystemW3CClearKey2.default)(context).getInstance({BASE64:BASE64,debug:debug});keySystems.push(keySystem);clearkeyW3CKeySystem=keySystem;}/**
     * Returns a prioritized list of key systems supported
     * by this player (not necessarily those supported by the
     * user agent)
     *
     * @returns {Array.<KeySystem>} a prioritized
     * list of key systems
     * @memberof module:ProtectionKeyController
     * @instance
     */function getKeySystems(){return keySystems;}/**
     * Sets the prioritized list of key systems to be supported
     * by this player.
     *
     * @param {Array.<KeySystem>} newKeySystems the new prioritized
     * list of key systems
     * @memberof module:ProtectionKeyController
     * @instance
     */function setKeySystems(newKeySystems){keySystems=newKeySystems;}/**
     * Returns the key system associated with the given key system string
     * name (i.e. 'org.w3.clearkey')
     *
     * @param {string} systemString the system string
     * @returns {KeySystem|null} the key system
     * or null if no supported key system is associated with the given key
     * system string
     * @memberof module:ProtectionKeyController
     * @instance
     */function getKeySystemBySystemString(systemString){for(var i=0;i<keySystems.length;i++){if(keySystems[i].systemString===systemString){return keySystems[i];}}return null;}/**
     * Determines whether the given key system is ClearKey.  This is
     * necessary because the EME spec defines ClearKey and its method
     * for providing keys to the key session; and this method has changed
     * between the various API versions.  Our EME-specific ProtectionModels
     * must know if the system is ClearKey so that it can format the keys
     * according to the particular spec version.
     *
     * @param {Object} keySystem the key
     * @returns {boolean} true if this is the ClearKey key system, false
     * otherwise
     * @memberof module:ProtectionKeyController
     * @instance
     */function isClearKey(keySystem){return keySystem===clearkeyKeySystem||keySystem===clearkeyW3CKeySystem;}/**
     * Check equality of initData array buffers.
     *
     * @param {ArrayBuffer} initData1 - first initData
     * @param {ArrayBuffer} initData2 - second initData
     * @returns {boolean} true if the initData arrays are equal in size and
     * contents, false otherwise
     * @memberof module:ProtectionKeyController
     * @instance
     */function initDataEquals(initData1,initData2){if(initData1.byteLength===initData2.byteLength){var data1=new Uint8Array(initData1);var data2=new Uint8Array(initData2);for(var j=0;j<data1.length;j++){if(data1[j]!==data2[j]){return false;}}return true;}return false;}/**
     * Returns a set of supported key systems and CENC initialization data
     * from the given array of ContentProtection elements.  Only
     * key systems that are supported by this player will be returned.
     * Key systems are returned in priority order (highest first).
     *
     * @param {Array.<Object>} cps - array of content protection elements parsed
     * from the manifest
     * @returns {Array.<Object>} array of objects indicating which supported key
     * systems were found.  Empty array is returned if no
     * supported key systems were found
     * @memberof module:ProtectionKeyController
     * @instance
     */function getSupportedKeySystemsFromContentProtection(cps){var cp=void 0,ks=void 0,ksIdx=void 0,cpIdx=void 0;var supportedKS=[];if(cps){var cencContentProtection=_CommonEncryption2.default.findCencContentProtection(cps);for(ksIdx=0;ksIdx<keySystems.length;++ksIdx){ks=keySystems[ksIdx];for(cpIdx=0;cpIdx<cps.length;++cpIdx){cp=cps[cpIdx];if(cp.schemeIdUri.toLowerCase()===ks.schemeIdURI){// Look for DRM-specific ContentProtection
var initData=ks.getInitData(cp,cencContentProtection);supportedKS.push({ks:keySystems[ksIdx],initData:initData,cdmData:ks.getCDMData(),sessionId:ks.getSessionId(cp)});}}}}return supportedKS;}/**
     * Returns key systems supported by this player for the given PSSH
     * initializationData. Only key systems supported by this player
     * that have protection data present will be returned.  Key systems are returned in priority order
     * (highest priority first)
     *
     * @param {ArrayBuffer} initData Concatenated PSSH data for all DRMs
     * supported by the content
     * @param {ProtectionData} protDataSet user specified protection data - license server url etc
     * supported by the content
     * @returns {Array.<Object>} array of objects indicating which supported key
     * systems were found.  Empty array is returned if no
     * supported key systems were found
     * @memberof module:ProtectionKeyController
     * @instance
     */function getSupportedKeySystems(initData,protDataSet){var supportedKS=[];var pssh=_CommonEncryption2.default.parsePSSHList(initData);var ks=void 0,keySystemString=void 0,shouldNotFilterOutKeySystem=void 0;for(var ksIdx=0;ksIdx<keySystems.length;++ksIdx){ks=keySystems[ksIdx];keySystemString=ks.systemString;shouldNotFilterOutKeySystem=protDataSet?keySystemString in protDataSet:true;if(ks.uuid in pssh&&shouldNotFilterOutKeySystem){supportedKS.push({ks:ks,initData:pssh[ks.uuid],cdmData:ks.getCDMData(),sessionId:ks.getSessionId()});}}return supportedKS;}/**
     * Returns the license server implementation data that should be used for this request.
     *
     * @param {KeySystem} keySystem the key system
     * associated with this license request
     * @param {ProtectionData} protData protection data to use for the
     * request
     * @param {string} [messageType="license-request"] the message type associated with this
     * request.  Supported message types can be found
     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.
     * @returns {LicenseServer|null} the license server
     * implementation that should be used for this request or null if the player should not
     * pass messages of the given type to a license server
     * @memberof module:ProtectionKeyController
     * @instance
     *
     */function getLicenseServer(keySystem,protData,messageType){// Our default server implementations do not do anything with "license-release" or
// "individualization-request" messages, so we just send a success event
if(messageType==='license-release'||messageType==='individualization-request'){return null;}var licenseServerData=null;if(protData&&protData.hasOwnProperty('drmtoday')){licenseServerData=(0,_DRMToday2.default)(context).getInstance({BASE64:BASE64});}else if(keySystem.systemString===_ProtectionConstants2.default.WIDEVINE_KEYSTEM_STRING){licenseServerData=(0,_Widevine2.default)(context).getInstance();}else if(keySystem.systemString===_ProtectionConstants2.default.PLAYREADY_KEYSTEM_STRING){licenseServerData=(0,_PlayReady2.default)(context).getInstance();}else if(keySystem.systemString===_ProtectionConstants2.default.CLEARKEY_KEYSTEM_STRING){licenseServerData=(0,_ClearKey2.default)(context).getInstance();}return licenseServerData;}/**
     * Allows application-specific retrieval of ClearKey keys.
     *
     * @param {KeySystem} clearkeyKeySystem They exact ClearKey System to be used
     * @param {ProtectionData} protData protection data to use for the
     * request
     * @param {ArrayBuffer} message the key message from the CDM
     * @return {ClearKeyKeySet|null} the clear keys associated with
     * the request or null if no keys can be returned by this function
     * @memberof module:ProtectionKeyController
     * @instance
     */function processClearKeyLicenseRequest(clearkeyKeySystem,protData,message){try{return clearkeyKeySystem.getClearKeysFromProtectionData(protData,message);}catch(error){logger.error('Failed to retrieve clearkeys from ProtectionData');return null;}}function setProtectionData(protectionDataSet){var getProtectionData=function getProtectionData(keySystemString){var protData=null;if(protectionDataSet){protData=keySystemString in protectionDataSet?protectionDataSet[keySystemString]:null;}return protData;};for(var i=0;i<keySystems.length;i++){var keySystem=keySystems[i];if(keySystem.hasOwnProperty('init')){keySystem.init(getProtectionData(keySystem.systemString));}}}instance={initialize:initialize,setProtectionData:setProtectionData,isClearKey:isClearKey,initDataEquals:initDataEquals,getKeySystems:getKeySystems,setKeySystems:setKeySystems,getKeySystemBySystemString:getKeySystemBySystemString,getSupportedKeySystemsFromContentProtection:getSupportedKeySystemsFromContentProtection,getSupportedKeySystems:getSupportedKeySystems,getLicenseServer:getLicenseServer,processClearKeyLicenseRequest:processClearKeyLicenseRequest,setConfig:setConfig};return instance;}ProtectionKeyController.__dashjs_factory_name='ProtectionKeyController';exports.default=dashjs.FactoryMaker.getSingletonFactory(ProtectionKeyController);/* jshint ignore:line */


},{"./../CommonEncryption":"../node_modules/dashjs/build/es5/src/streaming/protection/CommonEncryption.js","./../drm/KeySystemClearKey":"../node_modules/dashjs/build/es5/src/streaming/protection/drm/KeySystemClearKey.js","./../drm/KeySystemW3CClearKey":"../node_modules/dashjs/build/es5/src/streaming/protection/drm/KeySystemW3CClearKey.js","./../drm/KeySystemWidevine":"../node_modules/dashjs/build/es5/src/streaming/protection/drm/KeySystemWidevine.js","./../drm/KeySystemPlayReady":"../node_modules/dashjs/build/es5/src/streaming/protection/drm/KeySystemPlayReady.js","./../servers/DRMToday":"../node_modules/dashjs/build/es5/src/streaming/protection/servers/DRMToday.js","./../servers/PlayReady":"../node_modules/dashjs/build/es5/src/streaming/protection/servers/PlayReady.js","./../servers/Widevine":"../node_modules/dashjs/build/es5/src/streaming/protection/servers/Widevine.js","./../servers/ClearKey":"../node_modules/dashjs/build/es5/src/streaming/protection/servers/ClearKey.js","../../constants/ProtectionConstants":"../node_modules/dashjs/build/es5/src/streaming/constants/ProtectionConstants.js"}],"../node_modules/dashjs/build/es5/src/streaming/protection/ProtectionEvents.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _EventsBase2=require('../../core/events/EventsBase');var _EventsBase3=_interopRequireDefault(_EventsBase2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
  */var ProtectionEvents=function(_EventsBase){_inherits(ProtectionEvents,_EventsBase);/**
     * @description Public facing external events to be used when including protection package.
     * All public events will be aggregated into the MediaPlayerEvents Class and can be accessed
     * via MediaPlayer.events.  public_ is the prefix that we use to move event names to MediaPlayerEvents.
     */function ProtectionEvents(){_classCallCheck(this,ProtectionEvents);/**
         * Event ID for events delivered when the protection set receives
         * a key message from the CDM
         *
         * @ignore
         */var _this=_possibleConstructorReturn(this,(ProtectionEvents.__proto__||Object.getPrototypeOf(ProtectionEvents)).call(this));_this.INTERNAL_KEY_MESSAGE='internalKeyMessage';/**
         * Event ID for events delivered when a key system selection procedure
         * completes
         * @ignore
         */_this.INTERNAL_KEY_SYSTEM_SELECTED='internalKeySystemSelected';/**
         * Event ID for events delivered when the status of one decryption keys has changed
         * @ignore
         */_this.INTERNAL_KEY_STATUS_CHANGED='internalkeyStatusChanged';/**
         * Event ID for events delivered when a new key has been added
         *
         * @constant
         * @deprecated The latest versions of the EME specification no longer
         * use this event.  {@MediaPlayer.models.protectionModel.eventList.KEY_STATUSES_CHANGED}
         * is preferred.
         * @event ProtectionEvents#KEY_ADDED
         */_this.KEY_ADDED='public_keyAdded';/**
         * Event ID for events delivered when an error is encountered by the CDM
         * while processing a license server response message
         * @event ProtectionEvents#KEY_ERROR
         */_this.KEY_ERROR='public_keyError';/**
         * Event ID for events delivered when the protection set receives
         * a key message from the CDM
         * @event ProtectionEvents#KEY_MESSAGE
         */_this.KEY_MESSAGE='public_keyMessage';/**
         * Event ID for events delivered when a key session close
         * process has completed
         * @event ProtectionEvents#KEY_SESSION_CLOSED
         */_this.KEY_SESSION_CLOSED='public_keySessionClosed';/**
         * Event ID for events delivered when a new key sessions creation
         * process has completed
         * @event ProtectionEvents#KEY_SESSION_CREATED
         */_this.KEY_SESSION_CREATED='public_keySessionCreated';/**
         * Event ID for events delivered when a key session removal
         * process has completed
         * @event ProtectionEvents#KEY_SESSION_REMOVED
         */_this.KEY_SESSION_REMOVED='public_keySessionRemoved';/**
         * Event ID for events delivered when the status of one or more
         * decryption keys has changed
         * @event ProtectionEvents#KEY_STATUSES_CHANGED
         */_this.KEY_STATUSES_CHANGED='public_keyStatusesChanged';/**
         * Event ID for events delivered when a key system access procedure
         * has completed
         * @ignore
         */_this.KEY_SYSTEM_ACCESS_COMPLETE='public_keySystemAccessComplete';/**
         * Event ID for events delivered when a key system selection procedure
         * completes
         * @event ProtectionEvents#KEY_SYSTEM_SELECTED
         */_this.KEY_SYSTEM_SELECTED='public_keySystemSelected';/**
         * Event ID for events delivered when a license request procedure
         * has completed
         * @event ProtectionEvents#LICENSE_REQUEST_COMPLETE
         */_this.LICENSE_REQUEST_COMPLETE='public_licenseRequestComplete';/**
         * Sending a license rquest
         * @event ProtectionEvents#LICENSE_REQUEST_SENDING
         */_this.LICENSE_REQUEST_SENDING='public_licenseRequestSending';/**
         * Event ID for needkey/encrypted events
         * @ignore
         */_this.NEED_KEY='needkey';/**
         * Event ID for events delivered when the Protection system is detected and created.
         * @event ProtectionEvents#PROTECTION_CREATED
         */_this.PROTECTION_CREATED='public_protectioncreated';/**
         * Event ID for events delivered when the Protection system is destroyed.
         * @event ProtectionEvents#PROTECTION_DESTROYED
         */_this.PROTECTION_DESTROYED='public_protectiondestroyed';/**
         * Event ID for events delivered when a new server certificate has
         * been delivered to the CDM
         * @ignore
         */_this.SERVER_CERTIFICATE_UPDATED='serverCertificateUpdated';/**
         * Event ID for events delivered when the process of shutting down
         * a protection set has completed
         * @ignore
         */_this.TEARDOWN_COMPLETE='protectionTeardownComplete';/**
         * Event ID for events delivered when a HTMLMediaElement has been
         * associated with the protection set
         * @ignore
         */_this.VIDEO_ELEMENT_SELECTED='videoElementSelected';return _this;}return ProtectionEvents;}(_EventsBase3.default);var protectionEvents=new ProtectionEvents();exports.default=protectionEvents;


},{"../../core/events/EventsBase":"../node_modules/dashjs/build/es5/src/core/events/EventsBase.js"}],"../node_modules/dashjs/build/es5/src/streaming/protection/vo/NeedKey.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @classdesc NeedKey
 * @ignore
 */var NeedKey=/**
     * @param {ArrayBuffer} initData the initialization data
     * @param {string} initDataType initialization data type
     * @class
     */function NeedKey(initData,initDataType){_classCallCheck(this,NeedKey);this.initData=initData;this.initDataType=initDataType;};exports.default=NeedKey;


},{}],"../node_modules/dashjs/build/es5/src/streaming/protection/vo/KeyMessage.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @classdesc EME-independent KeyMessage
 * @ignore
 */var KeyMessage=/**
     * @param {SessionToken} sessionToken the session
     * to which the key message is associated
     * @param {ArrayBuffer} message the key message
     * @param {string} defaultURL license acquisition URL provided by the CDM
     * @param {string} messageType Supported message types can be found
     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.
     * @class
     */function KeyMessage(sessionToken,message,defaultURL,messageType){_classCallCheck(this,KeyMessage);this.sessionToken=sessionToken;this.message=message;this.defaultURL=defaultURL;this.messageType=messageType?messageType:'license-request';};exports.default=KeyMessage;


},{}],"../node_modules/dashjs/build/es5/src/streaming/protection/vo/KeySystemAccess.js":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:true});function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @classdesc Creates a new key system access token.  Represents a valid key system for
 * given piece of content and key system requirements.  Used to initialize license
 * acquisition operations.
 * @ignore
 */var KeySystemAccess=/**
     * @param {MediaPlayer.dependencies.protection.KeySystem} keySystem the key system
     * @param {KeySystemConfiguration} ksConfiguration the
     * subset of configurations passed to the key system access request that are supported
     * by this user agent
     * @class
     * @ignore
     */function KeySystemAccess(keySystem,ksConfiguration){_classCallCheck(this,KeySystemAccess);this.keySystem=keySystem;this.ksConfiguration=ksConfiguration;};exports.default=KeySystemAccess;


},{}],"../node_modules/dashjs/build/es5/src/streaming/protection/models/ProtectionModel_21Jan2015.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _ProtectionKeyController=require('../controllers/ProtectionKeyController');var _ProtectionKeyController2=_interopRequireDefault(_ProtectionKeyController);var _NeedKey=require('../vo/NeedKey');var _NeedKey2=_interopRequireDefault(_NeedKey);var _ProtectionErrors=require('../errors/ProtectionErrors');var _ProtectionErrors2=_interopRequireDefault(_ProtectionErrors);var _DashJSError=require('../../vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);var _KeyMessage=require('../vo/KeyMessage');var _KeyMessage2=_interopRequireDefault(_KeyMessage);var _KeySystemAccess=require('../vo/KeySystemAccess');var _KeySystemAccess2=_interopRequireDefault(_KeySystemAccess);var _ProtectionConstants=require('../../constants/ProtectionConstants');var _ProtectionConstants2=_interopRequireDefault(_ProtectionConstants);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function ProtectionModel_21Jan2015(config){config=config||{};var context=this.context;var eventBus=config.eventBus;//Need to pass in here so we can use same instance since this is optional module
var events=config.events;var debug=config.debug;var instance=void 0,logger=void 0,keySystem=void 0,videoElement=void 0,mediaKeys=void 0,sessions=void 0,eventHandler=void 0,protectionKeyController=void 0;function setup(){logger=debug.getLogger(instance);keySystem=null;videoElement=null;mediaKeys=null;sessions=[];protectionKeyController=(0,_ProtectionKeyController2.default)(context).getInstance();eventHandler=createEventHandler();}function reset(){var numSessions=sessions.length;var session=void 0;if(numSessions!==0){(function(){// Called when we are done closing a session.  Success or fail
var done=function done(session){removeSession(session);if(sessions.length===0){if(videoElement){videoElement.removeEventListener('encrypted',eventHandler);videoElement.setMediaKeys(null).then(function(){eventBus.trigger(events.TEARDOWN_COMPLETE);});}else{eventBus.trigger(events.TEARDOWN_COMPLETE);}}};for(var i=0;i<numSessions;i++){session=sessions[i];(function(s){// Override closed promise resolver
session.session.closed.then(function(){done(s);});// Close the session and handle errors, otherwise promise
// resolver above will be called
closeKeySessionInternal(session).catch(function(){done(s);});})(session);}})();}else{eventBus.trigger(events.TEARDOWN_COMPLETE);}}function stop(){// Close and remove not usable sessions
var session=void 0;for(var i=0;i<sessions.length;i++){session=sessions[i];if(!session.getUsable()){closeKeySessionInternal(session).catch(function(){removeSession(session);});}}}function getKeySystem(){return keySystem;}function getAllInitData(){var retVal=[];for(var i=0;i<sessions.length;i++){if(sessions[i].initData){retVal.push(sessions[i].initData);}}return retVal;}function requestKeySystemAccess(ksConfigurations){requestKeySystemAccessInternal(ksConfigurations,0);}function selectKeySystem(keySystemAccess){keySystemAccess.mksa.createMediaKeys().then(function(mkeys){keySystem=keySystemAccess.keySystem;mediaKeys=mkeys;if(videoElement){videoElement.setMediaKeys(mediaKeys).then(function(){eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED);});}else{eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED);}}).catch(function(){eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED,{error:'Error selecting keys system ('+keySystemAccess.keySystem.systemString+')! Could not create MediaKeys -- TODO'});});}function setMediaElement(mediaElement){if(videoElement===mediaElement)return;// Replacing the previous element
if(videoElement){videoElement.removeEventListener('encrypted',eventHandler);if(videoElement.setMediaKeys){videoElement.setMediaKeys(null);}}videoElement=mediaElement;// Only if we are not detaching from the existing element
if(videoElement){videoElement.addEventListener('encrypted',eventHandler);if(videoElement.setMediaKeys&&mediaKeys){videoElement.setMediaKeys(mediaKeys);}}}function setServerCertificate(serverCertificate){if(!keySystem||!mediaKeys){throw new Error('Can not set server certificate until you have selected a key system');}mediaKeys.setServerCertificate(serverCertificate).then(function(){logger.info('DRM: License server certificate successfully updated.');eventBus.trigger(events.SERVER_CERTIFICATE_UPDATED);}).catch(function(error){eventBus.trigger(events.SERVER_CERTIFICATE_UPDATED,{error:new _DashJSError2.default(_ProtectionErrors2.default.SERVER_CERTIFICATE_UPDATED_ERROR_CODE,_ProtectionErrors2.default.SERVER_CERTIFICATE_UPDATED_ERROR_MESSAGE+error.name)});});}function createKeySession(initData,protData,sessionType){if(!keySystem||!mediaKeys){throw new Error('Can not create sessions until you have selected a key system');}var session=mediaKeys.createSession(sessionType);var sessionToken=createSessionToken(session,initData,sessionType);var ks=this.getKeySystem();// Generate initial key request.
// keyids type is used for clearkey when keys are provided directly in the protection data and then request to a license server is not needed
var dataType=ks.systemString===_ProtectionConstants2.default.CLEARKEY_KEYSTEM_STRING&&(initData||protData&&protData.clearkeys)?'keyids':'cenc';session.generateRequest(dataType,initData).then(function(){logger.debug('DRM: Session created.  SessionID = '+sessionToken.getSessionID());eventBus.trigger(events.KEY_SESSION_CREATED,{data:sessionToken});}).catch(function(error){// TODO: Better error string
removeSession(sessionToken);eventBus.trigger(events.KEY_SESSION_CREATED,{data:null,error:new _DashJSError2.default(_ProtectionErrors2.default.KEY_SESSION_CREATED_ERROR_CODE,_ProtectionErrors2.default.KEY_SESSION_CREATED_ERROR_MESSAGE+'Error generating key request -- '+error.name)});});}function updateKeySession(sessionToken,message){var session=sessionToken.session;// Send our request to the key session
if(protectionKeyController.isClearKey(keySystem)){message=message.toJWK();}session.update(message).catch(function(error){eventBus.trigger(events.KEY_ERROR,{data:new _DashJSError2.default(_ProtectionErrors2.default.MEDIA_KEYERR_CODE,'Error sending update() message! '+error.name,sessionToken)});});}function loadKeySession(sessionID,initData,sessionType){if(!keySystem||!mediaKeys){throw new Error('Can not load sessions until you have selected a key system');}// Check if session Id is not already loaded or loading
for(var i=0;i<sessions.length;i++){if(sessionID===sessions[i].sessionId){logger.warn('DRM: Ignoring session ID because we have already seen it!');return;}}var session=mediaKeys.createSession(sessionType);var sessionToken=createSessionToken(session,initData,sessionType,sessionID);// Load persisted session data into our newly created session object
session.load(sessionID).then(function(success){if(success){logger.debug('DRM: Session loaded.  SessionID = '+sessionToken.getSessionID());eventBus.trigger(events.KEY_SESSION_CREATED,{data:sessionToken});}else{removeSession(sessionToken);eventBus.trigger(events.KEY_SESSION_CREATED,{data:null,error:new _DashJSError2.default(_ProtectionErrors2.default.KEY_SESSION_CREATED_ERROR_CODE,_ProtectionErrors2.default.KEY_SESSION_CREATED_ERROR_MESSAGE+'Could not load session! Invalid Session ID ('+sessionID+')')});}}).catch(function(error){removeSession(sessionToken);eventBus.trigger(events.KEY_SESSION_CREATED,{data:null,error:new _DashJSError2.default(_ProtectionErrors2.default.KEY_SESSION_CREATED_ERROR_CODE,_ProtectionErrors2.default.KEY_SESSION_CREATED_ERROR_MESSAGE+'Could not load session ('+sessionID+')! '+error.name)});});}function removeKeySession(sessionToken){var session=sessionToken.session;session.remove().then(function(){logger.debug('DRM: Session removed.  SessionID = '+sessionToken.getSessionID());eventBus.trigger(events.KEY_SESSION_REMOVED,{data:sessionToken.getSessionID()});},function(error){eventBus.trigger(events.KEY_SESSION_REMOVED,{data:null,error:'Error removing session ('+sessionToken.getSessionID()+'). '+error.name});});}function closeKeySession(sessionToken){// Send our request to the key session
closeKeySessionInternal(sessionToken).catch(function(error){removeSession(sessionToken);eventBus.trigger(events.KEY_SESSION_CLOSED,{data:null,error:'Error closing session ('+sessionToken.getSessionID()+') '+error.name});});}function requestKeySystemAccessInternal(ksConfigurations,idx){if(navigator.requestMediaKeySystemAccess===undefined||typeof navigator.requestMediaKeySystemAccess!=='function'){eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE,{error:'Insecure origins are not allowed'});return;}(function(i){var keySystem=ksConfigurations[i].ks;var configs=ksConfigurations[i].configs;var systemString=keySystem.systemString;// PATCH to support persistent licenses on Edge browser (see issue #2658)
if(systemString===_ProtectionConstants2.default.PLAYREADY_KEYSTEM_STRING&&configs[0].persistentState==='required'){systemString+='.recommendation';}navigator.requestMediaKeySystemAccess(systemString,configs).then(function(mediaKeySystemAccess){// Chrome 40 does not currently implement MediaKeySystemAccess.getConfiguration()
var configuration=typeof mediaKeySystemAccess.getConfiguration==='function'?mediaKeySystemAccess.getConfiguration():null;var keySystemAccess=new _KeySystemAccess2.default(keySystem,configuration);keySystemAccess.mksa=mediaKeySystemAccess;eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE,{data:keySystemAccess});}).catch(function(error){if(++i<ksConfigurations.length){requestKeySystemAccessInternal(ksConfigurations,i);}else{eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE,{error:'Key system access denied! '+error.message});}});})(idx);}function closeKeySessionInternal(sessionToken){var session=sessionToken.session;// Remove event listeners
session.removeEventListener('keystatuseschange',sessionToken);session.removeEventListener('message',sessionToken);// Send our request to the key session
return session.close();}// This is our main event handler for all desired HTMLMediaElement events
// related to EME.  These events are translated into our API-independent
// versions of the same events
function createEventHandler(){return{handleEvent:function handleEvent(event){switch(event.type){case'encrypted':if(event.initData){var initData=ArrayBuffer.isView(event.initData)?event.initData.buffer:event.initData;eventBus.trigger(events.NEED_KEY,{key:new _NeedKey2.default(initData,event.initDataType)});}break;}}};}function removeSession(token){// Remove from our session list
for(var i=0;i<sessions.length;i++){if(sessions[i]===token){sessions.splice(i,1);break;}}}function parseKeyStatus(args){// Edge and Chrome implement different version of keystatues, param are not on same order
var status=void 0,keyId=void 0;if(args&&args.length>0){if(args[0]){if(typeof args[0]==='string'){status=args[0];}else{keyId=args[0];}}if(args[1]){if(typeof args[1]==='string'){status=args[1];}else{keyId=args[1];}}}return{status:status,keyId:keyId};}// Function to create our session token objects which manage the EME
// MediaKeySession and session-specific event handler
function createSessionToken(session,initData,sessionType,sessionID){var token={// Implements SessionToken
session:session,initData:initData,sessionId:sessionID,// This is our main event handler for all desired MediaKeySession events
// These events are translated into our API-independent versions of the
// same events
handleEvent:function handleEvent(event){switch(event.type){case'keystatuseschange':eventBus.trigger(events.KEY_STATUSES_CHANGED,{data:this});event.target.keyStatuses.forEach(function(){var keyStatus=parseKeyStatus(arguments);switch(keyStatus.status){case'expired':eventBus.trigger(events.INTERNAL_KEY_STATUS_CHANGED,{error:new _DashJSError2.default(_ProtectionErrors2.default.KEY_STATUS_CHANGED_EXPIRED_ERROR_CODE,_ProtectionErrors2.default.KEY_STATUS_CHANGED_EXPIRED_ERROR_MESSAGE)});break;default:eventBus.trigger(events.INTERNAL_KEY_STATUS_CHANGED,keyStatus);break;}});break;case'message':var message=ArrayBuffer.isView(event.message)?event.message.buffer:event.message;eventBus.trigger(events.INTERNAL_KEY_MESSAGE,{data:new _KeyMessage2.default(this,message,undefined,event.messageType)});break;}},getSessionID:function getSessionID(){return session.sessionId;},getExpirationTime:function getExpirationTime(){return session.expiration;},getKeyStatuses:function getKeyStatuses(){return session.keyStatuses;},getUsable:function getUsable(){var usable=false;session.keyStatuses.forEach(function(){var keyStatus=parseKeyStatus(arguments);if(keyStatus.status==='usable'){usable=true;}});return usable;},getSessionType:function getSessionType(){return sessionType;}};// Add all event listeners
session.addEventListener('keystatuseschange',token);session.addEventListener('message',token);// Register callback for session closed Promise
session.closed.then(function(){removeSession(token);logger.debug('DRM: Session closed.  SessionID = '+token.getSessionID());eventBus.trigger(events.KEY_SESSION_CLOSED,{data:token.getSessionID()});});// Add to our session list
sessions.push(token);return token;}instance={getAllInitData:getAllInitData,requestKeySystemAccess:requestKeySystemAccess,getKeySystem:getKeySystem,selectKeySystem:selectKeySystem,setMediaElement:setMediaElement,setServerCertificate:setServerCertificate,createKeySession:createKeySession,updateKeySession:updateKeySession,loadKeySession:loadKeySession,removeKeySession:removeKeySession,closeKeySession:closeKeySession,stop:stop,reset:reset};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * Most recent EME implementation
 *
 * Implemented by Google Chrome v36+ (Windows, OSX, Linux)
 *
 * @implements ProtectionModel
 * @class
 */ProtectionModel_21Jan2015.__dashjs_factory_name='ProtectionModel_21Jan2015';exports.default=dashjs.FactoryMaker.getClassFactory(ProtectionModel_21Jan2015);/* jshint ignore:line */


},{"../controllers/ProtectionKeyController":"../node_modules/dashjs/build/es5/src/streaming/protection/controllers/ProtectionKeyController.js","../vo/NeedKey":"../node_modules/dashjs/build/es5/src/streaming/protection/vo/NeedKey.js","../errors/ProtectionErrors":"../node_modules/dashjs/build/es5/src/streaming/protection/errors/ProtectionErrors.js","../../vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js","../vo/KeyMessage":"../node_modules/dashjs/build/es5/src/streaming/protection/vo/KeyMessage.js","../vo/KeySystemAccess":"../node_modules/dashjs/build/es5/src/streaming/protection/vo/KeySystemAccess.js","../../constants/ProtectionConstants":"../node_modules/dashjs/build/es5/src/streaming/constants/ProtectionConstants.js"}],"../node_modules/dashjs/build/es5/src/streaming/protection/models/ProtectionModel_3Feb2014.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _ProtectionKeyController=require('../controllers/ProtectionKeyController');var _ProtectionKeyController2=_interopRequireDefault(_ProtectionKeyController);var _NeedKey=require('../vo/NeedKey');var _NeedKey2=_interopRequireDefault(_NeedKey);var _DashJSError=require('../../vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);var _ProtectionErrors=require('../errors/ProtectionErrors');var _ProtectionErrors2=_interopRequireDefault(_ProtectionErrors);var _KeyMessage=require('../vo/KeyMessage');var _KeyMessage2=_interopRequireDefault(_KeyMessage);var _KeySystemConfiguration=require('../vo/KeySystemConfiguration');var _KeySystemConfiguration2=_interopRequireDefault(_KeySystemConfiguration);var _KeySystemAccess=require('../vo/KeySystemAccess');var _KeySystemAccess2=_interopRequireDefault(_KeySystemAccess);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function ProtectionModel_3Feb2014(config){config=config||{};var context=this.context;var eventBus=config.eventBus;//Need to pass in here so we can use same instance since this is optional module
var events=config.events;var debug=config.debug;var api=config.api;var instance=void 0,logger=void 0,videoElement=void 0,keySystem=void 0,mediaKeys=void 0,keySystemAccess=void 0,sessions=void 0,eventHandler=void 0,protectionKeyController=void 0;function setup(){logger=debug.getLogger(instance);videoElement=null;keySystem=null;mediaKeys=null;keySystemAccess=null;sessions=[];protectionKeyController=(0,_ProtectionKeyController2.default)(context).getInstance();eventHandler=createEventHandler();}function reset(){try{for(var i=0;i<sessions.length;i++){closeKeySession(sessions[i]);}if(videoElement){videoElement.removeEventListener(api.needkey,eventHandler);}eventBus.trigger(events.TEARDOWN_COMPLETE);}catch(error){eventBus.trigger(events.TEARDOWN_COMPLETE,{error:'Error tearing down key sessions and MediaKeys! -- '+error.message});}}function getKeySystem(){return keySystem;}function getAllInitData(){var retVal=[];for(var i=0;i<sessions.length;i++){retVal.push(sessions[i].initData);}return retVal;}function requestKeySystemAccess(ksConfigurations){// Try key systems in order, first one with supported key system configuration
// is used
var found=false;for(var ksIdx=0;ksIdx<ksConfigurations.length;ksIdx++){var systemString=ksConfigurations[ksIdx].ks.systemString;var configs=ksConfigurations[ksIdx].configs;var supportedAudio=null;var supportedVideo=null;// Try key system configs in order, first one with supported audio/video
// is used
for(var configIdx=0;configIdx<configs.length;configIdx++){var audios=configs[configIdx].audioCapabilities;var videos=configs[configIdx].videoCapabilities;// Look for supported audio container/codecs
if(audios&&audios.length!==0){supportedAudio=[];// Indicates that we have a requested audio config
for(var audioIdx=0;audioIdx<audios.length;audioIdx++){if(window[api.MediaKeys].isTypeSupported(systemString,audios[audioIdx].contentType)){supportedAudio.push(audios[audioIdx]);}}}// Look for supported video container/codecs
if(videos&&videos.length!==0){supportedVideo=[];// Indicates that we have a requested video config
for(var videoIdx=0;videoIdx<videos.length;videoIdx++){if(window[api.MediaKeys].isTypeSupported(systemString,videos[videoIdx].contentType)){supportedVideo.push(videos[videoIdx]);}}}// No supported audio or video in this configuration OR we have
// requested audio or video configuration that is not supported
if(!supportedAudio&&!supportedVideo||supportedAudio&&supportedAudio.length===0||supportedVideo&&supportedVideo.length===0){continue;}// This configuration is supported
found=true;var ksConfig=new _KeySystemConfiguration2.default(supportedAudio,supportedVideo);var ks=protectionKeyController.getKeySystemBySystemString(systemString);eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE,{data:new _KeySystemAccess2.default(ks,ksConfig)});break;}}if(!found){eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE,{error:'Key system access denied! -- No valid audio/video content configurations detected!'});}}function selectKeySystem(ksAccess){try{mediaKeys=ksAccess.mediaKeys=new window[api.MediaKeys](ksAccess.keySystem.systemString);keySystem=ksAccess.keySystem;keySystemAccess=ksAccess;if(videoElement){setMediaKeys();}eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED);}catch(error){eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED,{error:'Error selecting keys system ('+keySystem.systemString+')! Could not create MediaKeys -- TODO'});}}function setMediaElement(mediaElement){if(videoElement===mediaElement)return;// Replacing the previous element
if(videoElement){videoElement.removeEventListener(api.needkey,eventHandler);}videoElement=mediaElement;// Only if we are not detaching from the existing element
if(videoElement){videoElement.addEventListener(api.needkey,eventHandler);if(mediaKeys){setMediaKeys();}}}function createKeySession(initData,protData,sessionType,cdmData){if(!keySystem||!mediaKeys||!keySystemAccess){throw new Error('Can not create sessions until you have selected a key system');}// Use the first video capability for the contentType.
// TODO:  Not sure if there is a way to concatenate all capability data into a RFC6386-compatible format
// If player is trying to playback Audio only stream - don't error out.
var capabilities=null;if(keySystemAccess.ksConfiguration.videoCapabilities&&keySystemAccess.ksConfiguration.videoCapabilities.length>0){capabilities=keySystemAccess.ksConfiguration.videoCapabilities[0];}if(capabilities===null&&keySystemAccess.ksConfiguration.audioCapabilities&&keySystemAccess.ksConfiguration.audioCapabilities.length>0){capabilities=keySystemAccess.ksConfiguration.audioCapabilities[0];}if(capabilities===null){throw new Error('Can not create sessions for unknown content types.');}var contentType=capabilities.contentType;var session=mediaKeys.createSession(contentType,new Uint8Array(initData),cdmData?new Uint8Array(cdmData):null);var sessionToken=createSessionToken(session,initData);// Add all event listeners
session.addEventListener(api.error,sessionToken);session.addEventListener(api.message,sessionToken);session.addEventListener(api.ready,sessionToken);session.addEventListener(api.close,sessionToken);// Add to our session list
sessions.push(sessionToken);logger.debug('DRM: Session created.  SessionID = '+sessionToken.getSessionID());eventBus.trigger(events.KEY_SESSION_CREATED,{data:sessionToken});}function updateKeySession(sessionToken,message){var session=sessionToken.session;if(!protectionKeyController.isClearKey(keySystem)){// Send our request to the key session
session.update(new Uint8Array(message));}else{// For clearkey, message is a ClearKeyKeySet
session.update(new Uint8Array(message.toJWK()));}}/**
     * Close the given session and release all associated keys.  Following
     * this call, the sessionToken becomes invalid
     *
     * @param {Object} sessionToken - the session token
     */function closeKeySession(sessionToken){var session=sessionToken.session;// Remove event listeners
session.removeEventListener(api.error,sessionToken);session.removeEventListener(api.message,sessionToken);session.removeEventListener(api.ready,sessionToken);session.removeEventListener(api.close,sessionToken);// Remove from our session list
for(var i=0;i<sessions.length;i++){if(sessions[i]===sessionToken){sessions.splice(i,1);break;}}// Send our request to the key session
session[api.release]();}function setServerCertificate()/*serverCertificate*/{/* Not supported */}function loadKeySession()/*sessionID*/{/* Not supported */}function removeKeySession()/*sessionToken*/{/* Not supported */}function createEventHandler(){return{handleEvent:function handleEvent(event){switch(event.type){case api.needkey:if(event.initData){var initData=ArrayBuffer.isView(event.initData)?event.initData.buffer:event.initData;eventBus.trigger(events.NEED_KEY,{key:new _NeedKey2.default(initData,'cenc')});}break;}}};}// IE11 does not let you set MediaKeys until it has entered a certain
// readyState, so we need this logic to ensure we don't set the keys
// too early
function setMediaKeys(){var boundDoSetKeys=null;var doSetKeys=function doSetKeys(){videoElement.removeEventListener('loadedmetadata',boundDoSetKeys);videoElement[api.setMediaKeys](mediaKeys);eventBus.trigger(events.VIDEO_ELEMENT_SELECTED);};if(videoElement.readyState>=1){doSetKeys();}else{boundDoSetKeys=doSetKeys.bind(this);videoElement.addEventListener('loadedmetadata',boundDoSetKeys);}}// Function to create our session token objects which manage the EME
// MediaKeySession and session-specific event handler
function createSessionToken(keySession,initData){return{// Implements SessionToken
session:keySession,initData:initData,getSessionID:function getSessionID(){return this.session.sessionId;},getExpirationTime:function getExpirationTime(){return NaN;},getSessionType:function getSessionType(){return'temporary';},// This is our main event handler for all desired MediaKeySession events
// These events are translated into our API-independent versions of the
// same events
handleEvent:function handleEvent(event){switch(event.type){case api.error:var errorStr='KeyError';// TODO: Make better string from event
eventBus.trigger(events.KEY_ERROR,{data:new _DashJSError2.default(_ProtectionErrors2.default.MEDIA_KEYERR_CODE,errorStr,this)});break;case api.message:var message=ArrayBuffer.isView(event.message)?event.message.buffer:event.message;eventBus.trigger(events.INTERNAL_KEY_MESSAGE,{data:new _KeyMessage2.default(this,message,event.destinationURL)});break;case api.ready:logger.debug('DRM: Key added.');eventBus.trigger(events.KEY_ADDED);break;case api.close:logger.debug('DRM: Session closed.  SessionID = '+this.getSessionID());eventBus.trigger(events.KEY_SESSION_CLOSED,{data:this.getSessionID()});break;}}};}instance={getAllInitData:getAllInitData,requestKeySystemAccess:requestKeySystemAccess,getKeySystem:getKeySystem,selectKeySystem:selectKeySystem,setMediaElement:setMediaElement,createKeySession:createKeySession,updateKeySession:updateKeySession,closeKeySession:closeKeySession,setServerCertificate:setServerCertificate,loadKeySession:loadKeySession,removeKeySession:removeKeySession,stop:reset,reset:reset};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * Implementation of the EME APIs as of the 3 Feb 2014 state of the specification.
 *
 * Implemented by Internet Explorer 11 (Windows 8.1)
 *
 * @implements ProtectionModel
 * @class
 */ProtectionModel_3Feb2014.__dashjs_factory_name='ProtectionModel_3Feb2014';exports.default=dashjs.FactoryMaker.getClassFactory(ProtectionModel_3Feb2014);/* jshint ignore:line */


},{"../controllers/ProtectionKeyController":"../node_modules/dashjs/build/es5/src/streaming/protection/controllers/ProtectionKeyController.js","../vo/NeedKey":"../node_modules/dashjs/build/es5/src/streaming/protection/vo/NeedKey.js","../../vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js","../errors/ProtectionErrors":"../node_modules/dashjs/build/es5/src/streaming/protection/errors/ProtectionErrors.js","../vo/KeyMessage":"../node_modules/dashjs/build/es5/src/streaming/protection/vo/KeyMessage.js","../vo/KeySystemConfiguration":"../node_modules/dashjs/build/es5/src/streaming/protection/vo/KeySystemConfiguration.js","../vo/KeySystemAccess":"../node_modules/dashjs/build/es5/src/streaming/protection/vo/KeySystemAccess.js"}],"../node_modules/dashjs/build/es5/src/streaming/protection/models/ProtectionModel_01b.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _ProtectionKeyController=require('../controllers/ProtectionKeyController');var _ProtectionKeyController2=_interopRequireDefault(_ProtectionKeyController);var _NeedKey=require('../vo/NeedKey');var _NeedKey2=_interopRequireDefault(_NeedKey);var _DashJSError=require('../../vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);var _KeyMessage=require('../vo/KeyMessage');var _KeyMessage2=_interopRequireDefault(_KeyMessage);var _KeySystemConfiguration=require('../vo/KeySystemConfiguration');var _KeySystemConfiguration2=_interopRequireDefault(_KeySystemConfiguration);var _KeySystemAccess=require('../vo/KeySystemAccess');var _KeySystemAccess2=_interopRequireDefault(_KeySystemAccess);var _ProtectionErrors=require('../errors/ProtectionErrors');var _ProtectionErrors2=_interopRequireDefault(_ProtectionErrors);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function ProtectionModel_01b(config){config=config||{};var context=this.context;var eventBus=config.eventBus;//Need to pass in here so we can use same instance since this is optional module
var events=config.events;var debug=config.debug;var api=config.api;var errHandler=config.errHandler;var instance=void 0,logger=void 0,videoElement=void 0,keySystem=void 0,protectionKeyController=void 0,// With this version of the EME APIs, sessionIDs are not assigned to
// sessions until the first key message is received.  We are assuming
// that in the case of multiple sessions, key messages will be received
// in the order that generateKeyRequest() is called.
// Holding spot for newly-created sessions until we determine whether or
// not the CDM supports sessionIDs
pendingSessions=void 0,// List of sessions that have been initialized.  Only the first position will
// be used in the case that the CDM does not support sessionIDs
sessions=void 0,// Not all CDMs support the notion of sessionIDs.  Without sessionIDs
// there is no way for us to differentiate between sessions, therefore
// we must only allow a single session.  Once we receive the first key
// message we can set this flag to determine if more sessions are allowed
moreSessionsAllowed=void 0,// This is our main event handler for all desired HTMLMediaElement events
// related to EME.  These events are translated into our API-independent
// versions of the same events
eventHandler=void 0;function setup(){logger=debug.getLogger(instance);videoElement=null;keySystem=null;pendingSessions=[];sessions=[];protectionKeyController=(0,_ProtectionKeyController2.default)(context).getInstance();eventHandler=createEventHandler();}function reset(){if(videoElement){removeEventListeners();}for(var i=0;i<sessions.length;i++){closeKeySession(sessions[i]);}eventBus.trigger(events.TEARDOWN_COMPLETE);}function getKeySystem(){return keySystem;}function getAllInitData(){var retVal=[];for(var i=0;i<pendingSessions.length;i++){retVal.push(pendingSessions[i].initData);}for(var _i=0;_i<sessions.length;_i++){retVal.push(sessions[_i].initData);}return retVal;}function requestKeySystemAccess(ksConfigurations){var ve=videoElement;if(!ve){// Must have a video element to do this capability tests
ve=document.createElement('video');}// Try key systems in order, first one with supported key system configuration
// is used
var found=false;for(var ksIdx=0;ksIdx<ksConfigurations.length;ksIdx++){var systemString=ksConfigurations[ksIdx].ks.systemString;var configs=ksConfigurations[ksIdx].configs;var supportedAudio=null;var supportedVideo=null;// Try key system configs in order, first one with supported audio/video
// is used
for(var configIdx=0;configIdx<configs.length;configIdx++){//let audios = configs[configIdx].audioCapabilities;
var videos=configs[configIdx].videoCapabilities;// Look for supported video container/codecs
if(videos&&videos.length!==0){supportedVideo=[];// Indicates that we have a requested video config
for(var videoIdx=0;videoIdx<videos.length;videoIdx++){if(ve.canPlayType(videos[videoIdx].contentType,systemString)!==''){supportedVideo.push(videos[videoIdx]);}}}// No supported audio or video in this configuration OR we have
// requested audio or video configuration that is not supported
if(!supportedAudio&&!supportedVideo||supportedAudio&&supportedAudio.length===0||supportedVideo&&supportedVideo.length===0){continue;}// This configuration is supported
found=true;var ksConfig=new _KeySystemConfiguration2.default(supportedAudio,supportedVideo);var ks=protectionKeyController.getKeySystemBySystemString(systemString);eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE,{data:new _KeySystemAccess2.default(ks,ksConfig)});break;}}if(!found){eventBus.trigger(events.KEY_SYSTEM_ACCESS_COMPLETE,{error:'Key system access denied! -- No valid audio/video content configurations detected!'});}}function selectKeySystem(keySystemAccess){keySystem=keySystemAccess.keySystem;eventBus.trigger(events.INTERNAL_KEY_SYSTEM_SELECTED);}function setMediaElement(mediaElement){if(videoElement===mediaElement){return;}// Replacing the previous element
if(videoElement){removeEventListeners();// Close any open sessions - avoids memory leak on LG webOS 2016/2017 TVs
for(var i=0;i<sessions.length;i++){closeKeySession(sessions[i]);}sessions=[];}videoElement=mediaElement;// Only if we are not detaching from the existing element
if(videoElement){videoElement.addEventListener(api.keyerror,eventHandler);videoElement.addEventListener(api.needkey,eventHandler);videoElement.addEventListener(api.keymessage,eventHandler);videoElement.addEventListener(api.keyadded,eventHandler);eventBus.trigger(events.VIDEO_ELEMENT_SELECTED);}}function createKeySession(initData/*, protData, keySystemType */){if(!keySystem){throw new Error('Can not create sessions until you have selected a key system');}// Determine if creating a new session is allowed
if(moreSessionsAllowed||sessions.length===0){var newSession={// Implements SessionToken
sessionID:null,initData:initData,getSessionID:function getSessionID(){return this.sessionID;},getExpirationTime:function getExpirationTime(){return NaN;},getSessionType:function getSessionType(){return'temporary';}};pendingSessions.push(newSession);// Send our request to the CDM
videoElement[api.generateKeyRequest](keySystem.systemString,new Uint8Array(initData));return newSession;}else{throw new Error('Multiple sessions not allowed!');}}function updateKeySession(sessionToken,message){var sessionID=sessionToken.sessionID;if(!protectionKeyController.isClearKey(keySystem)){// Send our request to the CDM
videoElement[api.addKey](keySystem.systemString,new Uint8Array(message),new Uint8Array(sessionToken.initData),sessionID);}else{// For clearkey, message is a ClearKeyKeySet
for(var i=0;i<message.keyPairs.length;i++){videoElement[api.addKey](keySystem.systemString,message.keyPairs[i].key,message.keyPairs[i].keyID,sessionID);}}}function closeKeySession(sessionToken){// Send our request to the CDM
try{videoElement[api.cancelKeyRequest](keySystem.systemString,sessionToken.sessionID);}catch(error){eventBus.trigger(events.KEY_SESSION_CLOSED,{data:null,error:'Error closing session ('+sessionToken.sessionID+') '+error.message});}}function setServerCertificate()/*serverCertificate*/{/* Not supported */}function loadKeySession()/*sessionID*/{/* Not supported */}function removeKeySession()/*sessionToken*/{/* Not supported */}function createEventHandler(){return{handleEvent:function handleEvent(event){var sessionToken=null;switch(event.type){case api.needkey:var initData=ArrayBuffer.isView(event.initData)?event.initData.buffer:event.initData;eventBus.trigger(events.NEED_KEY,{key:new _NeedKey2.default(initData,'cenc')});break;case api.keyerror:sessionToken=findSessionByID(sessions,event.sessionId);if(!sessionToken){sessionToken=findSessionByID(pendingSessions,event.sessionId);}if(sessionToken){var code=_ProtectionErrors2.default.MEDIA_KEYERR_CODE;var msg='';switch(event.errorCode.code){case 1:code=_ProtectionErrors2.default.MEDIA_KEYERR_UNKNOWN_CODE;msg+='MEDIA_KEYERR_UNKNOWN - '+_ProtectionErrors2.default.MEDIA_KEYERR_UNKNOWN_MESSAGE;break;case 2:code=_ProtectionErrors2.default.MEDIA_KEYERR_CLIENT_CODE;msg+='MEDIA_KEYERR_CLIENT - '+_ProtectionErrors2.default.MEDIA_KEYERR_CLIENT_MESSAGE;break;case 3:code=_ProtectionErrors2.default.MEDIA_KEYERR_SERVICE_CODE;msg+='MEDIA_KEYERR_SERVICE - '+_ProtectionErrors2.default.MEDIA_KEYERR_SERVICE_MESSAGE;break;case 4:code=_ProtectionErrors2.default.MEDIA_KEYERR_OUTPUT_CODE;msg+='MEDIA_KEYERR_OUTPUT - '+_ProtectionErrors2.default.MEDIA_KEYERR_OUTPUT_MESSAGE;break;case 5:code=_ProtectionErrors2.default.MEDIA_KEYERR_HARDWARECHANGE_CODE;msg+='MEDIA_KEYERR_HARDWARECHANGE - '+_ProtectionErrors2.default.MEDIA_KEYERR_HARDWARECHANGE_MESSAGE;break;case 6:code=_ProtectionErrors2.default.MEDIA_KEYERR_DOMAIN_CODE;msg+='MEDIA_KEYERR_DOMAIN - '+_ProtectionErrors2.default.MEDIA_KEYERR_DOMAIN_MESSAGE;break;}msg+='  System Code = '+event.systemCode;// TODO: Build error string based on key error
eventBus.trigger(events.KEY_ERROR,{data:new _DashJSError2.default(code,msg,sessionToken)});}else{logger.error('No session token found for key error');}break;case api.keyadded:sessionToken=findSessionByID(sessions,event.sessionId);if(!sessionToken){sessionToken=findSessionByID(pendingSessions,event.sessionId);}if(sessionToken){logger.debug('DRM: Key added.');eventBus.trigger(events.KEY_ADDED,{data:sessionToken});//TODO not sure anything is using sessionToken? why there?
}else{logger.debug('No session token found for key added');}break;case api.keymessage:// If this CDM does not support session IDs, we will be limited
// to a single session
moreSessionsAllowed=event.sessionId!==null&&event.sessionId!==undefined;// SessionIDs supported
if(moreSessionsAllowed){// Attempt to find an uninitialized token with this sessionID
sessionToken=findSessionByID(sessions,event.sessionId);if(!sessionToken&&pendingSessions.length>0){// This is the first message for our latest session, so set the
// sessionID and add it to our list
sessionToken=pendingSessions.shift();sessions.push(sessionToken);sessionToken.sessionID=event.sessionId;eventBus.trigger(events.KEY_SESSION_CREATED,{data:sessionToken});}}else if(pendingSessions.length>0){// SessionIDs not supported
sessionToken=pendingSessions.shift();sessions.push(sessionToken);if(pendingSessions.length!==0){errHandler.error(new _DashJSError2.default(_ProtectionErrors2.default.MEDIA_KEY_MESSAGE_ERROR_CODE,_ProtectionErrors2.default.MEDIA_KEY_MESSAGE_ERROR_MESSAGE));}}if(sessionToken){var message=ArrayBuffer.isView(event.message)?event.message.buffer:event.message;// For ClearKey, the spec mandates that you pass this message to the
// addKey method, so we always save it to the token since there is no
// way to tell which key system is in use
sessionToken.keyMessage=message;eventBus.trigger(events.INTERNAL_KEY_MESSAGE,{data:new _KeyMessage2.default(sessionToken,message,event.defaultURL)});}else{logger.warn('No session token found for key message');}break;}}};}/**
     * Helper function to retrieve the stored session token based on a given
     * sessionID value
     *
     * @param {Array} sessionArray - the array of sessions to search
     * @param {*} sessionID - the sessionID to search for
     * @returns {*} the session token with the given sessionID
     */function findSessionByID(sessionArray,sessionID){if(!sessionID||!sessionArray){return null;}else{var len=sessionArray.length;for(var i=0;i<len;i++){if(sessionArray[i].sessionID==sessionID){return sessionArray[i];}}return null;}}function removeEventListeners(){videoElement.removeEventListener(api.keyerror,eventHandler);videoElement.removeEventListener(api.needkey,eventHandler);videoElement.removeEventListener(api.keymessage,eventHandler);videoElement.removeEventListener(api.keyadded,eventHandler);}instance={getAllInitData:getAllInitData,requestKeySystemAccess:requestKeySystemAccess,getKeySystem:getKeySystem,selectKeySystem:selectKeySystem,setMediaElement:setMediaElement,createKeySession:createKeySession,updateKeySession:updateKeySession,closeKeySession:closeKeySession,setServerCertificate:setServerCertificate,loadKeySession:loadKeySession,removeKeySession:removeKeySession,stop:reset,reset:reset};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * Initial implementation of EME
 *
 * Implemented by Google Chrome prior to v36
 *
 * @implements ProtectionModel
 * @class
 */ProtectionModel_01b.__dashjs_factory_name='ProtectionModel_01b';exports.default=dashjs.FactoryMaker.getClassFactory(ProtectionModel_01b);/* jshint ignore:line */


},{"../controllers/ProtectionKeyController":"../node_modules/dashjs/build/es5/src/streaming/protection/controllers/ProtectionKeyController.js","../vo/NeedKey":"../node_modules/dashjs/build/es5/src/streaming/protection/vo/NeedKey.js","../../vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js","../vo/KeyMessage":"../node_modules/dashjs/build/es5/src/streaming/protection/vo/KeyMessage.js","../vo/KeySystemConfiguration":"../node_modules/dashjs/build/es5/src/streaming/protection/vo/KeySystemConfiguration.js","../vo/KeySystemAccess":"../node_modules/dashjs/build/es5/src/streaming/protection/vo/KeySystemAccess.js","../errors/ProtectionErrors":"../node_modules/dashjs/build/es5/src/streaming/protection/errors/ProtectionErrors.js"}],"../node_modules/dashjs/build/es5/src/streaming/protection/Protection.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _ProtectionController=require('./controllers/ProtectionController');var _ProtectionController2=_interopRequireDefault(_ProtectionController);var _ProtectionKeyController=require('./controllers/ProtectionKeyController');var _ProtectionKeyController2=_interopRequireDefault(_ProtectionKeyController);var _ProtectionEvents=require('./ProtectionEvents');var _ProtectionEvents2=_interopRequireDefault(_ProtectionEvents);var _ProtectionErrors=require('./errors/ProtectionErrors');var _ProtectionErrors2=_interopRequireDefault(_ProtectionErrors);var _ProtectionModel_21Jan=require('./models/ProtectionModel_21Jan2015');var _ProtectionModel_21Jan2=_interopRequireDefault(_ProtectionModel_21Jan);var _ProtectionModel_3Feb=require('./models/ProtectionModel_3Feb2014');var _ProtectionModel_3Feb2=_interopRequireDefault(_ProtectionModel_3Feb);var _ProtectionModel_01b=require('./models/ProtectionModel_01b');var _ProtectionModel_01b2=_interopRequireDefault(_ProtectionModel_01b);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var APIS_ProtectionModel_01b=[// Un-prefixed as per spec
{// Video Element
generateKeyRequest:'generateKeyRequest',addKey:'addKey',cancelKeyRequest:'cancelKeyRequest',// Events
needkey:'needkey',keyerror:'keyerror',keyadded:'keyadded',keymessage:'keymessage'},// Webkit-prefixed (early Chrome versions and Chrome with EME disabled in chrome://flags)
{// Video Element
generateKeyRequest:'webkitGenerateKeyRequest',addKey:'webkitAddKey',cancelKeyRequest:'webkitCancelKeyRequest',// Events
needkey:'webkitneedkey',keyerror:'webkitkeyerror',keyadded:'webkitkeyadded',keymessage:'webkitkeymessage'}];/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var APIS_ProtectionModel_3Feb2014=[// Un-prefixed as per spec
// Chrome 38-39 (and some earlier versions) with chrome://flags -- Enable Encrypted Media Extensions
{// Video Element
setMediaKeys:'setMediaKeys',// MediaKeys
MediaKeys:'MediaKeys',// MediaKeySession
release:'close',// Events
needkey:'needkey',error:'keyerror',message:'keymessage',ready:'keyadded',close:'keyclose'},// MS-prefixed (IE11, Windows 8.1)
{// Video Element
setMediaKeys:'msSetMediaKeys',// MediaKeys
MediaKeys:'MSMediaKeys',// MediaKeySession
release:'close',// Events
needkey:'msneedkey',error:'mskeyerror',message:'mskeymessage',ready:'mskeyadded',close:'mskeyclose'}];function Protection(){var instance=void 0;var context=this.context;/**
     * Create a ProtectionController and associated ProtectionModel for use with
     * a single piece of content.
     *
     * @param {Object} config
     * @return {ProtectionController} protection controller
     *
     */function createProtectionSystem(config){var controller=null;var protectionKeyController=(0,_ProtectionKeyController2.default)(context).getInstance();protectionKeyController.setConfig({debug:config.debug,BASE64:config.BASE64});protectionKeyController.initialize();var protectionModel=getProtectionModel(config);if(!controller&&protectionModel){//TODO add ability to set external controller if still needed at all?
controller=(0,_ProtectionController2.default)(context).create({protectionModel:protectionModel,protectionKeyController:protectionKeyController,eventBus:config.eventBus,debug:config.debug,events:config.events,BASE64:config.BASE64,constants:config.constants});config.capabilities.setEncryptedMediaSupported(true);}return controller;}function getProtectionModel(config){var debug=config.debug;var logger=debug.getLogger(instance);var eventBus=config.eventBus;var errHandler=config.errHandler;var videoElement=config.videoModel?config.videoModel.getElement():null;if((!videoElement||videoElement.onencrypted!==undefined)&&(!videoElement||videoElement.mediaKeys!==undefined)){logger.info('EME detected on this user agent! (ProtectionModel_21Jan2015)');return(0,_ProtectionModel_21Jan2.default)(context).create({debug:debug,eventBus:eventBus,events:config.events});}else if(getAPI(videoElement,APIS_ProtectionModel_3Feb2014)){logger.info('EME detected on this user agent! (ProtectionModel_3Feb2014)');return(0,_ProtectionModel_3Feb2.default)(context).create({debug:debug,eventBus:eventBus,events:config.events,api:getAPI(videoElement,APIS_ProtectionModel_3Feb2014)});}else if(getAPI(videoElement,APIS_ProtectionModel_01b)){logger.info('EME detected on this user agent! (ProtectionModel_01b)');return(0,_ProtectionModel_01b2.default)(context).create({debug:debug,eventBus:eventBus,errHandler:errHandler,events:config.events,api:getAPI(videoElement,APIS_ProtectionModel_01b)});}else{logger.warn('No supported version of EME detected on this user agent! - Attempts to play encrypted content will fail!');return null;}}function getAPI(videoElement,apis){for(var i=0;i<apis.length;i++){var api=apis[i];// detect if api is supported by browser
// check only first function in api -> should be fine
if(typeof videoElement[api[Object.keys(api)[0]]]!=='function'){continue;}return api;}return null;}instance={createProtectionSystem:createProtectionSystem};return instance;}Protection.__dashjs_factory_name='Protection';var factory=dashjs.FactoryMaker.getClassFactory(Protection);/* jshint ignore:line */factory.events=_ProtectionEvents2.default;factory.errors=_ProtectionErrors2.default;dashjs.FactoryMaker.updateClassFactory(Protection.__dashjs_factory_name,factory);/* jshint ignore:line */exports.default=factory;


},{"./controllers/ProtectionController":"../node_modules/dashjs/build/es5/src/streaming/protection/controllers/ProtectionController.js","./controllers/ProtectionKeyController":"../node_modules/dashjs/build/es5/src/streaming/protection/controllers/ProtectionKeyController.js","./ProtectionEvents":"../node_modules/dashjs/build/es5/src/streaming/protection/ProtectionEvents.js","./errors/ProtectionErrors":"../node_modules/dashjs/build/es5/src/streaming/protection/errors/ProtectionErrors.js","./models/ProtectionModel_21Jan2015":"../node_modules/dashjs/build/es5/src/streaming/protection/models/ProtectionModel_21Jan2015.js","./models/ProtectionModel_3Feb2014":"../node_modules/dashjs/build/es5/src/streaming/protection/models/ProtectionModel_3Feb2014.js","./models/ProtectionModel_01b":"../node_modules/dashjs/build/es5/src/streaming/protection/models/ProtectionModel_01b.js"}],"../node_modules/dashjs/build/es5/src/streaming/MediaPlayerFactory.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _MediaPlayer=require('./MediaPlayer');var _MediaPlayer2=_interopRequireDefault(_MediaPlayer);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function MediaPlayerFactory(){/**
     * mime-type identifier for any source content to be accepted as a dash manifest by the create() method.
     * @type {string}
     */var SUPPORTED_MIME_TYPE='application/dash+xml';var logger=void 0;/**
     *  A new MediaPlayer is instantiated for the supplied videoElement and optional source and context.  If no context is provided,
     *  a default DashContext is used. If no source is provided, the videoElement is interrogated to extract the first source whose
     *  type is application/dash+xml.
     * The autoplay property of the videoElement is preserved. Any preload attribute is ignored. This method should be called after the page onLoad event is dispatched.
     * @param {HTMLMediaElement} video
     * @param {HTMLSourceElement} source
     * @param {Object} context
     * @returns {MediaPlayer|null}
     */function create(video,source,context){if(!video||!/^VIDEO$/i.test(video.nodeName))return null;if(video._dashjs_player)return video._dashjs_player;var player=void 0;var videoID=video.id||video.name||'video element';source=source||[].slice.call(video.querySelectorAll('source')).filter(function(s){return s.type==SUPPORTED_MIME_TYPE;})[0];if(!source&&video.src){source=document.createElement('source');source.src=video.src;}else if(!source&&!video.src){return null;}context=context||{};player=(0,_MediaPlayer2.default)(context).create();player.initialize(video,source.src,video.autoplay);if(!logger){logger=player.getDebug().getLogger();}logger.debug('Converted '+videoID+' to dash.js player and added content: '+source.src);// Store a reference to the player on the video element so it can be gotten at for debugging and so we know its
// already been setup.
video._dashjs_player=player;return player;}/**
     * Searches the provided scope for all instances of the indicated selector. If no scope is provided, document is used. If no selector is
     * specified, [data-dashjs-player] is used. The declarative setup also looks for source elements with the type attribute set to 'application/dash+xml'.
     * It then looks for those video elements which have a source element defined with a type matching 'application/dash+xml'.
     * A new MediaPlayer is instantiated for each matching video element and the appropriate source is assigned.
     * The autoplay property of the video element is preserved. Any preload attribute is ignored. This method should be called after the page onLoad event is dispatched.
     * Returns an array holding all the MediaPlayer instances that were added by this method.
     * @param {string} selector - CSS selector
     * @param {Object} scope
     * @returns {Array} an array of MediaPlayer objects
     */function createAll(selector,scope){var aPlayers=[];selector=selector||'[data-dashjs-player]';scope=scope||document;var videos=scope.querySelectorAll(selector);for(var i=0;i<videos.length;i++){var player=create(videos[i],null);aPlayers.push(player);}var sources=scope.querySelectorAll('source[type="'+SUPPORTED_MIME_TYPE+'"]');for(var _i=0;_i<sources.length;_i++){var video=findVideo(sources[_i]);var _player=create(video,null);aPlayers.push(_player);}return aPlayers;}function findVideo(el){if(/^VIDEO$/i.test(el.nodeName)){return el;}else{return findVideo(el.parentNode);}}return{create:create,createAll:createAll};}var instance=MediaPlayerFactory();var loadInterval=void 0;function loadHandler(){window.removeEventListener('load',loadHandler);instance.createAll();}function loadIntervalHandler(){if(window.dashjs){window.clearInterval(loadInterval);instance.createAll();}}var avoidAutoCreate=typeof window!=='undefined'&&window&&window.dashjs&&window.dashjs.skipAutoCreate;if(!avoidAutoCreate&&typeof window!=='undefined'&&window&&window.addEventListener){if(window.document.readyState==='complete'){if(window.dashjs){instance.createAll();}else{// If loaded asynchronously, window.readyState may be 'complete' even if dashjs hasn't loaded yet
loadInterval=window.setInterval(loadIntervalHandler,500);}}else{window.addEventListener('load',loadHandler);}}exports.default=instance;


},{"./MediaPlayer":"../node_modules/dashjs/build/es5/src/streaming/MediaPlayer.js"}],"../node_modules/dashjs/build/es5/index.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.Debug=exports.MediaPlayerFactory=exports.MetricsReporting=exports.Protection=exports.MediaPlayer=undefined;var _index_mediaplayerOnly=require('./index_mediaplayerOnly');var _MetricsReporting=require('./src/streaming/metrics/MetricsReporting');var _MetricsReporting2=_interopRequireDefault(_MetricsReporting);var _Protection=require('./src/streaming/protection/Protection');var _Protection2=_interopRequireDefault(_Protection);var _MediaPlayerFactory=require('./src/streaming/MediaPlayerFactory');var _MediaPlayerFactory2=_interopRequireDefault(_MediaPlayerFactory);var _Debug=require('./src/core/Debug');var _Debug2=_interopRequireDefault(_Debug);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}dashjs.Protection=_Protection2.default;/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */dashjs.MetricsReporting=_MetricsReporting2.default;dashjs.MediaPlayerFactory=_MediaPlayerFactory2.default;dashjs.Debug=_Debug2.default;exports.default=dashjs;exports.MediaPlayer=_index_mediaplayerOnly.MediaPlayer;exports.Protection=_Protection2.default;exports.MetricsReporting=_MetricsReporting2.default;exports.MediaPlayerFactory=_MediaPlayerFactory2.default;exports.Debug=_Debug2.default;


},{"./index_mediaplayerOnly":"../node_modules/dashjs/build/es5/index_mediaplayerOnly.js","./src/streaming/metrics/MetricsReporting":"../node_modules/dashjs/build/es5/src/streaming/metrics/MetricsReporting.js","./src/streaming/protection/Protection":"../node_modules/dashjs/build/es5/src/streaming/protection/Protection.js","./src/streaming/MediaPlayerFactory":"../node_modules/dashjs/build/es5/src/streaming/MediaPlayerFactory.js","./src/core/Debug":"../node_modules/dashjs/build/es5/src/core/Debug.js"}],"../node_modules/dashjs/build/es5/src/mss/MssFragmentInfoController.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _FragmentRequest=require('../streaming/vo/FragmentRequest');var _FragmentRequest2=_interopRequireDefault(_FragmentRequest);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function MssFragmentInfoController(config){config=config||{};var instance=void 0,logger=void 0,fragmentModel=void 0,started=void 0,type=void 0,loadFragmentTimeout=void 0,startTime=void 0,startFragmentTime=void 0,index=void 0;var streamProcessor=config.streamProcessor;var baseURLController=config.baseURLController;var debug=config.debug;var controllerType='MssFragmentInfoController';function setup(){logger=debug.getLogger(instance);}function initialize(){type=streamProcessor.getType();fragmentModel=streamProcessor.getFragmentModel();started=false;startTime=null;startFragmentTime=null;}function start(){if(started)return;logger.debug('Start');started=true;startTime=new Date().getTime();index=0;loadNextFragmentInfo();}function stop(){if(!started)return;logger.debug('Stop');clearTimeout(loadFragmentTimeout);started=false;startTime=null;startFragmentTime=null;}function reset(){stop();}function loadNextFragmentInfo(){if(!started)return;// Get last segment from SegmentTimeline
var representation=getCurrentRepresentation();var manifest=representation.adaptation.period.mpd.manifest;var adaptation=manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index];var segments=adaptation.SegmentTemplate.SegmentTimeline.S_asArray;var segment=segments[segments.length-1];// logger.debug('Last fragment time: ' + (segment.t / adaptation.SegmentTemplate.timescale));
// Generate segment request
var request=getRequestForSegment(adaptation,representation,segment);// Send segment request
requestFragment.call(this,request);}function getRequestForSegment(adaptation,representation,segment){var timescale=adaptation.SegmentTemplate.timescale;var request=new _FragmentRequest2.default();request.mediaType=type;request.type='FragmentInfoSegment';// request.range = segment.mediaRange;
request.startTime=segment.t/timescale;request.duration=segment.d/timescale;request.timescale=timescale;// request.availabilityStartTime = segment.availabilityStartTime;
// request.availabilityEndTime = segment.availabilityEndTime;
// request.wallStartTime = segment.wallStartTime;
request.quality=representation.index;request.index=index++;request.mediaInfo=streamProcessor.getMediaInfo();request.adaptationIndex=representation.adaptation.index;request.representationId=representation.id;request.url=baseURLController.resolve(representation.path).url+adaptation.SegmentTemplate.media;request.url=request.url.replace('$Bandwidth$',representation.bandwidth);request.url=request.url.replace('$Time$',segment.tManifest?segment.tManifest:segment.t);request.url=request.url.replace('/Fragments(','/FragmentInfo(');return request;}function getCurrentRepresentation(){var representationController=streamProcessor.getRepresentationController();var representation=representationController.getCurrentRepresentation();return representation;}function requestFragment(request){// logger.debug('Load FragmentInfo for time: ' + request.startTime);
if(streamProcessor.getFragmentModel().isFragmentLoadedOrPending(request)){// We may have reached end of timeline in case of start-over streams
logger.debug('End of timeline');stop();return;}fragmentModel.executeRequest(request);}function fragmentInfoLoaded(e){if(!started)return;var request=e.request;if(!e.response){logger.error('Load error',request.url);return;}var deltaFragmentTime=void 0,deltaTime=void 0,delay=void 0;// logger.debug('FragmentInfo loaded: ', request.url);
if(!startFragmentTime){startFragmentTime=request.startTime;}// Determine delay before requesting next FragmentInfo
deltaTime=(new Date().getTime()-startTime)/1000;deltaFragmentTime=request.startTime+request.duration-startFragmentTime;delay=Math.max(0,deltaFragmentTime-deltaTime);// Set timeout for requesting next FragmentInfo
clearTimeout(loadFragmentTimeout);loadFragmentTimeout=setTimeout(function(){loadFragmentTimeout=null;loadNextFragmentInfo();},delay*1000);}function getType(){return type;}instance={initialize:initialize,controllerType:controllerType,start:start,fragmentInfoLoaded:fragmentInfoLoaded,getType:getType,reset:reset};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */MssFragmentInfoController.__dashjs_factory_name='MssFragmentInfoController';exports.default=dashjs.FactoryMaker.getClassFactory(MssFragmentInfoController);/* jshint ignore:line */


},{"../streaming/vo/FragmentRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/FragmentRequest.js"}],"../node_modules/dashjs/build/es5/src/mss/errors/MssErrors.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _ErrorsBase2=require('../../core/errors/ErrorsBase');var _ErrorsBase3=_interopRequireDefault(_ErrorsBase2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @class
 *
 */var MssErrors=function(_ErrorsBase){_inherits(MssErrors,_ErrorsBase);function MssErrors(){_classCallCheck(this,MssErrors);/**
         * Error code returned when no tfrf box is detected in MSS live stream
         */var _this=_possibleConstructorReturn(this,(MssErrors.__proto__||Object.getPrototypeOf(MssErrors)).call(this));_this.MSS_NO_TFRF_CODE=200;/**
         * Error code returned when one of the codecs defined in the manifest is not supported
         */_this.MSS_UNSUPPORTED_CODEC_CODE=201;_this.MSS_NO_TFRF_MESSAGE='Missing tfrf in live media segment';_this.MSS_UNSUPPORTED_CODEC_MESSAGE='Unsupported codec';return _this;}return MssErrors;}(_ErrorsBase3.default);var mssErrors=new MssErrors();exports.default=mssErrors;


},{"../../core/errors/ErrorsBase":"../node_modules/dashjs/build/es5/src/core/errors/ErrorsBase.js"}],"../node_modules/dashjs/build/es5/src/mss/MssFragmentMoofProcessor.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _DashJSError=require('../streaming/vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);var _MssErrors=require('./errors/MssErrors');var _MssErrors2=_interopRequireDefault(_MssErrors);var _MediaPlayerEvents=require('../streaming/MediaPlayerEvents');var _MediaPlayerEvents2=_interopRequireDefault(_MediaPlayerEvents);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * @module MssFragmentMoofProcessor
 * @ignore
 * @param {Object} config object
 */function MssFragmentMoofProcessor(config){config=config||{};var instance=void 0,type=void 0,logger=void 0;var dashMetrics=config.dashMetrics;var playbackController=config.playbackController;var errorHandler=config.errHandler;var eventBus=config.eventBus;var ISOBoxer=config.ISOBoxer;var debug=config.debug;function setup(){logger=debug.getLogger(instance);type='';}function processTfrf(request,tfrf,tfdt,streamProcessor){var representationController=streamProcessor.getRepresentationController();var representation=representationController.getCurrentRepresentation();var manifest=representation.adaptation.period.mpd.manifest;var adaptation=manifest.Period_asArray[representation.adaptation.period.index].AdaptationSet_asArray[representation.adaptation.index];var timescale=adaptation.SegmentTemplate.timescale;type=streamProcessor.getType();// Process tfrf only for live streams or start-over static streams (timeShiftBufferDepth > 0)
if(manifest.type!=='dynamic'&&!manifest.timeShiftBufferDepth){return;}if(!tfrf){errorHandler.error(new _DashJSError2.default(_MssErrors2.default.MSS_NO_TFRF_CODE,_MssErrors2.default.MSS_NO_TFRF_MESSAGE));return;}// Get adaptation's segment timeline (always a SegmentTimeline in Smooth Streaming use case)
var segments=adaptation.SegmentTemplate.SegmentTimeline.S;var entries=tfrf.entry;var entry=void 0,segmentTime=void 0,range=void 0;var segment=null;var t=0;var availabilityStartTime=null;if(entries.length===0){return;}// Consider only first tfrf entry (to avoid pre-condition failure on fragment info requests)
entry=entries[0];// In case of start-over streams, check if we have reached end of original manifest duration (set in timeShiftBufferDepth)
// => then do not update anymore timeline
if(manifest.type==='static'){// Get first segment time
segmentTime=segments[0].tManifest?parseFloat(segments[0].tManifest):segments[0].t;if(entry.fragment_absolute_time>segmentTime+manifest.timeShiftBufferDepth*timescale){return;}}// logger.debug('entry - t = ', (entry.fragment_absolute_time / timescale));
// Get last segment time
segmentTime=segments[segments.length-1].tManifest?parseFloat(segments[segments.length-1].tManifest):segments[segments.length-1].t;// logger.debug('Last segment - t = ', (segmentTime / timescale));
// Check if we have to append new segment to timeline
if(entry.fragment_absolute_time<=segmentTime){// Update DVR window range => set range end to end time of current segment
range={start:segments[0].t/timescale,end:tfdt.baseMediaDecodeTime/timescale+request.duration};updateDVR(request.mediaType,range,streamProcessor.getStreamInfo().manifestInfo);return;}// logger.debug('Add new segment - t = ', (entry.fragment_absolute_time / timescale));
segment={};segment.t=entry.fragment_absolute_time;segment.d=entry.fragment_duration;// If timestamps starts at 0 relative to 1st segment (dynamic to static) then update segment time
if(segments[0].tManifest){segment.t-=parseFloat(segments[0].tManifest)-segments[0].t;segment.tManifest=entry.fragment_absolute_time;}// Patch previous segment duration
var lastSegment=segments[segments.length-1];if(lastSegment.t+lastSegment.d!==segment.t){logger.debug('Patch segment duration - t = ',lastSegment.t+', d = '+lastSegment.d+' => '+(segment.t-lastSegment.t));lastSegment.d=segment.t-lastSegment.t;}segments.push(segment);// In case of static start-over streams, update content duration
if(manifest.type==='static'){if(type==='video'){segment=segments[segments.length-1];var end=(segment.t+segment.d)/timescale;if(end>representation.adaptation.period.duration){eventBus.trigger(_MediaPlayerEvents2.default.MANIFEST_VALIDITY_CHANGED,{sender:this,newDuration:end});}}return;}// In case of live streams, update segment timeline according to DVR window
else if(manifest.timeShiftBufferDepth&&manifest.timeShiftBufferDepth>0){// Get timestamp of the last segment
segment=segments[segments.length-1];t=segment.t;// Determine the segments' availability start time
availabilityStartTime=Math.round((t-manifest.timeShiftBufferDepth*timescale)/timescale);// Remove segments prior to availability start time
segment=segments[0];while(Math.round(segment.t/timescale)<availabilityStartTime){// logger.debug('Remove segment  - t = ' + (segment.t / timescale));
segments.splice(0,1);segment=segments[0];}// Update DVR window range => set range end to end time of current segment
range={start:segments[0].t/timescale,end:tfdt.baseMediaDecodeTime/timescale+request.duration};updateDVR(type,range,streamProcessor.getStreamInfo().manifestInfo);}representationController.updateRepresentation(representation,true);}function updateDVR(type,range,manifestInfo){var dvrInfos=dashMetrics.getCurrentDVRInfo(type);if(!dvrInfos||range.end>dvrInfos.range.end){logger.debug('Update DVR range: ['+range.start+' - '+range.end+']');dashMetrics.addDVRInfo(type,playbackController.getTime(),manifestInfo,range);}}// This function returns the offset of the 1st byte of a child box within a container box
function getBoxOffset(parent,type){var offset=8;var i=0;for(i=0;i<parent.boxes.length;i++){if(parent.boxes[i].type===type){return offset;}offset+=parent.boxes[i].size;}return offset;}function convertFragment(e,streamProcessor){var i=void 0;// e.request contains request description object
// e.response contains fragment bytes
var isoFile=ISOBoxer.parseBuffer(e.response);// Update track_Id in tfhd box
var tfhd=isoFile.fetch('tfhd');tfhd.track_ID=e.request.mediaInfo.index+1;// Add tfdt box
var tfdt=isoFile.fetch('tfdt');var traf=isoFile.fetch('traf');if(tfdt===null){tfdt=ISOBoxer.createFullBox('tfdt',traf,tfhd);tfdt.version=1;tfdt.flags=0;tfdt.baseMediaDecodeTime=Math.floor(e.request.startTime*e.request.timescale);}var trun=isoFile.fetch('trun');// Process tfxd boxes
// This box provide absolute timestamp but we take the segment start time for tfdt
var tfxd=isoFile.fetch('tfxd');if(tfxd){tfxd._parent.boxes.splice(tfxd._parent.boxes.indexOf(tfxd),1);tfxd=null;}var tfrf=isoFile.fetch('tfrf');processTfrf(e.request,tfrf,tfdt,streamProcessor);if(tfrf){tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf),1);tfrf=null;}// If protected content in PIFF1.1 format (sepiff box = Sample Encryption PIFF)
// => convert sepiff box it into a senc box
// => create saio and saiz boxes (if not already present)
var sepiff=isoFile.fetch('sepiff');if(sepiff!==null){sepiff.type='senc';sepiff.usertype=undefined;var _saio=isoFile.fetch('saio');if(_saio===null){// Create Sample Auxiliary Information Offsets Box box (saio)
_saio=ISOBoxer.createFullBox('saio',traf);_saio.version=0;_saio.flags=0;_saio.entry_count=1;_saio.offset=[0];var saiz=ISOBoxer.createFullBox('saiz',traf);saiz.version=0;saiz.flags=0;saiz.sample_count=sepiff.sample_count;saiz.default_sample_info_size=0;saiz.sample_info_size=[];if(sepiff.flags&0x02){// Sub-sample encryption => set sample_info_size for each sample
for(i=0;i<sepiff.sample_count;i+=1){// 10 = 8 (InitializationVector field size) + 2 (subsample_count field size)
// 6 = 2 (BytesOfClearData field size) + 4 (BytesOfEncryptedData field size)
saiz.sample_info_size[i]=10+6*sepiff.entry[i].NumberOfEntries;}}else{// No sub-sample encryption => set default sample_info_size = InitializationVector field size (8)
saiz.default_sample_info_size=8;}}}tfhd.flags&=0xFFFFFE;// set tfhd.base-data-offset-present to false
tfhd.flags|=0x020000;// set tfhd.default-base-is-moof to true
trun.flags|=0x000001;// set trun.data-offset-present to true
// Update trun.data_offset field that corresponds to first data byte (inside mdat box)
var moof=isoFile.fetch('moof');var length=moof.getLength();trun.data_offset=length+8;// Update saio box offset field according to new senc box offset
var saio=isoFile.fetch('saio');if(saio!==null){var trafPosInMoof=getBoxOffset(moof,'traf');var sencPosInTraf=getBoxOffset(traf,'senc');// Set offset from begin fragment to the first IV field in senc box
saio.offset[0]=trafPosInMoof+sencPosInTraf+16;// 16 = box header (12) + sample_count field size (4)
}// Write transformed/processed fragment into request reponse data
e.response=isoFile.write();}function updateSegmentList(e,streamProcessor){// e.request contains request description object
// e.response contains fragment bytes
if(!e.response){throw new Error('e.response parameter is missing');}var isoFile=ISOBoxer.parseBuffer(e.response);// Update track_Id in tfhd box
var tfhd=isoFile.fetch('tfhd');tfhd.track_ID=e.request.mediaInfo.index+1;// Add tfdt box
var tfdt=isoFile.fetch('tfdt');var traf=isoFile.fetch('traf');if(tfdt===null){tfdt=ISOBoxer.createFullBox('tfdt',traf,tfhd);tfdt.version=1;tfdt.flags=0;tfdt.baseMediaDecodeTime=Math.floor(e.request.startTime*e.request.timescale);}var tfrf=isoFile.fetch('tfrf');processTfrf(e.request,tfrf,tfdt,streamProcessor);if(tfrf){tfrf._parent.boxes.splice(tfrf._parent.boxes.indexOf(tfrf),1);tfrf=null;}}function getType(){return type;}instance={convertFragment:convertFragment,updateSegmentList:updateSegmentList,getType:getType};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */MssFragmentMoofProcessor.__dashjs_factory_name='MssFragmentMoofProcessor';exports.default=dashjs.FactoryMaker.getClassFactory(MssFragmentMoofProcessor);/* jshint ignore:line */


},{"../streaming/vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js","./errors/MssErrors":"../node_modules/dashjs/build/es5/src/mss/errors/MssErrors.js","../streaming/MediaPlayerEvents":"../node_modules/dashjs/build/es5/src/streaming/MediaPlayerEvents.js"}],"../node_modules/dashjs/build/es5/src/mss/MssFragmentMoovProcessor.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _MssErrors=require('./errors/MssErrors');var _MssErrors2=_interopRequireDefault(_MssErrors);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * @module MssFragmentMoovProcessor
 * @ignore
 * @param {Object} config object
 */function MssFragmentMoovProcessor(config){config=config||{};var NALUTYPE_SPS=7;var NALUTYPE_PPS=8;var constants=config.constants;var ISOBoxer=config.ISOBoxer;var protectionController=config.protectionController;var instance=void 0,period=void 0,adaptationSet=void 0,representation=void 0,contentProtection=void 0,timescale=void 0,trackId=void 0;function createFtypBox(isoFile){var ftyp=ISOBoxer.createBox('ftyp',isoFile);ftyp.major_brand='iso6';ftyp.minor_version=1;// is an informative integer for the minor version of the major brand
ftyp.compatible_brands=[];//is a list, to the end of the box, of brands isom, iso6 and msdh
ftyp.compatible_brands[0]='isom';// => decimal ASCII value for isom
ftyp.compatible_brands[1]='iso6';// => decimal ASCII value for iso6
ftyp.compatible_brands[2]='msdh';// => decimal ASCII value for msdh
return ftyp;}function createMoovBox(isoFile){// moov box
var moov=ISOBoxer.createBox('moov',isoFile);// moov/mvhd
createMvhdBox(moov);// moov/trak
var trak=ISOBoxer.createBox('trak',moov);// moov/trak/tkhd
createTkhdBox(trak);// moov/trak/mdia
var mdia=ISOBoxer.createBox('mdia',trak);// moov/trak/mdia/mdhd
createMdhdBox(mdia);// moov/trak/mdia/hdlr
createHdlrBox(mdia);// moov/trak/mdia/minf
var minf=ISOBoxer.createBox('minf',mdia);switch(adaptationSet.type){case constants.VIDEO:// moov/trak/mdia/minf/vmhd
createVmhdBox(minf);break;case constants.AUDIO:// moov/trak/mdia/minf/smhd
createSmhdBox(minf);break;default:break;}// moov/trak/mdia/minf/dinf
var dinf=ISOBoxer.createBox('dinf',minf);// moov/trak/mdia/minf/dinf/dref
createDrefBox(dinf);// moov/trak/mdia/minf/stbl
var stbl=ISOBoxer.createBox('stbl',minf);// Create empty stts, stsc, stco and stsz boxes
// Use data field as for codem-isoboxer unknown boxes for setting fields value
// moov/trak/mdia/minf/stbl/stts
var stts=ISOBoxer.createFullBox('stts',stbl);stts._data=[0,0,0,0,0,0,0,0];// version = 0, flags = 0, entry_count = 0
// moov/trak/mdia/minf/stbl/stsc
var stsc=ISOBoxer.createFullBox('stsc',stbl);stsc._data=[0,0,0,0,0,0,0,0];// version = 0, flags = 0, entry_count = 0
// moov/trak/mdia/minf/stbl/stco
var stco=ISOBoxer.createFullBox('stco',stbl);stco._data=[0,0,0,0,0,0,0,0];// version = 0, flags = 0, entry_count = 0
// moov/trak/mdia/minf/stbl/stsz
var stsz=ISOBoxer.createFullBox('stsz',stbl);stsz._data=[0,0,0,0,0,0,0,0,0,0,0,0];// version = 0, flags = 0, sample_size = 0, sample_count = 0
// moov/trak/mdia/minf/stbl/stsd
createStsdBox(stbl);// moov/mvex
var mvex=ISOBoxer.createBox('mvex',moov);// moov/mvex/trex
createTrexBox(mvex);if(contentProtection&&protectionController){var supportedKS=protectionController.getSupportedKeySystemsFromContentProtection(contentProtection);createProtectionSystemSpecificHeaderBox(moov,supportedKS);}}function createMvhdBox(moov){var mvhd=ISOBoxer.createFullBox('mvhd',moov);mvhd.version=1;// version = 1  in order to have 64bits duration value
mvhd.creation_time=0;// the creation time of the presentation => ignore (set to 0)
mvhd.modification_time=0;// the most recent time the presentation was modified => ignore (set to 0)
mvhd.timescale=timescale;// the time-scale for the entire presentation => 10000000 for MSS
mvhd.duration=period.duration===Infinity?0xFFFFFFFFFFFFFFFF:Math.round(period.duration*timescale);// the length of the presentation (in the indicated timescale) =>  take duration of period
mvhd.rate=1.0;// 16.16 number, '1.0' = normal playback
mvhd.volume=1.0;// 8.8 number, '1.0' = full volume
mvhd.reserved1=0;mvhd.reserved2=[0x0,0x0];mvhd.matrix=[1,0,0,// provides a transformation matrix for the video;
0,1,0,// (u,v,w) are restricted here to (0,0,1)
0,0,16384];mvhd.pre_defined=[0,0,0,0,0,0];mvhd.next_track_ID=trackId+1;// indicates a value to use for the track ID of the next track to be added to this presentation
return mvhd;}function createTkhdBox(trak){var tkhd=ISOBoxer.createFullBox('tkhd',trak);tkhd.version=1;// version = 1  in order to have 64bits duration value
tkhd.flags=0x1|// Track_enabled (0x000001): Indicates that the track is enabled
0x2|// Track_in_movie (0x000002):  Indicates that the track is used in the presentation
0x4;// Track_in_preview (0x000004):  Indicates that the track is used when previewing the presentation
tkhd.creation_time=0;// the creation time of the presentation => ignore (set to 0)
tkhd.modification_time=0;// the most recent time the presentation was modified => ignore (set to 0)
tkhd.track_ID=trackId;// uniquely identifies this track over the entire life-time of this presentation
tkhd.reserved1=0;tkhd.duration=period.duration===Infinity?0xFFFFFFFFFFFFFFFF:Math.round(period.duration*timescale);// the duration of this track (in the timescale indicated in the Movie Header Box) =>  take duration of period
tkhd.reserved2=[0x0,0x0];tkhd.layer=0;// specifies the front-to-back ordering of video tracks; tracks with lower numbers are closer to the viewer => 0 since only one video track
tkhd.alternate_group=0;// specifies a group or collection of tracks => ignore
tkhd.volume=1.0;// '1.0' = full volume
tkhd.reserved3=0;tkhd.matrix=[1,0,0,// provides a transformation matrix for the video;
0,1,0,// (u,v,w) are restricted here to (0,0,1)
0,0,16384];tkhd.width=representation.width;// visual presentation width
tkhd.height=representation.height;// visual presentation height
return tkhd;}function createMdhdBox(mdia){var mdhd=ISOBoxer.createFullBox('mdhd',mdia);mdhd.version=1;// version = 1  in order to have 64bits duration value
mdhd.creation_time=0;// the creation time of the presentation => ignore (set to 0)
mdhd.modification_time=0;// the most recent time the presentation was modified => ignore (set to 0)
mdhd.timescale=timescale;// the time-scale for the entire presentation
mdhd.duration=period.duration===Infinity?0xFFFFFFFFFFFFFFFF:Math.round(period.duration*timescale);// the duration of this media (in the scale of the timescale). If the duration cannot be determined then duration is set to all 1s.
mdhd.language=adaptationSet.lang||'und';// declares the language code for this media
mdhd.pre_defined=0;return mdhd;}function createHdlrBox(mdia){var hdlr=ISOBoxer.createFullBox('hdlr',mdia);hdlr.pre_defined=0;switch(adaptationSet.type){case constants.VIDEO:hdlr.handler_type='vide';break;case constants.AUDIO:hdlr.handler_type='soun';break;default:hdlr.handler_type='meta';break;}hdlr.name=representation.id;hdlr.reserved=[0,0,0];return hdlr;}function createVmhdBox(minf){var vmhd=ISOBoxer.createFullBox('vmhd',minf);vmhd.flags=1;vmhd.graphicsmode=0;// specifies a composition mode for this video track, from the following enumerated set, which may be extended by derived specifications: copy = 0 copy over the existing image
vmhd.opcolor=[0,0,0];// is a set of 3 colour values (red, green, blue) available for use by graphics modes
return vmhd;}function createSmhdBox(minf){var smhd=ISOBoxer.createFullBox('smhd',minf);smhd.flags=1;smhd.balance=0;// is a fixed-point 8.8 number that places mono audio tracks in a stereo space; 0 is centre (the normal value); full left is -1.0 and full right is 1.0.
smhd.reserved=0;return smhd;}function createDrefBox(dinf){var dref=ISOBoxer.createFullBox('dref',dinf);dref.entry_count=1;dref.entries=[];var url=ISOBoxer.createFullBox('url ',dref,false);url.location='';url.flags=1;dref.entries.push(url);return dref;}function createStsdBox(stbl){var stsd=ISOBoxer.createFullBox('stsd',stbl);stsd.entries=[];switch(adaptationSet.type){case constants.VIDEO:case constants.AUDIO:stsd.entries.push(createSampleEntry(stsd));break;default:break;}stsd.entry_count=stsd.entries.length;// is an integer that counts the actual entries
return stsd;}function createSampleEntry(stsd){var codec=representation.codecs.substring(0,representation.codecs.indexOf('.'));switch(codec){case'avc1':return createAVCVisualSampleEntry(stsd,codec);case'mp4a':return createMP4AudioSampleEntry(stsd,codec);default:throw{code:_MssErrors2.default.MSS_UNSUPPORTED_CODEC_CODE,message:_MssErrors2.default.MSS_UNSUPPORTED_CODEC_MESSAGE,data:{codec:codec}};}}function createAVCVisualSampleEntry(stsd,codec){var avc1=void 0;if(contentProtection){avc1=ISOBoxer.createBox('encv',stsd,false);}else{avc1=ISOBoxer.createBox('avc1',stsd,false);}// SampleEntry fields
avc1.reserved1=[0x0,0x0,0x0,0x0,0x0,0x0];avc1.data_reference_index=1;// VisualSampleEntry fields
avc1.pre_defined1=0;avc1.reserved2=0;avc1.pre_defined2=[0,0,0];avc1.height=representation.height;avc1.width=representation.width;avc1.horizresolution=72;// 72 dpi
avc1.vertresolution=72;// 72 dpi
avc1.reserved3=0;avc1.frame_count=1;// 1 compressed video frame per sample
avc1.compressorname=[0x0A,0x41,0x56,0x43,0x20,0x43,0x6F,0x64,// = 'AVC Coding';
0x69,0x6E,0x67,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00];avc1.depth=0x0018;// 0x0018 – images are in colour with no alpha.
avc1.pre_defined3=65535;avc1.config=createAVC1ConfigurationRecord();if(contentProtection){// Create and add Protection Scheme Info Box
var sinf=ISOBoxer.createBox('sinf',avc1);// Create and add Original Format Box => indicate codec type of the encrypted content
createOriginalFormatBox(sinf,codec);// Create and add Scheme Type box
createSchemeTypeBox(sinf);// Create and add Scheme Information Box
createSchemeInformationBox(sinf);}return avc1;}function createAVC1ConfigurationRecord(){var avcC=null;var avcCLength=15;// length = 15 by default (0 SPS and 0 PPS)
// First get all SPS and PPS from codecPrivateData
var sps=[];var pps=[];var AVCProfileIndication=0;var AVCLevelIndication=0;var profile_compatibility=0;var nalus=representation.codecPrivateData.split('00000001').slice(1);var naluBytes=void 0,naluType=void 0;for(var _i=0;_i<nalus.length;_i++){naluBytes=hexStringtoBuffer(nalus[_i]);naluType=naluBytes[0]&0x1F;switch(naluType){case NALUTYPE_SPS:sps.push(naluBytes);avcCLength+=naluBytes.length+2;// 2 = sequenceParameterSetLength field length
break;case NALUTYPE_PPS:pps.push(naluBytes);avcCLength+=naluBytes.length+2;// 2 = pictureParameterSetLength field length
break;default:break;}}// Get profile and level from SPS
if(sps.length>0){AVCProfileIndication=sps[0][1];profile_compatibility=sps[0][2];AVCLevelIndication=sps[0][3];}// Generate avcC buffer
avcC=new Uint8Array(avcCLength);var i=0;// length
avcC[i++]=(avcCLength&0xFF000000)>>24;avcC[i++]=(avcCLength&0x00FF0000)>>16;avcC[i++]=(avcCLength&0x0000FF00)>>8;avcC[i++]=avcCLength&0x000000FF;avcC.set([0x61,0x76,0x63,0x43],i);// type = 'avcC'
i+=4;avcC[i++]=1;// configurationVersion = 1
avcC[i++]=AVCProfileIndication;avcC[i++]=profile_compatibility;avcC[i++]=AVCLevelIndication;avcC[i++]=0xFF;// '11111' + lengthSizeMinusOne = 3
avcC[i++]=0xE0|sps.length;// '111' + numOfSequenceParameterSets
for(var n=0;n<sps.length;n++){avcC[i++]=(sps[n].length&0xFF00)>>8;avcC[i++]=sps[n].length&0x00FF;avcC.set(sps[n],i);i+=sps[n].length;}avcC[i++]=pps.length;// numOfPictureParameterSets
for(var _n=0;_n<pps.length;_n++){avcC[i++]=(pps[_n].length&0xFF00)>>8;avcC[i++]=pps[_n].length&0x00FF;avcC.set(pps[_n],i);i+=pps[_n].length;}return avcC;}function createMP4AudioSampleEntry(stsd,codec){var mp4a=void 0;if(contentProtection){mp4a=ISOBoxer.createBox('enca',stsd,false);}else{mp4a=ISOBoxer.createBox('mp4a',stsd,false);}// SampleEntry fields
mp4a.reserved1=[0x0,0x0,0x0,0x0,0x0,0x0];mp4a.data_reference_index=1;// AudioSampleEntry fields
mp4a.reserved2=[0x0,0x0];mp4a.channelcount=representation.audioChannels;mp4a.samplesize=16;mp4a.pre_defined=0;mp4a.reserved_3=0;mp4a.samplerate=representation.audioSamplingRate<<16;mp4a.esds=createMPEG4AACESDescriptor();if(contentProtection){// Create and add Protection Scheme Info Box
var sinf=ISOBoxer.createBox('sinf',mp4a);// Create and add Original Format Box => indicate codec type of the encrypted content
createOriginalFormatBox(sinf,codec);// Create and add Scheme Type box
createSchemeTypeBox(sinf);// Create and add Scheme Information Box
createSchemeInformationBox(sinf);}return mp4a;}function createMPEG4AACESDescriptor(){// AudioSpecificConfig (see ISO/IEC 14496-3, subpart 1) => corresponds to hex bytes contained in 'codecPrivateData' field
var audioSpecificConfig=hexStringtoBuffer(representation.codecPrivateData);// ESDS length = esds box header length (= 12) +
//               ES_Descriptor header length (= 5) +
//               DecoderConfigDescriptor header length (= 15) +
//               decoderSpecificInfo header length (= 2) +
//               AudioSpecificConfig length (= codecPrivateData length)
var esdsLength=34+audioSpecificConfig.length;var esds=new Uint8Array(esdsLength);var i=0;// esds box
esds[i++]=(esdsLength&0xFF000000)>>24;// esds box length
esds[i++]=(esdsLength&0x00FF0000)>>16;// ''
esds[i++]=(esdsLength&0x0000FF00)>>8;// ''
esds[i++]=esdsLength&0x000000FF;// ''
esds.set([0x65,0x73,0x64,0x73],i);// type = 'esds'
i+=4;esds.set([0,0,0,0],i);// version = 0, flags = 0
i+=4;// ES_Descriptor (see ISO/IEC 14496-1 (Systems))
esds[i++]=0x03;// tag = 0x03 (ES_DescrTag)
esds[i++]=20+audioSpecificConfig.length;// size
esds[i++]=(trackId&0xFF00)>>8;// ES_ID = track_id
esds[i++]=trackId&0x00FF;// ''
esds[i++]=0;// flags and streamPriority
// DecoderConfigDescriptor (see ISO/IEC 14496-1 (Systems))
esds[i++]=0x04;// tag = 0x04 (DecoderConfigDescrTag)
esds[i++]=15+audioSpecificConfig.length;// size
esds[i++]=0x40;// objectTypeIndication = 0x40 (MPEG-4 AAC)
esds[i]=0x05<<2;// streamType = 0x05 (Audiostream)
esds[i]|=0<<1;// upStream = 0
esds[i++]|=1;// reserved = 1
esds[i++]=0xFF;// buffersizeDB = undefined
esds[i++]=0xFF;// ''
esds[i++]=0xFF;// ''
esds[i++]=(representation.bandwidth&0xFF000000)>>24;// maxBitrate
esds[i++]=(representation.bandwidth&0x00FF0000)>>16;// ''
esds[i++]=(representation.bandwidth&0x0000FF00)>>8;// ''
esds[i++]=representation.bandwidth&0x000000FF;// ''
esds[i++]=(representation.bandwidth&0xFF000000)>>24;// avgbitrate
esds[i++]=(representation.bandwidth&0x00FF0000)>>16;// ''
esds[i++]=(representation.bandwidth&0x0000FF00)>>8;// ''
esds[i++]=representation.bandwidth&0x000000FF;// ''
// DecoderSpecificInfo (see ISO/IEC 14496-1 (Systems))
esds[i++]=0x05;// tag = 0x05 (DecSpecificInfoTag)
esds[i++]=audioSpecificConfig.length;// size
esds.set(audioSpecificConfig,i);// AudioSpecificConfig bytes
return esds;}function createOriginalFormatBox(sinf,codec){var frma=ISOBoxer.createBox('frma',sinf);frma.data_format=stringToCharCode(codec);}function createSchemeTypeBox(sinf){var schm=ISOBoxer.createFullBox('schm',sinf);schm.flags=0;schm.version=0;schm.scheme_type=0x63656E63;// 'cenc' => common encryption
schm.scheme_version=0x00010000;// version set to 0x00010000 (Major version 1, Minor version 0)
}function createSchemeInformationBox(sinf){var schi=ISOBoxer.createBox('schi',sinf);// Create and add Track Encryption Box
createTrackEncryptionBox(schi);}function createProtectionSystemSpecificHeaderBox(moov,keySystems){var pssh_bytes=void 0,pssh=void 0,i=void 0,parsedBuffer=void 0;for(i=0;i<keySystems.length;i+=1){pssh_bytes=keySystems[i].initData;if(pssh_bytes){parsedBuffer=ISOBoxer.parseBuffer(pssh_bytes);pssh=parsedBuffer.fetch('pssh');if(pssh){ISOBoxer.Utils.appendBox(moov,pssh);}}}}function createTrackEncryptionBox(schi){var tenc=ISOBoxer.createFullBox('tenc',schi);tenc.flags=0;tenc.version=0;tenc.default_IsEncrypted=0x1;tenc.default_IV_size=8;tenc.default_KID=contentProtection&&contentProtection.length>0&&contentProtection[0]['cenc:default_KID']?contentProtection[0]['cenc:default_KID']:[0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0];}function createTrexBox(moov){var trex=ISOBoxer.createFullBox('trex',moov);trex.track_ID=trackId;trex.default_sample_description_index=1;trex.default_sample_duration=0;trex.default_sample_size=0;trex.default_sample_flags=0;return trex;}function hexStringtoBuffer(str){var buf=new Uint8Array(str.length/2);var i=void 0;for(i=0;i<str.length/2;i+=1){buf[i]=parseInt(''+str[i*2]+str[i*2+1],16);}return buf;}function stringToCharCode(str){var code=0;var i=void 0;for(i=0;i<str.length;i+=1){code|=str.charCodeAt(i)<<(str.length-i-1)*8;}return code;}function generateMoov(rep){if(!rep||!rep.adaptation){return;}var isoFile=void 0,arrayBuffer=void 0;representation=rep;adaptationSet=representation.adaptation;period=adaptationSet.period;trackId=adaptationSet.index+1;contentProtection=period.mpd.manifest.Period_asArray[period.index].AdaptationSet_asArray[adaptationSet.index].ContentProtection;timescale=period.mpd.manifest.Period_asArray[period.index].AdaptationSet_asArray[adaptationSet.index].SegmentTemplate.timescale;isoFile=ISOBoxer.createFile();createFtypBox(isoFile);createMoovBox(isoFile);arrayBuffer=isoFile.write();return arrayBuffer;}instance={generateMoov:generateMoov};return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */MssFragmentMoovProcessor.__dashjs_factory_name='MssFragmentMoovProcessor';exports.default=dashjs.FactoryMaker.getClassFactory(MssFragmentMoovProcessor);/* jshint ignore:line */


},{"./errors/MssErrors":"../node_modules/dashjs/build/es5/src/mss/errors/MssErrors.js"}],"../node_modules/dashjs/build/es5/src/mss/MssFragmentProcessor.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _MssFragmentMoofProcessor=require('./MssFragmentMoofProcessor');var _MssFragmentMoofProcessor2=_interopRequireDefault(_MssFragmentMoofProcessor);var _MssFragmentMoovProcessor=require('./MssFragmentMoovProcessor');var _MssFragmentMoovProcessor2=_interopRequireDefault(_MssFragmentMoovProcessor);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}// Add specific box processors not provided by codem-isoboxer library
/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function arrayEqual(arr1,arr2){return arr1.length===arr2.length&&arr1.every(function(element,index){return element===arr2[index];});}function saioProcessor(){this._procFullBox();if(this.flags&1){this._procField('aux_info_type','uint',32);this._procField('aux_info_type_parameter','uint',32);}this._procField('entry_count','uint',32);this._procFieldArray('offset',this.entry_count,'uint',this.version===1?64:32);}function saizProcessor(){this._procFullBox();if(this.flags&1){this._procField('aux_info_type','uint',32);this._procField('aux_info_type_parameter','uint',32);}this._procField('default_sample_info_size','uint',8);this._procField('sample_count','uint',32);if(this.default_sample_info_size===0){this._procFieldArray('sample_info_size',this.sample_count,'uint',8);}}function sencProcessor(){this._procFullBox();this._procField('sample_count','uint',32);if(this.flags&1){this._procField('IV_size','uint',8);}this._procEntries('entry',this.sample_count,function(entry){this._procEntryField(entry,'InitializationVector','data',8);if(this.flags&2){this._procEntryField(entry,'NumberOfEntries','uint',16);this._procSubEntries(entry,'clearAndCryptedData',entry.NumberOfEntries,function(clearAndCryptedData){this._procEntryField(clearAndCryptedData,'BytesOfClearData','uint',16);this._procEntryField(clearAndCryptedData,'BytesOfEncryptedData','uint',32);});}});}function uuidProcessor(){var tfxdUserType=[0x6D,0x1D,0x9B,0x05,0x42,0xD5,0x44,0xE6,0x80,0xE2,0x14,0x1D,0xAF,0xF7,0x57,0xB2];var tfrfUserType=[0xD4,0x80,0x7E,0xF2,0xCA,0x39,0x46,0x95,0x8E,0x54,0x26,0xCB,0x9E,0x46,0xA7,0x9F];var sepiffUserType=[0xA2,0x39,0x4F,0x52,0x5A,0x9B,0x4f,0x14,0xA2,0x44,0x6C,0x42,0x7C,0x64,0x8D,0xF4];if(arrayEqual(this.usertype,tfxdUserType)){this._procFullBox();if(this._parsing){this.type='tfxd';}this._procField('fragment_absolute_time','uint',this.version===1?64:32);this._procField('fragment_duration','uint',this.version===1?64:32);}if(arrayEqual(this.usertype,tfrfUserType)){this._procFullBox();if(this._parsing){this.type='tfrf';}this._procField('fragment_count','uint',8);this._procEntries('entry',this.fragment_count,function(entry){this._procEntryField(entry,'fragment_absolute_time','uint',this.version===1?64:32);this._procEntryField(entry,'fragment_duration','uint',this.version===1?64:32);});}if(arrayEqual(this.usertype,sepiffUserType)){if(this._parsing){this.type='sepiff';}sencProcessor.call(this);}}function MssFragmentProcessor(config){config=config||{};var context=this.context;var dashMetrics=config.dashMetrics;var playbackController=config.playbackController;var eventBus=config.eventBus;var protectionController=config.protectionController;var ISOBoxer=config.ISOBoxer;var debug=config.debug;var mssFragmentMoovProcessor=void 0,mssFragmentMoofProcessor=void 0,instance=void 0;function setup(){ISOBoxer.addBoxProcessor('uuid',uuidProcessor);ISOBoxer.addBoxProcessor('saio',saioProcessor);ISOBoxer.addBoxProcessor('saiz',saizProcessor);ISOBoxer.addBoxProcessor('senc',sencProcessor);mssFragmentMoovProcessor=(0,_MssFragmentMoovProcessor2.default)(context).create({protectionController:protectionController,constants:config.constants,ISOBoxer:ISOBoxer});mssFragmentMoofProcessor=(0,_MssFragmentMoofProcessor2.default)(context).create({dashMetrics:dashMetrics,playbackController:playbackController,ISOBoxer:ISOBoxer,eventBus:eventBus,debug:debug,errHandler:config.errHandler});}function generateMoov(rep){return mssFragmentMoovProcessor.generateMoov(rep);}function processFragment(e,streamProcessor){if(!e||!e.request||!e.response){throw new Error('e parameter is missing or malformed');}if(e.request.type==='MediaSegment'){// MediaSegment => convert to Smooth Streaming moof format
mssFragmentMoofProcessor.convertFragment(e,streamProcessor);}else if(e.request.type==='FragmentInfoSegment'){// FragmentInfo (live) => update segments list
mssFragmentMoofProcessor.updateSegmentList(e,streamProcessor);// Stop event propagation (FragmentInfo must not be added to buffer)
e.sender=null;}}instance={generateMoov:generateMoov,processFragment:processFragment};setup();return instance;}MssFragmentProcessor.__dashjs_factory_name='MssFragmentProcessor';exports.default=dashjs.FactoryMaker.getClassFactory(MssFragmentProcessor);/* jshint ignore:line */


},{"./MssFragmentMoofProcessor":"../node_modules/dashjs/build/es5/src/mss/MssFragmentMoofProcessor.js","./MssFragmentMoovProcessor":"../node_modules/dashjs/build/es5/src/mss/MssFragmentMoovProcessor.js"}],"../node_modules/dashjs/build/es5/externals/BigInteger.js":[function(require,module,exports) {
var define;
"use strict";var bigInt=function(undefined){"use strict";var BASE=1e7,LOG_BASE=7,MAX_INT=9007199254740992,MAX_INT_ARR=smallToArray(MAX_INT),DEFAULT_ALPHABET="0123456789abcdefghijklmnopqrstuvwxyz";var supportsNativeBigInt=typeof BigInt==="function";function Integer(v,radix,alphabet,caseSensitive){if(typeof v==="undefined")return Integer[0];if(typeof radix!=="undefined")return+radix===10&&!alphabet?parseValue(v):parseBase(v,radix,alphabet,caseSensitive);return parseValue(v);}function BigInteger(value,sign){this.value=value;this.sign=sign;this.isSmall=false;}BigInteger.prototype=Object.create(Integer.prototype);function SmallInteger(value){this.value=value;this.sign=value<0;this.isSmall=true;}SmallInteger.prototype=Object.create(Integer.prototype);function NativeBigInt(value){this.value=value;}NativeBigInt.prototype=Object.create(Integer.prototype);function isPrecise(n){return-MAX_INT<n&&n<MAX_INT;}function smallToArray(n){if(n<1e7)return[n];if(n<1e14)return[n%1e7,Math.floor(n/1e7)];return[n%1e7,Math.floor(n/1e7)%1e7,Math.floor(n/1e14)];}function arrayToSmall(arr){trim(arr);var length=arr.length;if(length<4&&compareAbs(arr,MAX_INT_ARR)<0){switch(length){case 0:return 0;case 1:return arr[0];case 2:return arr[0]+arr[1]*BASE;default:return arr[0]+(arr[1]+arr[2]*BASE)*BASE;}}return arr;}function trim(v){var i=v.length;while(v[--i]===0){}v.length=i+1;}function createArray(length){var x=new Array(length);var i=-1;while(++i<length){x[i]=0;}return x;}function truncate(n){if(n>0)return Math.floor(n);return Math.ceil(n);}function add(a,b){var l_a=a.length,l_b=b.length,r=new Array(l_a),carry=0,base=BASE,sum,i;for(i=0;i<l_b;i++){sum=a[i]+b[i]+carry;carry=sum>=base?1:0;r[i]=sum-carry*base;}while(i<l_a){sum=a[i]+carry;carry=sum===base?1:0;r[i++]=sum-carry*base;}if(carry>0)r.push(carry);return r;}function addAny(a,b){if(a.length>=b.length)return add(a,b);return add(b,a);}function addSmall(a,carry){var l=a.length,r=new Array(l),base=BASE,sum,i;for(i=0;i<l;i++){sum=a[i]-base+carry;carry=Math.floor(sum/base);r[i]=sum-carry*base;carry+=1;}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base);}return r;}BigInteger.prototype.add=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.subtract(n.negate());}var a=this.value,b=n.value;if(n.isSmall){return new BigInteger(addSmall(a,Math.abs(b)),this.sign);}return new BigInteger(addAny(a,b),this.sign);};BigInteger.prototype.plus=BigInteger.prototype.add;SmallInteger.prototype.add=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.subtract(n.negate());}var b=n.value;if(n.isSmall){if(isPrecise(a+b))return new SmallInteger(a+b);b=smallToArray(Math.abs(b));}return new BigInteger(addSmall(b,Math.abs(a)),a<0);};SmallInteger.prototype.plus=SmallInteger.prototype.add;NativeBigInt.prototype.add=function(v){return new NativeBigInt(this.value+parseValue(v).value);};NativeBigInt.prototype.plus=NativeBigInt.prototype.add;function subtract(a,b){var a_l=a.length,b_l=b.length,r=new Array(a_l),borrow=0,base=BASE,i,difference;for(i=0;i<b_l;i++){difference=a[i]-borrow-b[i];if(difference<0){difference+=base;borrow=1;}else borrow=0;r[i]=difference;}for(i=b_l;i<a_l;i++){difference=a[i]-borrow;if(difference<0)difference+=base;else{r[i++]=difference;break;}r[i]=difference;}for(;i<a_l;i++){r[i]=a[i];}trim(r);return r;}function subtractAny(a,b,sign){var value;if(compareAbs(a,b)>=0){value=subtract(a,b);}else{value=subtract(b,a);sign=!sign;}value=arrayToSmall(value);if(typeof value==="number"){if(sign)value=-value;return new SmallInteger(value);}return new BigInteger(value,sign);}function subtractSmall(a,b,sign){var l=a.length,r=new Array(l),carry=-b,base=BASE,i,difference;for(i=0;i<l;i++){difference=a[i]+carry;carry=Math.floor(difference/base);difference%=base;r[i]=difference<0?difference+base:difference;}r=arrayToSmall(r);if(typeof r==="number"){if(sign)r=-r;return new SmallInteger(r);}return new BigInteger(r,sign);}BigInteger.prototype.subtract=function(v){var n=parseValue(v);if(this.sign!==n.sign){return this.add(n.negate());}var a=this.value,b=n.value;if(n.isSmall)return subtractSmall(a,Math.abs(b),this.sign);return subtractAny(a,b,this.sign);};BigInteger.prototype.minus=BigInteger.prototype.subtract;SmallInteger.prototype.subtract=function(v){var n=parseValue(v);var a=this.value;if(a<0!==n.sign){return this.add(n.negate());}var b=n.value;if(n.isSmall){return new SmallInteger(a-b);}return subtractSmall(b,Math.abs(a),a>=0);};SmallInteger.prototype.minus=SmallInteger.prototype.subtract;NativeBigInt.prototype.subtract=function(v){return new NativeBigInt(this.value-parseValue(v).value);};NativeBigInt.prototype.minus=NativeBigInt.prototype.subtract;BigInteger.prototype.negate=function(){return new BigInteger(this.value,!this.sign);};SmallInteger.prototype.negate=function(){var sign=this.sign;var small=new SmallInteger(-this.value);small.sign=!sign;return small;};NativeBigInt.prototype.negate=function(){return new NativeBigInt(-this.value);};BigInteger.prototype.abs=function(){return new BigInteger(this.value,false);};SmallInteger.prototype.abs=function(){return new SmallInteger(Math.abs(this.value));};NativeBigInt.prototype.abs=function(){return new NativeBigInt(this.value>=0?this.value:-this.value);};function multiplyLong(a,b){var a_l=a.length,b_l=b.length,l=a_l+b_l,r=createArray(l),base=BASE,product,carry,i,a_i,b_j;for(i=0;i<a_l;++i){a_i=a[i];for(var j=0;j<b_l;++j){b_j=b[j];product=a_i*b_j+r[i+j];carry=Math.floor(product/base);r[i+j]=product-carry*base;r[i+j+1]+=carry;}}trim(r);return r;}function multiplySmall(a,b){var l=a.length,r=new Array(l),base=BASE,carry=0,product,i;for(i=0;i<l;i++){product=a[i]*b+carry;carry=Math.floor(product/base);r[i]=product-carry*base;}while(carry>0){r[i++]=carry%base;carry=Math.floor(carry/base);}return r;}function shiftLeft(x,n){var r=[];while(n-->0){r.push(0);}return r.concat(x);}function multiplyKaratsuba(x,y){var n=Math.max(x.length,y.length);if(n<=30)return multiplyLong(x,y);n=Math.ceil(n/2);var b=x.slice(n),a=x.slice(0,n),d=y.slice(n),c=y.slice(0,n);var ac=multiplyKaratsuba(a,c),bd=multiplyKaratsuba(b,d),abcd=multiplyKaratsuba(addAny(a,b),addAny(c,d));var product=addAny(addAny(ac,shiftLeft(subtract(subtract(abcd,ac),bd),n)),shiftLeft(bd,2*n));trim(product);return product;}function useKaratsuba(l1,l2){return-.012*l1-.012*l2+15e-6*l1*l2>0;}BigInteger.prototype.multiply=function(v){var n=parseValue(v),a=this.value,b=n.value,sign=this.sign!==n.sign,abs;if(n.isSmall){if(b===0)return Integer[0];if(b===1)return this;if(b===-1)return this.negate();abs=Math.abs(b);if(abs<BASE){return new BigInteger(multiplySmall(a,abs),sign);}b=smallToArray(abs);}if(useKaratsuba(a.length,b.length))return new BigInteger(multiplyKaratsuba(a,b),sign);return new BigInteger(multiplyLong(a,b),sign);};BigInteger.prototype.times=BigInteger.prototype.multiply;function multiplySmallAndArray(a,b,sign){if(a<BASE){return new BigInteger(multiplySmall(b,a),sign);}return new BigInteger(multiplyLong(b,smallToArray(a)),sign);}SmallInteger.prototype._multiplyBySmall=function(a){if(isPrecise(a.value*this.value)){return new SmallInteger(a.value*this.value);}return multiplySmallAndArray(Math.abs(a.value),smallToArray(Math.abs(this.value)),this.sign!==a.sign);};BigInteger.prototype._multiplyBySmall=function(a){if(a.value===0)return Integer[0];if(a.value===1)return this;if(a.value===-1)return this.negate();return multiplySmallAndArray(Math.abs(a.value),this.value,this.sign!==a.sign);};SmallInteger.prototype.multiply=function(v){return parseValue(v)._multiplyBySmall(this);};SmallInteger.prototype.times=SmallInteger.prototype.multiply;NativeBigInt.prototype.multiply=function(v){return new NativeBigInt(this.value*parseValue(v).value);};NativeBigInt.prototype.times=NativeBigInt.prototype.multiply;function square(a){var l=a.length,r=createArray(l+l),base=BASE,product,carry,i,a_i,a_j;for(i=0;i<l;i++){a_i=a[i];carry=0-a_i*a_i;for(var j=i;j<l;j++){a_j=a[j];product=2*(a_i*a_j)+r[i+j]+carry;carry=Math.floor(product/base);r[i+j]=product-carry*base;}r[i+l]=carry;}trim(r);return r;}BigInteger.prototype.square=function(){return new BigInteger(square(this.value),false);};SmallInteger.prototype.square=function(){var value=this.value*this.value;if(isPrecise(value))return new SmallInteger(value);return new BigInteger(square(smallToArray(Math.abs(this.value))),false);};NativeBigInt.prototype.square=function(v){return new NativeBigInt(this.value*this.value);};function divMod1(a,b){var a_l=a.length,b_l=b.length,base=BASE,result=createArray(b.length),divisorMostSignificantDigit=b[b_l-1],lambda=Math.ceil(base/(2*divisorMostSignificantDigit)),remainder=multiplySmall(a,lambda),divisor=multiplySmall(b,lambda),quotientDigit,shift,carry,borrow,i,l,q;if(remainder.length<=a_l)remainder.push(0);divisor.push(0);divisorMostSignificantDigit=divisor[b_l-1];for(shift=a_l-b_l;shift>=0;shift--){quotientDigit=base-1;if(remainder[shift+b_l]!==divisorMostSignificantDigit){quotientDigit=Math.floor((remainder[shift+b_l]*base+remainder[shift+b_l-1])/divisorMostSignificantDigit);}carry=0;borrow=0;l=divisor.length;for(i=0;i<l;i++){carry+=quotientDigit*divisor[i];q=Math.floor(carry/base);borrow+=remainder[shift+i]-(carry-q*base);carry=q;if(borrow<0){remainder[shift+i]=borrow+base;borrow=-1;}else{remainder[shift+i]=borrow;borrow=0;}}while(borrow!==0){quotientDigit-=1;carry=0;for(i=0;i<l;i++){carry+=remainder[shift+i]-base+divisor[i];if(carry<0){remainder[shift+i]=carry+base;carry=0;}else{remainder[shift+i]=carry;carry=1;}}borrow+=carry;}result[shift]=quotientDigit;}remainder=divModSmall(remainder,lambda)[0];return[arrayToSmall(result),arrayToSmall(remainder)];}function divMod2(a,b){var a_l=a.length,b_l=b.length,result=[],part=[],base=BASE,guess,xlen,highx,highy,check;while(a_l){part.unshift(a[--a_l]);trim(part);if(compareAbs(part,b)<0){result.push(0);continue;}xlen=part.length;highx=part[xlen-1]*base+part[xlen-2];highy=b[b_l-1]*base+b[b_l-2];if(xlen>b_l){highx=(highx+1)*base;}guess=Math.ceil(highx/highy);do{check=multiplySmall(b,guess);if(compareAbs(check,part)<=0)break;guess--;}while(guess);result.push(guess);part=subtract(part,check);}result.reverse();return[arrayToSmall(result),arrayToSmall(part)];}function divModSmall(value,lambda){var length=value.length,quotient=createArray(length),base=BASE,i,q,remainder,divisor;remainder=0;for(i=length-1;i>=0;--i){divisor=remainder*base+value[i];q=truncate(divisor/lambda);remainder=divisor-q*lambda;quotient[i]=q|0;}return[quotient,remainder|0];}function divModAny(self,v){var value,n=parseValue(v);if(supportsNativeBigInt){return[new NativeBigInt(self.value/n.value),new NativeBigInt(self.value%n.value)];}var a=self.value,b=n.value;var quotient;if(b===0)throw new Error("Cannot divide by zero");if(self.isSmall){if(n.isSmall){return[new SmallInteger(truncate(a/b)),new SmallInteger(a%b)];}return[Integer[0],self];}if(n.isSmall){if(b===1)return[self,Integer[0]];if(b==-1)return[self.negate(),Integer[0]];var abs=Math.abs(b);if(abs<BASE){value=divModSmall(a,abs);quotient=arrayToSmall(value[0]);var remainder=value[1];if(self.sign)remainder=-remainder;if(typeof quotient==="number"){if(self.sign!==n.sign)quotient=-quotient;return[new SmallInteger(quotient),new SmallInteger(remainder)];}return[new BigInteger(quotient,self.sign!==n.sign),new SmallInteger(remainder)];}b=smallToArray(abs);}var comparison=compareAbs(a,b);if(comparison===-1)return[Integer[0],self];if(comparison===0)return[Integer[self.sign===n.sign?1:-1],Integer[0]];if(a.length+b.length<=200)value=divMod1(a,b);else value=divMod2(a,b);quotient=value[0];var qSign=self.sign!==n.sign,mod=value[1],mSign=self.sign;if(typeof quotient==="number"){if(qSign)quotient=-quotient;quotient=new SmallInteger(quotient);}else quotient=new BigInteger(quotient,qSign);if(typeof mod==="number"){if(mSign)mod=-mod;mod=new SmallInteger(mod);}else mod=new BigInteger(mod,mSign);return[quotient,mod];}BigInteger.prototype.divmod=function(v){var result=divModAny(this,v);return{quotient:result[0],remainder:result[1]};};NativeBigInt.prototype.divmod=SmallInteger.prototype.divmod=BigInteger.prototype.divmod;BigInteger.prototype.divide=function(v){return divModAny(this,v)[0];};NativeBigInt.prototype.over=NativeBigInt.prototype.divide=function(v){return new NativeBigInt(this.value/parseValue(v).value);};SmallInteger.prototype.over=SmallInteger.prototype.divide=BigInteger.prototype.over=BigInteger.prototype.divide;BigInteger.prototype.mod=function(v){return divModAny(this,v)[1];};NativeBigInt.prototype.mod=NativeBigInt.prototype.remainder=function(v){return new NativeBigInt(this.value%parseValue(v).value);};SmallInteger.prototype.remainder=SmallInteger.prototype.mod=BigInteger.prototype.remainder=BigInteger.prototype.mod;BigInteger.prototype.pow=function(v){var n=parseValue(v),a=this.value,b=n.value,value,x,y;if(b===0)return Integer[1];if(a===0)return Integer[0];if(a===1)return Integer[1];if(a===-1)return n.isEven()?Integer[1]:Integer[-1];if(n.sign){return Integer[0];}if(!n.isSmall)throw new Error("The exponent "+n.toString()+" is too large.");if(this.isSmall){if(isPrecise(value=Math.pow(a,b)))return new SmallInteger(truncate(value));}x=this;y=Integer[1];while(true){if(b&1===1){y=y.times(x);--b;}if(b===0)break;b/=2;x=x.square();}return y;};SmallInteger.prototype.pow=BigInteger.prototype.pow;NativeBigInt.prototype.pow=function(v){var n=parseValue(v);var a=this.value,b=n.value;var _0=BigInt(0),_1=BigInt(1),_2=BigInt(2);if(b===_0)return Integer[1];if(a===_0)return Integer[0];if(a===_1)return Integer[1];if(a===BigInt(-1))return n.isEven()?Integer[1]:Integer[-1];if(n.isNegative())return new NativeBigInt(_0);var x=this;var y=Integer[1];while(true){if((b&_1)===_1){y=y.times(x);--b;}if(b===_0)break;b/=_2;x=x.square();}return y;};BigInteger.prototype.modPow=function(exp,mod){exp=parseValue(exp);mod=parseValue(mod);if(mod.isZero())throw new Error("Cannot take modPow with modulus 0");var r=Integer[1],base=this.mod(mod);while(exp.isPositive()){if(base.isZero())return Integer[0];if(exp.isOdd())r=r.multiply(base).mod(mod);exp=exp.divide(2);base=base.square().mod(mod);}return r;};NativeBigInt.prototype.modPow=SmallInteger.prototype.modPow=BigInteger.prototype.modPow;function compareAbs(a,b){if(a.length!==b.length){return a.length>b.length?1:-1;}for(var i=a.length-1;i>=0;i--){if(a[i]!==b[i])return a[i]>b[i]?1:-1;}return 0;}BigInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall)return 1;return compareAbs(a,b);};SmallInteger.prototype.compareAbs=function(v){var n=parseValue(v),a=Math.abs(this.value),b=n.value;if(n.isSmall){b=Math.abs(b);return a===b?0:a>b?1:-1;}return-1;};NativeBigInt.prototype.compareAbs=function(v){var a=this.value;var b=parseValue(v).value;a=a>=0?a:-a;b=b>=0?b:-b;return a===b?0:a>b?1:-1;};BigInteger.prototype.compare=function(v){if(v===Infinity){return-1;}if(v===-Infinity){return 1;}var n=parseValue(v),a=this.value,b=n.value;if(this.sign!==n.sign){return n.sign?1:-1;}if(n.isSmall){return this.sign?-1:1;}return compareAbs(a,b)*(this.sign?-1:1);};BigInteger.prototype.compareTo=BigInteger.prototype.compare;SmallInteger.prototype.compare=function(v){if(v===Infinity){return-1;}if(v===-Infinity){return 1;}var n=parseValue(v),a=this.value,b=n.value;if(n.isSmall){return a==b?0:a>b?1:-1;}if(a<0!==n.sign){return a<0?-1:1;}return a<0?1:-1;};SmallInteger.prototype.compareTo=SmallInteger.prototype.compare;NativeBigInt.prototype.compare=function(v){if(v===Infinity){return-1;}if(v===-Infinity){return 1;}var a=this.value;var b=parseValue(v).value;return a===b?0:a>b?1:-1;};NativeBigInt.prototype.compareTo=NativeBigInt.prototype.compare;BigInteger.prototype.equals=function(v){return this.compare(v)===0;};NativeBigInt.prototype.eq=NativeBigInt.prototype.equals=SmallInteger.prototype.eq=SmallInteger.prototype.equals=BigInteger.prototype.eq=BigInteger.prototype.equals;BigInteger.prototype.notEquals=function(v){return this.compare(v)!==0;};NativeBigInt.prototype.neq=NativeBigInt.prototype.notEquals=SmallInteger.prototype.neq=SmallInteger.prototype.notEquals=BigInteger.prototype.neq=BigInteger.prototype.notEquals;BigInteger.prototype.greater=function(v){return this.compare(v)>0;};NativeBigInt.prototype.gt=NativeBigInt.prototype.greater=SmallInteger.prototype.gt=SmallInteger.prototype.greater=BigInteger.prototype.gt=BigInteger.prototype.greater;BigInteger.prototype.lesser=function(v){return this.compare(v)<0;};NativeBigInt.prototype.lt=NativeBigInt.prototype.lesser=SmallInteger.prototype.lt=SmallInteger.prototype.lesser=BigInteger.prototype.lt=BigInteger.prototype.lesser;BigInteger.prototype.greaterOrEquals=function(v){return this.compare(v)>=0;};NativeBigInt.prototype.geq=NativeBigInt.prototype.greaterOrEquals=SmallInteger.prototype.geq=SmallInteger.prototype.greaterOrEquals=BigInteger.prototype.geq=BigInteger.prototype.greaterOrEquals;BigInteger.prototype.lesserOrEquals=function(v){return this.compare(v)<=0;};NativeBigInt.prototype.leq=NativeBigInt.prototype.lesserOrEquals=SmallInteger.prototype.leq=SmallInteger.prototype.lesserOrEquals=BigInteger.prototype.leq=BigInteger.prototype.lesserOrEquals;BigInteger.prototype.isEven=function(){return(this.value[0]&1)===0;};SmallInteger.prototype.isEven=function(){return(this.value&1)===0;};NativeBigInt.prototype.isEven=function(){return(this.value&BigInt(1))===BigInt(0);};BigInteger.prototype.isOdd=function(){return(this.value[0]&1)===1;};SmallInteger.prototype.isOdd=function(){return(this.value&1)===1;};NativeBigInt.prototype.isOdd=function(){return(this.value&BigInt(1))===BigInt(1);};BigInteger.prototype.isPositive=function(){return!this.sign;};SmallInteger.prototype.isPositive=function(){return this.value>0;};NativeBigInt.prototype.isPositive=SmallInteger.prototype.isPositive;BigInteger.prototype.isNegative=function(){return this.sign;};SmallInteger.prototype.isNegative=function(){return this.value<0;};NativeBigInt.prototype.isNegative=SmallInteger.prototype.isNegative;BigInteger.prototype.isUnit=function(){return false;};SmallInteger.prototype.isUnit=function(){return Math.abs(this.value)===1;};NativeBigInt.prototype.isUnit=function(){return this.abs().value===BigInt(1);};BigInteger.prototype.isZero=function(){return false;};SmallInteger.prototype.isZero=function(){return this.value===0;};NativeBigInt.prototype.isZero=function(){return this.value===BigInt(0);};BigInteger.prototype.isDivisibleBy=function(v){var n=parseValue(v);if(n.isZero())return false;if(n.isUnit())return true;if(n.compareAbs(2)===0)return this.isEven();return this.mod(n).isZero();};NativeBigInt.prototype.isDivisibleBy=SmallInteger.prototype.isDivisibleBy=BigInteger.prototype.isDivisibleBy;function isBasicPrime(v){var n=v.abs();if(n.isUnit())return false;if(n.equals(2)||n.equals(3)||n.equals(5))return true;if(n.isEven()||n.isDivisibleBy(3)||n.isDivisibleBy(5))return false;if(n.lesser(49))return true;}function millerRabinTest(n,a){var nPrev=n.prev(),b=nPrev,r=0,d,t,i,x;while(b.isEven()){b=b.divide(2),r++;}next:for(i=0;i<a.length;i++){if(n.lesser(a[i]))continue;x=bigInt(a[i]).modPow(b,n);if(x.isUnit()||x.equals(nPrev))continue;for(d=r-1;d!=0;d--){x=x.square().mod(n);if(x.isUnit())return false;if(x.equals(nPrev))continue next;}return false;}return true;}BigInteger.prototype.isPrime=function(strict){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var bits=n.bitLength();if(bits<=64)return millerRabinTest(n,[2,3,5,7,11,13,17,19,23,29,31,37]);var logN=Math.log(2)*bits.toJSNumber();var t=Math.ceil(strict===true?2*Math.pow(logN,2):logN);for(var a=[],i=0;i<t;i++){a.push(bigInt(i+2));}return millerRabinTest(n,a);};NativeBigInt.prototype.isPrime=SmallInteger.prototype.isPrime=BigInteger.prototype.isPrime;BigInteger.prototype.isProbablePrime=function(iterations){var isPrime=isBasicPrime(this);if(isPrime!==undefined)return isPrime;var n=this.abs();var t=iterations===undefined?5:iterations;for(var a=[],i=0;i<t;i++){a.push(bigInt.randBetween(2,n.minus(2)));}return millerRabinTest(n,a);};NativeBigInt.prototype.isProbablePrime=SmallInteger.prototype.isProbablePrime=BigInteger.prototype.isProbablePrime;BigInteger.prototype.modInv=function(n){var t=bigInt.zero,newT=bigInt.one,r=parseValue(n),newR=this.abs(),q,lastT,lastR;while(!newR.isZero()){q=r.divide(newR);lastT=t;lastR=r;t=newT;r=newR;newT=lastT.subtract(q.multiply(newT));newR=lastR.subtract(q.multiply(newR));}if(!r.isUnit())throw new Error(this.toString()+" and "+n.toString()+" are not co-prime");if(t.compare(0)===-1){t=t.add(n);}if(this.isNegative()){return t.negate();}return t;};NativeBigInt.prototype.modInv=SmallInteger.prototype.modInv=BigInteger.prototype.modInv;BigInteger.prototype.next=function(){var value=this.value;if(this.sign){return subtractSmall(value,1,this.sign);}return new BigInteger(addSmall(value,1),this.sign);};SmallInteger.prototype.next=function(){var value=this.value;if(value+1<MAX_INT)return new SmallInteger(value+1);return new BigInteger(MAX_INT_ARR,false);};NativeBigInt.prototype.next=function(){return new NativeBigInt(this.value+BigInt(1));};BigInteger.prototype.prev=function(){var value=this.value;if(this.sign){return new BigInteger(addSmall(value,1),true);}return subtractSmall(value,1,this.sign);};SmallInteger.prototype.prev=function(){var value=this.value;if(value-1>-MAX_INT)return new SmallInteger(value-1);return new BigInteger(MAX_INT_ARR,true);};NativeBigInt.prototype.prev=function(){return new NativeBigInt(this.value-BigInt(1));};var powersOfTwo=[1];while(2*powersOfTwo[powersOfTwo.length-1]<=BASE){powersOfTwo.push(2*powersOfTwo[powersOfTwo.length-1]);}var powers2Length=powersOfTwo.length,highestPower2=powersOfTwo[powers2Length-1];function shift_isSmall(n){return Math.abs(n)<=BASE;}BigInteger.prototype.shiftLeft=function(v){var n=parseValue(v).toJSNumber();if(!shift_isSmall(n)){throw new Error(String(n)+" is too large for shifting.");}if(n<0)return this.shiftRight(-n);var result=this;if(result.isZero())return result;while(n>=powers2Length){result=result.multiply(highestPower2);n-=powers2Length-1;}return result.multiply(powersOfTwo[n]);};NativeBigInt.prototype.shiftLeft=SmallInteger.prototype.shiftLeft=BigInteger.prototype.shiftLeft;BigInteger.prototype.shiftRight=function(v){var remQuo;var n=parseValue(v).toJSNumber();if(!shift_isSmall(n)){throw new Error(String(n)+" is too large for shifting.");}if(n<0)return this.shiftLeft(-n);var result=this;while(n>=powers2Length){if(result.isZero()||result.isNegative()&&result.isUnit())return result;remQuo=divModAny(result,highestPower2);result=remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];n-=powers2Length-1;}remQuo=divModAny(result,powersOfTwo[n]);return remQuo[1].isNegative()?remQuo[0].prev():remQuo[0];};NativeBigInt.prototype.shiftRight=SmallInteger.prototype.shiftRight=BigInteger.prototype.shiftRight;function bitwise(x,y,fn){y=parseValue(y);var xSign=x.isNegative(),ySign=y.isNegative();var xRem=xSign?x.not():x,yRem=ySign?y.not():y;var xDigit=0,yDigit=0;var xDivMod=null,yDivMod=null;var result=[];while(!xRem.isZero()||!yRem.isZero()){xDivMod=divModAny(xRem,highestPower2);xDigit=xDivMod[1].toJSNumber();if(xSign){xDigit=highestPower2-1-xDigit;}yDivMod=divModAny(yRem,highestPower2);yDigit=yDivMod[1].toJSNumber();if(ySign){yDigit=highestPower2-1-yDigit;}xRem=xDivMod[0];yRem=yDivMod[0];result.push(fn(xDigit,yDigit));}var sum=fn(xSign?1:0,ySign?1:0)!==0?bigInt(-1):bigInt(0);for(var i=result.length-1;i>=0;i-=1){sum=sum.multiply(highestPower2).add(bigInt(result[i]));}return sum;}BigInteger.prototype.not=function(){return this.negate().prev();};NativeBigInt.prototype.not=SmallInteger.prototype.not=BigInteger.prototype.not;BigInteger.prototype.and=function(n){return bitwise(this,n,function(a,b){return a&b;});};NativeBigInt.prototype.and=SmallInteger.prototype.and=BigInteger.prototype.and;BigInteger.prototype.or=function(n){return bitwise(this,n,function(a,b){return a|b;});};NativeBigInt.prototype.or=SmallInteger.prototype.or=BigInteger.prototype.or;BigInteger.prototype.xor=function(n){return bitwise(this,n,function(a,b){return a^b;});};NativeBigInt.prototype.xor=SmallInteger.prototype.xor=BigInteger.prototype.xor;var LOBMASK_I=1<<30,LOBMASK_BI=(BASE&-BASE)*(BASE&-BASE)|LOBMASK_I;function roughLOB(n){var v=n.value,x=typeof v==="number"?v|LOBMASK_I:typeof v==="bigint"?v|BigInt(LOBMASK_I):v[0]+v[1]*BASE|LOBMASK_BI;return x&-x;}function integerLogarithm(value,base){if(base.compareTo(value)<=0){var tmp=integerLogarithm(value,base.square(base));var p=tmp.p;var e=tmp.e;var t=p.multiply(base);return t.compareTo(value)<=0?{p:t,e:e*2+1}:{p:p,e:e*2};}return{p:bigInt(1),e:0};}BigInteger.prototype.bitLength=function(){var n=this;if(n.compareTo(bigInt(0))<0){n=n.negate().subtract(bigInt(1));}if(n.compareTo(bigInt(0))===0){return bigInt(0);}return bigInt(integerLogarithm(n,bigInt(2)).e).add(bigInt(1));};NativeBigInt.prototype.bitLength=SmallInteger.prototype.bitLength=BigInteger.prototype.bitLength;function max(a,b){a=parseValue(a);b=parseValue(b);return a.greater(b)?a:b;}function min(a,b){a=parseValue(a);b=parseValue(b);return a.lesser(b)?a:b;}function gcd(a,b){a=parseValue(a).abs();b=parseValue(b).abs();if(a.equals(b))return a;if(a.isZero())return b;if(b.isZero())return a;var c=Integer[1],d,t;while(a.isEven()&&b.isEven()){d=min(roughLOB(a),roughLOB(b));a=a.divide(d);b=b.divide(d);c=c.multiply(d);}while(a.isEven()){a=a.divide(roughLOB(a));}do{while(b.isEven()){b=b.divide(roughLOB(b));}if(a.greater(b)){t=b;b=a;a=t;}b=b.subtract(a);}while(!b.isZero());return c.isUnit()?a:a.multiply(c);}function lcm(a,b){a=parseValue(a).abs();b=parseValue(b).abs();return a.divide(gcd(a,b)).multiply(b);}function randBetween(a,b){a=parseValue(a);b=parseValue(b);var low=min(a,b),high=max(a,b);var range=high.subtract(low).add(1);if(range.isSmall)return low.add(Math.floor(Math.random()*range));var digits=toBase(range,BASE).value;var result=[],restricted=true;for(var i=0;i<digits.length;i++){var top=restricted?digits[i]:BASE;var digit=truncate(Math.random()*top);result.push(digit);if(digit<top)restricted=false;}return low.add(Integer.fromArray(result,BASE,false));}var parseBase=function parseBase(text,base,alphabet,caseSensitive){alphabet=alphabet||DEFAULT_ALPHABET;text=String(text);if(!caseSensitive){text=text.toLowerCase();alphabet=alphabet.toLowerCase();}var length=text.length;var i;var absBase=Math.abs(base);var alphabetValues={};for(i=0;i<alphabet.length;i++){alphabetValues[alphabet[i]]=i;}for(i=0;i<length;i++){var c=text[i];if(c==="-")continue;if(c in alphabetValues){if(alphabetValues[c]>=absBase){if(c==="1"&&absBase===1)continue;throw new Error(c+" is not a valid digit in base "+base+".");}}}base=parseValue(base);var digits=[];var isNegative=text[0]==="-";for(i=isNegative?1:0;i<text.length;i++){var c=text[i];if(c in alphabetValues)digits.push(parseValue(alphabetValues[c]));else if(c==="<"){var start=i;do{i++;}while(text[i]!==">"&&i<text.length);digits.push(parseValue(text.slice(start+1,i)));}else throw new Error(c+" is not a valid character");}return parseBaseFromArray(digits,base,isNegative);};function parseBaseFromArray(digits,base,isNegative){var val=Integer[0],pow=Integer[1],i;for(i=digits.length-1;i>=0;i--){val=val.add(digits[i].times(pow));pow=pow.times(base);}return isNegative?val.negate():val;}function stringify(digit,alphabet){alphabet=alphabet||DEFAULT_ALPHABET;if(digit<alphabet.length){return alphabet[digit];}return"<"+digit+">";}function toBase(n,base){base=bigInt(base);if(base.isZero()){if(n.isZero())return{value:[0],isNegative:false};throw new Error("Cannot convert nonzero numbers to base 0.");}if(base.equals(-1)){if(n.isZero())return{value:[0],isNegative:false};if(n.isNegative())return{value:[].concat.apply([],Array.apply(null,Array(-n.toJSNumber())).map(Array.prototype.valueOf,[1,0])),isNegative:false};var arr=Array.apply(null,Array(n.toJSNumber()-1)).map(Array.prototype.valueOf,[0,1]);arr.unshift([1]);return{value:[].concat.apply([],arr),isNegative:false};}var neg=false;if(n.isNegative()&&base.isPositive()){neg=true;n=n.abs();}if(base.isUnit()){if(n.isZero())return{value:[0],isNegative:false};return{value:Array.apply(null,Array(n.toJSNumber())).map(Number.prototype.valueOf,1),isNegative:neg};}var out=[];var left=n,divmod;while(left.isNegative()||left.compareAbs(base)>=0){divmod=left.divmod(base);left=divmod.quotient;var digit=divmod.remainder;if(digit.isNegative()){digit=base.minus(digit).abs();left=left.next();}out.push(digit.toJSNumber());}out.push(left.toJSNumber());return{value:out.reverse(),isNegative:neg};}function toBaseString(n,base,alphabet){var arr=toBase(n,base);return(arr.isNegative?"-":"")+arr.value.map(function(x){return stringify(x,alphabet);}).join("");}BigInteger.prototype.toArray=function(radix){return toBase(this,radix);};SmallInteger.prototype.toArray=function(radix){return toBase(this,radix);};NativeBigInt.prototype.toArray=function(radix){return toBase(this,radix);};BigInteger.prototype.toString=function(radix,alphabet){if(radix===undefined)radix=10;if(radix!==10)return toBaseString(this,radix,alphabet);var v=this.value,l=v.length,str=String(v[--l]),zeros="0000000",digit;while(--l>=0){digit=String(v[l]);str+=zeros.slice(digit.length)+digit;}var sign=this.sign?"-":"";return sign+str;};SmallInteger.prototype.toString=function(radix,alphabet){if(radix===undefined)radix=10;if(radix!=10)return toBaseString(this,radix,alphabet);return String(this.value);};NativeBigInt.prototype.toString=SmallInteger.prototype.toString;NativeBigInt.prototype.toJSON=BigInteger.prototype.toJSON=SmallInteger.prototype.toJSON=function(){return this.toString();};BigInteger.prototype.valueOf=function(){return parseInt(this.toString(),10);};BigInteger.prototype.toJSNumber=BigInteger.prototype.valueOf;SmallInteger.prototype.valueOf=function(){return this.value;};SmallInteger.prototype.toJSNumber=SmallInteger.prototype.valueOf;NativeBigInt.prototype.valueOf=NativeBigInt.prototype.toJSNumber=function(){return parseInt(this.toString(),10);};function parseStringValue(v){if(isPrecise(+v)){var x=+v;if(x===truncate(x))return supportsNativeBigInt?new NativeBigInt(BigInt(x)):new SmallInteger(x);throw new Error("Invalid integer: "+v);}var sign=v[0]==="-";if(sign)v=v.slice(1);var split=v.split(/e/i);if(split.length>2)throw new Error("Invalid integer: "+split.join("e"));if(split.length===2){var exp=split[1];if(exp[0]==="+")exp=exp.slice(1);exp=+exp;if(exp!==truncate(exp)||!isPrecise(exp))throw new Error("Invalid integer: "+exp+" is not a valid exponent.");var text=split[0];var decimalPlace=text.indexOf(".");if(decimalPlace>=0){exp-=text.length-decimalPlace-1;text=text.slice(0,decimalPlace)+text.slice(decimalPlace+1);}if(exp<0)throw new Error("Cannot include negative exponent part for integers");text+=new Array(exp+1).join("0");v=text;}var isValid=/^([0-9][0-9]*)$/.test(v);if(!isValid)throw new Error("Invalid integer: "+v);if(supportsNativeBigInt){return new NativeBigInt(BigInt(sign?"-"+v:v));}var r=[],max=v.length,l=LOG_BASE,min=max-l;while(max>0){r.push(+v.slice(min,max));min-=l;if(min<0)min=0;max-=l;}trim(r);return new BigInteger(r,sign);}function parseNumberValue(v){if(supportsNativeBigInt){return new NativeBigInt(BigInt(v));}if(isPrecise(v)){if(v!==truncate(v))throw new Error(v+" is not an integer.");return new SmallInteger(v);}return parseStringValue(v.toString());}function parseValue(v){if(typeof v==="number"){return parseNumberValue(v);}if(typeof v==="string"){return parseStringValue(v);}if(typeof v==="bigint"){return new NativeBigInt(v);}return v;}for(var i=0;i<1e3;i++){Integer[i]=parseValue(i);if(i>0)Integer[-i]=parseValue(-i);}Integer.one=Integer[1];Integer.zero=Integer[0];Integer.minusOne=Integer[-1];Integer.max=max;Integer.min=min;Integer.gcd=gcd;Integer.lcm=lcm;Integer.isInstance=function(x){return x instanceof BigInteger||x instanceof SmallInteger||x instanceof NativeBigInt;};Integer.randBetween=randBetween;Integer.fromArray=function(digits,base,isNegative){return parseBaseFromArray(digits.map(parseValue),parseValue(base||10),isNegative);};return Integer;}();if(typeof module!=="undefined"&&module.hasOwnProperty("exports")){module.exports=bigInt;}if(typeof define==="function"&&define.amd){define("big-integer",[],function(){return bigInt;});}


},{}],"../node_modules/dashjs/build/es5/src/mss/parser/MssParser.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _BigInteger=require('../../../externals/BigInteger');var _BigInteger2=_interopRequireDefault(_BigInteger);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function MssParser(config){config=config||{};var BASE64=config.BASE64;var debug=config.debug;var constants=config.constants;var manifestModel=config.manifestModel;var mediaPlayerModel=config.mediaPlayerModel;var settings=config.settings;var DEFAULT_TIME_SCALE=10000000.0;var SUPPORTED_CODECS=['AAC','AACL','AVC1','H264','TTML','DFXP'];// MPEG-DASH Role and accessibility mapping for text tracks according to ETSI TS 103 285 v1.1.1 (section 7.1.2)
var ROLE={'CAPT':'main','SUBT':'alternate','DESC':'main'};var ACCESSIBILITY={'DESC':'2'};var samplingFrequencyIndex={96000:0x0,88200:0x1,64000:0x2,48000:0x3,44100:0x4,32000:0x5,24000:0x6,22050:0x7,16000:0x8,12000:0x9,11025:0xA,8000:0xB,7350:0xC};var mimeTypeMap={'video':'video/mp4','audio':'audio/mp4','text':'application/mp4'};var instance=void 0,logger=void 0,initialBufferSettings=void 0;function setup(){logger=debug.getLogger(instance);}function mapPeriod(smoothStreamingMedia,timescale){var period={};var streams=void 0,adaptation=void 0;// For each StreamIndex node, create an AdaptationSet element
period.AdaptationSet_asArray=[];streams=smoothStreamingMedia.getElementsByTagName('StreamIndex');for(var i=0;i<streams.length;i++){adaptation=mapAdaptationSet(streams[i],timescale);if(adaptation!==null){period.AdaptationSet_asArray.push(adaptation);}}if(period.AdaptationSet_asArray.length>0){period.AdaptationSet=period.AdaptationSet_asArray.length>1?period.AdaptationSet_asArray:period.AdaptationSet_asArray[0];}return period;}function mapAdaptationSet(streamIndex,timescale){var adaptationSet={};var representations=[];var segmentTemplate=void 0;var qualityLevels=void 0,representation=void 0,segments=void 0,i=void 0;var name=streamIndex.getAttribute('Name');var type=streamIndex.getAttribute('Type');var lang=streamIndex.getAttribute('Language');var fallBackId=lang?type+'_'+lang:type;adaptationSet.id=name||fallBackId;adaptationSet.contentType=type;adaptationSet.lang=lang||'und';adaptationSet.mimeType=mimeTypeMap[type];adaptationSet.subType=streamIndex.getAttribute('Subtype');adaptationSet.maxWidth=streamIndex.getAttribute('MaxWidth');adaptationSet.maxHeight=streamIndex.getAttribute('MaxHeight');// Map text tracks subTypes to MPEG-DASH AdaptationSet role and accessibility (see ETSI TS 103 285 v1.1.1, section 7.1.2)
if(adaptationSet.subType){if(ROLE[adaptationSet.subType]){var role={schemeIdUri:'urn:mpeg:dash:role:2011',value:ROLE[adaptationSet.subType]};adaptationSet.Role=role;adaptationSet.Role_asArray=[role];}if(ACCESSIBILITY[adaptationSet.subType]){var accessibility={schemeIdUri:'urn:tva:metadata:cs:AudioPurposeCS:2007',value:ACCESSIBILITY[adaptationSet.subType]};adaptationSet.Accessibility=accessibility;adaptationSet.Accessibility_asArray=[accessibility];}}// Create a SegmentTemplate with a SegmentTimeline
segmentTemplate=mapSegmentTemplate(streamIndex,timescale);qualityLevels=streamIndex.getElementsByTagName('QualityLevel');// For each QualityLevel node, create a Representation element
for(i=0;i<qualityLevels.length;i++){// Propagate BaseURL and mimeType
qualityLevels[i].BaseURL=adaptationSet.BaseURL;qualityLevels[i].mimeType=adaptationSet.mimeType;// Set quality level id
qualityLevels[i].Id=adaptationSet.id+'_'+qualityLevels[i].getAttribute('Index');// Map Representation to QualityLevel
representation=mapRepresentation(qualityLevels[i],streamIndex);if(representation!==null){// Copy SegmentTemplate into Representation
representation.SegmentTemplate=segmentTemplate;representations.push(representation);}}if(representations.length===0){return null;}adaptationSet.Representation=representations.length>1?representations:representations[0];adaptationSet.Representation_asArray=representations;// Set SegmentTemplate
adaptationSet.SegmentTemplate=segmentTemplate;segments=segmentTemplate.SegmentTimeline.S_asArray;return adaptationSet;}function mapRepresentation(qualityLevel,streamIndex){var representation={};var type=streamIndex.getAttribute('Type');var fourCCValue=null;representation.id=qualityLevel.Id;representation.bandwidth=parseInt(qualityLevel.getAttribute('Bitrate'),10);representation.mimeType=qualityLevel.mimeType;representation.width=parseInt(qualityLevel.getAttribute('MaxWidth'),10);representation.height=parseInt(qualityLevel.getAttribute('MaxHeight'),10);fourCCValue=qualityLevel.getAttribute('FourCC');// If FourCC not defined at QualityLevel level, then get it from StreamIndex level
if(fourCCValue===null||fourCCValue===''){fourCCValue=streamIndex.getAttribute('FourCC');}// If still not defined (optionnal for audio stream, see https://msdn.microsoft.com/en-us/library/ff728116%28v=vs.95%29.aspx),
// then we consider the stream is an audio AAC stream
if(fourCCValue===null||fourCCValue===''){if(type===constants.AUDIO){fourCCValue='AAC';}else if(type===constants.VIDEO){logger.debug('FourCC is not defined whereas it is required for a QualityLevel element for a StreamIndex of type "video"');return null;}}// Check if codec is supported
if(SUPPORTED_CODECS.indexOf(fourCCValue.toUpperCase())===-1){// Do not send warning
logger.warn('Codec not supported: '+fourCCValue);return null;}// Get codecs value according to FourCC field
if(fourCCValue==='H264'||fourCCValue==='AVC1'){representation.codecs=getH264Codec(qualityLevel);}else if(fourCCValue.indexOf('AAC')>=0){representation.codecs=getAACCodec(qualityLevel,fourCCValue);representation.audioSamplingRate=parseInt(qualityLevel.getAttribute('SamplingRate'),10);representation.audioChannels=parseInt(qualityLevel.getAttribute('Channels'),10);}else if(fourCCValue.indexOf('TTML')||fourCCValue.indexOf('DFXP')){representation.codecs=constants.STPP;}representation.codecPrivateData=''+qualityLevel.getAttribute('CodecPrivateData');representation.BaseURL=qualityLevel.BaseURL;return representation;}function getH264Codec(qualityLevel){var codecPrivateData=qualityLevel.getAttribute('CodecPrivateData').toString();var nalHeader=void 0,avcoti=void 0;// Extract from the CodecPrivateData field the hexadecimal representation of the following
// three bytes in the sequence parameter set NAL unit.
// => Find the SPS nal header
nalHeader=/00000001[0-9]7/.exec(codecPrivateData);// => Find the 6 characters after the SPS nalHeader (if it exists)
avcoti=nalHeader&&nalHeader[0]?codecPrivateData.substr(codecPrivateData.indexOf(nalHeader[0])+10,6):undefined;return'avc1.'+avcoti;}function getAACCodec(qualityLevel,fourCCValue){var samplingRate=parseInt(qualityLevel.getAttribute('SamplingRate'),10);var codecPrivateData=qualityLevel.getAttribute('CodecPrivateData').toString();var objectType=0;var codecPrivateDataHex=void 0,arr16=void 0,indexFreq=void 0,extensionSamplingFrequencyIndex=void 0;//chrome problem, in implicit AAC HE definition, so when AACH is detected in FourCC
//set objectType to 5 => strange, it should be 2
if(fourCCValue==='AACH'){objectType=0x05;}//if codecPrivateData is empty, build it :
if(codecPrivateData===undefined||codecPrivateData===''){objectType=0x02;//AAC Main Low Complexity => object Type = 2
indexFreq=samplingFrequencyIndex[samplingRate];if(fourCCValue==='AACH'){// 4 bytes :     XXXXX         XXXX          XXXX             XXXX                  XXXXX      XXX   XXXXXXX
//           ' ObjectType' 'Freq Index' 'Channels value'   'Extens Sampl Freq'  'ObjectType'  'GAS' 'alignment = 0'
objectType=0x05;// High Efficiency AAC Profile = object Type = 5 SBR
codecPrivateData=new Uint8Array(4);extensionSamplingFrequencyIndex=samplingFrequencyIndex[samplingRate*2];// in HE AAC Extension Sampling frequence
// equals to SamplingRate*2
//Freq Index is present for 3 bits in the first byte, last bit is in the second
codecPrivateData[0]=objectType<<3|indexFreq>>1;codecPrivateData[1]=indexFreq<<7|qualityLevel.Channels<<3|extensionSamplingFrequencyIndex>>1;codecPrivateData[2]=extensionSamplingFrequencyIndex<<7|0x02<<2;// origin object type equals to 2 => AAC Main Low Complexity
codecPrivateData[3]=0x0;//alignment bits
arr16=new Uint16Array(2);arr16[0]=(codecPrivateData[0]<<8)+codecPrivateData[1];arr16[1]=(codecPrivateData[2]<<8)+codecPrivateData[3];//convert decimal to hex value
codecPrivateDataHex=arr16[0].toString(16);codecPrivateDataHex=arr16[0].toString(16)+arr16[1].toString(16);}else{// 2 bytes :     XXXXX         XXXX          XXXX              XXX
//           ' ObjectType' 'Freq Index' 'Channels value'   'GAS = 000'
codecPrivateData=new Uint8Array(2);//Freq Index is present for 3 bits in the first byte, last bit is in the second
codecPrivateData[0]=objectType<<3|indexFreq>>1;codecPrivateData[1]=indexFreq<<7|parseInt(qualityLevel.getAttribute('Channels'),10)<<3;// put the 2 bytes in an 16 bits array
arr16=new Uint16Array(1);arr16[0]=(codecPrivateData[0]<<8)+codecPrivateData[1];//convert decimal to hex value
codecPrivateDataHex=arr16[0].toString(16);}codecPrivateData=''+codecPrivateDataHex;codecPrivateData=codecPrivateData.toUpperCase();qualityLevel.setAttribute('CodecPrivateData',codecPrivateData);}else if(objectType===0){objectType=(parseInt(codecPrivateData.substr(0,2),16)&0xF8)>>3;}return'mp4a.40.'+objectType;}function mapSegmentTemplate(streamIndex,timescale){var segmentTemplate={};var mediaUrl=void 0,streamIndexTimeScale=void 0,url=void 0;url=streamIndex.getAttribute('Url');mediaUrl=url?url.replace('{bitrate}','$Bandwidth$'):null;mediaUrl=mediaUrl?mediaUrl.replace('{start time}','$Time$'):null;streamIndexTimeScale=streamIndex.getAttribute('TimeScale');streamIndexTimeScale=streamIndexTimeScale?parseFloat(streamIndexTimeScale):timescale;segmentTemplate.media=mediaUrl;segmentTemplate.timescale=streamIndexTimeScale;segmentTemplate.SegmentTimeline=mapSegmentTimeline(streamIndex,segmentTemplate.timescale);return segmentTemplate;}function mapSegmentTimeline(streamIndex,timescale){var segmentTimeline={};var chunks=streamIndex.getElementsByTagName('c');var segments=[];var segment=void 0,prevSegment=void 0,tManifest=void 0,i=void 0,j=void 0,r=void 0;var duration=0;for(i=0;i<chunks.length;i++){segment={};// Get time 't' attribute value
tManifest=chunks[i].getAttribute('t');// => segment.tManifest = original timestamp value as a string (for constructing the fragment request url, see DashHandler)
// => segment.t = number value of timestamp (maybe rounded value, but only for 0.1 microsecond)
if(tManifest&&(0,_BigInteger2.default)(tManifest).greater((0,_BigInteger2.default)(Number.MAX_SAFE_INTEGER))){segment.tManifest=tManifest;}segment.t=parseFloat(tManifest);// Get duration 'd' attribute value
segment.d=parseFloat(chunks[i].getAttribute('d'));// If 't' not defined for first segment then t=0
if(i===0&&!segment.t){segment.t=0;}if(i>0){prevSegment=segments[segments.length-1];// Update previous segment duration if not defined
if(!prevSegment.d){if(prevSegment.tManifest){prevSegment.d=(0,_BigInteger2.default)(tManifest).subtract((0,_BigInteger2.default)(prevSegment.tManifest)).toJSNumber();}else{prevSegment.d=segment.t-prevSegment.t;}duration+=prevSegment.d;}// Set segment absolute timestamp if not set in manifest
if(!segment.t){if(prevSegment.tManifest){segment.tManifest=(0,_BigInteger2.default)(prevSegment.tManifest).add((0,_BigInteger2.default)(prevSegment.d)).toString();segment.t=parseFloat(segment.tManifest);}else{segment.t=prevSegment.t+prevSegment.d;}}}if(segment.d){duration+=segment.d;}// Create new segment
segments.push(segment);// Support for 'r' attribute (i.e. "repeat" as in MPEG-DASH)
r=parseFloat(chunks[i].getAttribute('r'));if(r){for(j=0;j<r-1;j++){prevSegment=segments[segments.length-1];segment={};segment.t=prevSegment.t+prevSegment.d;segment.d=prevSegment.d;if(prevSegment.tManifest){segment.tManifest=(0,_BigInteger2.default)(prevSegment.tManifest).add((0,_BigInteger2.default)(prevSegment.d)).toString();}duration+=segment.d;segments.push(segment);}}}segmentTimeline.S=segments;segmentTimeline.S_asArray=segments;segmentTimeline.duration=duration/timescale;return segmentTimeline;}function getKIDFromProtectionHeader(protectionHeader){var prHeader=void 0,wrmHeader=void 0,xmlReader=void 0,KID=void 0;// Get PlayReady header as byte array (base64 decoded)
prHeader=BASE64.decodeArray(protectionHeader.firstChild.data);// Get Right Management header (WRMHEADER) from PlayReady header
wrmHeader=getWRMHeaderFromPRHeader(prHeader);if(wrmHeader){// Convert from multi-byte to unicode
wrmHeader=new Uint16Array(wrmHeader.buffer);// Convert to string
wrmHeader=String.fromCharCode.apply(null,wrmHeader);// Parse <WRMHeader> to get KID field value
xmlReader=new DOMParser().parseFromString(wrmHeader,'application/xml');KID=xmlReader.querySelector('KID').textContent;// Get KID (base64 decoded) as byte array
KID=BASE64.decodeArray(KID);// Convert UUID from little-endian to big-endian
convertUuidEndianness(KID);}return KID;}function getWRMHeaderFromPRHeader(prHeader){var length=void 0,recordCount=void 0,recordType=void 0,recordLength=void 0,recordValue=void 0;var i=0;// Parse PlayReady header
// Length - 32 bits (LE format)
length=(prHeader[i+3]<<24)+(prHeader[i+2]<<16)+(prHeader[i+1]<<8)+prHeader[i];i+=4;// Record count - 16 bits (LE format)
recordCount=(prHeader[i+1]<<8)+prHeader[i];i+=2;// Parse records
while(i<prHeader.length){// Record type - 16 bits (LE format)
recordType=(prHeader[i+1]<<8)+prHeader[i];i+=2;// Check if Rights Management header (record type = 0x01)
if(recordType===0x01){// Record length - 16 bits (LE format)
recordLength=(prHeader[i+1]<<8)+prHeader[i];i+=2;// Record value => contains <WRMHEADER>
recordValue=new Uint8Array(recordLength);recordValue.set(prHeader.subarray(i,i+recordLength));return recordValue;}}return null;}function convertUuidEndianness(uuid){swapBytes(uuid,0,3);swapBytes(uuid,1,2);swapBytes(uuid,4,5);swapBytes(uuid,6,7);}function swapBytes(bytes,pos1,pos2){var temp=bytes[pos1];bytes[pos1]=bytes[pos2];bytes[pos2]=temp;}function createPRContentProtection(protectionHeader){var pro={__text:protectionHeader.firstChild.data,__prefix:'mspr'};return{schemeIdUri:'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95',value:'com.microsoft.playready',pro:pro,pro_asArray:pro};}function createWidevineContentProtection(KID){var widevineCP={schemeIdUri:'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed',value:'com.widevine.alpha'};if(!KID)return widevineCP;// Create Widevine CENC header (Protocol Buffer) with KID value
var wvCencHeader=new Uint8Array(2+KID.length);wvCencHeader[0]=0x12;wvCencHeader[1]=0x10;wvCencHeader.set(KID,2);// Create a pssh box
var length=12/* box length, type, version and flags */+16/* SystemID */+4/* data length */+wvCencHeader.length;var pssh=new Uint8Array(length);var i=0;// Set box length value
pssh[i++]=(length&0xFF000000)>>24;pssh[i++]=(length&0x00FF0000)>>16;pssh[i++]=(length&0x0000FF00)>>8;pssh[i++]=length&0x000000FF;// Set type ('pssh'), version (0) and flags (0)
pssh.set([0x70,0x73,0x73,0x68,0x00,0x00,0x00,0x00],i);i+=8;// Set SystemID ('edef8ba9-79d6-4ace-a3c8-27dcd51d21ed')
pssh.set([0xed,0xef,0x8b,0xa9,0x79,0xd6,0x4a,0xce,0xa3,0xc8,0x27,0xdc,0xd5,0x1d,0x21,0xed],i);i+=16;// Set data length value
pssh[i++]=(wvCencHeader.length&0xFF000000)>>24;pssh[i++]=(wvCencHeader.length&0x00FF0000)>>16;pssh[i++]=(wvCencHeader.length&0x0000FF00)>>8;pssh[i++]=wvCencHeader.length&0x000000FF;// Copy Widevine CENC header
pssh.set(wvCencHeader,i);// Convert to BASE64 string
pssh=String.fromCharCode.apply(null,pssh);pssh=BASE64.encodeASCII(pssh);widevineCP.pssh={__text:pssh};return widevineCP;}function processManifest(xmlDoc,manifestLoadedTime){var manifest={};var contentProtections=[];var smoothStreamingMedia=xmlDoc.getElementsByTagName('SmoothStreamingMedia')[0];var protection=xmlDoc.getElementsByTagName('Protection')[0];var protectionHeader=null;var period=void 0,adaptations=void 0,contentProtection=void 0,KID=void 0,timestampOffset=void 0,startTime=void 0,segments=void 0,timescale=void 0,segmentDuration=void 0,i=void 0,j=void 0;// Set manifest node properties
manifest.protocol='MSS';manifest.profiles='urn:mpeg:dash:profile:isoff-live:2011';manifest.type=smoothStreamingMedia.getAttribute('IsLive')==='TRUE'?'dynamic':'static';timescale=smoothStreamingMedia.getAttribute('TimeScale');manifest.timescale=timescale?parseFloat(timescale):DEFAULT_TIME_SCALE;var dvrWindowLength=parseFloat(smoothStreamingMedia.getAttribute('DVRWindowLength'));// If the DVRWindowLength field is omitted for a live presentation or set to 0, the DVR window is effectively infinite
if(manifest.type==='dynamic'&&(dvrWindowLength===0||isNaN(dvrWindowLength))){dvrWindowLength=Infinity;}// Star-over
if(dvrWindowLength===0&&smoothStreamingMedia.getAttribute('CanSeek')==='TRUE'){dvrWindowLength=Infinity;}if(dvrWindowLength>0){manifest.timeShiftBufferDepth=dvrWindowLength/manifest.timescale;}var duration=parseFloat(smoothStreamingMedia.getAttribute('Duration'));manifest.mediaPresentationDuration=duration===0?Infinity:duration/manifest.timescale;// By default, set minBufferTime to 2 sec. (but set below according to video segment duration)
manifest.minBufferTime=2;manifest.ttmlTimeIsRelative=true;// Live manifest with Duration = start-over
if(manifest.type==='dynamic'&&duration>0){manifest.type='static';// We set timeShiftBufferDepth to initial duration, to be used by MssFragmentController to update segment timeline
manifest.timeShiftBufferDepth=duration/manifest.timescale;// Duration will be set according to current segment timeline duration (see below)
}if(manifest.type==='dynamic'&&manifest.timeShiftBufferDepth<Infinity){manifest.refreshManifestOnSwitchTrack=true;// Refresh manifest when switching tracks
manifest.doNotUpdateDVRWindowOnBufferUpdated=true;// DVRWindow is update by MssFragmentMoofPocessor based on tfrf boxes
manifest.ignorePostponeTimePeriod=true;// Never update manifest
}// Map period node to manifest root node
manifest.Period=mapPeriod(smoothStreamingMedia,manifest.timescale);manifest.Period_asArray=[manifest.Period];// Initialize period start time
period=manifest.Period;period.start=0;// Uncomment to test live to static manifests
// if (manifest.type !== 'static') {
//     manifest.type = 'static';
//     manifest.mediaPresentationDuration = manifest.timeShiftBufferDepth;
//     manifest.timeShiftBufferDepth = null;
// }
// ContentProtection node
if(protection!==undefined){protectionHeader=xmlDoc.getElementsByTagName('ProtectionHeader')[0];// Some packagers put newlines into the ProtectionHeader base64 string, which is not good
// because this cannot be correctly parsed. Let's just filter out any newlines found in there.
protectionHeader.firstChild.data=protectionHeader.firstChild.data.replace(/\n|\r/g,'');// Get KID (in CENC format) from protection header
KID=getKIDFromProtectionHeader(protectionHeader);// Create ContentProtection for PlayReady
contentProtection=createPRContentProtection(protectionHeader);contentProtection['cenc:default_KID']=KID;contentProtections.push(contentProtection);// Create ContentProtection for Widevine (as a CENC protection)
contentProtection=createWidevineContentProtection(KID);contentProtection['cenc:default_KID']=KID;contentProtections.push(contentProtection);manifest.ContentProtection=contentProtections;manifest.ContentProtection_asArray=contentProtections;}adaptations=period.AdaptationSet_asArray;for(i=0;i<adaptations.length;i+=1){adaptations[i].SegmentTemplate.initialization='$Bandwidth$';// Propagate content protection information into each adaptation
if(manifest.ContentProtection!==undefined){adaptations[i].ContentProtection=manifest.ContentProtection;adaptations[i].ContentProtection_asArray=manifest.ContentProtection_asArray;}if(adaptations[i].contentType==='video'){// Get video segment duration
segmentDuration=adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray[0].d/adaptations[i].SegmentTemplate.timescale;// Set minBufferTime to one segment duration
manifest.minBufferTime=segmentDuration;if(manifest.type==='dynamic'){// Set availabilityStartTime
segments=adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;var endTime=(segments[segments.length-1].t+segments[segments.length-1].d)/adaptations[i].SegmentTemplate.timescale*1000;manifest.availabilityStartTime=new Date(manifestLoadedTime.getTime()-endTime);// Match timeShiftBufferDepth to video segment timeline duration
if(manifest.timeShiftBufferDepth>0&&manifest.timeShiftBufferDepth!==Infinity&&manifest.timeShiftBufferDepth>adaptations[i].SegmentTemplate.SegmentTimeline.duration){manifest.timeShiftBufferDepth=adaptations[i].SegmentTemplate.SegmentTimeline.duration;}}}}// Cap minBufferTime to timeShiftBufferDepth
manifest.minBufferTime=Math.min(manifest.minBufferTime,manifest.timeShiftBufferDepth?manifest.timeShiftBufferDepth:Infinity);// In case of live streams:
// 1- configure player buffering properties according to target live delay
// 2- adapt live delay and then buffers length in case timeShiftBufferDepth is too small compared to target live delay (see PlaybackController.computeLiveDelay())
if(manifest.type==='dynamic'){var targetLiveDelay=mediaPlayerModel.getLiveDelay();if(!targetLiveDelay){var liveDelayFragmentCount=settings.get().streaming.liveDelayFragmentCount!==null&&!isNaN(settings.get().streaming.liveDelayFragmentCount)?settings.get().streaming.liveDelayFragmentCount:4;targetLiveDelay=segmentDuration*liveDelayFragmentCount;}var targetDelayCapping=Math.max(manifest.timeShiftBufferDepth-10/*END_OF_PLAYLIST_PADDING*/,manifest.timeShiftBufferDepth/2);var liveDelay=Math.min(targetDelayCapping,targetLiveDelay);// Consider a margin of one segment in order to avoid Precondition Failed errors (412), for example if audio and video are not correctly synchronized
var bufferTime=liveDelay-segmentDuration;// Store initial buffer settings
initialBufferSettings={'streaming':{'liveDelay':settings.get().streaming.liveDelay,'stableBufferTime':settings.get().streaming.stableBufferTime,'bufferTimeAtTopQuality':settings.get().streaming.bufferTimeAtTopQuality,'bufferTimeAtTopQualityLongForm':settings.get().streaming.bufferTimeAtTopQualityLongForm}};settings.update({'streaming':{'liveDelay':liveDelay,'stableBufferTime':bufferTime,'bufferTimeAtTopQuality':bufferTime,'bufferTimeAtTopQualityLongForm':bufferTime}});}// Delete Content Protection under root manifest node
delete manifest.ContentProtection;delete manifest.ContentProtection_asArray;// In case of VOD streams, check if start time is greater than 0
// Then determine timestamp offset according to higher audio/video start time
// (use case = live stream delinearization)
if(manifest.type==='static'){// In case of start-over stream and manifest reloading (due to track switch)
// we consider previous timestampOffset to keep timelines synchronized
var prevManifest=manifestModel.getValue();if(prevManifest&&prevManifest.timestampOffset){timestampOffset=prevManifest.timestampOffset;}else{for(i=0;i<adaptations.length;i++){if(adaptations[i].contentType===constants.AUDIO||adaptations[i].contentType===constants.VIDEO){segments=adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;startTime=segments[0].t;if(timestampOffset===undefined){timestampOffset=startTime;}timestampOffset=Math.min(timestampOffset,startTime);// Correct content duration according to minimum adaptation's segment timeline duration
// in order to force <video> element sending 'ended' event
manifest.mediaPresentationDuration=Math.min(manifest.mediaPresentationDuration,adaptations[i].SegmentTemplate.SegmentTimeline.duration);}}}if(timestampOffset>0){// Patch segment templates timestamps and determine period start time (since audio/video should not be aligned to 0)
manifest.timestampOffset=timestampOffset;for(i=0;i<adaptations.length;i++){segments=adaptations[i].SegmentTemplate.SegmentTimeline.S_asArray;for(j=0;j<segments.length;j++){if(!segments[j].tManifest){segments[j].tManifest=segments[j].t.toString();}segments[j].t-=timestampOffset;}if(adaptations[i].contentType===constants.AUDIO||adaptations[i].contentType===constants.VIDEO){period.start=Math.max(segments[0].t,period.start);adaptations[i].SegmentTemplate.presentationTimeOffset=period.start;}}period.start/=manifest.timescale;}}// Floor the duration to get around precision differences between segments timestamps and MSE buffer timestamps
// and then avoid 'ended' event not being raised
manifest.mediaPresentationDuration=Math.floor(manifest.mediaPresentationDuration*1000)/1000;period.duration=manifest.mediaPresentationDuration;return manifest;}function parseDOM(data){var xmlDoc=null;if(window.DOMParser){var parser=new window.DOMParser();xmlDoc=parser.parseFromString(data,'text/xml');if(xmlDoc.getElementsByTagName('parsererror').length>0){throw new Error('parsing the manifest failed');}}return xmlDoc;}function getMatchers(){return null;}function getIron(){return null;}function internalParse(data){var xmlDoc=null;var manifest=null;var startTime=window.performance.now();// Parse the MSS XML manifest
xmlDoc=parseDOM(data);var xmlParseTime=window.performance.now();if(xmlDoc===null){return null;}// Convert MSS manifest into DASH manifest
manifest=processManifest(xmlDoc,new Date());var mss2dashTime=window.performance.now();logger.info('Parsing complete: (xmlParsing: '+(xmlParseTime-startTime).toPrecision(3)+'ms, mss2dash: '+(mss2dashTime-xmlParseTime).toPrecision(3)+'ms, total: '+((mss2dashTime-startTime)/1000).toPrecision(3)+'s)');return manifest;}function reset(){// Restore initial buffer settings
if(initialBufferSettings){settings.update(initialBufferSettings);}}instance={parse:internalParse,getMatchers:getMatchers,getIron:getIron,reset:reset};setup();return instance;}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 *//**
 * @module MssParser
 * @ignore
 * @param {Object} config object
 */MssParser.__dashjs_factory_name='MssParser';exports.default=dashjs.FactoryMaker.getClassFactory(MssParser);/* jshint ignore:line */


},{"../../../externals/BigInteger":"../node_modules/dashjs/build/es5/externals/BigInteger.js"}],"../node_modules/dashjs/build/es5/src/mss/MssHandler.js":[function(require,module,exports) {
'use strict';Object.defineProperty(exports,"__esModule",{value:true});var _DataChunk=require('../streaming/vo/DataChunk');var _DataChunk2=_interopRequireDefault(_DataChunk);var _FragmentRequest=require('../streaming/vo/FragmentRequest');var _FragmentRequest2=_interopRequireDefault(_FragmentRequest);var _MssFragmentInfoController=require('./MssFragmentInfoController');var _MssFragmentInfoController2=_interopRequireDefault(_MssFragmentInfoController);var _MssFragmentProcessor=require('./MssFragmentProcessor');var _MssFragmentProcessor2=_interopRequireDefault(_MssFragmentProcessor);var _MssParser=require('./parser/MssParser');var _MssParser2=_interopRequireDefault(_MssParser);var _MssErrors=require('./errors/MssErrors');var _MssErrors2=_interopRequireDefault(_MssErrors);var _DashJSError=require('../streaming/vo/DashJSError');var _DashJSError2=_interopRequireDefault(_DashJSError);var _InitCache=require('../streaming/utils/InitCache');var _InitCache2=_interopRequireDefault(_InitCache);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */function MssHandler(config){config=config||{};var context=this.context;var eventBus=config.eventBus;var events=config.events;var constants=config.constants;var initSegmentType=config.initSegmentType;var dashMetrics=config.dashMetrics;var playbackController=config.playbackController;var streamController=config.streamController;var protectionController=config.protectionController;var mssFragmentProcessor=(0,_MssFragmentProcessor2.default)(context).create({dashMetrics:dashMetrics,playbackController:playbackController,protectionController:protectionController,streamController:streamController,eventBus:eventBus,constants:constants,ISOBoxer:config.ISOBoxer,debug:config.debug,errHandler:config.errHandler});var mssParser=void 0,fragmentInfoControllers=void 0,initCache=void 0,instance=void 0;function setup(){fragmentInfoControllers=[];initCache=(0,_InitCache2.default)(context).getInstance();}function getStreamProcessor(type){return streamController.getActiveStreamProcessors().filter(function(processor){return processor.getType()===type;})[0];}function getFragmentInfoController(type){return fragmentInfoControllers.filter(function(controller){return controller.getType()===type;})[0];}function createDataChunk(request,streamId,endFragment){var chunk=new _DataChunk2.default();chunk.streamId=streamId;chunk.mediaInfo=request.mediaInfo;chunk.segmentType=request.type;chunk.start=request.startTime;chunk.duration=request.duration;chunk.end=chunk.start+chunk.duration;chunk.index=request.index;chunk.quality=request.quality;chunk.representationId=request.representationId;chunk.endFragment=endFragment;return chunk;}function startFragmentInfoControllers(){// Create MssFragmentInfoControllers for each StreamProcessor of active stream (only for audio, video or fragmentedText)
var processors=streamController.getActiveStreamProcessors();processors.forEach(function(processor){if(processor.getType()===constants.VIDEO||processor.getType()===constants.AUDIO||processor.getType()===constants.FRAGMENTED_TEXT){var fragmentInfoController=getFragmentInfoController(processor.getType());if(!fragmentInfoController){fragmentInfoController=(0,_MssFragmentInfoController2.default)(context).create({streamProcessor:processor,baseURLController:config.baseURLController,debug:config.debug});fragmentInfoController.initialize();fragmentInfoControllers.push(fragmentInfoController);}fragmentInfoController.start();}});}function stopFragmentInfoControllers(){fragmentInfoControllers.forEach(function(c){c.reset();});fragmentInfoControllers=[];}function onInitFragmentNeeded(e){var streamProcessor=getStreamProcessor(e.mediaType);if(!streamProcessor)return;// Create init segment request
var representationController=streamProcessor.getRepresentationController();var representation=representationController.getCurrentRepresentation();var mediaInfo=streamProcessor.getMediaInfo();var request=new _FragmentRequest2.default();request.mediaType=representation.adaptation.type;request.type=initSegmentType;request.range=representation.range;request.quality=representation.index;request.mediaInfo=mediaInfo;request.representationId=representation.id;var chunk=createDataChunk(request,mediaInfo.streamInfo.id,e.type!==events.FRAGMENT_LOADING_PROGRESS);try{// Generate init segment (moov)
chunk.bytes=mssFragmentProcessor.generateMoov(representation);// Notify init segment has been loaded
eventBus.trigger(events.INIT_FRAGMENT_LOADED,{chunk:chunk},{streamId:mediaInfo.streamInfo.id,mediaType:representation.adaptation.type});}catch(e){config.errHandler.error(new _DashJSError2.default(e.code,e.message,e.data));}// Change the sender value to stop event to be propagated
e.sender=null;}function onSegmentMediaLoaded(e){if(e.error)return;var streamProcessor=getStreamProcessor(e.request.mediaType);if(!streamProcessor)return;// Process moof to transcode it from MSS to DASH (or to update segment timeline for SegmentInfo fragments)
mssFragmentProcessor.processFragment(e,streamProcessor);if(e.request.type==='FragmentInfoSegment'){// If FragmentInfo loaded, then notify corresponding MssFragmentInfoController
var fragmentInfoController=getFragmentInfoController(e.request.mediaType);if(fragmentInfoController){fragmentInfoController.fragmentInfoLoaded(e);}}// Start MssFragmentInfoControllers in case of start-over streams
var manifestInfo=e.request.mediaInfo.streamInfo.manifestInfo;if(!manifestInfo.isDynamic&&manifestInfo.DVRWindowSize!==Infinity){startFragmentInfoControllers();}}function onPlaybackPaused(){if(playbackController.getIsDynamic()&&playbackController.getTime()!==0){startFragmentInfoControllers();}}function onPlaybackSeekAsked(){if(playbackController.getIsDynamic()&&playbackController.getTime()!==0){startFragmentInfoControllers();}}function onTTMLPreProcess(ttmlSubtitles){if(!ttmlSubtitles||!ttmlSubtitles.data){return;}ttmlSubtitles.data=ttmlSubtitles.data.replace(/http:\/\/www.w3.org\/2006\/10\/ttaf1/gi,'http://www.w3.org/ns/ttml');}function registerEvents(){eventBus.on(events.INIT_FRAGMENT_NEEDED,onInitFragmentNeeded,instance,{priority:dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH});/* jshint ignore:line */eventBus.on(events.PLAYBACK_PAUSED,onPlaybackPaused,instance,{priority:dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH});/* jshint ignore:line */eventBus.on(events.PLAYBACK_SEEK_ASKED,onPlaybackSeekAsked,instance,{priority:dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH});/* jshint ignore:line */eventBus.on(events.FRAGMENT_LOADING_COMPLETED,onSegmentMediaLoaded,instance,{priority:dashjs.FactoryMaker.getSingletonFactoryByName(eventBus.getClassName()).EVENT_PRIORITY_HIGH});/* jshint ignore:line */eventBus.on(events.TTML_TO_PARSE,onTTMLPreProcess,instance);}function reset(){if(mssParser){mssParser.reset();mssParser=undefined;}eventBus.off(events.INIT_FRAGMENT_NEEDED,onInitFragmentNeeded,this);eventBus.off(events.PLAYBACK_PAUSED,onPlaybackPaused,this);eventBus.off(events.PLAYBACK_SEEK_ASKED,onPlaybackSeekAsked,this);eventBus.off(events.FRAGMENT_LOADING_COMPLETED,onSegmentMediaLoaded,this);eventBus.off(events.TTML_TO_PARSE,onTTMLPreProcess,this);// Reset FragmentInfoControllers
stopFragmentInfoControllers();}function createMssParser(){mssParser=(0,_MssParser2.default)(context).create(config);return mssParser;}instance={reset:reset,createMssParser:createMssParser,registerEvents:registerEvents};setup();return instance;}MssHandler.__dashjs_factory_name='MssHandler';var factory=dashjs.FactoryMaker.getClassFactory(MssHandler);/* jshint ignore:line */factory.errors=_MssErrors2.default;dashjs.FactoryMaker.updateClassFactory(MssHandler.__dashjs_factory_name,factory);/* jshint ignore:line */exports.default=factory;/* jshint ignore:line */


},{"../streaming/vo/DataChunk":"../node_modules/dashjs/build/es5/src/streaming/vo/DataChunk.js","../streaming/vo/FragmentRequest":"../node_modules/dashjs/build/es5/src/streaming/vo/FragmentRequest.js","./MssFragmentInfoController":"../node_modules/dashjs/build/es5/src/mss/MssFragmentInfoController.js","./MssFragmentProcessor":"../node_modules/dashjs/build/es5/src/mss/MssFragmentProcessor.js","./parser/MssParser":"../node_modules/dashjs/build/es5/src/mss/parser/MssParser.js","./errors/MssErrors":"../node_modules/dashjs/build/es5/src/mss/errors/MssErrors.js","../streaming/vo/DashJSError":"../node_modules/dashjs/build/es5/src/streaming/vo/DashJSError.js","../streaming/utils/InitCache":"../node_modules/dashjs/build/es5/src/streaming/utils/InitCache.js"}],"../node_modules/dashjs/build/es5/src/mss/index.js":[function(require,module,exports) {
var global = arguments[3];
'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.MssHandler=undefined;var _MssHandler=require('./MssHandler');var _MssHandler2=_interopRequireDefault(_MssHandler);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}// Shove both of these into the global scope
var context=typeof window!=='undefined'&&window||global;/**
 * The copyright in this software is being made available under the BSD License,
 * included below. This software may be subject to other third party and contributor
 * rights, including patent rights, and no such rights are granted under this license.
 *
 * Copyright (c) 2013, Dash Industry Forum.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *  * Redistributions of source code must retain the above copyright notice, this
 *  list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *  this list of conditions and the following disclaimer in the documentation and/or
 *  other materials provided with the distribution.
 *  * Neither the name of Dash Industry Forum nor the names of its
 *  contributors may be used to endorse or promote products derived from this software
 *  without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY
 *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 */var dashjs=context.dashjs;if(!dashjs){dashjs=context.dashjs={};}dashjs.MssHandler=_MssHandler2.default;exports.default=dashjs;exports.MssHandler=_MssHandler2.default;


},{"./MssHandler":"../node_modules/dashjs/build/es5/src/mss/MssHandler.js"}],"../src/playerTechs/mss_player.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MssPlayer = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _interface = require("./interface");

var _dashjs = require("dashjs");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

// eslint-disable-next-line no-unused-vars
var mss = require("dashjs/build/es5/src/mss");

var MssPlayer =
/*#__PURE__*/
function (_PlayerTechInterface) {
  (0, _inherits2.default)(MssPlayer, _PlayerTechInterface);

  var _super = _createSuper(MssPlayer);

  function MssPlayer(wrapperId, manifestUrl) {
    (0, _classCallCheck2.default)(this, MssPlayer);
    return _super.call(this, wrapperId, manifestUrl);
  }

  (0, _createClass2.default)(MssPlayer, [{
    key: "load",
    value: function load() {
      var _this = this;

      return new Promise(function (resolve, reject) {
        var mediaPlayer = (0, _dashjs.MediaPlayer)().create();
        mediaPlayer.initialize();
        mediaPlayer.attachView(_this.videoElement_);
        mediaPlayer.attachSource(_this.manifestUrl_);
        mediaPlayer.on(_dashjs.MediaPlayer.events.MANIFEST_LOADED, function () {
          resolve();
        });
        mediaPlayer.on(_dashjs.MediaPlayer.events.ERROR, function (ev) {
          reject("Failed to load Mss Player: ".concat(ev.error.message));
        });
        _this.mediaPlayer_ = mediaPlayer;
      });
    }
  }, {
    key: "destroy",
    value: function destroy() {
      if (this.mediaPlayer_) {
        this.mediaPlayer_.reset();
      }

      (0, _get2.default)((0, _getPrototypeOf2.default)(MssPlayer.prototype), "destroy", this).call(this);
    }
  }, {
    key: "isLive",
    get: function get() {
      return this.mediaPlayer_.isDynamic();
    }
  }]);
  return MssPlayer;
}(_interface.PlayerTechInterface);

exports.MssPlayer = MssPlayer;
},{"@babel/runtime/helpers/classCallCheck":"../node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"../node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/get":"../node_modules/@babel/runtime/helpers/get.js","@babel/runtime/helpers/inherits":"../node_modules/@babel/runtime/helpers/inherits.js","@babel/runtime/helpers/possibleConstructorReturn":"../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"../node_modules/@babel/runtime/helpers/getPrototypeOf.js","./interface":"../src/playerTechs/interface.js","dashjs":"../node_modules/dashjs/build/es5/index.js","dashjs/build/es5/src/mss":"../node_modules/dashjs/build/es5/src/mss/index.js"}],"../src/playerTechs/mp4_player.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Mp4Player = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _interface = require("./interface");

var Shaka = _interopRequireWildcard(require("shaka-player"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var Mp4Player =
/*#__PURE__*/
function (_PlayerTechInterface) {
  (0, _inherits2.default)(Mp4Player, _PlayerTechInterface);

  var _super = _createSuper(Mp4Player);

  function Mp4Player(wrapperId, manifestUrl) {
    (0, _classCallCheck2.default)(this, Mp4Player);
    return _super.call(this, wrapperId, manifestUrl);
  }

  (0, _createClass2.default)(Mp4Player, [{
    key: "load",
    value: function load() {
      var _this = this;

      return new Promise(function (resolve) {
        var shakap = new Shaka.Player(_this.videoElement_);
        shakap.load(_this.manifestUrl_).then(function () {
          resolve();
        });
        _this.shakap_ = shakap;
      });
    }
  }, {
    key: "destroy",
    value: function destroy() {
      if (this.shakap_) {
        this.shakap_.destroy();
      }

      (0, _get2.default)((0, _getPrototypeOf2.default)(Mp4Player.prototype), "destroy", this).call(this);
    }
  }, {
    key: "isLive",
    get: function get() {
      return this.shakap_.isLive();
    }
  }]);
  return Mp4Player;
}(_interface.PlayerTechInterface); //   load() {
//     return new Promise(resolve => {
//       // let hls = new Hls();
//       if (this.videoElement_.canPlayType("video/mp4")) {
//         this.videoElement_.src = this.manifestUrl_;
//         console.log("mp4 true")
//         resolve();
//       } 
//       // else if (Hls.isSupported) {
//       //   hls.attachMedia(this.videoElement_);
//       //   hls.on(Hls.Events.MEDIA_ATTACHED, () => {
//       //     hls.loadSource(this.manifestUrl_);
//       //   });
//       //   hls.on(Hls.Events.MANIFEST_PARSED, () => {
//       //     //resolve();
//       //   });
//       //   hls.on(Hls.Events.LEVEL_LOADED, (event, data) => {
//       //     this.isLive_ = data.details.live;
//       //     resolve();
//       //   });
//       //   this.hls_ = hls;
//       // }
//     });
//   }
//   get isLive() {
//     // if (this.hls_) {
//     //   return this.isLive_;
//     // } else {
//     //   return isNaN(this.videoElement_.duration);
//     // }
//   }
//   destroy() {
//     // if (this.hls_) {
//     //   this.hls_.destroy();
//     // }
//     super.destroy();
//   }
// }


exports.Mp4Player = Mp4Player;
},{"@babel/runtime/helpers/classCallCheck":"../node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"../node_modules/@babel/runtime/helpers/createClass.js","@babel/runtime/helpers/get":"../node_modules/@babel/runtime/helpers/get.js","@babel/runtime/helpers/inherits":"../node_modules/@babel/runtime/helpers/inherits.js","@babel/runtime/helpers/possibleConstructorReturn":"../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","@babel/runtime/helpers/getPrototypeOf":"../node_modules/@babel/runtime/helpers/getPrototypeOf.js","./interface":"../src/playerTechs/interface.js","shaka-player":"../node_modules/shaka-player/dist/shaka-player.compiled.js"}],"../src/utils/constants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEFAULT_OPTIONS = exports.ENUM_TYPE_MP4 = exports.ENUM_TYPE_MSS = exports.ENUM_TYPE_MPEGDASH = exports.ENUM_TYPE_HLS = exports.CONTENT_TYPE_MAP = void 0;
var ENUM_TYPE_NO_CONTENT_TYPE = "BAD_CONTENT_TYPE";
var CONTENT_TYPE_MAP = {
  "application/x-mpegURL": ENUM_TYPE_HLS,
  "application/octet-stream": ENUM_TYPE_NO_CONTENT_TYPE,
  "binary/octet-stream": ENUM_TYPE_NO_CONTENT_TYPE,
  "application/vnd.apple.mpegurl": ENUM_TYPE_HLS,
  "application/dash+xml": ENUM_TYPE_MPEGDASH,
  "application/vnd.apple.mpegurl;charset=UTF-8": ENUM_TYPE_HLS,
  "application/vnd.ms-sstr+xml": ENUM_TYPE_MSS,
  "video/mp4": ENUM_TYPE_MP4
};
exports.CONTENT_TYPE_MAP = CONTENT_TYPE_MAP;
var ENUM_TYPE_HLS = "HLS";
exports.ENUM_TYPE_HLS = ENUM_TYPE_HLS;
var ENUM_TYPE_MPEGDASH = "MPD";
exports.ENUM_TYPE_MPEGDASH = ENUM_TYPE_MPEGDASH;
var ENUM_TYPE_MSS = "MSS";
exports.ENUM_TYPE_MSS = ENUM_TYPE_MSS;
var ENUM_TYPE_MP4 = "MP4";
exports.ENUM_TYPE_MP4 = ENUM_TYPE_MP4;
var DEFAULT_OPTIONS = {
  skin: true
};
exports.DEFAULT_OPTIONS = DEFAULT_OPTIONS;
},{}],"../src/player_tech_factory.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PlayerTechFactory = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _hls_player = require("./playerTechs/hls_player");

var _dash_player = require("./playerTechs/dash_player");

var _mss_player = require("./playerTechs/mss_player");

var _mp4_player = require("./playerTechs/mp4_player");

var _constants = require("./utils/constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var PlayerTechFactory =
/*#__PURE__*/
function () {
  function PlayerTechFactory(wrapperId, manifestUrl) {
    (0, _classCallCheck2.default)(this, PlayerTechFactory);
    this.wrapperId_ = wrapperId;
    this.manifestUrl_ = manifestUrl;
  }

  (0, _createClass2.default)(PlayerTechFactory, [{
    key: "constructPlayerTech",
    value: function constructPlayerTech() {
      var _this = this;

      return new Promise(function (resolve, reject) {
        _this.determineType_(_this.manifestUrl_).then(function (type) {
          var player;

          if (type === _constants.ENUM_TYPE_HLS) {
            player = new _hls_player.HlsPlayer(_this.wrapperId_, _this.manifestUrl_);
          } else if (type === _constants.ENUM_TYPE_MPEGDASH) {
            player = new _dash_player.DashPlayer(_this.wrapperId_, _this.manifestUrl_);
          } else if (type === _constants.ENUM_TYPE_MSS) {
            player = new _mss_player.MssPlayer(_this.wrapperId_, _this.manifestUrl_);
          } else if (type === _constants.ENUM_TYPE_MP4) {
            player = new _mp4_player.Mp4Player(_this.wrapperId_, _this.manifestUrl_);
          } else {
            reject("Internal error: no available player tech found!");
          }

          player.load().then(function () {
            resolve(player);
          }).catch(reject);
        }).catch(reject);
      });
    }
  }, {
    key: "determineType_",
    value: function determineType_(uri) {
      return new Promise(function (resolve, reject) {
        fetch(uri).then(function (resp) {
          var type = _constants.CONTENT_TYPE_MAP[resp.headers["content-type"]];

          if (!type) {
            if (uri.match(/\.m3u8/)) {
              type = _constants.ENUM_TYPE_HLS;
            } else if (uri.match(/\.mpd/)) {
              type = _constants.ENUM_TYPE_MPEGDASH;
            } else if (uri.match(/\/Manifest/)) {
              type = _constants.ENUM_TYPE_MSS;
            } else if (uri.match(/\/manifest/)) {
              type = _constants.ENUM_TYPE_MSS;
            } else if (uri.match(/\.mp4/)) {
              type = _constants.ENUM_TYPE_MP4;
            } else if (uri.match(/\.MP4/)) {
              type = _constants.ENUM_TYPE_MP4;
            }
          }

          resolve(type);
        }).catch(function (err) {
          console.error(err);
          reject(err);
        });
      });
    }
  }]);
  return PlayerTechFactory;
}();

exports.PlayerTechFactory = PlayerTechFactory;
},{"@babel/runtime/helpers/classCallCheck":"../node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"../node_modules/@babel/runtime/helpers/createClass.js","./playerTechs/hls_player":"../src/playerTechs/hls_player.js","./playerTechs/dash_player":"../src/playerTechs/dash_player.js","./playerTechs/mss_player":"../src/playerTechs/mss_player.js","./playerTechs/mp4_player":"../src/playerTechs/mp4_player.js","./utils/constants":"../src/utils/constants.js"}],"../src/player_skin.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PlayerSkin = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// import { EnvironmentPlugin } from "webpack";
var PlayerSkin =
/*#__PURE__*/
function () {
  function PlayerSkin(playerInterface) {
    (0, _classCallCheck2.default)(this, PlayerSkin);
    this.playerInterface_ = playerInterface;
  }

  (0, _createClass2.default)(PlayerSkin, [{
    key: "init",
    value: function init() {
      return this.setupControllers_(this.playerInterface_.wrapper);
    } // showBigPlayButton() {
    //   this.bigPlayButton_.className = "player-btn-big player-btn-big-visible";
    // }

  }, {
    key: "setupControllers_",
    value: function setupControllers_(wrapperElement) {
      var _this2 = this;

      var controllerElement = document.createElement("div");
      controllerElement.className = "player-controller player-controller-hidden";

      var _this = this; // let logoElement = document.createElement("div");
      // logoElement.className = "player-logo";
      // controllerElement.appendChild(logoElement);


      if (!this.playerInterface_.isLive) {
        controllerElement.appendChild(this.setupTimeline_());
      } //第二行元素容器


      var buttonElement = document.createElement("div");
      buttonElement.className = "player-buttons";
      controllerElement.appendChild(buttonElement);
      var buttonRightControls = document.createElement("div");
      buttonRightControls.className = "p_right_controls";
      var buttonLeftControls = document.createElement("div");
      buttonLeftControls.className = "p_left_controls";
      buttonElement.appendChild(buttonLeftControls);
      var btnTogglePlay = document.createElement("div");
      btnTogglePlay.className = "player-btn-toggle-play player-btn-play";
      btnTogglePlay.addEventListener("mouseover", function (event) {
        if (!_this2.playerInterface_.isPlaying) {
          event.target.className += " player-btn-play-hover";
        } else {
          event.target.className += " player-btn-pause-hover";
        }
      });
      btnTogglePlay.addEventListener("mouseout", function (event) {
        if (!_this2.playerInterface_.isPlaying) {
          event.target.className = event.target.className.replace("player-btn-play-hover", "");
          event.target.className += " player-btn-play";
        } else {
          event.target.className = event.target.className.replace(" player-btn-pause-hover", "");
          event.target.className += " player-btn-pause";
        }
      });
      btnTogglePlay.addEventListener("click", function (event) {
        if (!_this2.playerInterface_.isPlaying) {
          _this2.playerInterface_.play();

          event.target.className += " player-btn-pause-hover";
        } else {
          _this2.playerInterface_.pause();

          event.target.className += " player-btn-play-hover";
        }
      }); // controllerElement.appendChild(btnTogglePlay);

      buttonLeftControls.appendChild(btnTogglePlay);
      var bigPlayButton = document.createElement("div");
      bigPlayButton.className = "player-btn-big player-btn-big-hidden";
      wrapperElement.appendChild(bigPlayButton);
      this.bigPlayButton_ = bigPlayButton;
      this.bigPlayButton_.addEventListener("click", function () {
        _this2.playerInterface_.play();
      }); // 时间元素

      var timeDisplay = document.createElement("div");
      timeDisplay.className = "p_time_display";
      buttonLeftControls.appendChild(timeDisplay);
      var slantElement = document.createElement("div");
      slantElement.className = "player-timeline-slant";
      var positionElement = document.createElement("div");
      positionElement.className = "player-timeline-position";
      timeDisplay.appendChild(positionElement);
      timeDisplay.appendChild(slantElement);
      var durationElement = document.createElement("div");
      durationElement.className = "player-timeline-duration";

      if (!_this.playerInterface_.isLive) {
        timeDisplay.appendChild(durationElement);
        this.timelineUpdateTimer = setInterval(function () {
          slantElement.innerHTML = "/";
          durationElement.innerHTML = _this2.formatPlayerTime_(_this2.playerInterface_.duration);
          var pos = _this2.playerInterface_.position;
          positionElement.innerHTML = _this2.formatPlayerTime_(pos); // let progress = (pos / this.playerInterface_.duration) * 100; // percentage
          // timelineElement.setAttribute(
          //   "style",
          //   `background: linear-gradient(90deg, #F0861E, #FEA645 ${progress}%, #FFFFFF ${progress}%)`,
          // );
        }, 1000);
      } //分享


      var shareElement = document.createElement("div");
      shareElement.className = "player-btn-share player-btn-toggle-share"; // buttonElement.append(shareElement);

      shareElement.addEventListener("mouseover", function (event) {
        event.target.className = event.target.className.replace("player-btn-share", "");
        event.target.className += " player-btn-share-hover";
      });
      shareElement.addEventListener("mouseout", function (event) {
        event.target.className = event.target.className.replace("player-btn-share-hover", "");
        event.target.className += " player-btn-share";
      }); //HD

      var levelElement = document.createElement("div");
      levelElement.className = "player-btn-level player-btn-toggle-level"; // levelElement.innerHTML = "高清";

      buttonRightControls.append(levelElement);
      levelElement.addEventListener("mouseover", function (event) {
        event.target.className = event.target.className.replace("player-btn-level", "");
        event.target.className += " player-btn-level-hover";
      });
      levelElement.addEventListener("mouseout", function (event) {
        event.target.className = event.target.className.replace("player-btn-level-hover", "");
        event.target.className += " player-btn-level";
      }); //PIP

      var pipElement = document.createElement("div");
      pipElement.className = "player-btn-pip player-btn-toggle-pip"; // buttonElement.append(pipElement);

      pipElement.addEventListener("mouseover", function (event) {
        event.target.className = event.target.className.replace("player-btn-pip", "");
        event.target.className += " player-btn-pip-hover";
      });
      pipElement.addEventListener("mouseout", function (event) {
        event.target.className = event.target.className.replace("player-btn-pip-hover", "");
        event.target.className += " player-btn-pip";
      }); // 音量

      var controlVolumeButton = document.createElement("div");
      controlVolumeButton.className = "p_control_volume_button";
      var btnToggleAudio = document.createElement("div");
      btnToggleAudio.className = "player-btn-toggle-audio player-btn-audio-on";
      var popupVolume = document.createElement("div");
      popupVolume.className = "p_popup_volume";
      var popupContent = document.createElement("div");
      popupContent.className = "p_popup_content";
      var volumeRange = document.createElement("div");
      volumeRange.className = "p_volume_range";
      var volumeRangeCurrent = document.createElement("div");
      volumeRangeCurrent.className = "p_volume_range_current";
      var volumeHandle = document.createElement("div");
      volumeHandle.className = "p_volume_handle";
      volumeRangeCurrent.appendChild(volumeHandle);
      volumeRange.appendChild(volumeRangeCurrent);
      popupContent.appendChild(volumeRange);
      popupVolume.appendChild(popupContent);
      controlVolumeButton.appendChild(btnToggleAudio);
      controlVolumeButton.appendChild(popupVolume);
      var ii = 0;
      controlVolumeButton.addEventListener("mouseenter", function (event) {
        if (_this2.playerInterface_.isMuted) {
          btnToggleAudio.className = btnToggleAudio.className.replace(" player-btn-audio-off", "");
          btnToggleAudio.className += " player-btn-audio-off-hover";
        } else {
          btnToggleAudio.className = btnToggleAudio.className.replace(" player-btn-audio-on", "");
          btnToggleAudio.className += " player-btn-audio-on-hover";
        }
      });
      controlVolumeButton.addEventListener("mouseleave", function (event) {
        ii = 0;
        localStorage.volumevalue = _this.playerInterface_.volume;
        popupVolume.setAttribute("style", "display: none");

        if (_this2.playerInterface_.isMuted) {
          btnToggleAudio.className = btnToggleAudio.className.replace(" player-btn-audio-off-hover", "");
          btnToggleAudio.className += " player-btn-audio-off";
        } else {
          btnToggleAudio.className = btnToggleAudio.className.replace(" player-btn-audio-on-hover", "");
          btnToggleAudio.className += " player-btn-audio-on";
        }
      });
      btnToggleAudio.addEventListener("click", function () {
        ii = ii + 1; //show popupVolume

        popupVolume.setAttribute("style", "display: block");

        if (localStorage.volumevalue) {
          var yy = parseFloat(localStorage.volumevalue) * 80 + 10;
          volumeRangeCurrent.setAttribute("style", "height: ".concat(yy, "px"));
        } else {
          localStorage.volumevalue = 0.5;
        }

        if (!_this2.playerInterface_.isMuted && ii > 1) {
          _this2.playerInterface_.mute();

          volumeRangeCurrent.setAttribute("style", "height: 10px");
        } else if (_this2.playerInterface_.isMuted) {
          _this2.playerInterface_.unmute();

          btnToggleAudio.className = btnToggleAudio.className.replace(" player-btn-audio-off-hover", "");
          btnToggleAudio.className += " player-btn-audio-on-hover";

          var _yy = parseFloat(localStorage.volumevalue) * 80 + 10;

          volumeRangeCurrent.setAttribute("style", "height: ".concat(_yy, "px"));
        }
      });
      var to_top, newT, move, mouseY, tt, vrc_to_top;
      var cha = popupVolume.offsetHeight - volumeHandle.offsetHeight;
      var index = 0; //标记状态

      var evt = new Event("change"); //本身的事件

      popupContent.addEventListener("mousedown", function (event) {
        var pv = "p_popup_content";
        var vr = "p_volume_range";
        var vrc = "p_volume_range_current";
        var vh = "p_volume_handle"; // mousedown on popup_content

        if (event.target.className.indexOf(pv) != -1) {
          index = 1;
          vrc_to_top = event.target.children[0].children[0].offsetTop;
          newT = 90 - event.offsetY + 5;
        } // mousedown on volume_range


        if (event.target.className.indexOf(vr) != -1) {
          index = 1;
          vrc_to_top = event.target.children[0].offsetTop;
          newT = 90 - event.offsetY + 5;
        } // mousedown on volume_range_current


        if (event.target.className.indexOf(vrc) != -1) {
          index = 1;
          vrc_to_top = event.target.offsetTop;
          newT = 90 - vrc_to_top - event.offsetY + 5;
        } // mousedown on volume_handle


        if (event.target.className.indexOf(vh) != -1) {
          index = 1;
          vrc_to_top = event.target.parentNode.offsetTop;
          newT = 5 - event.offsetY + 90 - vrc_to_top;
        }

        mouseY = event.clientY;
        _this.playerInterface_.volume = parseFloat(((newT - 10) / 80).toFixed(2));
        volumeRangeCurrent.setAttribute("style", "height: ".concat(newT, "px"));
        index = 1; // to_top = event.offsetY;
      });
      popupContent.addEventListener("mousemove", mouseMoveclickHandler);
      popupContent.addEventListener("mouseup", mouseUpclickHandler);
      popupContent.addEventListener("mouseleave", function (event) {
        index = 0;
      });
      volumeHandle.addEventListener("mouseenter", function (event) {
        event.target.className += " p_volume_handle_hover"; // index=0;
      });
      volumeHandle.addEventListener("mouseleave", function (event) {
        event.target.className = event.target.className.replace(" p_volume_handle_hover", "");
        localStorage.volumevalue = _this.playerInterface_.volume; // index=0;
      });
      volumeHandle.addEventListener("mouseup", function (event) {
        index = 0;
        event.stopPropagation();
      });

      function mouseMoveclickHandler(e) {
        if (index === 1) {
          move = e.clientY - mouseY; //鼠标移动

          var pp = newT - move;

          if (pp >= 90) {
            pp = 90;
          } else if (pp <= 10) {
            pp = 10;

            _this.playerInterface_.mute();
          } else {
            _this.playerInterface_.unmute();

            btnToggleAudio.className = btnToggleAudio.className.replace(" player-btn-audio-off-hover", "");
            btnToggleAudio.className = " player-btn-toggle-audio  player-btn-audio-on-hover";
          }

          var vv = (pp - 10) / 80;
          _this.playerInterface_.volume = parseFloat(vv.toFixed(2));
          volumeRangeCurrent.setAttribute("style", "height: ".concat(pp, "px"));
        }
      }

      function mouseUpclickHandler(e) {
        index = 0;
        localStorage.volumevalue = _this.playerInterface_.volume; // evt.elem=this;//当前指向 对象
        // document.dispatchEvent(evt);//朝谁发送 抛发
      } //Full Screen


      var fullscrElement = document.createElement("div");
      fullscrElement.className = "player-btn-fullscr player-btn-toggle-fullscr";
      buttonRightControls.append(fullscrElement);
      fullscrElement.addEventListener("mouseenter", function (event) {
        event.target.className = event.target.className.replace("player-btn-fullscr", "");
        event.target.className += " player-btn-fullscr-hover";
      });
      fullscrElement.addEventListener("mouseout", function (event) {
        event.target.className = event.target.className.replace("player-btn-fullscr-hover", "");
        event.target.className += " player-btn-fullscr";
      });
      fullscrElement.addEventListener("click", function (event) {
        // event.target.className = event.target.className.replace(
        //   "player-btn-fullscr-hover",
        //   ""
        // );
        // event.target.className += " player-btn-fullscr";
        _this.playerInterface_.fullSrceen();
      }); // controllerElement.appendChild(btnToggleAudio);

      buttonRightControls.appendChild(controlVolumeButton);
      this.playerInterface_.on("playing", function () {
        btnTogglePlay.className = "player-btn-toggle-play player-btn-pause-hover";
        _this2.bigPlayButton_.className = "player-btn-big player-btn-big-hidden";
      });
      this.playerInterface_.on("paused", function () {
        btnTogglePlay.className = "player-btn-toggle-play player-btn-play-hover";
      });
      this.playerInterface_.on("muted", function () {
        btnToggleAudio.className = "player-btn-toggle-audio player-btn-audio-off-hover";
      }); // this.playerInterface_.on("unmuted", () => {
      //   btnToggleAudio.className = "player-btn-toggle-audio player-btn-audio-on ";
      // });
      //logo

      var logoElement = document.createElement("div");
      logoElement.className = "player-logo-qiluwang";
      buttonRightControls.append(logoElement);
      buttonElement.appendChild(buttonRightControls);
      controllerElement.addEventListener("mouseenter", function (event) {
        controllerElement.className = "player-controller player-controller-visible";
      });
      controllerElement.addEventListener("mousemove", function (event) {
        controllerElement.className = "player-controller player-controller-visible";
        event.stopPropagation();
      });
      wrapperElement.appendChild(controllerElement);
      wrapperElement.addEventListener("mouseleave", function (event) {
        controllerElement.className = "player-controller player-controller-hidden";
      });
      wrapperElement.addEventListener("mouseenter", function (event) {
        controllerElement.className = "player-controller player-controller-visible";
      });
      wrapperElement.addEventListener("mousemove", function () {
        controllerElement.className = "player-controller player-controller-visible";
      });
    }
  }, {
    key: "setupTimeline_",
    value: function setupTimeline_() {
      var _this3 = this;

      var timelineContainer = document.createElement("div");
      timelineContainer.className = "player-timeline-container";
      var timelineElement = document.createElement("div");
      timelineElement.className = "player-timeline"; // let durationElement = document.createElement("div");
      // durationElement.className = "player-timeline-duration";
      // let positionElement = document.createElement("div");
      // positionElement.className = "player-timeline-position";
      // timelineContainer.appendChild(positionElement);

      timelineContainer.appendChild(timelineElement); // timelineContainer.appendChild(durationElement);

      this.timelineUpdateTimer = setInterval(function () {
        // durationElement.innerHTML = this.formatPlayerTime_(
        //   this.playerInterface_.duration
        // );
        // let w = timelineElement.clientWidth;
        var pos = _this3.playerInterface_.position; // positionElement.innerHTML = this.formatPlayerTime_(pos);

        var progress = pos / _this3.playerInterface_.duration * 100; // percentage

        timelineElement.setAttribute("style", "background: linear-gradient(90deg, #F0861E, #FEA645 ".concat(progress, "%, #FFFFFF ").concat(progress, "%)"));
      }, 1000);
      timelineElement.addEventListener("click", function (ev) {
        var w = ev.target.clientWidth;
        var position = ev.offsetX / w * _this3.playerInterface_.duration;
        _this3.playerInterface_.position = position;
      });
      return timelineContainer;
    }
  }, {
    key: "formatPlayerTime_",
    value: function formatPlayerTime_(secs) {
      var sec = parseInt(secs, 10);
      var h = Math.floor(sec / 3600) % 24;
      var m = Math.floor(sec / 60) % 60;
      var s = sec % 60;
      return [h, m, s].map(function (v) {
        return v < 10 ? "0" + v : v;
      }).filter(function (v, i) {
        return v !== "00" || i > 0;
      }).join(":");
    }
  }]);
  return PlayerSkin;
}();

exports.PlayerSkin = PlayerSkin;
},{"@babel/runtime/helpers/classCallCheck":"../node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"../node_modules/@babel/runtime/helpers/createClass.js"}],"../src/player.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Player = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _player_tech_factory = require("./player_tech_factory");

var _player_skin = require("./player_skin");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Player =
/*#__PURE__*/
function () {
  function Player(wrapperId, manifestUrl, options) {
    (0, _classCallCheck2.default)(this, Player);
    this.wrapperId_ = wrapperId;
    this.manifestUrl_ = manifestUrl;
    this.options_ = options;
    this.playerTechFactory_ = new _player_tech_factory.PlayerTechFactory(this.wrapperId_, this.manifestUrl_);
  }

  (0, _createClass2.default)(Player, [{
    key: "init",
    value: function () {
      var _init = (0, _asyncToGenerator2.default)(
      /*#__PURE__*/
      _regenerator.default.mark(function _callee() {
        var player, skin;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.playerTechFactory_.constructPlayerTech();

              case 2:
                player = _context.sent;

                if (this.options_.skin) {
                  skin = new _player_skin.PlayerSkin(player);
                  skin.init();
                  player.attachControllerSkin(skin);
                }

                return _context.abrupt("return", player);

              case 5:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function init() {
        return _init.apply(this, arguments);
      }

      return init;
    }()
  }]);
  return Player;
}();

exports.Player = Player;
},{"@babel/runtime/regenerator":"../node_modules/@babel/runtime/regenerator/index.js","@babel/runtime/helpers/asyncToGenerator":"../node_modules/@babel/runtime/helpers/asyncToGenerator.js","@babel/runtime/helpers/classCallCheck":"../node_modules/@babel/runtime/helpers/classCallCheck.js","@babel/runtime/helpers/createClass":"../node_modules/@babel/runtime/helpers/createClass.js","./player_tech_factory":"../src/player_tech_factory.js","./player_skin":"../src/player_skin.js"}],"../main.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setupEyevinnPlayer = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _player = require("./src/player");

var _constants = require("./src/utils/constants");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var setupEyevinnPlayer =
/*#__PURE__*/
function () {
  var _ref = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee(wrapperId, manifestUrl, opts) {
    var options, player;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            options = Object.assign({}, _constants.DEFAULT_OPTIONS, opts);
            player = new _player.Player(wrapperId, manifestUrl, options);
            _context.next = 4;
            return player.init();

          case 4:
            return _context.abrupt("return", _context.sent);

          case 5:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  return function setupEyevinnPlayer(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();

exports.setupEyevinnPlayer = setupEyevinnPlayer;
},{"@babel/runtime/regenerator":"../node_modules/@babel/runtime/regenerator/index.js","@babel/runtime/helpers/asyncToGenerator":"../node_modules/@babel/runtime/helpers/asyncToGenerator.js","./src/player":"../src/player.js","./src/utils/constants":"../src/utils/constants.js"}],"../index.js":[function(require,module,exports) {
"use strict";

var _main = require("./main.js");

window.setupEyevinnPlayer = _main.setupEyevinnPlayer;
},{"./main.js":"../main.js"}],"../node_modules/parcel-bundler/src/builtins/hmr-runtime.js":[function(require,module,exports) {
var global = arguments[3];
var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;

function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || function () {});
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = null;
}

module.bundle.Module = Module;
var checkedAssets, assetsToAccept;
var parent = module.bundle.parent;

if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = "" || location.hostname;
  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';
  
}

function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);

  if (overlay) {
    overlay.remove();
  }
}

function createErrorOverlay(data) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID; // html encode message and stack trace

  var message = document.createElement('div');
  var stackTrace = document.createElement('pre');
  message.innerText = data.error.message;
  stackTrace.innerText = data.error.stack;
  overlay.innerHTML = '<div style="background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;">' + '<span style="background: red; padding: 2px 4px; border-radius: 2px;">ERROR</span>' + '<span style="top: 2px; margin-left: 5px; position: relative;">🚨</span>' + '<div style="font-size: 18px; font-weight: bold; margin-top: 20px;">' + message.innerHTML + '</div>' + '<pre>' + stackTrace.innerHTML + '</pre>' + '</div>';
  return overlay;
}

function getParents(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return [];
  }

  var parents = [];
  var k, d, dep;

  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];

      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push(k);
      }
    }
  }

  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }

  return parents;
}

function hmrApply(bundle, asset) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (modules[asset.id] || !bundle.parent) {
    var fn = new Function('require', 'module', 'exports', asset.generated.js);
    asset.isNew = !modules[asset.id];
    modules[asset.id] = [fn, asset.deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}

function hmrAcceptCheck(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (!modules[id] && bundle.parent) {
    return hmrAcceptCheck(bundle.parent, id);
  }

  if (checkedAssets[id]) {
    return;
  }

  checkedAssets[id] = true;
  var cached = bundle.cache[id];
  assetsToAccept.push([bundle, id]);

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    return true;
  }

  return getParents(global.parcelRequire, id).some(function (id) {
    return hmrAcceptCheck(global.parcelRequire, id);
  });
}

function hmrAcceptRun(bundle, id) {
  var cached = bundle.cache[id];
  bundle.hotData = {};

  if (cached) {
    cached.hot.data = bundle.hotData;
  }

  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }

  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      cb();
    });

    return true;
  }
}
},{}]},{},["../node_modules/parcel-bundler/src/builtins/hmr-runtime.js","../index.js"], null)
//# sourceMappingURL=/html-player-master02.80dfb952.js.map